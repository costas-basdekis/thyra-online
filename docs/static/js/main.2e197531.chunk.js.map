{"version":3,"sources":["utils.js","client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/PuzzleList.js","components/Lobby.js","components/Play.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreatePuzzle.js","components/EditPuzzle.js","components/Puzzles.js","App.js","serviceWorker.js","index.js"],"names":["copyToClipboard","text","textArea","document","createElement","body","appendChild","value","select","execCommand","removeChild","topicalThemes","from","moment","until","name","override","theme","cells","pieces","scheme","getApplicableSettingsAndNextUpdateDate","settings","on","_getTopicalThemeOverr","arguments","length","undefined","matchingTopicalTheme","find","topicalTheme","isSameOrBefore","isSameOrAfter","nextUpdatedDate","nextTopicalTheme","getTopicalThemeOverrideAndNextUpdateDate","useTopicalTheme","_","merge","applicableSettings","getPuzzleTitle","puzzle","options","type","concat","typeOptions","mateIn","Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","getElementById","newScriptEl","id","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","token","setSettings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","gotPuzzles","puzzlesInfo","puzzles","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotGame","game","filter","oldGame","client","gotDeletedGame","gameId","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","meta","publishDatetime","err","return","preparePuzzles","onPuzzles","gotNonPersonalPuzzles","nonPersonalPuzzles","nonPersonalPuzzlesIds","mine","includes","gotPersonalPuzzles","personalPuzzles","personalPuzzlesIds","other","getItem","password","removeItem","localSettings","parse","e","updateApplicableSettingsTimeout","emit","setInterval","autoSubmitMoves","confirmSubmitMoves","enableNotifications","rotateOpponent","animations","arrows","numbers","_this2","constructor","getDefaultSettings","_utils$getApplicableS","utils","applicableSettingsName","applicableSettingsOverride","clearTimeout","millisecondsUntilUpdate","diff","setTimeout","socket","process","available","callbacks","_i","_arr","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this3","myIndex","findIndex","slice","toConsumableArray","byId","fromPairs","online","offline","readyToPlayMe","challengedUser","_this4","live","finished","myLive","userIds","otherLive","myFinished","otherFinished","moves","data","tournament","_this5","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this6","otherPuzzles","userId","myPuzzles","public","private","isAfter","myPublic","myPrivate","otherSolved","won","otherUnsolved","otherStarted","otherNotStarted","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","missingStatusKeys","join","moveType","availableMovesMatrix","resignedPlayer","nextPlayer","canUndo","resign","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","row","y","cell","x","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","PLAYER_A","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","fullNotation","split","part","MOVE_REVERSE_NOTATION","move","fromMoves","compressedFullNotation","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","func","hasOwnProperty","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","canTakeMoveBack","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this7","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","xs","_ref10","_ref12","_ref13","_this8","getAvailableMoves","getNextGames","getNextFullMoveGames","maxDepth","result","nextGamesLeft","results","lost","undetermined","loseLeaves","winLeaves","_this9","_getProperty","history","_this10","_this11","fullHistory","_this12","moveCount","_this13","chainCount","_this14","_this15","indexOf","previousInHistory","_this16","lastMovesInHistory","_this17","_this18","_this19","_this20","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","_this21","moveNotation","_this22","MOVE_NOTATION_COMPRESSION","_this23","getPositionNotation","_ref14","_this24","lhs","rhs","_this25","playerCells","playerCell","areCellsNeighbours","_this26","_this27","getAvailableMovesMatrix","_this28","_this29","maximumLevel","_this30","isMoveAvailable","updates","_len","newCells","Array","_key","_newCells","update","state","_state$previous$loseL","_state$previous$winLe","shift","getSearchState","steps","rootState","i","advanceSearchState","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref15","_ref16","levelStr","notations","_ref17","_ref18","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref19","_ref21","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","GameClassic","abs","Classic","GameHex","Hex","GAME_TYPES","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","translate","gameType","point","getTranslate","getTranslateClassic","getTranslateHex","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","PieceHalloweenWitchHat","PieceHalloweenCauldron","PieceHalloweenBat","PieceHalloweenSpider","PieceHalloweenCat","PieceHalloweenTombstone","PieceHalloweenPumpkin","PieceHalloweenGhost","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","halloween-witch-hat","halloween-cauldron","halloween-bat","halloween-spider","halloween-cat","halloween-tombstone","halloween-pumpkin","halloween-ghost","PieceDefinitions","values","Definitions","BaseCellDefinitions","paths","border","level0","level1","level2","level3","level4","defaultBorder","width","height","defaultBorderHex","center","PI","angle","cos","sin","reverse","defineCellDefinitions","CellDefinitionsFor","_PureComponent2","Cell_BaseCellDefinitions","OriginalCellDefinitions","HalloweenCellDefinitions","CellDefinitions","cellDefinitionsStyleMap","CellDefinitionsStyle","original","halloween","Cell","previousLevel","currentLevel","levelsAnimate","React","createRef","prevProps","prevState","snapshot","levelAnimate","current","beginElement","allowControl","_this$props2$theme","_this$props2$theme$ce","_this$props2$theme$pi","_this$props2$theme$ro","_this$state","isPlayerAOpponent","isPlayerBOpponent","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","thisMoveType","gameWithBuildMove","_move$build","build","reverseCoordinates","thisPlayer","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","translateTo","translateFrom","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","allPuzzles","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","puzzlesStats","Card","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","GameList","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDatetime","TournamentList","visibleTournaments","TournamentList_TournamentCard","PuzzleCard","selectPuzzle","gamesById","currentPuzzleId","userPuzzle","userIsCreator","userInProgress","userSolvedPuzzle","userMadeMistakes","mistakes","1","2","3","difficulty","maxDifficulty","title","isMyPuzzle","fromNow","toNow","usersStats","attempted","averagePerfectScore","perfect","imperfect","startingPosition","get","PuzzleList","visiblePuzzles","PuzzleList_PuzzleCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","perfectStars","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$puzzlesI","selectLivePuzzle","render","components_GameList","puzzlesList","components_PuzzleList","components_CreateTournament","_ref11","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","positionNotation","resigning","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","canAnyPlayerSubmit","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","Play_PlayHistory","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","submitAndDisableConfirm","updateSettings","isPlayerControlled","previousGame","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","PlayHistory","lastVisibleGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","href","navigator","catch","alert","switchToClassic","switchTo","switchToHex","open","active","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themeCellsOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateConfirmSubmitMoves","updateEnableNotifications","updateThemeUseTopicalTheme","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","updateThemeCells","_this$props$settings","_theme$cells","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","admin","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","_Game$Classic","_Game$Classic2","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","0","4","b","EditPositionBoard","updatePosition","newCell","newPosition","CreatePuzzle","editing","currentStep","tree","onCreatePuzzle","getTree","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicatePuzzle","duplicatePuzzle","newPuzzle","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","puzzleResponse","deleteCurrentStep","_this$duplicatePuzzle2","removeStep","editPuzzle","createPuzzle","cleanedPuzzle","updatePuzzle","createOrUpdatePuzzle","discardPuzzle","initialPuzzle","fillGames","prevPuzzles","getMatchingPuzzles","source","puzzleStep","response","treePathStep","oldStep","isArray","getNextTree","nextTree","getDifficultyStars","rowIndex","columnIndex","CreatePuzzle_PuzzleForm","PuzzleForm","editingPosition","convertedValue","valueConversion","newPuzzleToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this4$state","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","EditPuzzle","dismissUrlPuzzleError","components_CreatePuzzle","Puzzles","_this$props$puzzlesIn","components_EditPuzzle","Puzzles_PuzzlePlayer","PuzzlePlayer","puzzleId","getResumedPuzzleGame","submittedGame","wrongMove","askServer","sharePuzzle","resultingGame","userPuzzleStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","invalidPlayerPositions","v","validPlayerResponse","submitPuzzleMove","_ret","success","App","liveGame","liveTournament","livePuzzle","gameUrl","tournamentUrl","puzzleUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","components_Puzzles","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"6iBAGaA,EAAkB,SAAAC,GAC7B,IAAMC,EAAWC,SAASC,cAAc,YAGxCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,MAAQN,EACjBC,EAASM,SACTL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,IAGfS,EAAgB,CAC3B,CACEC,KAAMC,IAAO,uBACbC,MAAOD,IAAO,uBACdE,KAAM,YACNC,SAAU,CACRC,MAAO,CACLC,MAAO,YACPC,OAAQ,kBACRC,OAAQ,gBA4BHC,EAAyC,SAACC,EAAUC,GAAO,IAAAC,EAtBvB,WAAmB,IAAlBD,EAAkBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAbZ,MAC/Ce,EAAuBjB,EAAckB,KAAK,SAAAC,GAAY,OAC1DA,EAAalB,KAAKmB,eAAeR,IAAOO,EAAahB,MAAMkB,cAAcT,KAE3E,GAAIK,EACF,MAAO,CACLZ,SAAUY,EAAqBZ,SAC/BiB,gBAAiBL,EAAqBd,MACtCC,KAAMa,EAAqBb,MAI/B,IAAMmB,EAAmBvB,EAAckB,KAAK,SAAAC,GAAY,OACtDA,EAAalB,KAAKoB,cAAcT,KAElC,OAAIW,EACK,CAAClB,SAAU,KAAMiB,gBAAiBC,EAAiBtB,KAAMG,KAAM,MAGjE,CAACC,SAAU,KAAMiB,gBAAiB,KAAMlB,KAAM,MAIXoB,CAAyCZ,GAA5EP,EAD+DQ,EAC/DR,SAAUiB,EADqDT,EACrDS,gBAAiBlB,EADoCS,EACpCT,KAKlC,OAJIO,EAASL,MAAMmB,iBAAmBpB,IACpCM,EAAWe,IAAEC,MAAM,GAAIhB,EAAUN,IAG5B,CAACuB,mBAAoBjB,EAAUW,kBAAiBjB,WAAUD,SAGtDyB,EAAiB,SAAAC,GAC5B,OAAQA,EAAOC,QAAQC,MACrB,IAAK,OACH,sBAAAC,OAAuBH,EAAOC,QAAQG,YAAYC,QACpD,IAAK,YACH,uBAAAF,OAAwBH,EAAOC,QAAQG,YAAYC,QACrD,QACE,MAAO,mBC7DPC,aAqBJ,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAFdG,uBAAyB,KAEXH,KA0FdI,eAAiB,WACf,IAAKC,OAAOC,GAAGC,YAKb,OAJAC,cAAcT,EAAKI,wBACnBJ,EAAKI,uBAAyB,KAC9BJ,EAAKU,kBACLC,QAAQC,IAAI,qBAGd,IAAMC,EAAc1D,SAAS2D,eAAe,oBACtCC,EAAc5D,SAASC,cAAc,UAC3C2D,EAAYC,GAAKH,EAAYG,GAC7BD,EAAYpB,KAAOkB,EAAYlB,KAC/BoB,EAAYE,IAAMJ,EAAYI,IAC9BJ,EAAYK,SACZ/D,SAASgE,KAAKC,OAAOL,GACrBJ,QAAQU,KAAK,0CAzGDpB,KAgJdqB,OAAS,WACPhB,OAAOiB,SAASD,QAAO,IAjJXrB,KAoJduB,cAAgB,WACdxB,EAAKyB,UACLzB,EAAK0B,WAAY,EACjB1B,EAAK2B,UAAUC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cAvJjCzB,KA0Jd6B,iBAAmB,WACjB9B,EAAK0B,WAAY,EACjB1B,EAAK+B,cAAe,EACpB/B,EAAKgC,aAAaJ,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cA7JpCzB,KAgKdgC,QAAU,SAAAC,GACJA,IACFlC,EAAKgB,GAAKkB,EAAKlB,GACfhB,EAAKmC,SAAWD,EAAKnE,KACrBiC,EAAKoC,MAAQF,EAAKE,MAClBpC,EAAKqC,YAAYH,EAAK5D,UACtBgE,aAAaC,QAAQ,UAAWvC,EAAKgB,IACrCsB,aAAaC,QAAQ,YAAavC,EAAKmC,UACvCG,aAAaC,QAAQ,aAAcvC,EAAKoC,OACxCE,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUzC,EAAK1B,YAE5D0B,EAAKkC,KAAOA,EACZlC,EAAK0C,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAASK,KACrClC,EAAK2C,SAAS3C,EAAK4C,UAAUC,OAC7B7C,EAAK8C,WAAW9C,EAAK+C,YAAYC,UA9KrB/C,KAiMd0C,SAAW,SAAAE,IACTA,EAAQxD,IAAE4D,QAAQJ,EAAO,CAAC,SAAAX,GAAI,OAAIA,EAAKgB,wBAA0B,EAAI,GAAG,QAAS,YAAa,CAAC,MAAO,OAAQ,UACxGC,QAAQ,SAACjB,EAAMkB,GACnBlB,EAAKmB,KAAOD,EAAQ,IAEtBpD,EAAK4C,UAAY5C,EAAKsD,aAAaT,GACnC7C,EAAKuD,QAAQ3B,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK4C,cAvM/B3C,KAsOduD,SAAW,SAAAC,GACTA,EAAQpE,IAAEqE,OAAOD,EAAO,CAAC,gBAAiB,MAAO,CAAC,OAAQ,SAC1DzD,EAAK2D,UAAY3D,EAAK4D,aAAaH,GACnCzD,EAAK6D,QAAQjC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK2D,cAzO/B1D,KA4Od6D,QAAU,SAAAC,GACR,IAAMN,EAAQzD,EAAK2D,UAAUF,MAAMO,OAAO,SAAAC,GAAO,OAAIA,EAAQjD,KAAO+C,EAAK/C,KAAIpB,OAAO,CAACmE,IACrFG,EAAOV,SAASC,IA9OJxD,KAiPdkE,eAAiB,SAAAC,GACf,IAAMX,EAAQzD,EAAK2D,UAAUF,MAAMO,OAAO,SAAAC,GAAO,OAAIA,EAAQjD,KAAOoD,IACpEF,EAAOV,SAASC,IAnPJxD,KA8RdoE,eAAiB,SAAAC,GACfA,EAAcjF,IAAEqE,OAAOY,EAAa,CAAC,gBAAiB,cAAe,kBAAmB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,SACxHtE,EAAKuE,gBAAkBvE,EAAKwE,mBAAmBF,GAC/CtE,EAAKyE,cAAc7C,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAKuE,oBAjSrCtE,KAqUd6C,WAAa,SAAAE,GAAW,IAAA0B,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IACtB,QAAAkG,EAAAC,EAAqB9B,EAArB+B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAAnBjF,EAAmBoF,EAAAtH,MAC5BkC,EAAO0F,KAAKC,gBAAkBvH,IAAO4B,EAAO0F,KAAKC,kBAF7B,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAItB5B,EAAU3D,IAAEqE,OAAOV,EAAS,CAAC,kBAAmB,kBAAmB,MAAO,CAAC,OAAQ,SACnFhD,EAAK+C,YAAc/C,EAAKuF,eAAevC,GACvChD,EAAKwF,UAAU5D,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK+C,gBA3UjC9C,KA8UdwF,sBAAwB,SAAAC,GACtB,IAAMC,EAAwBD,EAAmB9D,IAAI,SAAAnC,GAAM,OAAIA,EAAOuB,KACtEhB,EAAK8C,WAAW4C,EAAmB9F,OAAOI,EAAK+C,YAAY6C,KAAK5B,OAAO,SAAAvE,GAAM,OAAKkG,EAAsBE,SAASpG,EAAOuB,SAhV5Gf,KAmVd6F,mBAAqB,SAAAC,GACnB,IAAMC,EAAqBD,EAAgBnE,IAAI,SAAAnC,GAAM,OAAIA,EAAOuB,KAChEhB,EAAK8C,WAAWiD,EAAgBnG,OAAOI,EAAK+C,YAAYkD,MAAMjC,OAAO,SAAAvE,GAAM,OAAKuG,EAAmBH,SAASpG,EAAOuB,SApVnHf,KAAKe,GAAKsB,aAAa4D,QAAQ,YAAc,KAC7CjG,KAAKkC,SAAWG,aAAa4D,QAAQ,cAAgB,KACrD,IAAMC,EAAW7D,aAAa4D,QAAQ,kBAAoB,KAC1D5D,aAAa8D,WAAW,iBACxBnG,KAAKmC,MAAQE,aAAa4D,QAAQ,eAAiBC,EACnD,IACI7H,EADE+H,EAAgB/D,aAAa4D,QAAQ,kBAAoB,OAE/D,IACE5H,EAAWkE,KAAK8D,MAAMD,GACtB,MAAOE,GACPjI,EAAW,KAEb2B,KAAKuG,gCAAkC,KACvCvG,KAAKoC,YAAY/D,GACZgC,OAAOC,KACVD,OAAOC,GAAK,iBAAO,CACjBhC,GAAI,kBAAMoC,QAAQU,KAAK,8BACvBoF,KAAM,kBAAM9F,QAAQU,KAAK,8BACzBb,aAAa,IAEfF,OAAOC,GAAGC,aAAc,EACxBP,KAAKG,uBAAyBsG,YAAYzG,KAAKI,eAAgB,MAGjEJ,KAAK8B,cAAe,EAEpB9B,KAAK0B,UAAY,GACjB1B,KAAK+B,aAAe,GACpB/B,KAAKyC,OAAS,GACdzC,KAAKsD,QAAU,GACftD,KAAK4D,QAAU,GACf5D,KAAKwE,cAAgB,GACrBxE,KAAKuF,UAAY,GAEjBvF,KAAKS,mFAtDL,MAAO,CACLiG,iBAAiB,EACjBC,oBAAoB,EACpBC,qBAAqB,EACrB5I,MAAO,CACLmB,iBAAiB,EACjBlB,MAAO,WACPC,OAAQ,OACRC,OAAQ,GACR0I,gBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,QAAS,iEA6CH3I,GAAU,IAAA4I,EAAAjH,KAElBA,KAAK3B,SADHA,EACce,IAAEC,MAAMW,KAAKkH,YAAYC,qBAAsB9I,GAE/C2B,KAAKkH,YAAYC,qBAJf,IAAAC,EAM0CC,EAA6CrH,KAAK3B,UAAzGiB,EANa8H,EAMb9H,mBAAoBN,EANPoI,EAMOpI,gBAAiBjB,EANxBqJ,EAMwBrJ,SAAUD,EANlCsJ,EAMkCtJ,KAQtD,GAPAkC,KAAKV,mBAAqBA,EAC1BU,KAAKsH,uBAAyBxJ,EAC9BkC,KAAKuH,2BAA6BxJ,EAC9BiC,KAAKuG,kCACPiB,aAAaxH,KAAKuG,iCAClBvG,KAAKuG,gCAAkC,MAErCvH,EAAiB,CACnB,IAAMyI,EAA0BzI,EAAgB0I,KAAK9J,OACrDoC,KAAKuG,gCAAkCoB,WAAW,WAChDV,EAAK7E,YAAY6E,EAAK5I,UACtB4I,EAAKxE,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAASqF,EAAKhF,SACzCwF,yCAKLzH,KAAK4H,OAASvH,OAAOC,GAAGuH,6BACxB7H,KAAK8H,WAAa9H,KAAK4H,OAAOrH,YAC9BP,KAAKyB,WAAY,EACjBzB,KAAK4H,OAAOtJ,GAAG,UAAW0B,KAAKuB,eAC/BvB,KAAK4H,OAAOtJ,GAAG,aAAc0B,KAAK6B,kBAClC7B,KAAK4H,OAAOtJ,GAAG,SAAU0B,KAAKqB,QAE9BrB,KAAKiC,KAAO,KACZjC,KAAK4H,OAAOtJ,GAAG,OAAQ0B,KAAKgC,SAE5BhC,KAAK2C,UAAY3C,KAAKqD,aAAa,IACnCrD,KAAK4H,OAAOtJ,GAAG,QAAS0B,KAAK0C,UAE7B1C,KAAK0D,UAAY1D,KAAK2D,aAAa,IACnC3D,KAAK4H,OAAOtJ,GAAG,QAAS0B,KAAKuD,UAC7BvD,KAAK4H,OAAOtJ,GAAG,OAAQ0B,KAAK6D,SAC5B7D,KAAK4H,OAAOtJ,GAAG,eAAgB0B,KAAKkE,gBAEpClE,KAAKsE,gBAAkBtE,KAAKuE,mBAAmB,IAC/CvE,KAAK4H,OAAOtJ,GAAG,cAAe0B,KAAKoE,gBAEnCpE,KAAK8C,YAAc9C,KAAKsF,eAAe,IACvCtF,KAAK4H,OAAOtJ,GAAG,UAAW0B,KAAKwF,uBAC/BxF,KAAK4H,OAAOtJ,GAAG,mBAAoB0B,KAAK6F,oBAExC7F,KAAKwB,4CAqBGuG,GACR,QAAAC,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,gBAAiB,aAAlGD,EAAAC,EAAAxJ,OAAAuJ,IAAgH,CAA3G,IAAMlK,EAAImK,EAAAD,GACPpG,EAAWmG,EAAUjK,GACvB8D,GACF5B,KAAKlC,GAAMoK,KAAKtG,wCAKVmG,GACV,QAAAI,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,aAAjFD,EAAAC,EAAA3J,OAAA0J,IAA+F,CAA1F,IAAMrK,EAAIsK,EAAAD,GACPvG,EAAWmG,EAAUjK,GACvB8D,GACFxC,IAAEiJ,KAAKrI,KAAKlC,GAAO8D,sCAMvB5B,KAAK4H,OAAOpB,KAAK,cAAe,CAC9B8B,WAvJa,GAwJbvH,GAAIf,KAAKe,GACTjD,KAAMkC,KAAKkC,SACXC,MAAOnC,KAAKmC,MACZ9D,SAAU2B,KAAK3B,yCAIbP,EAAMoI,EAAUqC,GACpBvI,KAAK4H,OAAOpB,KAAK,SAAU,CAAC8B,WAhKb,GAgKyBxK,OAAMoI,WAAUqC,gDAIxDvI,KAAK4H,OAAOpB,KAAK,kDAoCJ1I,GACbkC,KAAK4H,OAAOpB,KAAK,kBAAmB1I,0CAGvBoI,GACblG,KAAK4H,OAAOpB,KAAK,kBAAmBN,0CAGvB7H,GACb2B,KAAK4H,OAAOpB,KAAK,kBAAmBnI,6CAGpBmK,GAChBxI,KAAK4H,OAAOpB,KAAK,uBAAwBgC,wCAY9B5F,GAAO,IACd6F,EADcC,EAAA1I,KAElB,GAAIA,KAAKiC,KAAM,CACb,IAAM0G,EAAU/F,EAAMgG,UAAU,SAAA3G,GAAI,OAAIA,EAAKlB,KAAO2H,EAAKzG,KAAKlB,KAC1D4H,GAAW,GACbF,EAAa7F,EAAMiG,MAAM,EAAGF,GAAShJ,OAAOiD,EAAMiG,MAAMF,EAAU,IAClE/F,EAAK,CAAIA,EAAM+F,IAAVhJ,OAAAM,OAAA6I,EAAA,EAAA7I,CAAuBwI,KAE5BA,EAAa7F,OAGf6F,EAAa7F,EAEf,IAAMmG,EAAO3J,IAAE4J,UAAUpG,EAAMjB,IAAI,SAAAM,GAAI,MAAI,CAACA,EAAKlB,GAAIkB,MAC/CgH,EAASrG,EAAMmB,OAAO,SAAA9B,GAAI,OAAIA,EAAKgH,SACnCT,EAAcS,EAAOlF,OAAO,SAAA9B,GAAI,MAAI,EAAC,GAAMyG,EAAKzG,MAAOyG,EAAKzG,KAAKlB,IAAW6E,SAAS3D,EAAKuG,eAChG,MAAO,CACL5F,QACAmG,OACA/C,MAAOyC,EACPQ,SACAC,QAAStG,EAAMmB,OAAO,SAAA9B,GAAI,OAAKA,EAAKgH,SACpCT,cACAW,cAAeX,EAAYzE,OAAO,SAAA9B,GAAI,OAAIyG,EAAKzG,MAAQyG,EAAKzG,KAAKlB,KAAOkB,EAAKuG,cAC7EY,eAAgBpJ,KAAKiC,MAAQ8G,EAAK/I,KAAKiC,KAAKuG,cAAwB,2CAoB3DhF,GAAO,IAAA6F,EAAArJ,KACZsJ,EAAO9F,EAAMO,OAAO,SAAAD,GAAI,OAAKA,EAAKyF,WAClCA,EAAW/F,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAKyF,WAC3C,MAAO,CACL/F,QACAuF,KAAM3J,IAAE4J,UAAUxF,EAAM7B,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MAC9CwF,OACAE,OAAQxJ,KAAKiC,KAAOqH,EAAKvF,OAAO,SAAAD,GAAI,OAAIA,EAAK2F,QAAQ7D,SAASyD,EAAKpH,KAAKlB,MAAO,GAC/E2I,UAAW1J,KAAKiC,KAAOqH,EAAKvF,OAAO,SAAAD,GAAI,OAAKA,EAAK2F,QAAQ7D,SAASyD,EAAKpH,KAAKlB,MAAOuI,EACnFC,WACAI,WAAY3J,KAAKiC,KAAOsH,EAASxF,OAAO,SAAAD,GAAI,OAAIA,EAAK2F,QAAQ7D,SAASyD,EAAKpH,KAAKlB,MAAO,GACvF6I,cAAe5J,KAAKiC,KAAOsH,EAASxF,OAAO,SAAAD,GAAI,OAAKA,EAAK2F,QAAQ7D,SAASyD,EAAKpH,KAAKlB,MAAOuI,EAC3F3D,KAAM3F,KAAKiC,KAAOuB,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAK2F,QAAQ7D,SAASyD,EAAKpH,KAAKlB,MAAO,2CAInE+C,EAAM+F,GACnB7J,KAAK4H,OAAOpB,KAAK,oBAAqB,CAACzF,GAAI+C,EAAK/C,GAAI8I,mDAGrCC,GACf9J,KAAK4H,OAAOpB,KAAK,oBAAqBsD,0CAGzBC,GACb/J,KAAK4H,OAAOpB,KAAK,kBAAmBuD,EAAWhJ,4CAGjCgJ,GACd/J,KAAK4H,OAAOpB,KAAK,mBAAoBuD,EAAWhJ,4CAGlCgJ,GACd/J,KAAK4H,OAAOpB,KAAK,mBAAoBuD,EAAWhJ,4CAGlCgJ,GACd/J,KAAK4H,OAAOpB,KAAK,mBAAoBuD,EAAWhJ,+CAS/BsD,GAAa,IAAA2F,EAAAhK,KACxBiK,EAAS5F,EAAYN,OAAO,SAAAgG,GAAU,OAAKA,EAAWG,UACtDZ,EAAOjF,EAAYN,OAAO,SAAAgG,GAAU,OAAIA,EAAWG,UAAYH,EAAWR,WAC1EY,EAAgBF,EAAOtK,OAAO2J,GAC9BC,EAAWlF,EAAYN,OAAO,SAAAgG,GAAU,OAAIA,EAAWR,WAC7D,MAAO,CACLlF,cACA0E,KAAM3J,IAAE4J,UAAU3E,EAAY1C,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MACpDmG,SAAQX,OAAMa,gBAAeZ,WAC7Ba,SAAUpK,KAAKiC,KAAOgI,EAAOlG,OAAO,SAAAgG,GAAU,OAAIA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAO,GAC/FyI,OAAQxJ,KAAKiC,KAAOqH,EAAKvF,OAAO,SAAAgG,GAAU,OAAIA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAO,GAC3FsJ,gBAAiBrK,KAAKiC,KAAOkI,EAAcpG,OAAO,SAAAgG,GAAU,OAAIA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAO,GAC7G4I,WAAY3J,KAAKiC,KAAOsH,EAASxF,OAAO,SAAAgG,GAAU,OAAIA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAO,GACnGuJ,YAAatK,KAAKiC,KAAOqH,EAAKvF,OAAO,SAAAgG,GAAU,OAAKA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAOuI,EACjGI,UAAW1J,KAAKiC,KAAOgI,EAAOlG,OAAO,SAAAgG,GAAU,OAAKA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAOkJ,EACjGM,mBAAoBvK,KAAKiC,KAAOkI,EAAcpG,OAAO,SAAAgG,GAAU,OAAKA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAOkJ,EACjHL,cAAe5J,KAAKiC,KAAOsH,EAASxF,OAAO,SAAAgG,GAAU,OAAKA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAOwI,EACvG5D,KAAM3F,KAAKiC,KAAOoC,EAAYN,OAAO,SAAAgG,GAAU,OAAIA,EAAWN,QAAQ7D,SAASoE,EAAK/H,KAAKlB,MAAO,yCAIvFvB,GACXQ,KAAK4H,OAAOpB,KAAK,gBAAiBhH,wCAGvBA,GACXQ,KAAK4H,OAAOpB,KAAK,gBAAiBhH,4CAGnBA,EAAQgL,GACvBxK,KAAK4H,OAAOpB,KAAK,sBAAuB,CAACzF,GAAIvB,EAAOuB,GAAIyJ,gDAsB3CzH,GAAS,IAAA0H,EAAAzK,KAChB0K,EAAe1K,KAAKiC,KAAOc,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAOmL,SAAWF,EAAKxI,KAAKlB,KAAMgC,EACtF6H,EAAY5K,KAAKiC,KAAOc,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAOmL,SAAWF,EAAKxI,KAAKlB,KAAM,GACzF,MAAO,CACLgC,UACA8H,OAAQ9H,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgBrG,mBACnFgM,QAAS/H,EAAQgB,OAAO,SAAAvE,GAAM,OAAKA,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgB4F,YACrFhC,KAAM3J,IAAE4J,UAAUjG,EAAQpB,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MAChD6B,KAAMiF,EACNI,SAAUJ,EAAU7G,OAAO,SAAAvE,GAAM,OAAIA,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgBrG,mBACvFmM,UAAWL,EAAU7G,OAAO,SAAAvE,GAAM,OAAKA,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgB4F,YACzF/E,MAAO0E,EACPQ,YAAalL,KAAKiC,KAAOyI,EAAa3G,OAAO,SAAAvE,GAAM,OAAIiL,EAAKxI,KAAKc,QAAQvD,EAAOuB,KAAO0J,EAAKxI,KAAKc,QAAQvD,EAAOuB,IAAImE,KAAKiG,MAAO,GAChIC,cAAepL,KAAKiC,KAAOyI,EAAa3G,OAAO,SAAAvE,GAAM,OAAKiL,EAAKxI,KAAKc,QAAQvD,EAAOuB,MAAQ0J,EAAKxI,KAAKc,QAAQvD,EAAOuB,IAAImE,KAAKiG,MAAOT,EACpIW,aAAcrL,KAAKiC,KAAOyI,EAAa3G,OAAO,SAAAvE,GAAM,OAAIiL,EAAKxI,KAAKc,QAAQvD,EAAOuB,KAAO0J,EAAKxI,KAAKc,QAAQvD,EAAOuB,IAAImE,KAAKgF,UAAYO,EAAKxI,KAAKc,QAAQvD,EAAOuB,IAAImE,KAAKiG,MAAO,GAC/KG,gBAAiBtL,KAAKiC,KAAOyI,EAAa3G,OAAO,SAAAvE,GAAM,OAAKiL,EAAKxI,KAAKc,QAAQvD,EAAOuB,MAAQ0J,EAAKxI,KAAKc,QAAQvD,EAAOuB,IAAImE,KAAKgF,UAAWQ,YAKnIzG,EAAS,IAAInE,EAC1BO,OAAO4D,OAASA,EAEDnE,iDChYTyL,uLACSf,GAAM,IACVgB,EAASxL,KAAKyL,MAAdD,MACP,SAAA7L,OAAU6L,EAAME,IAAIC,SAAS,KAAOH,EAAME,IAAI7C,MAAM,GAAI,GAAK2C,EAAME,KAAnE/L,OAAyE6K,EAAI,IAAA7K,OAAO6K,GAAS,sEAGrD,IAAAzK,EAAAC,KAAA4L,EACO5L,KAAKyL,MAA7CI,EADiCD,EACjCC,MAAOC,EAD0BF,EAC1BE,aAAcN,EADYI,EACZJ,MAAOlK,EADKsK,EACLtK,SAC/ByK,EAAY,KACZC,EAAc,KACdC,EAAWT,EAAME,IAwCrB,MAAO,CAACQ,cAtCcL,EACnBlK,IAAI,SAACwK,EAAMC,GAAP,MAAyB,CAACD,EAAMC,KACpCrI,OAAO,SAAAsI,GAAA,OAAApM,OAAAqM,EAAA,EAAArM,CAAAoM,EAAA,QACP1K,IAAI,SAAA4K,EAAwBpJ,GAAU,IAAAqJ,EAAAvM,OAAAqM,EAAA,EAAArM,CAAAsM,EAAA,GAAhCJ,EAAgCK,EAAA,GAA1BJ,EAA0BI,EAAA,GACrC,IAAKL,EACH,OAAO,KAGT,IAAMM,EAAK1M,EAAK2M,aAAaP,EAAK3B,MAC9B4B,IAAkBN,IACpBC,EAAYU,GAEd,IAAME,OAA6BjO,IAAlByN,EAAKQ,SAAyB5M,EAAK2M,aAAaP,EAAKQ,UAAYF,EAC9EnL,EAASsL,SAASC,WAAWF,KAC/BX,EAAc7I,EACd8I,EAAWQ,GAGb,IAAMK,EACqB,kBAAlBX,EAAKW,SACR,CAACC,QAASZ,EAAKW,UACfX,EAAKW,SAEX,OAAO7M,OAAA+M,EAAA,EAAA/M,CAAA,CACLwM,MACGN,EAFL,CAGEW,SACEG,EAAAC,EAAA/P,cAACgQ,EAAA,EAAKC,KAANnN,OAAAoN,OAAA,CACEC,IAAKnB,EAAK3B,KACV+C,GAAIC,IACJf,GAAIE,GACAG,EAJN,CAKEW,KAAMtB,EAAKsB,MAAQX,EAASW,YAKnC1J,OAAO,SAAA2J,GAAY,OAAIA,IACH3B,YAAWC,cAAaC,6CAGxC,IAAA0B,EACiD3N,KAAKyL,MAAtDmC,EADAD,EACAC,IAAKC,EADLF,EACKE,KAAMrC,EADXmC,EACWnC,MAAOsC,EADlBH,EACkBG,iBAAkBC,EADpCJ,EACoCI,UADpCC,EAEmDhO,KAAKiO,0CAAxD/B,EAFA8B,EAEA9B,cAAeH,EAFfiC,EAEejC,UAAWC,EAF1BgC,EAE0BhC,YAAaC,EAFvC+B,EAEuC/B,SAE9C,OACEgB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACiB,OAAdnC,EACCkB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAUC,OAAK,EAACzQ,KAAM6N,EAAME,IAAKe,GAAIV,KAErC,KACJkB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAO3D,KAAMyB,GACXgB,EAAAC,EAAA/P,cAACkR,EAAA,EAADpO,OAAAoN,OAAA,CACEQ,KAAMA,EACNC,iBAAkBA,GACdF,EAHN,CAIE/B,MAAOK,EACPF,YAAaA,EACb+B,UAAWA,cAvEOO,aA6F9B/C,EAAgBgD,aAAe,CAC7BT,kBAAkB,EAClBhC,aAAc,GAGD0C,sBAAWjD,8CCzGpBkD,oJAAyBC,QAEzBC,aAoSJ,SAAAA,EAAYC,EAAgBC,EAAQC,EAAUC,EAAUC,GACtD,GADmE/O,OAAAC,EAAA,EAAAD,CAAAD,KAAA2O,IAC9DC,IAAmBC,EACtB,MAAM,IAAIH,MAAM,8DAElB1O,KAAK8O,SAAWA,EAEhB9O,KAAK4O,eAAiBA,EAEtB,IAAMK,EACJ,CAAC,aAAc,WAAY,uBAAwB,UAAW,kBAC7DlL,OAAO,SAAAuJ,GAAG,YAAoB5O,IAAhBmQ,EAAOvB,KACxB,GAAI2B,EAAkBxQ,OACpB,MAAM,IAAIiQ,MAAJ,kCAAA/O,OAA4CsP,EAAkBC,KAAK,QAE3ElP,KAAK6O,OAASA,EACd7O,KAAKmP,SAAWnP,KAAK6O,OAAOM,SAC5BnP,KAAKoP,qBAAuBpP,KAAK6O,OAAOO,qBACxCpP,KAAKqP,eAAiBrP,KAAK6O,OAAOQ,eAClCrP,KAAKsP,WAAatP,KAAK6O,OAAOS,WAC9BtP,KAAKuP,QAAUvP,KAAK6O,OAAOU,QAC3BvP,KAAK+O,SAAWA,IAAuB/O,KAAKqP,eAAiB,CAACG,OAAQxP,KAAKqP,gBAAkBN,GAC7F/O,KAAKgP,WAAaA,EAElBhP,KAAKyP,OAASzP,KAAK0P,YACf1P,KAAKyP,OACPzP,KAAKuJ,UAAW,EACNvJ,KAAKkH,YAAYyI,iBAAiB3P,KAAKoP,sBAIjDpP,KAAKuJ,UAAW,GAHhBvJ,KAAKuJ,UAAW,EAChBvJ,KAAKyP,OAASzP,KAAKkH,YAAY0I,aAAa5P,KAAKsP,aAK/CtP,KAAKuJ,WACPvJ,KAAKoP,qBAAuBpP,KAAKkH,YAAY2I,8EA1CtCjB,EAAgBC,EAAQE,GACjC,OAAO,IAAI/O,KAAKkH,YAAY0H,EAAgBC,EAAQ7O,KAAM+O,GAAU,sCAG3DH,EAAgBC,EAAQE,GACjC,OAAO,IAAI/O,KAAKkH,YAAY0H,EAAgBC,EAAQ7O,KAAM+O,GAAU,sCAhOpE,OAAO,IAAI/O,KAFYA,KAAK8P,2BACb9P,KAAK+P,mBACoB,KAAM,MAAM,qCAGrClG,GACf,IAAI/F,EAAO9D,KAAKgQ,SAGhB,OAFAlM,EAAOA,EAAKmM,UAAUpG,8CAKE+E,GAAgB,IAAA7O,EAAAC,KACxC,GAA8B,IAA1B4O,EAAenQ,OACjB,MAAM,IAAIiQ,MAAJ,2BAAA/O,OAAqCiP,EAAenQ,SAE5D,GAAImQ,EAAehQ,KAAK,SAAAsR,GAAG,OAAyB,IAArBA,EAAIjS,MAAMQ,SACvC,MAAM,IAAIiQ,MAAJ,2DAER,GAAIE,EAAehQ,KAAK,SAACsR,EAAKC,GAAN,OAAYD,EAAIC,IAAMA,IAC5C,MAAM,IAAIzB,MAAJ,6BAER,GAAIE,EAAehQ,KAAK,SAAAsR,GAAG,OAAIA,EAAIjS,MAAMW,KAAK,SAACwR,EAAMC,GAAP,OAAaD,EAAKC,IAAMA,GAAKD,EAAKD,IAAMD,EAAIC,MACxF,MAAM,IAAIzB,MAAJ,qCAMR,GAAI1O,KAAKsQ,SAAS1B,EAJe,SAAAwB,GAAI,OAClCA,EAAKG,SAAWxQ,EAAKyQ,QAAQ5K,SAASwK,EAAKG,SACxCH,EAAKK,SAAW1Q,EAAK2Q,QAAQ9K,SAASwK,EAAKK,UAG/C,MAAM,IAAI/B,MAAJ,2CAER,GAAI1O,KAAKsQ,SAAS1B,EAAgB,SAAAwB,GAAI,OAAK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGxK,SAASwK,EAAKO,SACvE,MAAM,IAAIjC,MAAJ,iCAER,IAMIG,EANE+B,EAAe5Q,KAAK6Q,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAK+Q,WAAUrS,OACrFsS,EAAe/Q,KAAK6Q,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAKiR,WAAUvS,OAC3F,GAAImS,EAAe,GAAKG,EAAe,EACrC,MAAM,IAAIrC,MAAJ,wDAAA/O,OACoDiR,EADpD,sBAAAjR,OACqFoR,IAI7F,GAAiB,IADAE,KAAKC,IAALC,MAAAF,KAAIhR,OAAA6I,EAAA,EAAA7I,CAAQb,IAAEgS,QAAQxC,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAM0D,IAAI,SAAAyO,GAAI,OAAIA,EAAKO,aAE1F,GAAqB,IAAjBI,EACF,GAAqB,IAAjBH,EACF/B,EAAS,CACPS,WAAYtP,KAAK8Q,SACjB3B,SAAUnP,KAAKqR,6BACfjC,qBAAsBpP,KAAKsR,6BAC3B/B,SAAS,EACTF,eAAgB,WAEb,GAAqB,IAAjBuB,EACT/B,EAAS,CACPS,WAAYtP,KAAK8Q,SACjB3B,SAAUnP,KAAKuR,8BACfnC,qBAAsBpP,KAAKwR,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAEb,CACL,IAAMoC,EAAqBzR,KAAKsQ,SAAS1B,EACvC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAK+Q,UAAYV,EAAKK,SAAW1Q,EAAK2R,eAC1DC,EAAsB3R,KAAKsQ,SAAS1B,EACxC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAK+Q,UAAYV,EAAKK,SAAW1Q,EAAK6R,gBAChE,IAAKH,IAAuBE,EAC1B,MAAM,IAAIjD,MAAJ,2CAERG,EAAS,CACPS,WAAYtP,KAAKgR,SACjB7B,SAAUnP,KAAKqR,6BACfjC,qBAAsBpP,KAAKwR,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAGf,CACL,GAAqB,IAAjBuB,EACF,MAAM,IAAIlC,MAAJ,4EAER,GAAqB,IAAjBqC,EACFlC,EAAS,CACPS,WAAYtP,KAAKgR,SACjB7B,SAAUnP,KAAKuR,8BACfnC,qBAAsBpP,KAAKwR,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAEb,CACL,IAAMwC,EAAqB7R,KAAKsQ,SAAS1B,EACvC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAKiR,UAAYZ,EAAKK,SAAW1Q,EAAK2R,eAC1DI,EAAsB9R,KAAKsQ,SAAS1B,EACxC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWxQ,EAAKiR,UAAYZ,EAAKK,SAAW1Q,EAAK6R,gBAChE,IAAKC,IAAuBC,EAC1B,MAAM,IAAIpD,MAAJ,2CAERG,EAAS,CACPS,WAAYtP,KAAK8Q,SACjB3B,SAAUnP,KAAK+R,gCACf3C,qBAAsBpP,KAAKgS,8BAA8BpD,EAAgB5O,KAAK8Q,UAC9EvB,SAAS,EACTF,eAAgB,WAIjB,CACL,GAAqB,IAAjBuB,GAAuC,IAAjBG,EACxB,MAAM,IAAIrC,MAAJ,sFAGR,GAAI1O,KAAKsQ,SAAS1B,EAAgB,SAAAwB,GAAI,OAAmB,IAAfA,EAAKO,OAAeP,EAAKG,SACjE,MAAM,IAAI7B,MAAJ,qCAGR,GADmB1O,KAAK6Q,UAAUjC,EAAgB,SAAAwB,GAAI,OAAmB,IAAfA,EAAKO,OAAeP,EAAKG,SACpE9R,OAAS,EACtB,MAAM,IAAIiQ,MAAJ,6BAING,EAFiBzP,IAAE6S,IAAI7S,IAAEgS,QAAQxC,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAM0D,IAAI,SAAAyO,GAAI,OAAIA,EAAKO,YACvE,IAAM,EACZ,CACPrB,WAAYtP,KAAK8Q,SACjB3B,SAAUnP,KAAK+R,gCACf3C,qBAAsBpP,KAAKgS,8BAA8BpD,EAAgB5O,KAAK8Q,UAC9EvB,SAAS,EACTF,eAAgB,MAGT,CACPC,WAAYtP,KAAKgR,SACjB7B,SAAUnP,KAAK+R,gCACf3C,qBAAsBpP,KAAKgS,8BAA8BpD,EAAgB5O,KAAKgR,UAC9EzB,SAAS,EACTF,eAAgB,MAItB,OAAO,IAAIrP,KAAK4O,EAAgBC,EAAQ,KAAM,MAAM,4CAG9BqD,GAAc,IAAAjL,EAAAjH,KAC9B6J,EAAQqI,EACXC,MAAM,IACNxQ,IAAI,SAAAyQ,GAAI,OAAInL,EAAKoL,sBAAsBD,KAC1C,GAAIvI,EAAM9F,OAAO,SAAAuO,GAAI,OAAKA,IAAM7T,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKuS,UAAU1I,GAAO,GAC7B,MAAOvD,GACP,OAAOtG,KAAKuS,UAAU1I,GAAO,uDAIC2I,GAAwB,IAAA9J,EAAA1I,KAClD6J,EAAQ2I,EACXL,MAAM,IACNxQ,IAAI,SAAAyQ,GAAI,OAAI1J,EAAK+J,4BAA4BL,KAChD,GAAIvI,EAAM9F,OAAO,SAAAuO,GAAI,OAAKA,IAAM7T,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKuS,UAAU1I,GAAO,GAC7B,MAAOvD,GACP,OAAOtG,KAAKuS,UAAU1I,GAAO,gDAIN+E,GAAgB,IAAAvF,EAAArJ,KACzC,OAAOZ,IAAEgS,QAAQxC,EAAejN,IAC9B,SAAAuO,GAAG,OAAIA,EAAIjS,MAAM0D,IACf,SAAAyO,GAAI,OAAI/G,EAAKqJ,8BAA8BtC,EAAKO,OAAOP,EAAKG,aAC7DrB,KAAK,iDAGkByD,GAAU,IAAA3I,EAAAhK,KAC9B4O,EAAiB5O,KAAK4S,KAAKjR,IAAI,SAAAwO,GAAC,MAAK,CACzCA,IAAGlS,MAAO+L,EAAK6I,QAAQlR,IAAI,SAAA0O,GAAC,OAAApQ,OAAA+M,EAAA,EAAA/M,CAAA,CAC1BoQ,IAAGF,KAAMnG,EAAK8I,0BAA0BH,EAAa,EAAJxC,EAAQE,UAG7D,OAAOrQ,KAAK+S,aAAanE,0DAGW+D,GAAU,IAAAlI,EAAAzK,KACxC4O,EAAiB5O,KAAK4S,KAAKjR,IAAI,SAAAwO,GAAC,MAAK,CACzCA,IAAGlS,MAAOwM,EAAKoI,QAAQlR,IAAI,SAAA0O,GAAC,OAAApQ,OAAA+M,EAAA,EAAA/M,CAAA,CAC1BoQ,IAAGF,KAAM1F,EAAKuI,gCAAgCL,EAAa,EAAJxC,EAAQE,UAGnE,OAAOrQ,KAAK+S,aAAanE,6DAGc+D,GACvC,IAEE,OADA3S,KAAKiT,+BAA+BN,IAC7B,EACP,MAAMrM,GACN,OAAO,wCAISsI,GAClB,IAAIgC,EAAe,EAAGG,EAAe,EADHtM,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IAElC,QAAAkG,EAAAC,EAAgB7E,KAAK4S,KAArB9N,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2B,KAAhB4L,EAAgBzL,EAAAtH,MAAA4V,GAAA,EAAAC,GAAA,EAAAC,OAAA1U,EAAA,IACzB,QAAA2U,EAAAC,EAAgBtT,KAAK6S,QAArB/N,OAAAC,cAAAmO,GAAAG,EAAAC,EAAAtO,QAAAC,MAAAiO,GAAA,EAA8B,KACtB9C,EAAOxB,EADeyE,EAAA/V,OACGW,MAAMoS,GACjCD,EAAKG,SAAWvQ,KAAK8Q,UACvBV,EAAKK,OAASzQ,KAAK0Q,QAAQE,EAAe,GAC1CA,GAAgB,GACPR,EAAKG,SAAWvQ,KAAKgR,WAC9BZ,EAAKK,OAASzQ,KAAK0Q,QAAQK,EAAe,GAC1CA,GAAgB,IARK,MAAA3L,GAAA+N,GAAA,EAAAC,EAAAhO,EAAA,YAAA8N,GAAA,MAAAI,EAAAjO,QAAAiO,EAAAjO,SAAA,WAAA8N,EAAA,MAAAC,KAFO,MAAAhO,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAclC,OAAO3E,KAAKuT,mBAAmB3E,yDAiDpB9Q,EAAM0V,GAajB,OAZKxT,KAAKyT,eAAe3V,KAKvBkC,KAAKlC,GAAQ0V,KAORxT,KAAKlC,uCA2EZ,MAAO,CACL+L,MAAO7J,KAAK6J,6CA0BF,IAAA6J,EAAAC,EAAAtH,EAAAuH,EAAAC,EAAAC,EAENC,GAAQH,EAAA,GAAA3T,OAAA+T,EAAA,EAAA/T,CAAA2T,EACXjF,EAAKmC,UADM4C,EAAA,GAAAzT,OAAA+T,EAAA,EAAA/T,CAAAyT,EACO,EAAI,KADXzT,OAAA+T,EAAA,EAAA/T,CAAAyT,EACiB,EAAIO,IAAMC,QAAQ,MADnCjU,OAAA+T,EAAA,EAAA/T,CAAAyT,EAC0C,EAAIO,IAAME,SAAS,MAD7DlU,OAAA+T,EAAA,EAAA/T,CAAAyT,EACoE,EAAIO,IAAMG,MAAM,MADpFV,IAAAzT,OAAA+T,EAAA,EAAA/T,CAAA2T,EAEXjF,EAAKqC,UAFM2C,EAAA,GAAA1T,OAAA+T,EAAA,EAAA/T,CAAA0T,EAEO,EAAI,KAFX1T,OAAA+T,EAAA,EAAA/T,CAAA0T,EAEiB,EAAIM,IAAMC,QAAQ,MAFnCjU,OAAA+T,EAAA,EAAA/T,CAAA0T,EAE0C,EAAIM,IAAME,SAAS,MAF7DlU,OAAA+T,EAAA,EAAA/T,CAAA0T,EAEoE,EAAIM,IAAMG,MAAM,MAFpFT,IAAA1T,OAAA+T,EAAA,EAAA/T,CAAA2T,EAGX,MAHWvH,EAAA,GAAApM,OAAA+T,EAAA,EAAA/T,CAAAoM,EAGF,EAAI,KAHFpM,OAAA+T,EAAA,EAAA/T,CAAAoM,EAGQ,EAAI4H,IAAMC,QAAQ,MAH1BjU,OAAA+T,EAAA,EAAA/T,CAAAoM,EAGiC,EAAI4H,IAAME,SAAS,MAHpDlU,OAAA+T,EAAA,EAAA/T,CAAAoM,EAG2D,EAAI4H,IAAMG,MAAM,MAH3EnU,OAAA+T,EAAA,EAAA/T,CAAAoM,EAGkF,EAAI4H,IAAMI,OAAO,MAHnGhI,IAAAuH,GAMRU,EAAgBtU,KAAK4O,eACxBjN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MACb0D,IAAI,SAAAyO,GAAI,OAAI2D,EAAS3D,EAAKG,QAAQH,EAAKO,SACvCzB,KAAK,MACPA,KAAK,MAIFqF,GAHaV,EAAA,GAAA5T,OAAA+T,EAAA,EAAA/T,CAAA4T,EAChBlF,EAAKmC,SAAW,KADA7Q,OAAA+T,EAAA,EAAA/T,CAAA4T,EACMlF,EAAKqC,SAAW,KADtB6C,GAGsB7T,KAAKsP,YAIxCkF,GAHSV,EAAA,GAAA7T,OAAA+T,EAAA,EAAA/T,CAAA6T,EACZnF,EAAKmC,SAAW,KADJ7Q,OAAA+T,EAAA,EAAA/T,CAAA6T,EACUnF,EAAKqC,SAAW,KAD1B/Q,OAAA+T,EAAA,EAAA/T,CAAA6T,EACgC,KAAO,KADvCA,GAGkB9T,KAAKyP,QACtC,MACE,GAAA9P,OAAG4U,EAAH,SAAA5U,OAA6B6U,EAA7B,MACEF,EAAcnC,MAAM,MAAMxQ,IAAI,SAAAuO,GAAG,UAAAvQ,OAAQsU,IAAMQ,MAAMvE,GAApB,OAA6BhB,KAAK,MACnE,gEAI2B,IAAPmB,EAAOqE,EAAPrE,EAAGF,EAAIuE,EAAJvE,EAC3B,GAAIc,KAAK0D,MAAMtE,KAAOA,GAAKY,KAAK0D,MAAMxE,KAAOA,EAC3C,MAAM,IAAI1B,EAAJ,gBAAA9O,OAAqC4C,KAAKC,UAAU,CAAC6N,IAAGF,MAAxD,oBAER,QAAqCzR,IAAjCsB,KAAKoP,qBAAqBe,SAAwDzR,IAApCsB,KAAKoP,qBAAqBe,GAAGE,GAC7E,MAAM,IAAI5B,EAAJ,gBAAA9O,OAAqC4C,KAAKC,UAAU,CAAC6N,IAAGF,MAAxD,mEAQc,IAAPE,EAAO9D,EAAP8D,EAAGF,EAAI5D,EAAJ4D,EAClB,OAAOnQ,KAAKoP,qBAAqBe,GAAGE,oCAW7BuE,GACP,OAAO5U,KAAKkH,YAAYoJ,SAAStQ,KAAK4O,eAAgBgG,qCAG9CA,GACR,OAAO5U,KAAKkH,YAAY2J,UAAU7Q,KAAK4O,eAAgBgG,uCAqBvD,GAAI5U,KAAKqP,eACP,OAAOrP,KAAKkH,YAAY0I,aAAa5P,KAAKqP,gBAG5C,IAAMwF,EAAc7U,KAAKsQ,SAAS,SAAAF,GAAI,OAAIA,EAAKG,QAAyB,IAAfH,EAAKO,QAC9D,OAAIkE,EACKA,EAAYtE,QAGhBvQ,KAAKuP,SAAWvP,KAAKkH,YAAY4N,aAAa9U,KAAK4O,eAAgB5O,KAAKsP,YACpEtP,KAAKsP,WAGP,8CAwDQyF,EAAkBC,EAAaC,GAC9C,GAAIjV,KAAKuJ,SACP,MAAM,IAAIkF,EAAiB,iCAE7B,GAAIzO,KAAKmP,WAAa4F,EACpB,MAAM,IAAItG,EAAJ,oCAAA9O,OAAyDoV,EAAzD,4BAAApV,OAAoGK,KAAKmP,SAAzG,MAMR,GAJAnP,KAAKkV,yBAAyBF,GAC1BC,GACFjV,KAAKkV,yBAAyBD,IAE3BjV,KAAKoP,qBAAqB4F,EAAY7E,GAAG6E,EAAY3E,GACxD,MAAM,IAAI3B,MAAJ,QAAA/O,OAAkB4C,KAAKC,UAAUwS,GAAjC,qEAIHzE,GACL,OAAOvQ,KAAKmV,WAAWnV,KAAK4O,eAAgB,CAC1CU,WAAYtP,KAAKsP,WACjBH,SAAUnP,KAAKmP,SACfC,qBAAsBpP,KAAKoP,qBAC3BG,SAAS,EACTF,eAAgBkB,GACf,CAACf,OAAQe,sCAkBJ1G,GACR,IAAI/F,EAAO9D,KADIoV,GAAA,EAAAC,GAAA,EAAAC,OAAA5W,EAAA,IAEf,QAAA6W,EAAAC,EAAmB3L,EAAnB/E,OAAAC,cAAAqQ,GAAAG,EAAAC,EAAAxQ,QAAAC,MAAAmQ,GAAA,EAA0B,KAAf9C,EAAeiD,EAAAjY,MACxBwG,EAAOA,EAAK2R,SAASnD,IAHR,MAAAlN,GAAAiQ,GAAA,EAAAC,EAAAlQ,EAAA,YAAAgQ,GAAA,MAAAI,EAAAnQ,QAAAmQ,EAAAnQ,SAAA,WAAAgQ,EAAA,MAAAC,GAMf,OAAOxR,mCAGAkR,GAAa,IAAAU,EACpB,GAAIV,EAAYxF,OACd,OAAOxP,KAAKwP,OAAOwF,EAAYxF,QAEjC,IAQMmG,GAReD,EAAA,GAAAzV,OAAA+T,EAAA,EAAA/T,CAAAyV,EAClB1V,KAAKkH,YAAYmK,6BAA+BrR,KAAK4V,kBADnC3V,OAAA+T,EAAA,EAAA/T,CAAAyV,EAElB1V,KAAKkH,YAAYqK,8BAAgCvR,KAAK6V,mBAFpC5V,OAAA+T,EAAA,EAAA/T,CAAAyV,EAGlB1V,KAAKkH,YAAY6K,gCAAkC/R,KAAK8V,oBAHtC7V,OAAA+T,EAAA,EAAA/T,CAAAyV,EAIlB1V,KAAKkH,YAAY6O,4BAA8B/V,KAAKgW,iBAJlC/V,OAAA+T,EAAA,EAAA/T,CAAAyV,EAKlB1V,KAAKkH,YAAY+O,6BAA+BjW,KAAKkW,kBALnCjW,OAAA+T,EAAA,EAAA/T,CAAAyV,EAMlB1V,KAAKkH,YAAYiP,8BAAgCnW,KAAKoW,mBANpCV,GAQkB1V,KAAKmP,UAC5C,IAAKwG,EACH,MAAM,IAAIlH,EAAJ,4CAAA9O,OAAgEK,KAAKmP,SAArE,MAER,OAAOwG,EAAeU,KAAKrW,KAApB2V,CAA0BX,kCAIjC,IAAKhV,KAAKuP,QACR,MAAM,IAAIb,MAAM,eAGlB,OAAO1O,KAAK8O,gDAIZ,IAAK9O,KAAKsW,gBACR,MAAM,IAAI5H,MAAM,yBAGlB,OAAO1O,KAAK8O,qDAGW,IAAPuB,EAAO7D,EAAP6D,EAAGF,EAAI3D,EAAJ2D,EACnBnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAYmK,6BAA8B,CAAChB,IAAGF,MAEzE,IAAMvB,EAAiB5O,KAAKkH,YAAYsP,YAAYxW,KAAK4O,eAAgB,CACvEyB,IAAGF,IACHI,OAAQvQ,KAAKsP,WACbmB,OAAQzQ,KAAKkH,YAAYwK,eAE3B,OAAO1R,KAAKmV,WAAWvG,EAAgB,CACrCU,WAAYtP,KAAKsP,WACjBH,SAAUnP,KAAKkH,YAAYqK,8BAC3BnC,qBAAsBpP,KAAKkH,YAAYsK,kCAAkC5C,GACzEW,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,mDAGiB,IAAPE,EAAOoG,EAAPpG,EAAGF,EAAIsG,EAAJtG,EACpBnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAYqK,8BAA+B,CAAClB,IAAGF,MAE1E,IAAMvB,EAAiB5O,KAAKkH,YAAYsP,YAAYxW,KAAK4O,eAAgB,CACvEyB,IAAGF,IACHI,OAAQvQ,KAAKsP,WACbmB,OAAQzQ,KAAKkH,YAAY0K,gBAErBtC,EAAatP,KAAKkH,YAAY0I,aAAa5P,KAAKsP,YACtD,OAAOtP,KAAK0W,WAAW9H,EAAgB,CACrCU,WAAYA,EACZH,SAAUG,IAAetP,KAAKkH,YAAY4J,SACtC9Q,KAAKkH,YAAY6K,gCACjB/R,KAAKkH,YAAYmK,6BACrBjC,qBAAsBE,IAAetP,KAAKkH,YAAY4J,SAClD9Q,KAAKkH,YAAY8K,8BAA8BpD,EAAgBU,GAC/DtP,KAAKkH,YAAYsK,kCAAkC5C,GACvDW,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,oDAGkB,IAAPE,EAAOsG,EAAPtG,EAAGF,EAAIwG,EAAJxG,EACrBnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAY6K,gCAAiC,CAAC1B,IAAGF,MAE5E,IAAMC,EAAOpQ,KAAK4O,eAAeuB,GAAGlS,MAAMoS,GAC1C,OAAOrQ,KAAKmV,WAAWnV,KAAK4O,eAAgB,CAC1CU,WAAYtP,KAAKsP,WACjBH,SAAUiB,EAAKK,SAAWzQ,KAAKkH,YAAYwK,aACvC1R,KAAKkH,YAAY6O,4BACjB/V,KAAKkH,YAAY+O,6BACrB7G,qBAAsBpP,KAAKkH,YAAY0P,+BAA+B5W,KAAK4O,eAAgB,CAACyB,IAAGF,MAC/FZ,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,yCAGE1D,EAAIgE,GAAQ,IAAAoG,EAAAC,EAAA9W,KACf+W,EAAW/W,KAAKsQ,SAAS,SAAAF,GAAI,OAAIA,EAAKG,SAAWuG,EAAKxH,YAAcc,EAAKK,SAAWA,IACpFuG,EAAShX,KAAK4O,eAAenC,EAAG0D,GAAGlS,MAAMwO,EAAG4D,GAC5CzB,GAAiBiI,EAAA7W,KAAKkH,aAAYsP,YAAjBrF,MAAA0F,EAAA,CAA6B7W,KAAK4O,gBAAlCjP,OAAqD,CAC1E,CAAC0Q,EAAG0G,EAAS1G,EAAGF,EAAG4G,EAAS5G,EAAGI,OAAQ,KAAME,OAAQ,MACrD,CAACJ,EAAG2G,EAAO3G,EAAGF,EAAG6G,EAAO7G,EAAGI,OAAQwG,EAASxG,OAAQE,OAAQsG,EAAStG,WAEvE,OAAOzQ,KAAKmV,WAAWvG,EAAgB,CACrCU,WAAYtP,KAAKsP,WACjBH,SAAUnP,KAAKkH,YAAYiP,8BAC3B/G,qBAAsBpP,KAAKkH,YAAY+P,iCAAiCrI,EAAgBnC,GACxF8C,SAAS,EACTF,eAAgB,MACf,CAACgB,EAAG5D,EAAG4D,EAAGF,EAAG1D,EAAG0D,+CAGG,IAAPE,EAAO6G,EAAP7G,EAAGF,EAAI+G,EAAJ/G,EAGlB,OAFAnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAY6O,4BAA6B,CAAC1F,IAAGF,MAEjEnQ,KAAKmX,WAAW,CAAC9G,IAAGF,KAAInQ,KAAKkH,YAAYwK,0DAGzB,IAAPrB,EAAO+G,EAAP/G,EAAGF,EAAIiH,EAAJjH,EAGnB,OAFAnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAY+O,6BAA8B,CAAC5F,IAAGF,MAElEnQ,KAAKmX,WAAW,CAAC9G,IAAGF,KAAInQ,KAAKkH,YAAY0K,4DAGxB,IAAPvB,EAAOgH,EAAPhH,EAAGF,EAAIkH,EAAJlH,EACpBnQ,KAAKuW,iBAAiBvW,KAAKkH,YAAYiP,8BAA+B,CAAC9F,IAAGF,MAE1E,IAAMvB,EAAiB5O,KAAKkH,YAAYsP,YAAYxW,KAAK4O,eAAgB,CACvEyB,IAAGF,IAAGQ,MAAO3Q,KAAK4O,eAAeuB,GAAGlS,MAAMoS,GAAGM,MAAQ,IAEjDrB,EAAatP,KAAKkH,YAAY0I,aAAa5P,KAAKsP,YACtD,OAAOtP,KAAK0W,WAAW9H,EAAgB,CACrCU,WAAYA,EACZH,SAAUnP,KAAKkH,YAAY6K,gCAC3B3C,qBAAsBpP,KAAKkH,YAAY8K,8BAA8BpD,EAAgBU,GACrFC,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,kDAIP,OAAInQ,KAAKuJ,SACA,GAGFnK,IAAEgS,QAAQpR,KAAKoP,qBACnBzN,IAAI,SAAC2V,EAAInH,GAAL,OAAWmH,EACb3V,IAAI,SAACmG,EAAWuI,GAAZ,MAAkB,CAACA,EAAGF,EAAGrI,KAC7B/D,OAAO,SAAAwT,GAAA,OAAAtX,OAAAqM,EAAA,EAAArM,CAAAsX,EAAA,QACP5V,IAAI,SAAA6V,GAAA,IAAAC,EAAAxX,OAAAqM,EAAA,EAAArM,CAAAuX,EAAA,SAAU,CAACnH,EAAXoH,EAAA,GAAatH,EAAbsH,EAAA,gDAGI,IAAAC,EAAA1X,KACb,OAAOA,KAAK2X,oBAAoBhW,IAAI,SAAA2Q,GAAI,OAAIoF,EAAKjC,SAASnD,oDAGT,IAA9BhD,EAA8B9Q,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjBwB,KAAKsP,WACrC,OAAItP,KAAKsP,aAAeA,EACf,CAACtP,MAGHZ,IAAEgS,QAAQpR,KAAK4X,eAAejW,IAAI,SAAAmC,GAAI,OAAIA,EAAK+T,qBAAqBvI,6CAG9DwI,GAA2B,IAAjBhJ,EAAiBtQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC5BuZ,EAAS/X,KAAKuJ,SAAYvJ,KAAKyP,SAAWzP,KAAKsP,WAAa,MAAQ,OAAU,KACpF,OAAOrP,OAAA+M,EAAA,EAAA/M,CAAA,CACL6D,KAAM9D,KACN+X,OAAQA,EACRC,cAAehY,KAAK6X,uBACpBI,QAAS,CACP9M,IAAgB,QAAX4M,EACLG,KAAiB,SAAXH,EACNI,cAAc,KAEXrJ,GAAYA,EAASsJ,WAAa,CACrCC,UAAqB,QAAVN,EAAkB,CAAC/X,MAAQ,IACpC,CACFoY,WAAuB,SAAXL,EAAoB,CAAC/X,MAAQ,IAZ7C,CAcE8O,WACAjF,MAAO,KACPiO,6CAtdU,IAAAQ,EAAAtY,KACZ,OAAOA,KAAKuY,aAAa,WAAY,kBAAOD,EAAKxJ,SAAWwJ,EAAKxJ,SAAS0J,QAAU,IACjFzU,OAAO,SAAAD,GAAI,OAAKA,EAAKyL,UACrB5P,OAAO,CAAC2Y,gDAGW,IAAAG,EAAAzY,KACtB,OAAOA,KAAKuY,aAAa,qBAAsB,kBAAME,EAAKD,QAAQC,EAAKD,QAAQ/Z,OAAS,yCAGxE,IAAAia,EAAA1Y,KAChB,OAAOA,KAAKuY,aAAa,eAAgB,kBAAMG,EAAK5J,SAAW4J,EAAK5J,SAAS6J,YAAc,IAAIhZ,OAAO+Y,uCAExF,IAAAE,EAAA5Y,KACd,OAAOA,KAAKuY,aAAa,aAAc,kBAAKK,EAAK9J,SAAY8J,EAAK5J,WAAa4J,EAAK9J,SAAS+J,UAAY,EAAID,EAAK9J,SAAS+J,UAAa,uCAEzH,IAAAC,EAAA9Y,KACf,OAAOA,KAAKuY,aAAa,cAAe,kBAAKO,EAAKhK,SAAWgK,EAAKhK,SAASiK,WAAa,EAAI,kCAElF,IAAAC,EAAAhZ,KACV,OAAOA,KAAKuY,aAAa,SAAU,kBAAKS,EAAKlK,SAAWkK,EAAKlK,SAASjF,MAAMlK,OAAO,CAACqZ,EAAKjK,WAAa,gDAE/E,IAAAkK,EAAAjZ,KACvB,OAAOA,KAAKuY,aAAa,sBAAuB,kBAAKU,EAAKN,YACvD9P,MAAMoQ,EAAKN,YAAYO,QAAQD,EAAKE,mBAAqB,GACzDxX,IAAI,SAAAmC,GAAI,OAAIA,EAAKiL,0CAEX,IAAAqK,EAAApZ,KACT,OAAOA,KAAKuY,aAAa,QAAS,kBAAKa,EAAKD,kBACxCC,EAAKD,kBAAkB3O,KAAK7K,OAAO,CAACyZ,EAAKC,qBACzC,wCAGW,IAAAC,EAAAtZ,KACf,OAAOA,KAAKuY,aAAa,cAAe,kBAAMe,EAAKxK,SAAWwK,EAAKxK,SAASQ,WAAaX,EAAKmC,gDAE7E,IAAAyI,EAAAvZ,KACjB,OAAOA,KAAKuY,aAAa,gBAAiB,kBAAMgB,EAAKzK,SAAWyK,EAAKzK,SAASK,SAAW,+CAErE,IAAAqK,EAAAxZ,KACpB,OAAOA,KAAKuY,aAAa,mBAAoB,mBAAQiB,EAAK1K,gDAEzC,IAAA2K,EAAAzZ,KAAC,OAAOA,KAAKuY,aAAa,gBAAiB,kBAAMkB,EAAKpK,eACrEoK,EAAKvS,YAAYwS,uBAAuBD,EAAKpK,gBAC5CoK,EAAK1K,SACJ0K,EAAKvS,YAAYyS,cAAcF,EAAK1K,SAASoB,GAAGsJ,EAAK1K,SAASsB,GAC9D,0CAEa,IAAAuJ,EAAA5Z,KACjB,OAAOA,KAAKuY,aAAa,gBAAiB,oBAAA5Y,OAASia,EAAK9K,SAAW8K,EAAK9K,SAASoD,aAAe,IAAtDvS,OAA2Dia,EAAKC,+DAE/E,IAAAC,EAAA9Z,KAC3B,OAAOA,KAAKuY,aAAa,0BAA2B,kBAAMuB,EAAK5H,aAC5DC,MAAM,QACNpO,OAAO,SAAAqO,GAAI,OAAIA,IACfzQ,IAAI,SAAAyQ,GAAI,OAAI0H,EAAK5S,YAAY6S,0BAA0B3H,KACvDlD,KAAK,+CAEa,IAAA8K,EAAAha,KACrB,OAAOA,KAAKuY,aAAa,oBAAqB,kBAAMyB,EAAK9S,YAAY+S,oBAAoBD,EAAKpL,8DAGvEQ,GACvB,OAAOhQ,IAAEgS,QAAQhC,EACdzN,IAAI,SAACuO,EAAKC,GAAN,OAAYD,EACdvO,IAAI,SAACmG,EAAWuI,GAAZ,OAAkBvI,EAAY,CAACuI,IAAGF,KAAK,UAC7CpM,OAAO,SAAAuO,GAAI,OAAIA,2CASQ,IAARzI,EAAQqQ,EAARrQ,MAClB,OAAO7J,KAAKuS,UAAU1I,sDAGU,IAAAsQ,EAAAna,KAChC,OAAOA,KAAK4S,KAAKjR,IAAI,SAAAwO,GAAC,MAAK,CACzBA,IAAGlS,MAAOkc,EAAKtH,QAAQlR,IAAI,SAAA0O,GAAC,MAAK,CAC/BA,IAAGF,IAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,sDAM1C,MAAQ,CACNnB,WAAYtP,KAAK8Q,SACjB3B,SAAUnP,KAAKqR,6BACfjC,qBAAsBpP,KAAKsR,6BAC3B/B,SAAS,EACTF,eAAgB,+CAyCID,GACtB,OAAOpP,KAAK2X,kBAAkBvI,GAAsB3Q,OAAS,mCAO/CmQ,EAAgBgG,GAC9B,OAAOhG,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAMW,KAAKgW,KAAYhW,KAAK,SAAAwR,GAAI,OAAIA,sCAG1DxB,EAAgBgG,GAC/B,OAAOxV,IAAEgS,QAAQxC,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAM8F,OAAO6Q,iDAWpCwF,EAAKC,GAC7B,MAAM,IAAI3L,MAAM,6EAGEE,EAAgB2B,GAAQ,IAAA+J,EAAAta,KACpCua,EAAcva,KAAK6Q,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWA,GAAyB,IAAfH,EAAKO,QAC1F,QAAK4J,EAAY9b,QAGUuB,KAAK6Q,UAAUjC,EAAgB,SAAAwB,GAAI,OAC7C,IAAfA,EAAKO,OACF4J,EAAY3b,KAAK,SAAA4b,GAAU,OAAIF,EAAKG,mBAAmBrK,EAAMoK,OAGxC/b,OAAS,uDAoBD,IAAAic,EAAA1a,KAClC,OAAOA,KAAK4S,KAAKjR,IAAI,kBAAM+Y,EAAK7H,QAAQlR,IAAI,kBAAM,oDAGvB,IAAAgZ,EAAA3a,KAC3B,OAAOA,KAAK4S,KAAKjR,IAAI,kBAAMgZ,EAAK9H,QAAQlR,IAAI,kBAAM,gEAGXiN,GACvC,OAAO5O,KAAK4a,wBAAwBhM,EAAgB,SAAAwB,GAAI,OAAKA,EAAKG,+DAG/B3B,EAAgB2B,GAAQ,IAAAsK,EAAA7a,KAC3D,OAAOA,KAAK4a,wBAAwBhM,EAAgB,SAAAwB,GAClD,OAAIA,EAAKG,SAAWA,GAIbsK,EAAKlL,iBAAiBkL,EAAKjE,+BAA+BhI,EAAgBwB,6DAI/CxB,EAAgBoG,GAAa,IAAA8F,EAAA9a,KAC3D+W,EAAWnI,EAAeoG,EAAY7E,GAAGlS,MAAM+W,EAAY3E,GAC3D0K,EAAehE,EAASpG,MAAQ,EACtC,OAAO3Q,KAAK4a,wBAAwBhM,EAAgB,SAAAwB,GAAI,OACtD0K,EAAKL,mBAAmBrK,EAAM4E,KAC1B5E,EAAKG,QACNH,EAAKO,OAAS,GACdP,EAAKO,OAASoK,GACbD,EAAKnL,iBAAiBmL,EAAK7D,iCAAiC6D,EAAKtE,YAALrF,MAAA2J,EAAI,CAAalM,GAAbjP,OAAgC,CAClG,CAAC0Q,EAAG0G,EAAS1G,EAAGF,EAAG4G,EAAS5G,EAAGI,OAAQ,KAAME,OAAQ,MACrD,CAACJ,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQwG,EAASxG,OAAQE,OAAQsG,EAAStG,WAC/DL,+DAIgCxB,EAAgBoG,GAAa,IAAAgG,EAAAhb,KAC7D+W,EAAWnI,EAAeoG,EAAY7E,GAAGlS,MAAM+W,EAAY3E,GACjE,OAAOrQ,KAAK4a,wBAAwBhM,EAAgB,SAAAwB,GAAI,OACtD4K,EAAKP,mBAAmBrK,EAAM4E,KAC1B5E,EAAKG,QACNH,EAAKO,MAAQ,IACXqK,EAAKlG,aAAakG,EAAKxE,YAALrF,MAAA6J,EAAI,CAAapM,GAAbjP,OAAgC,CACzD,CAAC0Q,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAOP,EAAKO,MAAQ,MACzCqK,EAAKpL,aAAamH,EAASxG,2DAIJ3B,EAAgBqM,GAC7C,OAAOrM,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAM0D,IAAIsZ,yCA6B9BrM,GAA6B,IAC9C,IAAMsM,EAAU,GAD8BC,EAAA3c,UAAAC,OAAV2c,EAAU,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVF,EAAUE,EAAA,GAAA9c,UAAA8c,GAE9C,QAAAtT,EAAA,EAAAuT,EAAqBH,EAArBpT,EAAAuT,EAAA9c,OAAAuJ,IAA+B,CAA1B,IAAMwT,EAAMD,EAAAvT,GACfkT,EAAQM,EAAOrL,GAAK+K,EAAQM,EAAOrL,IAAM,GACzC+K,EAAQM,EAAOrL,GAAGqL,EAAOnL,GAAKmL,EAEhC,OAAO5M,EAAejN,IAAI,SAAAuO,GAAG,OAAKgL,EAAQhL,EAAIC,GAAblQ,OAAA+M,EAAA,EAAA/M,CAAA,GAC5BiQ,EAD4B,CAE/BjS,MAAOiS,EAAIjS,MAAM0D,IAAI,SAAAyO,GAAI,OAAK8K,EAAQ9K,EAAKD,GAAGC,EAAKC,GAAtBpQ,OAAA+M,EAAA,EAAA/M,CAAA,GACxBmQ,EACA8K,EAAQ9K,EAAKD,GAAGC,EAAKC,IAF8BD,MAFPF,+CAqM3BuL,GACxB,GAAqB,OAAjBA,EAAM1D,OAAiB,CAEzB,GADArX,QAAQC,IAAI,aAAc8a,EAAM1D,OAAQ,OAAQ0D,EAAM3D,SAAU,SAC5D2D,EAAM3M,SAAU,CAClB,GAAqB,QAAjB2M,EAAM1D,OAAkB,CAEL,IAAA2D,EAArB,GADAD,EAAM3M,SAASmJ,QAAQC,MAAO,EAC1BuD,EAAMpD,WACRqD,EAAAD,EAAM3M,SAASsJ,YAAWlQ,KAA1BiJ,MAAAuK,EAAAzb,OAAA6I,EAAA,EAAA7I,CAAkCwb,EAAMpD,gBAErC,IAAqB,SAAjBoD,EAAM1D,OAOf,MAAM,IAAIrJ,MAAJ,mBAAA/O,OAA6B8b,EAAM1D,OAAnC,MAJgB,IAAA4D,EAFtBF,EAAM3M,SAASmJ,QAAQ9M,KAAM,EAEzBsQ,EAAMrD,aACRuD,EAAAF,EAAM3M,SAASuJ,WAAUnQ,KAAzBiJ,MAAAwK,EAAA1b,OAAA6I,EAAA,EAAA7I,CAAiCwb,EAAMrD,aAK3C,OAAOqD,EAAM3M,SAEb,OAAO2M,EAGX,GAAIA,EAAM3D,UAAY,EAGpB,OADA2D,EAAMxD,QAAQE,cAAe,EACzBsD,EAAM3M,UACR2M,EAAM3M,SAASmJ,QAAQE,cAAe,EAC/BsD,EAAM3M,WAEbpO,QAAQC,IAAI,YACL8a,GAGX,IAAKA,EAAMzD,cAAcvZ,OAAQ,CAC/B,GAAIgd,EAAMxD,QAAQ9M,IAEhB,OADAsQ,EAAM1D,OAAS,MACR0D,EACF,GAAIA,EAAMxD,QAAQE,aACvB,OAAIsD,EAAM3M,UACR2M,EAAM3M,SAASmJ,QAAQE,cAAe,EAC/BsD,EAAM3M,WAEbpO,QAAQC,IAAI,YACL8a,GAEJ,GAAIA,EAAMxD,QAAQC,KAEvB,OADAuD,EAAM1D,OAAS,OACR0D,EAGT,MADA/a,QAAQC,IAAI8a,GACN,IAAI/M,MAAM,qEAGlB,OADiB+M,EAAMzD,cAAc4D,QACrBC,eAAeJ,EAAM3D,SAAW,EAAG2D,mDAGtBA,GAE7B,IAFgD,IAAZK,EAAYtd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACxCud,EAAYN,EACTM,EAAUjN,UACfiN,EAAYA,EAAUjN,SAExB,IAAK,IAAIkN,EAAI,EAAIA,EAAIF,GACM,OAArBC,EAAUhE,OADaiE,IAI3BP,EAAQzb,KAAKic,mBAAmBR,GAGlC,OAAOA,WA33BL9M,EACGmC,SAAW,WADdnC,EAEGqC,SAAW,WAFdrC,EAGG6B,QAAU,CAHb7B,EAIGmC,SAJHnC,EAKGqC,UALHrC,EAOGiB,iCAPHjB,EAQImC,SARJnC,EAQoBqC,wBARpBrC,EASIqC,SATJrC,EASoBmC,aATpBnC,EAYG+C,aAAe,eAZlB/C,EAaGiD,cAAgB,gBAbnBjD,EAcG+B,QAAU,CAdb/B,EAcmB+C,aAdnB/C,EAcsCiD,eAdtCjD,EAgBG0C,6BAA+B,qBAhBlC1C,EAiBG4C,8BAAgC,sBAjBnC5C,EAkBGoD,gCAAkC,wBAlBrCpD,EAmBGoH,4BAA8B,oBAnBjCpH,EAoBGsH,6BAA+B,qBApBlCtH,EAqBGwH,8BAAgC,sBArBnCxH,EAuBGuN,yBAA2B,CAvB9BvN,EAuBoC0C,6BAvBpC1C,EAuBuEoD,iCAvBvEpD,EAwBGwN,wBAA0B,CAxB7BxN,EAwBmC0C,6BAxBnC1C,EAwBsE4C,+BAxBtE5C,EAyBGyN,uBAAyB,CAzB5BzN,EAyBkCoH,4BAzBlCpH,EAyBoEsH,8BAzBpEtH,EA0BG0N,+CA1BH1N,EA0BuCyN,yBA1BvCzN,EA0BoEwH,gCA1BpExH,EA4BGiE,KAAOyI,MAAM1d,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA5BpDwL,EA6BGkE,QAAUwI,MAAM1d,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA7BvDwL,EA8BGgL,cA9BHhL,EA8BwBiE,KAAKjR,IAAI,SAAAwO,GAAC,OA9BlCxB,EA8B2CkE,QAAQlR,IAAI,SAAA0O,GAAC,SAAA1Q,OACvD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK0Q,IAD6B1Q,OACxB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKwQ,QA/B1DxB,EAgCG+K,2CAhCH/K,EAiCImC,SAAW,oBAjCfnC,EAkCIqC,SAAW,SAlCfrC,EAoCG0D,qCACFjT,IAAE4J,UAAU5J,IAAEgS,QArCfzC,EAqC4BiE,KAAKjR,IAAI,SAAAwO,GAAC,OArCtCxB,EAqC+CkE,QAAQlR,IAAI,SAAA0O,GAAC,MAC5D,IAAA1Q,OAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK0Q,IAA9B1Q,OAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKwQ,IAAM,CAACE,IAAGF,aACzEmM,GAAM,CAAC,CAAC9M,OAvCNb,EAuCmBmC,WACrByL,GAAM,CAAC,CAAC/M,OAxCNb,EAwCmBqC,aAxCnBrC,EA0CGoL,0BAA4B3a,IAAE4J,UAAU/I,OAAOuc,KA1ClD7N,EA0C4D0D,uBAAuBoK,OAAO9a,IAAI,SAACrE,EAAO6F,GAAR,MAChG,CAAC7F,EAAOof,OAAOC,aAAaxZ,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,QA3CpDwL,EA4CG8D,4BAA8BrT,IAAE4J,UAAU/I,OAAOuc,KA5CpD7N,EA4C8D0D,uBAAuBoK,OAAO9a,IAAI,SAACrE,EAAO6F,GAAR,MAClG,CAACuZ,OAAOC,aAAaxZ,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,IA7C7CwL,EA6CsE0D,sBAAsB/U,OA7C5FqR,EA+CGiO,kBAAoBxd,IAAE4J,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGrH,IACrD,SAAAgP,GAAK,MAAI,CAACA,EAAOvR,IAAE4J,UAAU,CAAC,KAhD5B2F,EAgDuCmC,SAhDvCnC,EAgDsDqC,UAAUrP,IAChE,SAAA4O,GAAM,MAAI,CAACA,EAAD,GAAA5Q,OAAYgR,EAAZ,KAAAhR,OAAqB4Q,WAjD/B5B,EAkDGmE,0BAA4B1T,IAAE4J,UAAU5J,IAAEgS,QAAQnR,OAAO4c,QAlD5DlO,EAkDyEiO,mBAAmBjb,IAC9F,SAAAmb,GAAA,IAAAC,EAAA9c,OAAAqM,EAAA,EAAArM,CAAA6c,EAAA,GAAEE,EAAFD,EAAA,GAAYE,EAAZF,EAAA,UAA2B9c,OAAO4c,QAAQI,GAAWtb,IACnD,SAAAub,GAAA,IAAAC,EAAAld,OAAAqM,EAAA,EAAArM,CAAAid,EAAA,GAAEE,EAAFD,EAAA,SAA2B,CAA3BA,EAAA,GAAsC,CAACxM,MAAO0M,SAASL,GAAWzM,OAAsB,SAAd6M,EAAuB,KAAOA,UApDxGzO,EAqDG2O,kCAAoCle,IAAE4J,UAAU5J,IAAEgS,QAAQnR,OAAO4c,QArDpElO,EAqDiFiO,mBAAmBjb,IACtG,SAAA4b,GAAA,IAAIN,EAAJhd,OAAAqM,EAAA,EAAArM,CAAAsd,EAAA,aAAmBtd,OAAO4c,QAAQI,GAAWtb,IAC3C,SAAA6b,GAAA,OAAAvd,OAAAqM,EAAA,EAAArM,CAAAud,EAAA,WAA8B7b,IAAI,SAACgR,EAAUxP,GAAX,MAAqB,CAACwP,EAAU+J,OAAOC,aAAa,GAAKxZ,OAvD3FwL,EAwDG+D,8BAAgCtT,IAAE4J,UAAU/I,OAAO4c,QAxDtDlO,EAwDmEiO,mBAAmBjb,IACxF,SAAA8b,GAAA,IAAAC,EAAAzd,OAAAqM,EAAA,EAAArM,CAAAwd,EAAA,GAAET,EAAFU,EAAA,GAAYT,EAAZS,EAAA,SAA2B,CAACV,EAAU5d,IAAE4J,UAAU/I,OAAO4c,QAAQI,GAAWtb,IAC1E,SAAAgc,GAAA,IAAAC,EAAA3d,OAAAqM,EAAA,EAAArM,CAAA0d,EAAA,GAAEP,EAAFQ,EAAA,GAAajL,EAAbiL,EAAA,SAA2B,CAACR,EA1D5BzO,EA0D4C2O,kCAAkC3K,WA1D9EhE,EA2DGqE,gCAAkC5T,IAAE4J,UAAU/I,OAAO4c,QA3DxDlO,EA2DqE2O,mCAAmC3b,IAC1G,SAAAkc,GAAA,IAAAC,EAAA7d,OAAAqM,EAAA,EAAArM,CAAA4d,EAAA,GAAElL,EAAFmL,EAAA,SAAoC,CAApCA,EAAA,GA5DEnP,EA4D4DmE,0BAA0BH,WAm0BtFoL,kMACsB3D,EAAKC,GAC7B,OACEpJ,KAAK+M,IAAI5D,EAAI/J,EAAIgK,EAAIhK,IAAM,GACxBY,KAAK+M,IAAI5D,EAAIjK,EAAIkK,EAAIlK,IAAM,SAJVxB,GAQ1BA,EAAKsP,QAAUF,MAETG,kMACsB9D,EAAKC,GAC7B,OACEpJ,KAAK+M,IAAI5D,EAAI/J,EAAIgK,EAAIhK,IAAM,GACxBY,KAAK+M,IAAI5D,EAAIjK,EAAIkK,EAAIlK,IAAM,IAK5BiK,EAAI/J,IAAMgK,EAAIhK,IAEP+J,EAAI/J,EAAI,IAAM,EAChBgK,EAAIlK,GAAKiK,EAAIjK,EAEbkK,EAAIlK,GAAKiK,EAAIjK,WAdJxB,GAkBtBA,EAAKwP,IAAMD,EAEXvP,EAAKyP,WAAa,CAACzP,EAAKsP,QAAStP,EAAKwP,KAMvBxP,iCCn6BT0P,2LACK,IAAAte,EAAAC,KAAA4L,EAIH5L,KAAKyL,MAFPsC,EAFKnC,EAELmC,UAAWuQ,EAFN1S,EAEM0S,UAAWC,EAFjB3S,EAEiB2S,SAAUC,EAF3B5S,EAE2B4S,gBAAiBC,EAF5C7S,EAE4C6S,eAAgBC,EAF5D9S,EAE4D8S,MAAOC,EAFnE/S,EAEmE+S,OAAQlJ,EAF3E7J,EAE2E6J,SAAUmJ,EAFrFhT,EAEqFgT,SAAUC,EAF/FjT,EAE+FiT,SACpGxgB,EAHKuN,EAGLvN,SAAUuQ,EAHLhD,EAGKgD,eAHLkQ,EAK4BzgB,EAA5BL,MAAQG,EALR2gB,EAKQ3gB,OAAQ6I,EALhB8X,EAKgB9X,QAkBvB,OAhBA+G,EAAYgR,IAAW,QAAS,aAAc,CAC5CC,cAAeN,EACfO,eAAgBN,EAChBO,WAAYzJ,IAAa6I,GAAaC,GACtCY,aAAcP,EACdC,WACAO,sBAAkC,KAAXjhB,EACvBkhB,qBAAiC,WAAXlhB,EACtBmhB,qBAAiC,WAAXnhB,EACtBohB,oBAAgC,UAAXphB,EACrBqhB,kBAAmB,CAAC,UAAW,SAAU,eAAe5Z,SAASoB,GACjEyY,iBAA8B,YAAZzY,EAClB0Y,gBAA6B,WAAZ1Y,EACjB2Y,qBAAkC,gBAAZ3Y,GACrB+G,GAGDd,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWA,EAAW6R,QAAShB,GACjChQ,EAAejN,IAAI,SAAAuO,GAAG,OACrBjD,EAAAC,EAAA/P,cAAA,OAAKmQ,IAAG,OAAA3N,OAASuQ,EAAIC,GAAKpC,UAAW,OAClCmC,EAAIjS,MAAM0D,IAAI,SAAAyO,GAAI,OACjBnD,EAAAC,EAAA/P,cAAC0iB,EAAD,CACEvS,IAAG,GAAA3N,OAAKyQ,EAAKC,EAAV,KAAA1Q,OAAeyQ,EAAKD,GACvBC,KAAMA,EACNkO,UAAWA,GAAcC,GAAYE,EAAerO,GACpDtI,UAAW0W,EAAgBpO,GAC3BmO,SAAUE,EAAerO,GACzB/R,SAAUA,EACVoX,SAAU1V,EAAK0L,MAAMgK,SACrBqK,KAAM/f,EAAK0L,MAAMqU,oBArCCxR,cAgElC+P,EAAoB9P,aAAe,CACjCR,UAAW,GACX2Q,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVkB,UAAU,OAGNC,6MACJvK,SAAW,WACLxO,EAAKwE,MAAM3D,WAAab,EAAKwE,MAAMgK,SACrCxO,EAAKwE,MAAMgK,SAASxO,EAAKwE,MAAM2E,MACtBnJ,EAAKwE,MAAM8S,UAAYtX,EAAKwE,MAAMqU,MAC3C7Y,EAAKwE,MAAMqU,gFAIN,IAAAnS,EACoF3N,KAAKyL,MAA3F2E,EADEzC,EACFyC,KAAMkO,EADJ3Q,EACI2Q,UAAWxW,EADf6F,EACe7F,UAAWyW,EAD1B5Q,EAC0B4Q,SAA6BvX,EADvD2G,EACoCtP,SAAWL,MAAQgJ,QAAWyO,EADlE9H,EACkE8H,SAAUqK,EAD5EnS,EAC4EmS,KAC7EG,EACJ,CAAC,UAAW,SAAU,eAAera,SAASoB,IAC3CoJ,EAAKO,MAAQ,GACbP,EAAKO,MAAO,EACbP,EAAKO,MAAQ,KACjB,OACE1D,EAAAC,EAAA/P,cAAA,OACEmQ,IAAG,OAAA3N,OAASyQ,EAAKC,EAAd,KAAA1Q,OAAmByQ,EAAKD,GAC3BpC,UAAWgR,IAAW,OAAD,SAAApf,OAAkByQ,EAAKO,OAAS,CAAC7I,YAAWyW,aACjEqB,SAAWnK,GAAY3N,GAAegY,GAAQvB,IAAcD,EAAYte,KAAKyV,SAAW,MAExFxI,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,QAAS,YAClC9R,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,QAAS,YAClC9R,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,QAAS,YACjC3O,EAAKG,OACJtD,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,SAAD,UAAApf,OAAqByQ,EAAKG,UACjD0P,GAEc,IAAf7P,EAAKO,MACP1D,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,QAAS,aAClCkB,aA/BU3R,aAkD5B0R,EAAczR,aAAe,CAC3B+P,WAAW,EACXxW,WAAW,EACXyW,UAAU,GAGGF,QC/HF6B,GAAY,SAACC,EAAUC,GAClC,OAAOC,GAAaF,EAAbE,CAAuBD,IAGnBC,GAAe,SAAAF,GAC1B,GAAIA,IAAaxR,EAAKsP,QACpB,OAAOqC,GACF,GAAIH,IAAaxR,EAAKwP,IAC3B,OAAOoC,GAGT,MAAM,IAAI7R,MAAJ,8BAAA/O,OAAwCwgB,EAAWA,EAASjZ,YAAYpJ,KAAOqiB,EAA/E,OAGKG,GAAsB,SAAAF,GACjC,MAAQ,CACN/P,EArBoB,IAqBjB+P,EAAM/P,EACTF,EAtBoB,IAsBjBiQ,EAAMjQ,IAIAoQ,GAAkB,SAAAH,GAC7B,MAAQ,CACN/P,EA5BoB,IA4BjB+P,EAAM/P,EACTF,EA7BoB,KA6BhBiQ,EAAMjQ,GAAKiQ,EAAM/P,EAAI,IAAM,EAAI,KAAQ,QC3BzCmQ,oLACI,IACC7P,EAAS3Q,KAAKyL,MAAdkF,MACP,OAAKA,EAIJ1D,EAAAC,EAAA/P,cAAA,KAAGsjB,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA0C+gB,GAA1C,MACTzT,EAAAC,EAAA/P,cAAA,QACEwjB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAnhB,OAAK+gB,GAAL,QAChB/P,IARG,YAJ0BoQ,iBAsBjCC,oLACI,IACArQ,EAAS3Q,KAAKyL,MAAdkF,MACN,OAAKA,EAIJ1D,EAAAC,EAAA/P,cAAA,KAAGsjB,UAAS,oBACTxT,EAAAC,EAAA/P,cAAA,UAAQ8jB,EAAGP,GAA2BQ,KAAM,OAAQC,OAAQ,OAAQC,YAAa,IACjFnU,EAAAC,EAAA/P,cAAA,QACEwjB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAnhB,OAAK+gB,GAAL,QAChB/P,IATG,YAJsBoQ,iBAuB7BM,oLACI,IACA1Q,EAAS3Q,KAAKyL,MAAdkF,MACN,OAAKA,EAIJ1D,EAAAC,EAAA/P,cAAA,KAAGsjB,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAAyC+gB,GAAzC,MACTzT,EAAAC,EAAA/P,cAAA,QACEwjB,iBAAkB,UAClBC,WAAY,SACZO,OAAQ,OACRC,YAAaV,EACbY,WAAY,SACZT,MAAO,CAACC,SAAQ,GAAAnhB,OAAK+gB,GAAL,QAChB/P,IAXG,YAJuBoQ,iBAyB9BQ,oLAOI,IAAA3V,EACe5L,KAAKyL,MAApBkF,EADA/E,EACA+E,MAAOjR,EADPkM,EACOlM,KACP8hB,EAAYxhB,KAAKkH,YAAYua,aAAa/hB,GAChD,OAAK8hB,EAIJvU,EAAAC,EAAA/P,cAACqkB,EAAD,CAAW7Q,MAAOA,IAHX,YAXiBoQ,iBAAvBQ,GACEE,aAAe,CACnBC,cAAelB,GACfmB,OAAUX,GACVY,QAAWP,IAqBAE,UC/FTM,oLACI,IAAAjW,EACkC5L,KAAKyL,MAAvC3N,EADA8N,EACA9N,KAAM0M,EADNoB,EACMpB,KAAMsX,EADZlW,EACYkW,WAAYC,EADxBnW,EACwBmW,OAC/B,OACE9U,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGjB,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,SAAwB2iB,UAAW,cAAA9gB,OAC3B+gB,GAD2B,KAAA/gB,OACD+gB,GADC,cAAA/gB,OFJpB,GEIoB,KAAAA,OFJpB,GEIoB,kBAAAA,QAGzBmiB,EAAWzR,EAAI,EAAI0R,EAAO1R,EAHD,KAAA1Q,QAGOmiB,EAAW3R,EAAI,EAAI4R,EAAO5R,EAHjC,MAIvCjB,KAAK,MAAO1E,GACbyC,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACHmP,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAS,UAAAriB,OAAY7B,EAAZ,SAAyBsjB,YFZjB,GEY0DD,OAAQ,SACxFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAS,UAAAriB,OAAY7B,EAAZ,SAAyBojB,KAAM,WAE/CjU,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACHmP,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAS,UAAAriB,OAAY7B,EAAZ,SAAyBsjB,YFhBjB,GEgB0DD,OAAQ,SACxFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAS,UAAAriB,OAAY7B,EAAZ,SAAyBojB,KAAM,mBAhBrBH,iBA8B5BkB,oLAII,IAAAtU,EACyB3N,KAAKyL,MAA9B3N,EADA6P,EACA7P,KAAMokB,EADNvU,EACMuU,OAAQC,EADdxU,EACcwU,QACrB,OACElV,EAAAC,EAAA/P,cAAA,OACG6kB,UAAS,UAAAriB,OAAY7B,EAAZ,KAAA6B,OAAoBuiB,GAC7BzB,UAAW0B,EAAUniB,KAAKkH,YAAYkb,qBAAkB1jB,WATxCqiB,iBAAlBkB,GACEG,qCACS1B,eAA0BA,QAmB3C,IAAM2B,GAAc,SAACtU,EAAD1B,GAA0D,IAA7C7B,EAA6C6B,EAA7C7B,KAAMsX,EAAuCzV,EAAvCyV,WAAuCQ,EAAAjW,EAA3B0V,cAA2B,IAAAO,EAAlB,CAACjS,EAAG,EAAGF,EAAG,GAAQmS,EACtEC,EADsE,SAAAC,GAAA,SAAAD,IAAA,OAAAtiB,OAAAC,EAAA,EAAAD,CAAAD,KAAAuiB,GAAAtiB,OAAAwiB,EAAA,EAAAxiB,CAAAD,KAAAC,OAAAyiB,EAAA,EAAAziB,CAAAsiB,GAAApR,MAAAnR,KAAAxB,YAAA,OAAAyB,OAAA0iB,EAAA,EAAA1iB,CAAAsiB,EAAAC,GAAAviB,OAAA2iB,EAAA,EAAA3iB,CAAAsiB,EAAA,EAAAjV,IAAA,SAAAhQ,MAAA,WAGxE,OACE2P,EAAAC,EAAA/P,cAAC0lB,GAAD,CACE/kB,KAAMiQ,EACNvD,KAAMA,EACNsX,WAAYA,EACZC,OAAQA,QAR4DQ,EAAA,CAC3CxB,iBAYjCwB,EAAmBO,YAAnB,GAAAnjB,OAAoCoO,EAApC,cAb4E,IAetEgV,EAfsE,SAAAC,GAAA,SAAAD,IAAA,OAAA9iB,OAAAC,EAAA,EAAAD,CAAAD,KAAA+iB,GAAA9iB,OAAAwiB,EAAA,EAAAxiB,CAAAD,KAAAC,OAAAyiB,EAAA,EAAAziB,CAAA8iB,GAAA5R,MAAAnR,KAAAxB,YAAA,OAAAyB,OAAA0iB,EAAA,EAAA1iB,CAAA8iB,EAAAC,GAAA/iB,OAAA2iB,EAAA,EAAA3iB,CAAA8iB,EAAA,EAAAzV,IAAA,SAAAhQ,MAAA,WAkBjE,IAAA2lB,EACmBjjB,KAAKyL,MAAxByW,EADAe,EACAf,OAAQC,EADRc,EACQd,QACf,OACElV,EAAAC,EAAA/P,cAAC+lB,GAAD,CACEplB,KAAMiQ,EACNmU,OAAQA,EACRC,QAASA,QAxB2DY,EAAA,CAerDhC,iBAgBvB,OAhBMgC,EACGI,WAAaZ,EAatBQ,EAASD,YAAc/U,EAEhBgV,GAGHK,GAAYf,GAAY,YAAa,CACzC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,kWACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,KACxB4R,OAAQ,CAAC1R,EAAG,EAAGF,GAAI,MAGfmT,GAAYjB,GAAY,YAAa,CACzC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,qTACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBoT,GAAclB,GAAY,cAAe,CAC7C7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,0EACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBqT,GAAmBnB,GAAY,mBAAoB,CACvD7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,o0BACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBsT,GAAWpB,GAAY,WAAY,CACvC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,glBACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBuT,GAAcrB,GAAY,cAAe,CAC7C7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,saACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBwT,GAAWtB,GAAY,WAAY,CACvC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,02BACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpByT,GAAWvB,GAAY,WAAY,CACvC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,+UACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpB0T,GAAYxB,GAAY,YAAa,CACzC7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,qQACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpB2T,GAAyBzB,GAAY,yBAA0B,CACnE7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,4rBACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpB4T,GAAyB1B,GAAY,yBAA0B,CACnE7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,2pCACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpB6T,GAAoB3B,GAAY,oBAAqB,CACzD7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,2gDACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,KACxB4R,OAAQ,CAAC1R,EAAG,EAAGF,EAAG,OAGd8T,GAAuB5B,GAAY,uBAAwB,CAC/D7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,+wDACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpB+T,GAAoB7B,GAAY,oBAAqB,CACzD7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,4kDACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBgU,GAA0B9B,GAAY,0BAA2B,CACrE7X,KAAMyC,EAAAC,EAAA/P,cAAA,SACL8P,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,gJACRpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,2IACRpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,2/FAETvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,KACxB4R,OAAQ,CAAC1R,EAAG,GAAIF,EAAG,MAGfiU,GAAwB/B,GAAY,wBAAyB,CACjE7X,KAAMyC,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAE,83DACdvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBkU,GAAsBhC,GAAY,sBAAuB,CAC7D7X,KAAMyC,EAAAC,EAAA/P,cAAA,SACJ8P,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,6RACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,2PACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,uMACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,mRACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,uMACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,oxDAEXvB,WAAY,CAACzR,EAAG,IAAKF,EAAG,OAGpBmU,oLAqBI,IAAAC,EAC0BvkB,KAAKyL,MAA/BoV,EADA0D,EACA1D,MAAOqB,EADPqC,EACOrC,OAAQC,EADfoC,EACepC,QACfqC,EAAaxkB,KAAKkH,YAAYud,cAAc5D,GACnD,OACE5T,EAAAC,EAAA/P,cAACqnB,EAAD,CAAYtC,OAAQA,EAAQC,QAASA,WAzBtBpB,iBAAduD,GACEG,cAAgB,CACpBC,KAAQtB,GACRuB,KAAQrB,GACRsB,OAAUrB,GACVsB,YAAerB,GACfsB,IAAOrB,GACPsB,OAAUrB,GACVsB,IAAOrB,GACPsB,IAAOrB,GACP3hB,KAAQ4hB,GACRqB,sBAAuBpB,GACvBqB,qBAAsBpB,GACtBqB,gBAAiBpB,GACjBqB,mBAAoBpB,GACpBqB,gBAAiBpB,GACjBqB,sBAAuBpB,GACvBqB,oBAAqBpB,GACrBqB,kBAAmBpB,QAkBjBqB,oLAEH,OAAOzlB,OAAO0lB,OAAOrB,GAAMG,eACxB9iB,IAAI,SAAA6iB,GAAU,OAAIvX,EAAAC,EAAA/P,cAACqnB,EAAWrB,WAAZ,CAAuB7V,IAAKkX,EAAW1B,aAAe0B,EAAW1mB,gBAH1DijB,iBAM/BuD,GAAMsB,YAAcF,GAELpB,UChOTuB,oLAoCI,IAAAja,EACe5L,KAAKyL,MAApB3N,EADA8N,EACA9N,KAAMgoB,EADNla,EACMka,MACb,OACE7Y,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGjB,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,WAAyBiQ,UAAW,eACtC+X,EAAMC,QAET9Y,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBiQ,UAAW,UACjC+X,EAAME,QAET/Y,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBiQ,UAAW,UACjC+X,EAAMG,QAEThZ,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBiQ,UAAW,UACjC+X,EAAMI,QAETjZ,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBiQ,UAAW,UACjC+X,EAAMK,QAETlZ,EAAAC,EAAA/P,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBiQ,UAAW,UACjC+X,EAAMM,gBAxDiBrF,iBAA5B8E,GACGQ,cACLpZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE+jB,KAAM,cACNoF,MHXgB,IGYhBC,OHZgB,MGclBtZ,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,SAAUsV,EAAC,QAAA1jB,OHdV,IGcU,KAAAA,OHdV,IGcU,MAAAA,OHdV,IGcU,OAAAA,OHZP,EGYO,KAAAA,OHZP,EGYO,KAAAA,OAAiI+gB,GAAjI,KAAA/gB,OAAmL+gB,GAAnL,MAAA/gB,OAAsO+gB,GAAtO,QAR5BmF,GAWGW,iBACLvZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE+jB,KAAM,cACNoF,MHrBgB,IGsBhBC,OHtBgB,MGwBlBtZ,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,SAAUsV,EAAC,eAAA1jB,OACrB,WACH,IAAM8mB,EAAa,EAAbA,EAAmB,EACzB,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpB9kB,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAI8N,KAAKyV,GAAK,IACnC/kB,IAAI,SAAAglB,GACH,IACMtW,EAAIoW,EADK/F,GACMzP,KAAK2V,IAAID,GACxBxW,EAAIsW,EAFK/F,GAEMzP,KAAK4V,IAAIF,GAC9B,SAAAhnB,OAAU0Q,EAAV,KAAA1Q,OAAewQ,KAEhBjB,KAAK,KAVL,GADqB,mBAAAvP,OAatB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGmnB,UAAUnlB,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAI8N,KAAKyV,GAAK,IAAG/kB,IAAI,SAAAglB,GAAK,SAAAhnB,OAAO,GAAAsR,KAAK2V,IAAID,GAA4D,IAAM,EAAlF,KAAAhnB,OAAuF,GAAAsR,KAAK4V,IAAIF,GAA4D,IAAM,KAAKhnB,OAAO,KAbpO,kBAyDlC,IAAMonB,GAAwB,SAAChZ,EAAWjQ,EAAMgoB,GAAU,IAClDkB,EADkD,SAAAC,GAAA,SAAAD,IAAA,OAAA/mB,OAAAC,EAAA,EAAAD,CAAAD,KAAAgnB,GAAA/mB,OAAAwiB,EAAA,EAAAxiB,CAAAD,KAAAC,OAAAyiB,EAAA,EAAAziB,CAAA+mB,GAAA7V,MAAAnR,KAAAxB,YAAA,OAAAyB,OAAA0iB,EAAA,EAAA1iB,CAAA+mB,EAAAC,GAAAhnB,OAAA2iB,EAAA,EAAA3iB,CAAA+mB,EAAA,EAAA1Z,IAAA,SAAAhQ,MAAA,WAGpD,OACE2P,EAAAC,EAAA/P,cAAC+pB,GAAD,CAAqBppB,KAAMA,EAAMgoB,MAAOA,QAJUkB,EAAA,CACvBjG,iBASjC,OAFAiG,EAAmBlE,YAAc/U,EAE1BiZ,GAGHG,GAA0BJ,GAAsB,0BAA2B,WAAY,CAC3FhB,OAAQF,GAAoBQ,cAC5BL,OACE/Y,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,cACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OHnGY,EGmGZ,KAAAA,OHnGY,EGmGZ,OAGbsmB,OACEhZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,SACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OH5GU,EG4GV,KAAAA,OH5GU,EG4GV,OAEXsN,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,OACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,QAIfwF,OACEjZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,SACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,OAEXzT,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,OACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,QAIfyF,OACElZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,SACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,OAEXzT,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,OACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,QAIf0F,OACEnZ,EAAAC,EAAA/P,cAAA,SACE8P,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,SACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,OAEXzT,EAAAC,EAAA/P,cAAA,QACE4Q,UAAW,OACXuY,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9gB,OAAe+gB,GAAf,KAAA/gB,OAA4C+gB,GAA5C,UAMX0G,GAA2BL,GAAsB,2BAA4B,YAAa,CAC9FhB,OAAQF,GAAoBQ,cAC5BL,OACE/Y,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,OAAQ0S,UAAW,cAAe4C,EAAG,kiKAExD4C,OACEhZ,EAAAC,EAAA/P,cAAA,KAAG4Q,UAAW,OAAQ0S,UAAW,oCAC/BxT,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,+IACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,wIACTpW,EAAAC,EAAA/P,cAAA,QAAMkmB,EAAG,g+FAGb6C,OACEjZ,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,OAAQ0S,UAAW,gCAAiC4C,EAAG,s3BAE1E8C,OACElZ,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,OAAQ0S,UAAW,oCAAqC4C,EAAG,s0BAE9E+C,OACEnZ,EAAAC,EAAA/P,cAAA,QAAM4Q,UAAW,OAAQ0S,UAAW,8BAA+B4C,EAAG,khBAIpEgE,oLAOH,OAAOpnB,OAAO0lB,OAAO3lB,KAAKkH,YAAYogB,yBACnC3lB,IAAI,SAAA4lB,GAAoB,OACtBta,EAAAC,EAAA/P,cAACoqB,EAAD,CAAsBja,IAAKia,EAAqBzE,aAAeyE,EAAqBzpB,gBAT9DijB,iBAAxBsG,GACGC,wBAA0B,CAC/BE,SAAYL,GACZM,UAAaL,QAUXM,8MAGLjM,MAAQ,CACNkM,cAAe5nB,EAAK0L,MAAMkF,MAC1BiX,aAAc7nB,EAAK0L,MAAMkF,SAG3BkX,cAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGlmB,IAAI,SAAAqa,GAAC,OAAI8L,IAAMC,gGAU3BC,EAAWC,EAAWC,GAAU,IAAAjhB,EAAAjH,KAC7CA,KAAKyL,MAAMsU,UAAY/f,KAAKyb,MAAMmM,eAAiB5nB,KAAKyb,MAAMkM,eAChEhgB,WAAW,WACTV,EAAK4gB,cACF9jB,OAAO,SAACokB,EAAcnM,GAAf,OACL/U,EAAKwU,MAAMkM,eAAiB3L,GAAKA,GAAK/U,EAAKwU,MAAMmM,cAC9C3gB,EAAKwU,MAAMmM,cAAgB5L,GAAKA,GAAK/U,EAAKwU,MAAMkM,gBAErD5jB,OAAO,SAAAokB,GAAY,OAAIA,EAAaC,UACpCzmB,IAAI,SAAAwmB,GAAY,OAAIA,EAAaC,QAAQC,kBAC3C,oCAIC,IAAA3f,EAAA1I,KAAA2N,EAIF3N,KAAKyL,MAFR4E,EAFK1C,EAEL0C,EAAGF,EAFExC,EAEFwC,EAAGrI,EAFD6F,EAEC7F,UAAWyW,EAFZ5Q,EAEY4Q,SAAU5N,EAFtBhD,EAEsBgD,MAAOJ,EAF7B5C,EAE6B4C,OAAQqP,EAFrCjS,EAEqCiS,QAASG,EAF9CpS,EAE8CoS,SAAUuI,EAFxD3a,EAEwD2a,aAAcnI,EAFtExS,EAEsEwS,SAFtEoI,EAAA5a,EAGJ3P,MAHIwqB,EAAAD,EAGItqB,aAHJ,IAAAuqB,EAGY,WAHZA,EAAAC,EAAAF,EAGwBrqB,cAHxB,IAAAuqB,EAGiC,OAHjCA,EAAAC,EAAAH,EAGyC1hB,sBAHzC,IAAA6hB,KAGgE1hB,EAHhEuhB,EAGgEvhB,QAHhE2hB,EAK+B3oB,KAAKyb,MAApCkM,EALAgB,EAKAhB,cAAeC,EALfe,EAKef,aAChBgB,GAAqBN,EAAa1iB,SAAS+I,EAAKmC,WAAawX,EAAa1iB,SAAS+I,EAAKqC,UACxF6X,GAAqBD,EACpB1I,EAAYQ,GAAoBP,EAAU,CAAC9P,IAAGF,MACpD,OACClD,EAAAC,EAAA/P,cAAA,KAAGsjB,UAAS,aAAA9gB,OAAeugB,EAAU7P,EAAzB,KAAA1Q,OAA8BugB,EAAU/P,EAAxC,MACTlD,EAAAC,EAAA/P,cAAA,KAAG4Q,UAAW,iBACXgS,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpe,IAAI,SAAAqa,GAAC,OAChC/O,EAAAC,EAAA/P,cAAA,OAAKmQ,IAAK0O,EAAGgG,UAAS,SAAAriB,OAAW1B,EAAX,KAAA0B,OAAoBqc,GAAK8M,QAAS9M,GAAKrL,EAAQ,EAAI,GACvE1D,EAAAC,EAAA/P,cAAA,WACE4rB,IAAKrgB,EAAKmf,cAAc7L,GACxBgN,cAAe,UACfC,cAAe,MACfvpB,KAAM,YACN/B,KAAMgqB,EAAgB3L,EAAI,EAAI,EAC9BvP,GAAImb,EAAe5L,EAAI,EAAI,EAC3BkN,IAAK,OACLC,YAAa,EACbjI,KAAM,cAGL,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGnd,OAAO,SAAAiY,GAAC,OAAIA,GAAKrL,IAAOhP,IAAI,SAAAqa,GAAC,OAClD/O,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,CAAUZ,IAAK0O,GACb/O,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAS,SAAAriB,OAAW1B,EAAX,KAAA0B,OAAoBqc,KACjCzL,IAAW5B,EAAKmC,SAAW7D,EAAAC,EAAA/P,cAACisB,GAAD,CAAOvI,MAAO3iB,EAAQgkB,OAAQ,QAASC,QAAStb,GAAkB+hB,IAAwB,KACrHrY,IAAW5B,EAAKqC,SAAW/D,EAAAC,EAAA/P,cAACisB,GAAD,CAAOvI,MAAO3iB,EAAQgkB,OAAQ,QAASC,QAAStb,GAAkBgiB,IAAwB,QAGzH7hB,EAAUiG,EAAAC,EAAA/P,cAACksB,GAAD,CAAgB1Y,MAAOA,EAAOjR,KAAMsH,IAAc,MAE/DiG,EAAAC,EAAA/P,cAAA,OACE6kB,UAAS,SAAAriB,OAAW1B,EAAX,WACT8P,UAAWgR,IAAW,CAACjX,YAAWyW,aAClCqB,QAASA,wDA5DcnU,EAAOgQ,GACpC,OAAIhQ,EAAMsU,UAAYtU,EAAMkF,QAAU8K,EAAM9K,MACnC,CAACgX,cAAelM,EAAMmM,aAAcA,aAAcnc,EAAMkF,OAG1D,YAfQoQ,iBAAb2G,GACG9B,YAAcyB,GA0FvBK,GAAKnZ,aAAe,CAClBwR,UAAU,GAGG2H,UC3ST4B,4LAQK,IAAAzS,EAC6F7W,KAAKkH,YAAlGqiB,EADA1S,EACA0S,gBAAiBC,EADjB3S,EACiB2S,YAAaC,EAD9B5S,EAC8B4S,aAAcC,EAD5C7S,EAC4C6S,iBAAkBC,EAD9D9S,EAC8D8S,aAAcC,EAD5E/S,EAC4E+S,cAEnF,OACE3c,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAA,QACE4D,GAAI,kBACJsiB,EAAG,qOACH5C,UAAW,cAAA9gB,OACI+gB,GADJ,KAAA/gB,OAC8B+gB,GAD9B,cAAA/gB,OJfO,GIiBmB8pB,EAF1B,KAAA9pB,OJfO,GIiB8D8pB,EAFrE,kBAAA9pB,QAGK4pB,EAAgBlZ,EAAI,EAAImZ,EAAYnZ,EAHzC,KAAA1Q,QAG+C4pB,EAAgBpZ,EAAI,EAAIqZ,EAAYrZ,EAHnF,MAITjB,KAAK,OAETjC,EAAAC,EAAA/P,cAAA,QACE4D,GAAI,mBACJsiB,EAAG,yjBACH5C,UAAW,cAAA9gB,OACI+gB,GADJ,KAAA/gB,OAC8B+gB,GAD9B,cAAA/gB,OJxBO,GI0BmBiqB,EAF1B,KAAAjqB,OJxBO,GI0B+DiqB,EAFtE,gCAAAjqB,QAIK+pB,EAAiBrZ,EAAI,EAAIsZ,EAAatZ,EAJ3C,KAAA1Q,QAIiD+pB,EAAiBvZ,EAAI,EAAIwZ,EAAaxZ,EAJvF,MAKTjB,KAAK,OAETjC,EAAAC,EAAA/P,cAAA,KAAG4D,GAAI,oBACLkM,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,mBAAoBZ,YJlCd,GIkCuDD,OAAQ,SACrFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,mBAAoBd,KAAM,WAE5CjU,EAAAC,EAAA/P,cAAA,KAAG4D,GAAI,oBACLkM,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,mBAAoBZ,YJtCd,GIsCuDD,OAAQ,SACrFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,mBAAoBd,KAAM,WAE5CjU,EAAAC,EAAA/P,cAAA,KAAG4D,GAAI,qBACLkM,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,oBAAqBZ,YJ1Cf,GI0CwDD,OAAQ,SACtFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,oBAAqBd,KAAM,WAE7CjU,EAAAC,EAAA/P,cAAA,KAAG4D,GAAI,qBACLkM,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,oBAAqBZ,YJ9Cf,GI8CwDD,OAAQ,SACtFlU,EAAAC,EAAA/P,cAAA,OAAK6kB,UAAW,oBAAqBd,KAAM,mBA9CvBH,kBAAxBuI,GACGC,gBAAkB,CAAClZ,EAAG,OAAQF,EAAG,QADpCmZ,GAEGE,YAAc,CAACnZ,GAAI,GAAIF,GAAI,IAF9BmZ,GAGGG,aAAe,IAHlBH,GAIGI,iBAAmB,CAACrZ,EAAG,OAAQF,EAAG,QAJrCmZ,GAKGK,aAAe,CAACtZ,EAAG,GAAIF,GAAI,IAL9BmZ,GAMGM,cAAgB,UA+CnBC,oLAgBK,IAAAC,EACyB9pB,KAAKkH,YAA9B6iB,EADAD,EACAC,QAASC,EADTF,EACSE,aADTpe,EAEiC5L,KAAKyL,MAAtC9N,EAFAiO,EAEAjO,KAAM8O,EAFNb,EAEMa,GAAIyV,EAFVtW,EAEUsW,OAAQxiB,EAFlBkM,EAEkBlM,KAAMgf,EAFxB9S,EAEwB8S,MACzBhX,EAAO,CAAC2I,EAAG5D,EAAG4D,EAAI1S,EAAK0S,EAAGF,EAAG1D,EAAG0D,EAAIxS,EAAKwS,GACzC8Z,EAAWjqB,KAAKkH,YAAYgjB,YAAjB,GAAAvqB,OAAgC+H,EAAK2I,EAArC,KAAA1Q,OAA0C+H,EAAKyI,IAC1Dga,EAAgBlZ,KAAKmZ,KAAKnZ,KAAK+M,IAAItW,EAAK2I,GAAKY,KAAK+M,IAAItW,EAAKyI,IAEjE,OACElD,EAAAC,EAAA/P,cAAA,OACE6kB,UAAS,UAAAriB,OAAYD,EAAZ,KAAAC,OAAoBuiB,GAC7BzB,UAAW,cAAA9gB,OJjFK,IIkFoBhC,EAAK0S,EAD9B,KAAA1Q,OJjFK,IIkFmDhC,EAAKwS,EAD7D,eAAAxQ,OAECsqB,EAFD,KAAAtqB,OAEa+gB,GAFb,KAAA/gB,OAEuC+gB,GAFvC,kBAAA/gB,OAGIoqB,EAHJ,KAAApqB,OAGe+gB,GAAyByJ,EAHxC,MAAAxqB,OAAAM,OAAA6I,EAAA,EAAA7I,CAILye,EAAQ,cAAA/e,OACG+gB,GADH,KAAA/gB,OAC6B+gB,GAD7B,cAAA/gB,OAEDqqB,EAFC,kBAAArqB,QAGG,GAHH,KAAAA,QAG8B,GAH9B,MAIR,KACJoE,OAAO,SAAA0c,GAAS,OAAIA,IAAWvR,KAAK,cAnC1B6R,iBAAd8I,GACG1G,WAAamG,GADhBO,GAEGE,QAAUrJ,GAFbmJ,GAGGG,aAAe,IAHlBH,GAKGK,YAAc,CACnBG,MAAO,EACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,IACTC,OAAQ,IACRC,QAAS,IACTC,OAAQ,GACRC,OAAQ,IAoCZf,GAAMtb,aAAe,CACnBmQ,OAAO,GAGMmL,UCnGTgB,oLACK,IAAA9qB,EAAAC,KAAA4L,EAIH5L,KAAKyL,MAFPsC,EAFKnC,EAELmC,UAAWuQ,EAFN1S,EAEM0S,UAAWC,EAFjB3S,EAEiB2S,SAAUC,EAF3B5S,EAE2B4S,gBAAiBC,EAF5C7S,EAE4C6S,eAAgBC,EAF5D9S,EAE4D8S,MAAOC,EAFnE/S,EAEmE+S,OAAQlJ,EAF3E7J,EAE2E6J,SAAUmJ,EAFrFhT,EAEqFgT,SAAUC,EAF/FjT,EAE+FiT,SACpGyJ,EAHK1c,EAGL0c,aAAcjqB,EAHTuN,EAGSvN,SAAUuQ,EAHnBhD,EAGmBgD,eAAgBkc,EAHnClf,EAGmCkf,eAAgB/K,EAHnDnU,EAGmDmU,SAAUgL,EAH7Dnf,EAG6Dmf,WAAYjnB,EAHzE8H,EAGyE9H,KAAMiD,EAH/E6E,EAG+E7E,OAAQoZ,EAHvFvU,EAGuFuU,SAEvFniB,EAASK,EAATL,MAEP+P,EAAYgR,IAAW,QAAS,YAAV,eAAApf,OAAsC3B,EAAMG,QAAU,WAAa,CACvF6gB,cAAeN,EACfO,eAAgBN,EAChBO,WAAYzJ,IAAa6I,GAAaC,GACtCY,aAAcP,EACdC,YACC9Q,GACH,IAAMid,EAAWpc,EAAenQ,OAC1BwsB,EAAaha,KAAKC,IAALC,MAAAF,KAAIhR,OAAA6I,EAAA,EAAA7I,CAAQ2O,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAMQ,YAAY,EAE/E,OACEwO,EAAAC,EAAA/P,cAAA,OACE4Q,UAAWA,EACXmd,QAAO,OAAAvrB,OL9BS,IK8BqBsrB,EAA9B,KAAAtrB,OL9BS,IK8ByDqrB,GACzEnK,MAAO,CAACsK,iBAAkBF,EAAaG,cAAeJ,GACtDK,oBAAqB,gBACrBzL,QAAShB,GAET3R,EAAAC,EAAA/P,cAAA,KAAGmuB,WAAU,QACV1c,EAAejN,IAAI,SAAAuO,GAAG,OACrBjD,EAAAC,EAAA/P,cAAA,KAAGmuB,WAAA,OAAA3rB,OAAiBuQ,EAAIC,GAAK7C,IAAG,OAAA3N,OAASuQ,EAAIC,IAC1CD,EAAIjS,MAAM0D,IAAI,SAAAyO,GAAI,OACjBnD,EAAAC,EAAA/P,cAACouB,GAAD,CACEje,IAAG,GAAA3N,OAAKyQ,EAAKC,EAAV,KAAA1Q,OAAeyQ,EAAKD,GACvBgQ,SAAUA,EACV/P,KAAMA,EACNkO,UAAWA,GAAcC,GAAYE,EAAerO,GACpDtI,UAAW0W,EAAgBpO,GAC3BmO,SAAUE,EAAerO,GACzBkY,aAAcA,EACdjqB,SAAUA,EACVoX,SAAU1V,EAAK0L,MAAMgK,SACrBqK,KAAM/f,EAAK0L,MAAMqU,KACjB9hB,MAAOA,EACP+hB,SAAUA,UAMnBA,EACC9S,EAAAC,EAAA/P,cAACquB,GAAD,CAAgBrL,SAAUA,EAAUvR,eAAgBA,EAAgB5Q,MAAOA,EAAOsqB,aAAcA,IAC9F,KACHyC,EACChkB,EACEA,EAAOpF,IAAI,SAAC8pB,EAAOtoB,GAAR,OACT8J,EAAAC,EAAA/P,cAACuuB,GAADzrB,OAAAoN,OAAA,CAAOC,IAAKnK,GAAWsoB,MAGzBxe,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACwuB,GAAD,CAAuB7nB,KAAMA,EAAMgnB,eAAgBA,KAIrD,aA9DqB/J,iBA2FjC8J,GAAmBtc,aAAe,CAChCR,UAAW,GACX2Q,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVyJ,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnC+O,UAAU,EACVgL,YAAY,OAGRa,oLAEF,OACE3e,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAWgR,IAAW,QAAS,aAAc8B,MAAO,CAACgL,QAAS,SACjE5e,EAAAC,EAAA/P,cAAA,YACE8P,EAAAC,EAAA/P,cAAC2uB,GAAKlG,YAAN,MACA3Y,EAAAC,EAAA/P,cAACisB,GAAMxD,YAAP,MACA3Y,EAAAC,EAAA/P,cAACuuB,GAAMvI,WAAP,gBARgCpC,iBAe5C8J,GAAmBjF,YAAcgG,OAE3BG,4LACa,IACRjB,EAAkB9qB,KAAKyL,MAAvBqf,eADQkB,EAEmBhsB,KAAKisB,qBAAhC1b,EAFQyb,EAERzb,OAAQ2b,EAFAF,EAEAE,gBACTC,EAAoBD,EACvBttB,KAAK,SAAAkF,GAAI,OAAI6K,EAAKyN,uBAAuBxW,SAAS9B,EAAKsoB,gBACpDC,EAAoBH,EACvBttB,KAAK,SAAAkF,GAAI,OAAIA,EAAKsoB,eAAiBzd,EAAKwH,gCAN5BmW,EAQO,CACpBha,KAAM6Z,EAAoB,CACxBxuB,KAAMwuB,EAAkBrd,SAASC,SACjCtC,GAAI0f,EAAkBpd,UACpB,KACJwd,MAAOF,EAAoB,CACzB1uB,KAAM0uB,EAAkBvd,SAASC,SACjCtC,GAAI4f,EAAkBtd,UACrB,MAREuD,EARQga,EAQRha,KAAMia,EARED,EAQFC,MAwBb,OAbIzB,IACExY,IACFA,EAAK3U,KAAOmtB,EAAe0B,mBAAmBL,EAAkBrd,SAASF,eAAgB0D,EAAK3U,MAC9F2U,EAAK7F,GAAKqe,EAAe0B,mBAAmBL,EAAkBvd,eAAgB0D,EAAK7F,IACnF6F,EAAK5S,KAAO,QAEV6sB,IACFA,EAAM5uB,KAAOmtB,EAAe0B,mBAAmBH,EAAkBvd,SAASF,eAAgB2d,EAAM5uB,MAChG4uB,EAAM9f,GAAKqe,EAAe0B,mBAAmBH,EAAkBzd,eAAgB2d,EAAM9f,IACrF8f,EAAM7sB,KAAO,UAIV,CAAC6Q,SAAQ+B,OAAMia,sDAStB,IANmB,IACZzoB,EAAQ9D,KAAKyL,MAAb3H,KAEDooB,EAAkB,CAACpoB,GACnByM,EAASzM,EAAK2oB,WAChBC,EAAgB5oB,EACb4oB,EAAc5d,WACnB4d,EAAgBA,EAAc5d,UACZ2d,aAAelc,GAGjC2b,EAAgBhkB,KAAKwkB,GAGvB,MAAO,CAACnc,SAAQ2b,oDAKhB,IADelsB,KAAKyL,MAAb3H,KAEL,OAAO,KAHF,IAAA6oB,EAMuB3sB,KAAK4sB,iBAA5Brc,EANAoc,EAMApc,OAAQ+B,EANRqa,EAMQra,KAAMia,EANdI,EAMcJ,MACrB,IAAKja,IAASia,EACZ,OAAO,KAET,IAAMrK,EAAS3R,IAAW5B,EAAKmC,SAAW,QAAU,QAEhD+b,EAAY,KAAMC,EAAa,KAQnC,OAPIxa,IACFua,EAAY5f,EAAAC,EAAA/P,cAACuuB,GAAD,CAAOpe,IAAK,OAAQ3P,KAAM2U,EAAK3U,KAAM8O,GAAI6F,EAAK7F,GAAIyV,OAAQA,EAAQxiB,KAAM,UAElF6sB,IACFO,EAAa7f,EAAAC,EAAA/P,cAACuuB,GAAD,CAAOpe,IAAK,QAAS3P,KAAM4uB,EAAM5uB,KAAM8O,GAAI8f,EAAM9f,GAAIyV,OAAQA,EAAQxiB,KAAM,WAGnF,CAACmtB,EAAWC,UAzEa/L,iBAiH9BgM,IA/BqChM,iMAgChC,IAAAkC,EACiDjjB,KAAKyL,MAAtD0U,EADA8C,EACA9C,SAAUvR,EADVqU,EACUrU,eAAgB5Q,EAD1BilB,EAC0BjlB,MAAOsqB,EADjCrF,EACiCqF,aAElCpqB,EAASkB,IAAEqE,OAAO0c,EAAStP,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAS,CAAC,SAAU,WAE5F,OACEtD,EAAAC,EAAA/P,cAAA,KAAGmuB,WAAU,SAAUzK,MAAO,CAACmM,cAAe,SAC3C9uB,EAAOyD,IAAI,SAAAyO,GAAI,OACdnD,EAAAC,EAAA/P,cAAC8vB,GAAD,CACE3f,IAAG,GAAA3N,OAAKyQ,EAAKG,OAAV,KAAA5Q,OAAoByQ,EAAKK,QAC5B0P,SAAUA,EACV/P,KAAMA,EACNpS,MAAOA,EACPsqB,aAAcA,cAdGvH,kBA6BvBmM,8MACJzR,MAAQ,CACN0R,iBAAkB,CAAC9c,EAAGpJ,EAAKwE,MAAM2E,KAAKC,EAAGF,EAAGlJ,EAAKwE,MAAM2E,KAAKD,GAC5Did,SAAU,CAAC/c,EAAGpJ,EAAKwE,MAAM2E,KAAKC,EAAGF,EAAGlJ,EAAKwE,MAAM2E,KAAKD,MAGtDkd,iBAAmBvF,IAAMC,8FAUNC,EAAWC,EAAWC,GAAU,IAAAxf,EAAA1I,KAC7CA,KAAKyb,MAAM2R,WAAanF,EAAUmF,UACpCzlB,WAAW,WACLe,EAAK2kB,iBAAiBjF,SACxB1f,EAAK2kB,iBAAiBjF,QAAQC,gBAE/B,oCAIE,IAAA9D,EACuCvkB,KAAKyL,MAA5C0U,EADAoE,EACApE,SAAU/P,EADVmU,EACUnU,KAAMpS,EADhBumB,EACgBvmB,MAAOsqB,EADvB/D,EACuB+D,aADvBK,EAE8B3oB,KAAKyb,MAAnC0R,EAFAxE,EAEAwE,iBAAkBC,EAFlBzE,EAEkByE,SACpBxE,GAAqBN,EAAa1iB,SAAS+I,EAAKmC,WAAawX,EAAa1iB,SAAS+I,EAAKqC,UACxF6X,GAAqBD,EACpB0E,EAAc5M,GAAoBP,EAAUiN,GAC5CG,EAAgB7M,GAAoBP,EAAUgN,GACpD,OACElgB,EAAAC,EAAA/P,cAAA,KAAGsjB,UAAS,aAAA9gB,OAAe2tB,EAAYjd,EAA3B,KAAA1Q,OAAgC2tB,EAAYnd,EAA5C,MACVlD,EAAAC,EAAA/P,cAACisB,GAAD,CACEvI,MAAO7iB,EAAME,QAAU,OACvBgkB,OAAQ9R,EAAKG,SAAW5B,EAAKmC,SAAW,QAAU,QAClDqR,QAASnkB,EAAM6I,iBAAmBuJ,EAAKG,SAAW5B,EAAKmC,SAAW8X,EAAoBC,KAExF5b,EAAAC,EAAA/P,cAAA,oBACE4rB,IAAK/oB,KAAKqtB,iBACVrE,cAAe,YACfC,cAAe,MACfvpB,KAAM,YACN/B,KAAI,GAAAgC,OAAK4tB,EAAcld,EAAnB,KAAA1Q,OAAwB4tB,EAAcpd,GAC1C1D,GAAE,GAAA9M,OAAK2tB,EAAYjd,EAAjB,KAAA1Q,OAAsB2tB,EAAYnd,GACpC+Y,IAAK,OACLC,YAAa,EACbjI,KAAM,+DAzCkBzV,EAAOgQ,GACrC,OAAIhQ,EAAM2E,KAAKC,IAAMoL,EAAM2R,SAAS/c,GAAK5E,EAAM2E,KAAKD,IAAMsL,EAAM2R,SAASjd,EAChE,CAACgd,iBAAkB1R,EAAM2R,SAAUA,SAAU,CAAC/c,EAAG5E,EAAM2E,KAAKC,EAAGF,EAAG1E,EAAM2E,KAAKD,IAG/E,YAbiB4Q,iBA+DtByM,8MACJ/X,SAAW,WACLpM,EAAKoC,MAAM3D,WAAauB,EAAKoC,MAAMgK,SACrCpM,EAAKoC,MAAMgK,SAASpM,EAAKoC,MAAM2E,MACtB/G,EAAKoC,MAAM8S,UAAYlV,EAAKoC,MAAMqU,MAC3CzW,EAAKoC,MAAMqU,gFAIN,IAAA2N,EAGHztB,KAAKyL,MADP0U,EAFKsN,EAELtN,SAAU/P,EAFLqd,EAEKrd,KAAMkO,EAFXmP,EAEWnP,UAAWxW,EAFtB2lB,EAEsB3lB,UAAWyW,EAFjCkP,EAEiClP,SAAqBvgB,EAFtDyvB,EAE2CpvB,SAAWL,MAAQyX,EAF9DgY,EAE8DhY,SAAUqK,EAFxE2N,EAEwE3N,KAAMC,EAF9E0N,EAE8E1N,SAAUuI,EAFxFmF,EAEwFnF,aAE/F,OACErb,EAAAC,EAAA/P,cAAC2uB,GAAD,CACE3L,SAAUA,EACV9P,EAAGD,EAAKC,EACRF,EAAGC,EAAKD,EACRrI,UAAWA,EACXyW,SAAUA,EACV5N,MAAOP,EAAKO,MACZJ,OAAQH,EAAKG,OACb+X,aAAcA,EACdvI,SAAUA,EACV/hB,MAAOA,EACP4hB,SAAWnK,GAAY3N,GAAegY,GAAQvB,IAAcD,EAAYte,KAAKyV,SAAW,cAzBrEsL,iBA4C3ByM,GAAajf,aAAe,CAC1B+P,WAAW,EACXxW,WAAW,EACXyW,UAAU,EACVwB,UAAU,EACVuI,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,WAGtB6Z,ICjYAA,GDiYAA,GE3XT6C,mMACK,IAAA9hB,EAC4B5L,KAAKyL,MADjCkiB,EAAA/hB,EACFgiB,gBADE,IAAAD,EACS,MADTA,EACmBliB,EADnBxL,OAAA4tB,EAAA,EAAA5tB,CAAA2L,EAAA,cAODkiB,EAJY,CAChBC,KAAQ1P,EACR2P,IAAOnD,IAEkB+C,GAC3B,OAAO3gB,EAAAC,EAAA/P,cAAC2wB,EAAariB,UATK6C,cAoC9Bof,GAAgBnf,aAAe,CAC7BR,UAAW,GACX2Q,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVyJ,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnC+O,UAAU,EACVgL,YAAY,GAGC2C,UChDTO,8MACJxY,SAAW,SAACrF,GAAS,IAAAxE,EAC8B7L,EAAK0L,MAAxCmD,EADKhD,EACZ9H,KAAO8K,eAAiBkc,EADZlf,EACYkf,eAC3BA,IACF1a,EAAO0a,EAAe9V,YAAYpG,EAAgBwB,IAEpDrQ,EAAK0L,MAAMgK,SAAS1V,EAAK0L,MAAM3H,KAAK2R,SAAS,CAACpF,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,QAGnE2P,KAAO,WACL/f,EAAK0L,MAAMgK,SAAS1V,EAAK0L,MAAM3H,KAAKyL,QAAUxP,EAAK0L,MAAM3H,KAAKgc,OAAS/f,EAAK0L,MAAM3H,KAAKoqB,mBAGzFtP,SAAW,WACT7e,EAAK0L,MAAMmT,SAAS7e,EAAK0L,MAAM3H,SAGjC0a,gBAAkB,SAAApO,GAAQ,IAAAzC,EACyB5N,EAAK0L,MAAxCmD,EADUjB,EACjB7J,KAAO8K,eAAiBkc,EADPnd,EACOmd,eAI/B,OAHIA,IACF1a,EAAO0a,EAAe9V,YAAYpG,EAAgBwB,IAE7CrQ,EAAK0L,MAAM3H,KAAKmX,gBAAgB7K,MAGzCqO,eAAiB,SAAArO,GAAQ,IAAA6S,EAC0BljB,EAAK0L,MAAxCmD,EADSqU,EAChBnf,KAAO8K,eAAiBkc,EADR7H,EACQ6H,eAI/B,GAHIA,IACF1a,EAAO0a,EAAe9V,YAAYpG,EAAgBwB,SAEnB1R,IAA7BqB,EAAK0L,MAAM0iB,eAA4D,OAA7BpuB,EAAK0L,MAAM0iB,eACvD,IAAKpuB,EAAK0L,MAAM3H,KAAKyL,QACnB,OAAO,OAGT,GAAIxP,EAAK0L,MAAM3H,KAAKiV,YAAchZ,EAAK0L,MAAM0iB,cAC3C,OAAO,EAGX,IAAMpf,EAAWhP,EAAK0L,MAAM3H,KAAKiL,SACjC,QAAKA,IAGEA,EAASsB,IAAMD,EAAKC,GAAKtB,EAASoB,IAAMC,EAAKD,oFAIpD,QAASnQ,KAAKyL,MAAM3H,KAAKwM,SAAStQ,KAAKye,iDAGhC,IAAA8F,EACoEvkB,KAAKyL,MAAzE3H,EADAygB,EACAzgB,KAAMgnB,EADNvG,EACMuG,eAAgBxC,EADtB/D,EACsB+D,aAAc1J,EADpC2F,EACoC3F,SAAUnJ,EAD9C8O,EAC8C9O,SAAUsK,EADxDwE,EACwDxE,SAC3DnR,EAAiB9K,EAAK8K,eAK1B,OAJIkc,IACFlc,EAAiBkc,EAAelc,IAIhC3B,EAAAC,EAAA/P,cAACixB,GAADnuB,OAAAoN,OAAA,GACMrN,KAAKyL,MADX,CAEE+S,gBAAiBuB,EAAW/f,KAAKwe,gBAAkB,kBAAM,GACzDC,eAAgBsB,EAAW/f,KAAKye,eAAiB,kBAAM,GACvDH,UAAWgK,EAAa1iB,SAAS9B,EAAKwL,YACtCiP,WAAUwB,GAAW/f,KAAKquB,iBAC1BzP,SAAUA,EAAW5e,KAAK4e,SAAW,KACrCnJ,SAAUA,EAAWzV,KAAKyV,SAAW,KACrCqK,KAAMrK,EAAWzV,KAAK8f,KAAO,KAC7BlR,eAAgBA,EAChBkc,eAAgBA,EAChBhnB,KAAMA,EACNqc,SAAUrc,EAAKoD,YACf6Y,SAAUA,YAvEEgB,iBA4FpBkN,GAAM1f,aAAe,CACnBR,UAAW,GACX2Q,OAAO,EACPC,QAAQ,EACRE,UAAU,EACVyJ,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnC+O,UAAU,OAGNuO,8MACJ7S,MAAQ,CACN8S,UAAW,EACXC,qBAAqB,KA4FtBC,kBAAoB,SAAAC,GAClBznB,EAAK0nB,SAASD,EAAQ,WACpB,GAAIznB,EAAKwE,MAAMmjB,SAAU,KAAAC,EACkB5nB,EAAKwU,MAAvC8S,EADgBM,EAChBN,UAAWC,EADKK,EACLL,oBACZ1D,EAAiB7jB,EAAKC,YAAY4nB,kBAAjB,GAAAnvB,OAAsC4uB,EAAtC,KAAA5uB,OAAmD6uB,IAC1EvnB,EAAKwE,MAAMmjB,SAAS,CAACL,YAAWC,sBAAqB1D,yBAK5DiE,uBAAyB,WACvB9nB,EAAKwnB,kBAAkB,SAAAhT,GAAK,MAAK,CAC/B8S,WAAY9S,EAAM8S,UAAY,GAAK,QAIvCS,gBAAkB,WAChB/nB,EAAKwnB,kBAAkB,SAAAhT,GAAK,MAAK,CAC/B8S,WAAY9S,EAAM8S,UAAY,GAAK,QAIvCU,iBAAmB,WACjBhoB,EAAKwnB,kBAAkB,SAAAhT,GAAK,MAAK,CAC/B+S,qBAAsB/S,EAAM+S,0BAIhCU,eAAiB,WACfjoB,EAAKwnB,kBAAkB,SAAAhT,GAAK,MAAK,CAC/B8S,WAAY9S,EAAM8S,UAAY,GAAK,EACnCC,qBAAsB/S,EAAM+S,0BAIhCW,MAAQ,WACNloB,EAAKwnB,kBAAkB,SAAAhT,GAAK,MAAK,CAC/B8S,UAAW,EACXC,qBAAqB,8EAIhB,IAAA7F,EACkC3oB,KAAKyb,MAAvC8S,EADA5F,EACA4F,UAAWC,EADX7F,EACW6F,oBAElB,OACEvhB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMiiB,KAAM,UAAWC,MAAO,CAC5B,CAAC/hB,IAAK,2BAA4BG,KAAM,OAAQmS,QAAS5f,KAAK+uB,wBAC9D,CAACzhB,IAAK,mBAAoBG,KAAM,OAAQmS,QAAS5f,KAAKgvB,iBACtD,CAAC1hB,IAAK,kBAAmBG,KAAM,8BAA+BmS,QAAS5f,KAAKivB,kBAC5E,CAAC3hB,IAAK,gBAAiBG,KAAM,4BAA6BmS,QAAS5f,KAAKkvB,gBACxE,CAAC5hB,IAAK,OAAQG,KAAM,OAAQmS,QAAS5f,KAAKmvB,MAAOG,UAAWf,IAAcC,4DA/H7Ce,GAAQ,IAAA7mB,EAAA1I,KACnCwvB,EAA0B,SAAA5gB,GAC9B,OAAOlG,EAAK8mB,wBAAwB5gB,EAAgB2gB,IAEtDC,EAAwBxa,YAAc,SAACpG,EAAgBoG,GACrD,OAAOtM,EAAK+mB,4BAA4B7gB,EAAgBoG,EAAaua,IAGvE,IAAMG,EAAUH,EAAOI,UAAYJ,EAAOK,MAAQL,EAAOM,MACnDC,EAAgBP,EAAOI,YAAcD,EAAU,CACnDC,UAAWJ,EAAOI,UAClBC,OAAQL,EAAOK,MACfC,OAAQN,EAAOM,OACbN,EAKJ,OAJAC,EAAwBhD,mBAAqB,SAAC5d,EAAgBoG,GAC5D,OAAOtM,EAAK+mB,4BAA4B7gB,EAAgBoG,EAAa8a,IAGhEN,kDAGsB5gB,EAAgB2gB,GAAQ,IAAAlmB,EAAArJ,KAAA+vB,EACjB/vB,KAAKgwB,wBAAwBphB,EAAgB2gB,GAA5EU,EADgDF,EAChDE,YAAaC,EADmCH,EACnCG,eACZC,EAAQ/wB,IAAEgxB,MAAMF,GAGtB,OAFc9wB,IAAEgxB,MAAMH,GAETtuB,IAAI,SAAA0uB,GAAI,MAAK,CACxBlgB,EAAGkgB,EACHpyB,MAAOkyB,EAAMxuB,IAAI,SAAA2uB,GAAQ,IAAAC,EACJlnB,EAAKmnB,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAAnFkB,EADkBF,EAClBE,KAAMC,EADYH,EACZG,KACX,OAAOzwB,OAAA+M,EAAA,EAAA/M,CAAA,GACJ2O,EAAe8hB,GAAMzyB,MAAMwyB,GAD9B,CAEEpgB,EAAGigB,EAAMngB,EAAGkgB,6DAMezhB,EAAgBoG,EAAaua,GAAQ,IAAAoB,EAClC3wB,KAAKgwB,wBAAwBphB,EAAgB2gB,GAA5EU,EADiEU,EACjEV,YAAaC,EADoDS,EACpDT,eACRI,EAAiBtb,EAApB3E,EAAYggB,EAAQrb,EAAX7E,EAFsDygB,EAGjD5wB,KAAKwwB,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAE1F,MAAO,CAAClf,EAL8DugB,EAG/DH,KAEUtgB,EALqDygB,EAGzDF,sDAKgB9hB,EAAgB2gB,GAC7C,IAGIU,EAAaC,EAHXlF,EAAWpc,EAAenQ,OAC1BwsB,EAAcha,KAAKC,IAALC,MAAAF,KAAIhR,OAAA6I,EAAA,EAAA7I,CAAQ2O,EAAejN,IAAI,SAAAuO,GAAG,OAAIA,EAAIjS,MAAMQ,YAAY,EAQhF,OAPoB8wB,EAAbI,WAGJO,EAAgClF,EAAhBiF,EAA0BhF,IAE1CiF,EAAgCjF,EAAhBgF,EAA6BjF,GAEzC,CAACiF,cAAaC,gEAG+CX,GAAQ,IAExEkB,EAAMC,EAFcJ,EAAoDjkB,EAApDikB,KAAMD,EAA8ChkB,EAA9CgkB,KAAQH,EAAsCxb,EAAtCwb,eAAgBD,EAAsBvb,EAAtBub,YActD,OAbkCV,EAA3BI,WAGJc,EAAeJ,EAATK,EAAeJ,IAErBG,EAAeH,EAATI,EAAeL,GALUd,EAAhBK,QAQhBa,EAAOP,EAAiB,EAAIO,GARIlB,EAATM,QAWvBa,EAAOT,EAAc,EAAIS,GAEpB,CAACD,OAAMC,eA5FgB3P,iBAA5BuN,GAOGQ,kBAAoB,CACzB+B,UAAW,KAEXC,UAVExC,GAUcyC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAOC,OAAO,IACnFmB,UAXE1C,GAWcyC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IACnFoB,UAZE3C,GAYcyC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IAClFqB,SAbE5C,GAaayC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IAClFsB,SAdE7C,GAcayC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IACjFuB,SAfE9C,GAeayC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAOC,OAAO,IACnFwB,SAhBE/C,GAgBayC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAOC,OAAO,KAgJvE5B,UCvQTqD,8MAkCJ7V,MAAQ,CACN7M,eAAgB7O,EAAKmH,YAAYqqB,sBAGnC/S,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGT+S,QAAU,WACRzxB,EAAK4uB,SAAS,SAAAlT,GAAK,MAAK,CACtB7M,eAAgB6M,EAAM7M,iBAAmB7O,EAAKmH,YAAYqqB,mBACtDxxB,EAAKmH,YAAYuqB,2BACjB1xB,EAAKmH,YAAYqqB,yBAGzBG,kBAAoB3xB,EAAK0L,MAAMpN,SAASL,MAAM8I,WAAaL,YAAY1G,EAAKyxB,QAAS,KAAQ,uFAE1ExJ,EAAWC,EAAWC,GACnCloB,KAAKyL,MAAMpN,SAASL,MAAM8I,aAAekhB,EAAU3pB,SAASL,MAAM8I,aAChE9G,KAAKyL,MAAMpN,SAASL,MAAM8I,WACvB9G,KAAK0xB,oBACR1xB,KAAK0xB,kBAAoBjrB,YAAYzG,KAAKwxB,QAAS,MAGjDxxB,KAAK0xB,oBACPlxB,cAAcR,KAAK0xB,mBACnB1xB,KAAK0xB,kBAAoB,sDAO3B1xB,KAAK0xB,oBACPlxB,cAAcR,KAAK0xB,mBACnB1xB,KAAK0xB,kBAAoB,uCAIpB,IAAA9lB,EAC2B5L,KAAKyL,MAAhCiT,EADA9S,EACA8S,MAAOC,EADP/S,EACO+S,OAAQtgB,EADfuN,EACevN,SACfuQ,EAAkB5O,KAAKyb,MAAvB7M,eAEP,OACE3B,EAAAC,EAAA/P,cAACixB,GAAD,CACEjO,SAAUxR,EAAKsP,QACfS,MAAOA,EACPC,OAAQA,EACR2J,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgBA,EAChB2P,UAAU,EACVC,gBAAiBxe,KAAKwe,gBACtBC,eAAgBze,KAAKye,eACrB1X,OAAQ1I,EAASL,MAAM+I,OAAS/G,KAAKkH,YAAYH,YAASrI,EAC1DL,SAAUA,EACV0hB,SAAU1hB,EAASL,MAAM8I,WACzBikB,WAAY1sB,EAASL,MAAM+I,gBA9FNuH,aAAvBgjB,GACGC,mBAAqB,CAC1B,CACEphB,EAAG,EACHlS,MAAO,CACL,CAACoS,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,GACtE,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,MAXxE2gB,GAeGG,2BAA6B,CAClC,CACEthB,EAAG,EACHlS,MAAO,CACL,CAACoS,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,GACtE,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,MAzBxE2gB,GA6BGvqB,OAAS,CACd,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAI+R,OAAQ,QAASxiB,KAAM,SAC9D,CAAC/B,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAI+R,OAAQ,QAASxiB,KAAM,SA4ElE4xB,GAAe/iB,aAAe,CAC5BR,UAAW,GACX2Q,OAAO,EACPC,QAAQ,GAGK2S,aC/GArD,qFCFT0D,8MAoBJnT,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,2EAGA,IAAA7S,EACqE5L,KAAKyL,MAA1E0U,EADAvU,EACAuU,SAAUzB,EADV9S,EACU8S,MAAOC,EADjB/S,EACiB+S,OAAQpO,EADzB3E,EACyB2E,OAAQjR,EADjCsM,EACiCtM,mBAAoBgpB,EADrD1c,EACqD0c,aAE5D,OACErb,EAAAC,EAAA/P,cAACixB,GAAD,CACE1P,MAAOA,EACPC,OAAQA,EACR/P,eAAgB5O,KAAKkH,YAAY0qB,QAAQrhB,GACzCgO,UAAU,EACVC,gBAAiBxe,KAAKwe,gBACtBC,eAAgBze,KAAKye,eACrBpgB,SAAUiB,EACVgpB,aAAcA,EACdnI,SAAUA,WAzCc7R,aAA1BqjB,GACGC,8BACJjjB,EAAKmC,SAAW,CACf,CACEX,EAAG,EACHlS,MAAO,CACL,CAACoS,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,sBAI3EhC,EAAKqC,SAAW,CACf,CACEb,EAAG,EACHlS,MAAO,CACL,CAACoS,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,WA0ChFghB,GAAkBpjB,aAAe,CAC/BmQ,OAAO,EACPC,QAAQ,GAGKgT,uCC/DTE,8MAWJpW,MAAQ,CACNha,UAAWwC,EAAOxC,UAClBqG,UAAW7D,EAAO6D,UAClBhG,aAAcmC,EAAOnC,aACrBG,KAAMgC,EAAOhC,KACbC,SAAU+B,EAAOhC,KAAOgC,EAAOhC,KAAKnE,KAAO,KAC3C6E,UAAWsB,EAAOtB,UAClBe,UAAWO,EAAOP,UAClBY,gBAAiBL,EAAOK,gBACxBxB,YAAamB,EAAOnB,eAyBtBgvB,kBAAoB,SAAArwB,GAClB1B,EAAK4uB,SAAS,CAACltB,YAAWK,aAAcmC,EAAOnC,aAAcgG,UAAW7D,EAAO6D,eAGjF9F,QAAU,SAAAC,GACRlC,EAAK4uB,SAAS,CAAC1sB,YAGjBS,SAAW,SAAAC,GACT5C,EAAK4uB,SAAS,CAAChsB,iBAGjBY,SAAW,SAAAG,GACT3D,EAAK4uB,SAAS,CAACjrB,iBAGjBU,eAAiB,SAAAE,GACfvE,EAAK4uB,SAAS,CAACrqB,uBAGjBzB,WAAa,SAAAC,GACX/C,EAAK4uB,SAAS,CAAC7rB,oGA1CfmB,EAAO8tB,UAAU,CACfrwB,UAAW1B,KAAK8xB,kBAChB/vB,aAAc/B,KAAK8xB,kBACnBrvB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACdiB,cAAexE,KAAKoE,eACpBmB,UAAWvF,KAAK6C,4DAKlBoB,EAAO+tB,YAAY,CACjBvvB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACdiB,cAAexE,KAAKoE,eACpBmB,UAAWvF,KAAK6C,8CA4BX,IAAA8lB,EACgG3oB,KAAKyb,MAArGha,EADAknB,EACAlnB,UAAWK,EADX6mB,EACW7mB,aAAcgG,EADzB6gB,EACyB7gB,UAAW7F,EADpC0mB,EACoC1mB,KAAMU,EAD1CgmB,EAC0ChmB,UAAWe,EADrDilB,EACqDjlB,UAAWY,EADhEqkB,EACgErkB,gBAAiBxB,EADjF6lB,EACiF7lB,YAClFmvB,EAAejyB,KAAKkH,YAAY+qB,aACtC,OACEhlB,EAAAC,EAAA/P,cAAC80B,EAADhyB,OAAAoN,OAAA,GACMrN,KAAKyL,MADX,CAEEhK,UAAWA,EACXK,aAAcA,EACdgG,UAAWA,EACX7D,OAAQA,EACRhC,KAAMA,EACNU,UAAWA,EACXe,UAAWA,EACXY,gBAAiBA,EACjBxB,YAAaA,4CAhFCwL,GAAW,IACvB4jB,EADuB,SAAAjrB,GAAA,SAAAirB,IAAA,OAAAjyB,OAAAC,EAAA,EAAAD,CAAAD,KAAAkyB,GAAAjyB,OAAAwiB,EAAA,EAAAxiB,CAAAD,KAAAC,OAAAyiB,EAAA,EAAAziB,CAAAiyB,GAAA/gB,MAAAnR,KAAAxB,YAAA,OAAAyB,OAAA0iB,EAAA,EAAA1iB,CAAAiyB,EAAAjrB,GAAAirB,EAAA,CACWlyB,MAIxC,OAJMkyB,EACGD,aAAe3jB,EAGjB4jB,SARiB5jB,aAAtBujB,GACGI,aAAe,KAwFjB,IAAME,GAAa,SAAA7jB,GACxB,OAAOujB,GAAcO,aAAa9jB,yBCvF9B+jB,8MACJtJ,IAAMjB,IAAMC,+FAGV/nB,KAAKsyB,kDAIDtyB,KAAK+oB,IAAIX,SACXmK,KAAU/W,OAAOxb,KAAK+oB,IAAIX,oDAIXJ,GACbA,EAAUwK,OAASxyB,KAAKyL,OAC1BzL,KAAKsyB,8CAIA,IAAAG,EAAA7mB,EACkC5L,KAAKyL,MAAvC+mB,EADA5mB,EACA4mB,KAAME,EADN9mB,EACM8mB,QAAStD,EADfxjB,EACewjB,KAAMuD,EADrB/mB,EACqB+mB,UAC5B,OACE1lB,EAAAC,EAAA/P,cAAA,OACE4rB,IAAK/oB,KAAK+oB,IACVhb,UAAWgR,IAAW,CAAC,KAAM,OAAQ,QAAS,UAAW,UAApC0T,EAAA,CAA+CC,UAAWA,GAA1DzyB,OAAA+T,EAAA,EAAA/T,CAAAwyB,EAAoEC,IAAYA,GAAhFzyB,OAAA+T,EAAA,EAAA/T,CAAAwyB,EAA0FrD,IAASA,GAAnGnvB,OAAA+T,EAAA,EAAA/T,CAAAwyB,EAAyG,aAAcE,GAAvHF,IACrBG,uBAAsBJ,WAzBLlkB,aAsCzB+jB,GAAW9jB,aAAe,CACxBokB,WAAW,GAGEN,UCrCFQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAhzB,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA6yB,GAAA,QAAA1X,EAAA3c,UAAAC,OAAAu0B,EAAA,IAAA3X,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAA0X,EAAA1X,GAAA9c,UAAA8c,GAAA,OAAAvb,EAAAE,OAAAwiB,EAAA,EAAAxiB,CAAAD,MAAA+yB,EAAA9yB,OAAAyiB,EAAA,EAAAziB,CAAA4yB,IAAAI,KAAA9hB,MAAA4hB,EAAA,CAAA/yB,MAAAL,OAAAqzB,MACEE,eAAiB,WACfnzB,EAAK0L,MAAMynB,eAAenzB,EAAK0L,MAAM3H,OAFzC/D,EAAA,OAAAE,OAAA0iB,EAAA,EAAA1iB,CAAA4yB,EAAAC,GAAA7yB,OAAA2iB,EAAA,EAAA3iB,CAAA4yB,EAAA,EAAAvlB,IAAA,SAAAhQ,MAAA,WAKW,IAAAsO,EACsG5L,KAAKyL,MAA3GxJ,EADA2J,EACA3J,KAAM3C,EADNsM,EACMtM,mBAAoB6zB,EAD1BvnB,EAC0BunB,UAAWC,EADrCxnB,EACqCwnB,gBAAiBC,EADtDznB,EACsDynB,WAAYvvB,EADlE8H,EACkE9H,KAAMwvB,EADxE1nB,EACwE0nB,MAAOhqB,EAD/EsC,EAC+EtC,KAAMiqB,EADrF3nB,EACqF2nB,cAEtFxpB,EAAaqpB,EAAgBtvB,EAAK0vB,cAElCC,EAAW9kB,EAAKsP,QAAQyV,YAAY5vB,EAAKA,MACzC6vB,EAAUR,EAAUrvB,EAAK2F,QAAQ,IACjCmqB,EAAUT,EAAUrvB,EAAK2F,QAAQ,IACjCoqB,EAAiBJ,EAASnkB,aAAeX,EAAKmC,SAAW6iB,EAAUC,EACnEE,EAAgBD,IAAmBF,EACnCI,EAAgBF,IAAmBD,EACnCI,IAAgB/xB,GAAO0xB,EAAQ5yB,KAAOkB,EAAKlB,GAC3CkzB,IAAgBhyB,GAAO2xB,EAAQ7yB,KAAOkB,EAAKlB,GAC3CmzB,EAAapwB,EAAKyF,SAAYzF,EAAK2L,SAAWd,EAAKmC,SAAW6iB,EAAUC,EAAW,KACnFO,EAAWH,GAAiBC,EAC5BG,EAAYJ,GAAiBF,GAAmBG,GAAiBF,EACjEM,GAAef,IAAUa,GAAYF,EACrCK,GAAehB,IAAUa,GAAYH,EACrCjxB,GAAWuwB,GAASrxB,EAAOoxB,EAAWtvB,OAAO,SAAAvE,GAAM,OACvDA,EAAO0F,KAAKf,SAAWL,EAAK/C,KACxBvB,EAAOmL,SAAW1I,EAAKlB,IAAOkB,EAAKsyB,aAAa/0B,EAAOuB,KAAOkB,EAAKsyB,aAAa/0B,EAAOuB,IAAImE,KAAKiG,OACjG,KAEL,OACE8B,EAAAC,EAAA/P,cAACq3B,GAAA,EAAD,CACEjnB,GAAIC,IACJf,GAAE,SAAA9M,OAAWmE,EAAK/C,IAClB6e,QAAS5f,KAAKkzB,eACdrS,MAAK5gB,OAAA+M,EAAA,EAAA/M,CAAA,GACEqzB,EAAa,CAAChN,MAAO,QAAb,GACTxiB,EAAK/C,KAAOwyB,EAAgB,CAACkB,gBAAiB,cAAgB,IAEpE1mB,UAAWgR,IAAW,CAAC2V,UAAWprB,GAAQ8qB,KAE1CnnB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKG,QAAN,KACIrB,EAOE,KANFrmB,EAAAC,EAAA/P,cAACy3B,GAAD,CACE7mB,UAAW,8BACXjK,KAAM2vB,EACN/U,OAAK,EACLrgB,SAAUiB,IAGd2N,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKK,OAAN,KACKR,GAAeC,EAAwB,KAAT,OAChCD,EACCpnB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAOb,IAAeP,GAAWS,EAAW,aAAU11B,GAC1Dw1B,IAAeP,EAAU1mB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,WAAc,KACnDg2B,EAAgB7mB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,gBAAmB,KAC/C61B,EAAQ71B,KACTmP,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,QAAStD,KAAM,OAAQuD,WAAS,EAACH,KAAMmB,EAAQ5yB,MAEpE,KACHszB,GAAeC,EAAc,OAAS,KACtCA,EACCrnB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAOb,IAAeN,GAAWQ,EAAW,aAAU11B,GAC1Dw1B,IAAeN,EAAU3mB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,WAAc,KACnDi2B,EAAgB9mB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,cAAei3B,MAAO,UAAa,KAC/DnB,EAAQ91B,KACTmP,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,QAAStD,KAAM,OAAQuD,WAAS,EAACH,KAAMoB,EAAQ7yB,MAEpE,MAEJuyB,EAeAvpB,EAAakD,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,YAAgB,KAd1CR,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKU,KAAN,KACGf,EAAWlnB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,CAAC3P,KAAM,OAAQi3B,MAAO,SAAUhoB,QAAS,YAAgB,KACjF,IACCjJ,EAAKyF,SAAgF,KAArE0D,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,CAAC3P,KAAM,SAAUi3B,MAAO,SAAUhoB,QAAS,SACzE,IACDE,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAO,QAAApN,OAAUmE,EAAKwO,MAAQ7E,KAAM,SAC1C,IACDR,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASnP,IAAOkG,EAAKqxB,aAAerxB,EAAKsxB,eAAez3B,OAAQ8P,KAAM,aAC5E,IACA1D,EAAakD,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAShD,EAAWjM,KAAM2P,KAAM,YAAgB,KACpE,IACA1K,EAAQtE,OAASwO,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAO,GAAApN,OAAKoD,EAAQtE,OAAb,YAA+BgP,KAAM,WAAgB,YAhFnGolB,EAAA,CAA8BvkB,aAwG9BukB,GAAStkB,aAAe,CACtB+kB,OAAO,EACPhqB,MAAM,OAGF+rB,8MACJ5Z,MAAQ,CACN6Z,WAAY,KAGdC,aAAe,SAACjvB,EAAD+F,GAAqB,IAAhBipB,EAAgBjpB,EAAhBipB,WAClBruB,EAAK0nB,SAAS,CAAC2G,wFAGR,IAAA3nB,EAC0I3N,KAAKyL,MAA/InM,EADAqO,EACArO,mBAAoB2C,EADpB0L,EACoB1L,KAAMkxB,EAD1BxlB,EAC0BwlB,UAAWC,EADrCzlB,EACqCylB,gBAAiBC,EADtD1lB,EACsD0lB,WAAY7vB,EADlEmK,EACkEnK,MAAO8vB,EADzE3lB,EACyE2lB,MAAOhqB,EADhFqE,EACgFrE,KAAM4pB,EADtFvlB,EACsFulB,eAAgBK,EADtG5lB,EACsG4lB,cAAeiC,EADrH7nB,EACqH6nB,SAAU1O,EAD/HnZ,EAC+HmZ,QACtI,IAAK7mB,OAAO0lB,OAAOwN,GAAW10B,OAC5B,OAAO,KAHF,IAKF62B,EAAct1B,KAAKyb,MAAnB6Z,WAECG,EAAaxkB,KAAKykB,KAAKlyB,EAAM/E,OAAS+2B,GACxCF,EAAaG,IACfH,EAAaG,GAEf,IAAIE,EAAenyB,EAChBqF,OAAO4sB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GAKtF,OAJI1O,IACF6O,EAAeA,EAAa7O,WAI5B7Z,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKoB,MAAN,CAAY/U,MAAO,CAACgV,UAAW,QAASC,UAAW,OAAQC,SAAWzC,EAAoB,aAAZ50B,IAC3Ei3B,EAAah0B,IAAI,SAAAmC,GAAI,OACpBmJ,EAAAC,EAAA/P,cAAC64B,GAAD,CACE1oB,IAAKxJ,EAAK/C,GACVkB,KAAMA,EACNkxB,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYA,EACZvvB,KAAMA,EACNovB,eAAgBA,EAChBI,MAAOA,EACPhqB,KAAMA,EACNiqB,cAAeA,EACfj0B,mBAAoBA,OAIzBm2B,EAAa,EACZxoB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACi5B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcv1B,KAAKu1B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAzDWhoB,aA8EvB+mB,GAAS9mB,aAAe,CACtB+kB,OAAO,EACPhqB,MAAM,EACNksB,SAAU,GACV1O,SAAS,GAGIuO,oBCpIAlD,iNAlEb1W,MAAQ,CACN3d,KAAM,GACNy4B,UAAW,OAGbC,iBAAmB,WAAM,IAChBvyB,EAAUlE,EAAK0L,MAAfxH,OADgB0kB,EAEG5oB,EAAK0b,MAAxB3d,EAFgB6qB,EAEhB7qB,KAAMy4B,EAFU5N,EAEV4N,UACbtyB,EAAOuyB,iBAAiB,CAAC14B,OAAMy4B,UAAWlZ,SAASkZ,EAAW,SAGhEE,QAAU,WACR12B,EAAK4uB,SAAS,CAAC7wB,KAAM,GAAIy4B,UAAW,OAGtCG,SAAW,SAACpwB,EAAD+F,GAAsB,IAAjBvO,EAAiBuO,EAAjBvO,KAAMR,EAAW+O,EAAX/O,MACpByC,EAAK4uB,SAAL1uB,OAAA+T,EAAA,EAAA/T,CAAA,GAAgBnC,EAAOR,6EAIvB,OACE2P,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEvH,KAAM,OACNwH,QAAS3pB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ9B,MAAO,SAAUtnB,KAAM,UAAWV,QAAS,sBAC5D+pB,OAAQ,oBACR/pB,QACEE,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAD,KACE/pB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEn5B,KAAM,OACNo5B,QAASC,KACTC,MAAO,OACPC,YAAa,kBACbzI,SAAU5uB,KAAK02B,SACfY,UAAQ,EACRC,aAAcv3B,KAAKyb,MAAM3d,OAE3BmP,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEn5B,KAAM,YACNo5B,QAASC,KACTC,MAAK,GAAAz3B,OAAKK,KAAKyb,MAAM8a,UAAhB,yCACLc,YAAa,0CACbzI,SAAU5uB,KAAK02B,SACfh3B,KAAM,QACN83B,IAAK,EACLtmB,IAAK,EACLqmB,aAAcv3B,KAAKyb,MAAM8a,UACzBe,UAAQ,MAKhBG,QAAS,CACP,CAACnqB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,SAAUoqB,UAAU,EAAM3qB,QAAS,oBAAqB6S,QAAS5f,KAAKw2B,iBAAkBlH,UAAWtvB,KAAKyb,MAAM3d,OAEtH24B,QAASz2B,KAAKy2B,iBAzDSnoB,cCAzBqpB,8MACJC,qBAAuB,WACrB73B,EAAK0L,MAAMmsB,qBAAqB73B,EAAK0L,MAAM1B,qFAGpC,IAAA6B,EAC2D5L,KAAKyL,MAAhExJ,EADA2J,EACA3J,KAAMkxB,EADNvnB,EACMunB,UAAW0E,EADjBjsB,EACiBisB,oBAAqB9tB,EADtC6B,EACsC7B,WAAYupB,EADlD1nB,EACkD0nB,MAEnDwE,IAAiB71B,GAAO8H,EAAWN,QAAQ7D,SAAS3D,EAAKlB,IACzDg3B,IAAiB91B,GAAO8H,EAAWiuB,gBAAkB/1B,EAAKlB,GAC1Dk3B,IAAaluB,EAAWR,UAAWQ,EAAWmuB,eAAiBj2B,EAAKlB,GACpEo3B,EAAUhF,EAAUppB,EAAWiuB,eAE/BI,EACJnrB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACE/nB,QAAShD,EAAWG,QAAWH,EAAWR,SAAW,WAAtB,SAAA5J,OAA4CoK,EAAWsuB,MAAvD,KAAA14B,OAAgEoK,EAAWuuB,QAAY,UACtH7qB,KAAM,CACJ3P,KAAMiM,EAAWG,QAAWH,EAAWR,SAAW,SAAW,OAAU,YACvE2Y,OAAQnY,EAAWG,QAAU,aAAUxL,KAK7C,OACEuO,EAAAC,EAAA/P,cAACq3B,GAAA,EAAD,CACEjnB,GAAIC,IACJf,GAAE,eAAA9M,OAAiBoK,EAAWhJ,IAE9B8f,MAAK5gB,OAAA+M,EAAA,EAAA/M,CAAA,GACEqzB,EAAa,CAAChN,MAAO,QAAb,GACTvc,EAAWhJ,KAAO82B,EAAsB,CAACpD,gBAAiB,cAAgB,KAGhFxnB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKG,QAAN,KACE1nB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKK,OAAN,KACE5nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAShD,EAAWjM,OAD7B,MAEEmP,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAOgD,EAAiB,aAAUr5B,EAAWqO,QAASorB,EAAQr6B,OACpEw1B,EAAQ8E,EAAc,MAEvB9E,EAkBE,KAjBFrmB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKU,KAAN,KACG4C,EAAiB7qB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,CAAC3P,KAAM,OAAQi3B,MAAO,SAAUhoB,QAAS,kBAAsB,KAC7F,IACAkrB,EAAahrB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,CAAC3P,KAAM,SAAUi3B,MAAO,UAAWhoB,QAAS,QACrEhD,EAAWR,SACT0D,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,SAAUV,QAASomB,EAAUppB,EAAWmuB,cAAgB/E,EAAUppB,EAAWmuB,cAAcp6B,KAAOiM,EAAWmuB,eACxH,KAEL,IACAnuB,EAAWG,UAAYH,EAAWR,SAAW0D,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,CAAC3P,KAAM,SAAUi3B,MAAO,SAAUhoB,QAAS,SAAa,KAClH,IACAqrB,EACA,IACDnrB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAO,GAAApN,OAAKoK,EAAWN,QAAQhL,OAAxB,YAA0CgP,KAAM,UAC7D,IACDR,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASnP,IAAOmM,EAAWorB,aAAeprB,EAAWqrB,eAAiBrrB,EAAWwuB,iBAAiB56B,OAAQ8P,KAAM,uBAvDxGa,aAyE7BqpB,GAAeppB,aAAe,CAC5B+kB,OAAO,OAGHkF,8MACJ/c,MAAQ,CACN6Z,WAAY,KAGdC,aAAe,SAACjvB,EAAD+F,GAAqB,IAAhBipB,EAAgBjpB,EAAhBipB,WAClBruB,EAAK0nB,SAAS,CAAC2G,wFAGR,IAAA3nB,EAC4F3N,KAAKyL,MAAjGxJ,EADA0L,EACA1L,KAAMkxB,EADNxlB,EACMwlB,UAAW9uB,EADjBsJ,EACiBtJ,YAAaivB,EAD9B3lB,EAC8B2lB,MAAOsE,EADrCjqB,EACqCiqB,qBAAsBC,EAD3DlqB,EAC2DkqB,oBAAqBrC,EADhF7nB,EACgF6nB,SACvF,IAAKv1B,OAAO0lB,OAAOwN,GAAW10B,OAC5B,OAAO,KAHF,IAKF62B,EAAct1B,KAAKyb,MAAnB6Z,WAECG,EAAaxkB,KAAKykB,KAAKrxB,EAAY5F,OAAS+2B,GAC9CF,EAAaG,IACfH,EAAaG,GAEf,IAAMgD,EAAqBp0B,EACxBwE,OAAO4sB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnF1O,UAEH,OACE7Z,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKoB,MAAN,CAAY/U,MAAO,CAACgV,UAAW,QAASC,UAAW,OAAQC,SAAWzC,EAAoB,aAAZ50B,IAC3E+5B,EAAmB92B,IAAI,SAAAoI,GAAU,OAChCkD,EAAAC,EAAA/P,cAACu7B,GAAD,CACEprB,IAAKvD,EAAWhJ,GAChBkB,KAAMA,EACNkxB,UAAWA,EACXppB,WAAYA,EACZ8tB,oBAAqBA,EACrBD,qBAAsBA,EACtBtE,MAAOA,OAIZmC,EAAa,EACZxoB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACi5B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcv1B,KAAKu1B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAnDiBhoB,aAmE7BkqB,GAAejqB,aAAe,CAC5B+kB,OAAO,EACPkC,SAAU,IAGGgD,UCjJFG,GAAb,SAAA7F,GAAA,SAAA6F,IAAA,IAAA5F,EAAAhzB,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA24B,GAAA,QAAAxd,EAAA3c,UAAAC,OAAAu0B,EAAA,IAAA3X,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAA0X,EAAA1X,GAAA9c,UAAA8c,GAAA,OAAAvb,EAAAE,OAAAwiB,EAAA,EAAAxiB,CAAAD,MAAA+yB,EAAA9yB,OAAAyiB,EAAA,EAAAziB,CAAA04B,IAAA1F,KAAA9hB,MAAA4hB,EAAA,CAAA/yB,MAAAL,OAAAqzB,MACE4F,aAAe,WACb74B,EAAK0L,MAAMmtB,aAAa74B,EAAK0L,MAAMjM,SAFvCO,EAAA,OAAAE,OAAA0iB,EAAA,EAAA1iB,CAAA04B,EAAA7F,GAAA7yB,OAAA2iB,EAAA,EAAA3iB,CAAA04B,EAAA,EAAArrB,IAAA,SAAAhQ,MAAA,WAgBW,IAAAsO,EAC2E5L,KAAKyL,MAAhFxJ,EADA2J,EACA3J,KAAM3C,EADNsM,EACMtM,mBAAoB6zB,EAD1BvnB,EAC0BunB,UAAW0F,EADrCjtB,EACqCitB,UAAWr5B,EADhDoM,EACgDpM,OAAQs5B,EADxDltB,EACwDktB,gBACzDC,EAAa/4B,KAAK+4B,WAElBZ,EAAUhF,EAAU3zB,EAAOmL,QAC3BquB,IAAkB/2B,GAAQzC,EAAOmL,SAAW1I,EAAKlB,GACjD+C,EAAO+0B,EAAUr5B,EAAO0F,KAAKf,QAC7BwvB,EAAU7vB,EAAOqvB,EAAUrvB,EAAK2F,QAAQ,IAAM,KAC9CmqB,EAAU9vB,EAAOqvB,EAAUrvB,EAAK2F,QAAQ,IAAM,KAC9CwvB,IAAmBF,GAAcA,EAAW7zB,KAAKgF,UAAY6uB,EAAW7zB,KAAKiG,IAC7E+tB,IAAqBH,GAAcA,EAAW7zB,KAAKiG,IACnDguB,IAAqBJ,KAAgBA,EAAW7zB,KAAKk0B,SAC3D,OACEnsB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAD,CACEjnB,GAAIC,IACJf,GAAE,WAAA9M,OAAaH,EAAOuB,IACtB6e,QAAS5f,KAAK44B,aACd/X,MAAK5gB,OAAA+M,EAAA,EAAA/M,CAAA,GACCT,EAAOuB,KAAO+3B,EAAkB,CAACrE,gBAAiB,cAAgB,KAGxExnB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKG,QAAN,KACE1nB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKK,OAAN,KACGxtB,EAAqB7H,IAExByN,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKU,KAAN,KACEjoB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,CACJ3P,KAAM,CAACu7B,EAAG,gBAAiBC,EAAG,cAAeC,EAAG,iBAAiB/5B,EAAO0F,KAAKs0B,YAC7EzE,MAAO,CAACsE,EAAG,QAASC,EAAG,SAAUC,EAAG,OAAO/5B,EAAO0F,KAAKs0B,aAEzDzsB,QAAO,GAAApN,OAAKH,EAAO0F,KAAKs0B,WAAjB,KAAA75B,OAA+BH,EAAO0F,KAAKu0B,eAClDC,MAAO,CAACL,EAAG,OAAQC,EAAG,SAAUC,EAAG,QAAQ/5B,EAAO0F,KAAKs0B,cAEzDvsB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,OAAQV,QAAO,MAAApN,OAAQw4B,EAAQr6B,QAC3Cm7B,EACChsB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACIrnB,KAAM,CAAC3P,KAAM,OAAQi3B,MAAOoE,EAAmB,SAAW,SAC1DpsB,QAASosB,EAAgB,YAAAx5B,OAAeo5B,EAAW7zB,KAAKk0B,SAA/B,cAAsD,YAEjFF,EACFjsB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACIrnB,KAAM,CAAC3P,KAAM,SAAUi3B,MAAOoE,EAAmB,SAAW,SAC5DpsB,QAASosB,EAAgB,eAAAx5B,OAAiBo5B,EAAW7zB,KAAKk0B,SAAjC,aAAuD,YAElFD,EACFlsB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACIrnB,KAAM,CAAC3P,KAAM,cAAei3B,MAAO,UACnChoB,QAAO,GAAApN,OAAKo5B,EAAW7zB,KAAKk0B,SAArB,eAET,KACHn3B,GAAQzC,EAAOm6B,WACd1sB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KACEjO,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgBrG,iBAC9C,CAAChB,KAAM,QAASi3B,MAAO,SACvBv1B,EAAO0F,KAAK2F,OACR,CAAC/M,KAAM,QAASi3B,MAAO,UAAY,CAACj3B,KAAM,IAAKi3B,MAAO,OAEhEhoB,QACEvN,EAAO0F,KAAK2F,QAAUrL,EAAO0F,KAAKC,gBAAgBrG,iBAC9CU,EAAO0F,KAAKC,gBAAgBy0B,UAC5Bp6B,EAAO0F,KAAK2F,OACRrL,EAAO0F,KAAKC,gBAAgB00B,QAAU,YAIlD5sB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,WACNV,QAASvN,EAAO0F,KAAKC,gBAAgBy0B,YAGxCp6B,EAAOs6B,YAAct6B,EAAOs6B,WAAWC,UACtC9sB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,OACNV,QAAO,GAAApN,OAA+C,OAA1CH,EAAOs6B,WAAWE,oBAA+Bx6B,EAAOs6B,WAAWE,oBAAsB,mBAA9F,MAAAr6B,OAAqHH,EAAOs6B,WAAWG,QAAvI,KAAAt6B,OAAkJH,EAAOs6B,WAAWI,UAApK,KAAAv6B,OAAiLH,EAAOs6B,WAAWC,UAAnM,KACPL,MAAK,GAAA/5B,OAA+C,OAA1CH,EAAOs6B,WAAWE,oBAAlB,GAAAr6B,OAAoDH,EAAOs6B,WAAWE,oBAAtE,uBAAiH,mBAAtH,MAAAr6B,OAA6IH,EAAOs6B,WAAWG,QAA/J,4BAAAt6B,OAAiMH,EAAOs6B,WAAWI,UAAnN,oBAAAv6B,OAA+OH,EAAOs6B,WAAWC,UAAjQ,gBAEL,KACHj2B,EACCo1B,GAAoBF,EAClB/rB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,OACNV,QAAO,GAAApN,OAAKg0B,EAAUA,EAAQ71B,KAAO,UAA9B,QAAA6B,OAA8Ci0B,EAAUA,EAAQ91B,KAAO,WAC9E47B,MAAK,qBAAA/5B,OAAuBg0B,EAAUA,EAAQ71B,KAAO,UAAhD,QAAA6B,OAAgEi0B,EAAUA,EAAQ91B,KAAO,aAGhGmP,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,OAAQV,QAAS,sBAE9B,KACJE,EAAAC,EAAA/P,cAACy3B,GAAD,CACE9wB,KAAM6K,EAAKsP,QAAQhL,+BAA+BzT,EAAO26B,iBAAiB/M,UAC1EzO,QAAM,EACNtgB,SAAUiB,SA7GxB,CAAAgO,IAAA,aAAA8sB,IAAA,WAKmB,IAAAzsB,EACQ3N,KAAKyL,MAArBxJ,EADQ0L,EACR1L,KAAMzC,EADEmO,EACFnO,OACb,OAAKyC,GAGAzC,GAGEyC,EAAKc,QAAQvD,EAAOuB,KALlB,SARb43B,EAAA,CAAgCrqB,aAgI1B+rB,8MACJ5e,MAAQ,CACN6Z,WAAY,KAGdC,aAAe,SAACjvB,EAAD+F,GAAqB,IAAhBipB,EAAgBjpB,EAAhBipB,WAClBruB,EAAK0nB,SAAS,CAAC2G,wFAGR,IAAArS,EAIHjjB,KAAKyL,MAFPxH,EAFKgf,EAELhf,OAAQhC,EAFHghB,EAEGhhB,KAAwBkxB,EAF3BlQ,EAEStgB,UAAYoG,KAAoC8vB,EAFzD5V,EAEuCvf,UAAYqF,KACxDhG,EAHKkgB,EAGLlgB,QAAS61B,EAHJ3V,EAGI2V,aAAcE,EAHlB7V,EAGkB6V,gBAAiBtD,EAHnCvS,EAGmCuS,SAE1C,IAAKv1B,OAAO0lB,OAAOwN,GAAW10B,OAC5B,OAAO,KANF,IAQF62B,EAAct1B,KAAKyb,MAAnB6Z,WAECG,EAAaxkB,KAAKykB,KAAK3yB,EAAQtE,OAAS+2B,GAC1CF,EAAaG,IACfH,EAAaG,GAEf,IAAM6E,EAAiBv3B,EACpB8F,OAAO4sB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnF1O,UAEH,OACE7Z,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKoB,MAAN,CAAY/U,MAAO,CAACgV,UAAW,QAASC,UAAW,SAChDwE,EAAe34B,IAAI,SAAAnC,GAAM,OACxByN,EAAAC,EAAA/P,cAACo9B,GAAD,CACEjtB,IAAK9N,EAAOuB,GACZkB,KAAMA,EACNkxB,UAAWA,EACX0F,UAAWA,EACXr5B,OAAQA,EACRo5B,aAAcA,EACdE,gBAAiBA,EACjBx5B,mBAAoB2E,EAAO3E,wBAIhCm2B,EAAa,EACZxoB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACi5B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcv1B,KAAKu1B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAvDahoB,aAsEzB+rB,GAAW9rB,aAAe,CACxBinB,SAAU,IAGGrD,UAAWkI,ICxMpBG,oLACK,IAAA5uB,EAC6E5L,KAAKyL,MAAlFxH,EADA2H,EACA3H,OAAQhC,EADR2J,EACQ3J,KAAMW,EADdgJ,EACchJ,MAAOwG,EADrBwC,EACqBxC,eAAgBqxB,EADrC7uB,EACqC6uB,iBAAkBC,EADvD9uB,EACuD8uB,mBAC9D,OACEztB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKoB,MAAN,CAAY/U,MAAO,CAACgV,UAAW,QAASC,UAAW,SAChDlzB,EAAMjB,IAAI,SAAAg5B,GAAS,OAClB1tB,EAAAC,EAAA/P,cAACy9B,GAAD,CACEttB,IAAKqtB,EAAU55B,GACfkD,OAAQA,EACRhC,KAAMA,EACN04B,UAAWA,EACXvxB,eAAgBA,EAChBqxB,iBAAkBA,EAClBC,mBAAoBA,cAbTpsB,aA8BjBusB,8MACJC,kBAAoB,WAClB/6B,EAAK0L,MAAMxH,OAAO62B,mBAAmB/6B,EAAK0L,MAAMxJ,KAAKuG,gBAGvDuyB,cAAgB,WACdh7B,EAAK0L,MAAMxH,OAAO62B,kBAAkB/6B,EAAK0L,MAAMxJ,KAAKuG,cAAgBzI,EAAK0L,MAAMkvB,UAAU55B,IAAahB,EAAK0L,MAAMkvB,UAAU55B,6EAGpH,IASHi6B,EAAkBC,EAAqBC,EAAgBC,EAAmBC,EATvEztB,EAIH3N,KAAKyL,MAFPxH,EAFK0J,EAEL1J,OAAQhC,EAFH0L,EAEG1L,KAAM04B,EAFThtB,EAESgtB,UAFTU,EAAA1tB,EAGLhL,UAAYyG,EAHPiyB,EAGOjyB,eAA8BqxB,EAHrCY,EAGuB7yB,YAAgDkyB,EAHvEW,EAGuDlyB,cAE9D,OAAKlF,GAAWhC,GAAS04B,EAAU1xB,QAK/BhH,EAAKlB,KAAO45B,EAAU55B,IACxBo6B,EAAoBn7B,KAAK86B,kBACrB74B,EAAKuG,aACPwyB,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAMx9B,KAAM,gBAErCs9B,EADEhyB,EACa,eAAAzJ,OAAkByJ,EAAetL,KAAjC,OAEG,4BAGpBk9B,EAAmB,SACnBE,EAAiB,CAACp9B,KAAM,QACpB48B,GAAsBA,EAAmBj8B,OACT,IAA9Bi8B,EAAmBj8B,QACrB28B,EAAe,GAAAz7B,OAAM+6B,EAAmB,GAAG58B,KAA5B,uBACfm9B,GAAsB,IAEtBG,EAAe,GAAAz7B,OAAM+6B,EAAmBj8B,OAAzB,8BACfw8B,GAAsB,GAItBG,EAFOX,GAAoBA,EAAiBh8B,OACd,IAA5Bg8B,EAAiBh8B,OACJ,QAAAkB,OAAW86B,EAAiB,GAAG38B,MAE/B,GAAA6B,OAAM86B,EAAiBh8B,OAAvB,wBAGC,UAItB08B,EAAoBn7B,KAAK+6B,cACrB3xB,GAAkBA,EAAerI,KAAO45B,EAAU55B,IACpDi6B,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAMx9B,KAAM,gBACvCs9B,EAAe,eAAAz7B,OAAkBg7B,EAAU78B,KAA5B,SAEfk9B,EAAmB,SACnBE,EAAiB,CAACp9B,KAAM,QACpB68B,EAAUnyB,cAAgBvG,EAAKlB,IACjCq6B,EAAe,GAAAz7B,OAAMg7B,EAAU78B,KAAhB,uBACfm9B,GAAsB,GAEtBG,GADmC,IAA1BT,EAAUnyB,YACJ,GAAA7I,OAAMg7B,EAAU78B,KAAhB,qBAEA,aAAA6B,OAAgBg7B,EAAU78B,QAM7CmP,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9oB,UAAWgR,IAAW,CAAC2V,UAAWuG,IAClClG,MAAOiG,EACPpb,QAASub,GAETluB,EAAAC,EAAA/P,cAAC63B,GAAA,EAASkG,GACTE,IA9DI,YAfqB9sB,aA0FlCusB,GAAsB1I,GAAW0I,iBAE3BU,oLACK,IAAAtY,EAC2BjjB,KAAKyL,MAAhCxH,EADAgf,EACAhf,OAAQhC,EADRghB,EACQhhB,KAAM04B,EADd1X,EACc0X,UAErB,OACE1tB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAD,KACEvnB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKG,QAAN,KACE1nB,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,QAAStD,KAAM,OAAQoD,KAAMmI,EAAU55B,KAC5DkM,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKK,OAAN,KACG8F,EAAU78B,KACV,IACAmG,GAAUhC,GAAQA,EAAKlB,KAAO45B,EAAU55B,GACvCkM,EAAAC,EAAA/P,cAACq+B,GAAD,CAAUv3B,OAAQA,EAAQhC,KAAMA,EAAM20B,QAAS3pB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WACpF,MAENE,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKU,KAAN,KACGjzB,GAAQ04B,EAAU55B,KAAOkB,EAAKlB,GAAKkM,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,KAAO7nB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,OAAQi3B,MAAO,UAAlC,MAA0D,KAC7F,IACA9yB,GAAQ04B,EAAU55B,KAAOkB,EAAKlB,GAAKkM,EAAAC,EAAA/P,cAACq+B,GAAD,CAAUv3B,OAAQA,EAAQhC,KAAMA,EAAM20B,QAAS3pB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,KAAKN,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,OAAQi3B,MAAO9yB,EAAKw5B,YAAc,QAAU,QAAUx5B,EAAKw5B,YAAc,GAAK,iBAA6B,KACzN,IACAd,EAAUnyB,YAAcyE,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,KAAO7nB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMsG,SAAO,EAACx9B,KAAM,eAAgBi3B,MAAO,UAAlD,SAA6E,KACrG,IACA4F,EAAU1xB,OAASgE,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,KAAO7nB,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,SAAUi3B,MAAO,UAApC,UAAgE,KACnF,IACD9nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACE4E,MAAK,GAAA/5B,OAAKg7B,EAAU13B,wBAA0B,iBAAmB,GAA5D,QAAAtD,OAAqEg7B,EAAUe,SAA/E,YAAA/7B,OAAkGg7B,EAAUpE,WACjHxB,MAAO,CAACsE,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASoB,EAAUv3B,OAEtD6J,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CACEl3B,KAAM68B,EAAU13B,wBAA0B,WAAa,eACvD8xB,MAAO4F,EAAU13B,wBAA0B,cAAWvE,IAEvD,IAAKi8B,EAAUgB,OAEjB,IACD1uB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOrnB,KAAM,SAAUV,QAAO,IAAApN,OAAMg7B,EAAUe,SAAhB,KAAA/7B,OAA4Bg7B,EAAUpE,aACnE,IACAoE,EAAUiB,mBACT3uB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,CAAC3P,KAAM,UAAWi3B,MAAO,UAC/BhoB,QAAS4tB,EAAUiB,mBACnBlC,MAAK,OAAA/5B,OAASg7B,EAAUiB,mBAAnB,KAAAj8B,OAAyCg7B,EAAUkB,gBAAnD,0BAEH,KACLlB,EAAUpG,cAAgBoG,EAAUpG,aAAawF,UAChD9sB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CACErnB,KAAM,SACNV,QAAO,GAAApN,OAAKg7B,EAAUpG,aAAauH,aAA5B,YAAAn8B,OAA8Cg7B,EAAUpG,aAAa0F,QAArE,KAAAt6B,OAAgFg7B,EAAUpG,aAAa2F,UAAvG,KAAAv6B,OAAoHg7B,EAAUpG,aAAawF,UAA3I,KACPL,MAAK,GAAA/5B,OAAKg7B,EAAUpG,aAAauH,aAA5B,0BAAAn8B,OAAiEg7B,EAAUpG,aAAa0F,QAAxF,6BAAAt6B,OAA2Hg7B,EAAUpG,aAAa2F,UAAlJ,oBAAAv6B,OAA8Kg7B,EAAUpG,aAAawF,UAArM,iBAEL,OAGP91B,GAAUhC,GAAQ04B,EAAU1xB,OAASgE,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKG,QAAN,CAAcoH,OAAK,GACvD9uB,EAAAC,EAAA/P,cAAA,OAAK4Q,UAAU,kBACbd,EAAAC,EAAA/P,cAAC6+B,GAAD,CAAqBrB,UAAWA,MAElB,aAzDHrsB,aAyEjB2tB,8MACJxgB,MAAQ,CACNxZ,KAAMgF,EAAKwE,MAAMxJ,KACjBC,SAAU+E,EAAKwE,MAAMxJ,KAAKnE,KAC1BoI,SAAU,MAcZg2B,eAAiB,SAAA7vB,GAAuB,IAAZ/O,EAAY+O,EAArB8vB,OAAS7+B,MAC1B2J,EAAK0nB,SAAS,CAACzsB,SAAU5E,OAG3B8+B,eAAiB,SAAA1nB,GAAuB,IAAZpX,EAAYoX,EAArBynB,OAAS7+B,MAC1B2J,EAAK0nB,SAAS,CAACzoB,SAAU5I,OAG3B++B,eAAiB,WACfp1B,EAAKwE,MAAMxH,OAAOi4B,eAAej1B,EAAKwU,MAAMvZ,aAG9Co6B,eAAiB,WACfr1B,EAAKwE,MAAMxH,OAAOm4B,eAAen1B,EAAKwU,MAAMvV,UAC5Ce,EAAK0nB,SAAS,CAACzoB,SAAU,8EAGlB,IAAAyiB,EACsB3oB,KAAKyb,MAA3BvZ,EADAymB,EACAzmB,SAAUgE,EADVyiB,EACUziB,SADVqe,EAEiBvkB,KAAKyL,MAAtBxJ,EAFAsiB,EAEAtiB,KAAM20B,EAFNrS,EAEMqS,QAEb,OACE3pB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEC,QAASA,EACTxH,KAAM,QACN0H,OAAQ,YACR/pB,QACEE,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACg6B,GAAA,EAAD,CAAOC,MAAO,OAAQ95B,MAAO4E,EAAU0sB,SAAU5uB,KAAKk8B,eAAgBK,OAAQ,CAACxvB,QAAS,SAAU6S,QAAS5f,KAAKq8B,kBAChHpvB,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAACg6B,GAAA,EAAD,CAAOC,MAAO,CAACrqB,QAAS9K,EAAKw5B,YAAc,kBAAoB,iBAAkB1G,MAAO9yB,EAAKw5B,YAAc,QAAU,OAAQn+B,MAAO4I,EAAU0oB,SAAU5uB,KAAKo8B,eAAgBG,OAAQ,CAACxvB,QAAS,SAAUgoB,MAAO9yB,EAAKw5B,iBAAc/8B,EAAY,QAASkhB,QAAS5f,KAAKs8B,mBAG1Q7E,QAAS,CACP,CAACnqB,IAAK,SAAUkvB,UAAU,EAAMzvB,QAAS,gEA7CjBtB,EAAOgQ,GACrC,OAAIhQ,EAAMxJ,OAASwZ,EAAMxZ,KAChB,CACLA,KAAMwJ,EAAMxJ,KACZC,SAAUuJ,EAAMxJ,KAAOwJ,EAAMxJ,KAAKnE,KAAO,MAItC,YAfYwQ,aAiEVmuB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAj0B,EAAAzI,OAAAC,EAAA,EAAAD,CAAAD,KAAAy8B,GAAA,QAAAG,EAAAp+B,UAAAC,OAAAu0B,EAAA,IAAA3X,MAAAuhB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA7J,EAAA6J,GAAAr+B,UAAAq+B,GAAA,OAAAn0B,EAAAzI,OAAAwiB,EAAA,EAAAxiB,CAAAD,MAAA28B,EAAA18B,OAAAyiB,EAAA,EAAAziB,CAAAw8B,IAAAxJ,KAAA9hB,MAAAwrB,EAAA,CAAA38B,MAAAL,OAAAqzB,MACEvX,MAAQ,CACNvZ,SAAU,GACVgE,SAAU,GACVqC,YAAY,GAJhBG,EAOEwzB,eAAiB,SAAA3vB,GAAuB,IAAZjP,EAAYiP,EAArB4vB,OAAS7+B,MAC1BoL,EAAKimB,SAAS,CAACzsB,SAAU5E,KAR7BoL,EAWE0zB,eAAiB,SAAA5vB,GAAuB,IAAZlP,EAAYkP,EAArB2vB,OAAS7+B,MAC1BoL,EAAKimB,SAAS,CAACzoB,SAAU5I,KAZ7BoL,EAeEo0B,iBAAmB,SAAArmB,GAAyB,IAAdsmB,EAActmB,EAAvB0lB,OAASY,QAC5Br0B,EAAKimB,SAAS,CAACpmB,WAAYw0B,KAhB/Br0B,EAmBEs0B,MAAQ,WACNt0B,EAAK+C,MAAMxH,OAAO+4B,MAAMt0B,EAAK+S,MAAMvZ,SAAUwG,EAAK+S,MAAMvV,SAAUwC,EAAKH,YACvEG,EAAKimB,SAAS,CAACzsB,SAAU,GAAIgE,SAAU,MArB3CwC,EAAA,OAAAzI,OAAA0iB,EAAA,EAAA1iB,CAAAw8B,EAAAC,GAAAz8B,OAAA2iB,EAAA,EAAA3iB,CAAAw8B,EAAA,EAAAnvB,IAAA,SAAAhQ,MAAA,WAwBW,IAAA2/B,EACkCj9B,KAAKyb,MAAvCvZ,EADA+6B,EACA/6B,SAAUgE,EADV+2B,EACU/2B,SAAUqC,EADpB00B,EACoB10B,WAE3B,OACE0E,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACE5N,IAAK/oB,KAAKk9B,MACVtG,QAAS3pB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,IAAKE,KAAM,UAAWV,QAAS,SAAUowB,MAAO,SACpE/N,KAAM,QACN0H,OAAQ,SACR/pB,QACEE,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACg6B,GAAA,EAAD,CAAOC,MAAO,OAAQ95B,MAAO4E,EAAU0sB,SAAU5uB,KAAKk8B,iBACtDjvB,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAACg6B,GAAA,EAAD,CAAOC,MAAO,WAAY95B,MAAO4I,EAAU0oB,SAAU5uB,KAAKo8B,iBAC1DnvB,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,cACP2F,QAASx0B,EACTqmB,SAAU5uB,KAAK88B,oBAIrBrF,QAAS,CACP,CAACnqB,IAAK,SAAUkvB,UAAU,EAAMzvB,QAAS,UACzC,CAACO,IAAK,QAASoqB,UAAU,EAAM3qB,QAAS,SAAU6S,QAAS5f,KAAKg9B,cAhD1EP,EAAA,CAA2BnuB,aA2Dd+uB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAl0B,EAAApJ,OAAAC,EAAA,EAAAD,CAAAD,KAAAq9B,GAAA,QAAAG,EAAAh/B,UAAAC,OAAAu0B,EAAA,IAAA3X,MAAAmiB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAzK,EAAAyK,GAAAj/B,UAAAi/B,GAAA,OAAAp0B,EAAApJ,OAAAwiB,EAAA,EAAAxiB,CAAAD,MAAAu9B,EAAAt9B,OAAAyiB,EAAA,EAAAziB,CAAAo9B,IAAApK,KAAA9hB,MAAAosB,EAAA,CAAAv9B,MAAAL,OAAAqzB,MACE0K,OAAS,WACPr0B,EAAKoC,MAAMxH,OAAOy5B,UAFtBr0B,EAAA,OAAApJ,OAAA0iB,EAAA,EAAA1iB,CAAAo9B,EAAAC,GAAAr9B,OAAA2iB,EAAA,EAAA3iB,CAAAo9B,EAAA,EAAA/vB,IAAA,SAAAhQ,MAAA,WAMI,OACE2P,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,IAAKE,KAAM,UAAWV,QAAS,UAAW6S,QAAS5f,KAAK09B,aAPzEL,EAAA,CAA4B/uB,aA0Jb6jB,iNAzIb2I,kBAAoB,WAClB9wB,EAAKyB,MAAMxH,OAAO62B,mBAAmB9wB,EAAKyB,MAAMxJ,KAAKuG,sFAG9C,IAAAiC,EAAAzK,KAAAytB,EAOHztB,KAAKyL,MALPxH,EAFKwpB,EAELxpB,OAAQhC,EAFHwrB,EAEGxrB,KAFH07B,EAAAlQ,EAGL9qB,UAAkBwwB,EAHbwK,EAGO50B,KAAiBnG,EAHxB+6B,EAGwB/6B,MAAOqG,EAH/B00B,EAG+B10B,OAAQC,EAHvCy0B,EAGuCz0B,QAASE,EAHhDu0B,EAGgDv0B,eAAgBZ,EAHhEm1B,EAGgEn1B,YAAaW,EAH7Ew0B,EAG6Ex0B,cAH7Ey0B,EAAAnQ,EAIL/pB,UAAkBm1B,EAJb+E,EAIO70B,KAAiBS,EAJxBo0B,EAIwBp0B,OAAQE,EAJhCk0B,EAIgCl0B,UAAWC,EAJ3Ci0B,EAI2Cj0B,WAAYC,EAJvDg0B,EAIuDh0B,cAAgBspB,EAJvEzF,EAIuEyF,eAAgB0E,EAJvFnK,EAIuFmK,qBAJvFiG,EAAApQ,EAKL3qB,YAAcsI,EALTyyB,EAKSzyB,cAAerI,EALxB86B,EAKwB96B,QAASsI,EALjCwyB,EAKiCxyB,aAAcC,EAL/CuyB,EAK+CvyB,gBAAiBJ,EALhE2yB,EAKgE3yB,YACrE5G,EANKmpB,EAMLnpB,gBAEW8uB,EAAmB9uB,EAAzByE,KAEP,OAAK9G,EAKHgL,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACq3B,GAAA,EAAKoB,MAAN,CAAYM,UAAQ,GACjBj0B,EACCgL,EAAAC,EAAA/P,cAACy9B,GAAD,CACE32B,OAAQA,EACR02B,UAAW14B,EACXA,KAAMA,EACNmH,eAAgBA,EAChBqxB,iBAAkBjyB,EAClBkyB,mBAAoBvxB,IAEpB,KACHiC,EAAc3M,OACbwO,EAAAC,EAAA/P,cAACo9B,GAAD,CACEt4B,KAAMA,EACNkxB,UAAWA,EACX0F,UAAWA,EACXr5B,OAAQ4L,EAAc,GACtBwtB,aAAc54B,KAAKyL,MAAMqyB,iBACzBhF,gBAAiB,KACjBx5B,mBAAoB2E,EAAO3E,qBAE3B,MAEN2N,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,UAAW8pB,MAAO,gBAAiB/H,MAAO7lB,EAAQurB,MAAO,SAC/D,CAACznB,IAAK,aAAc8pB,MAAO,mBAAoB/H,MAAO3lB,EAAWqrB,MAAO,SACxE,CAACznB,IAAK,UAAW8pB,MAAO,gBAAiB/H,MAAO1lB,GAChD,CAAC2D,IAAK,aAAc8pB,MAAO,mBAAoB/H,MAAOzlB,IACtD7F,OAAO,SAAA4S,GAAA,OAAAA,EAAE0Y,MAAiB5wB,SAAQkD,IAAI,SAAAuV,GAAA,IAAE5J,EAAF4J,EAAE5J,IAAK8pB,EAAPlgB,EAAOkgB,MAAO/H,EAAdnY,EAAcmY,MAAO0F,EAArB7d,EAAqB6d,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAAC6gC,GAAD,CACE/7B,KAAMA,EACNkxB,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYtwB,EACZS,MAAO6rB,EACP6D,eAAgBA,EAChB5zB,mBAAoB2E,EAAO3E,4BAKlCyD,EAAWkK,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACV9pB,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAQ,WACnC,IAAIoyB,EAAc,CAChB,CAAC3wB,IAAK,gBAAiB8pB,MAAO,kBAAmB/H,MAAOhkB,EAAc0pB,MAAO,SAC7E,CAACznB,IAAK,oBAAqB8pB,MAAO,cAAe/H,MAAO/jB,GACxD,CAACgC,IAAK,eAAgB8pB,MAAO,iBAAkB/H,MAAOnkB,IACtDnH,OAAO,SAAAqT,GAAA,OAAAA,EAAEiY,MAAiB5wB,SAM5B,OALKw/B,EAAYx/B,SACfw/B,EAAc,CACZ,CAAC3wB,IAAK,UAAW8pB,MAAO,UAAW/H,MAAOtsB,KAGvCk7B,EAX4B,GAYhCt8B,IAAI,SAAA0V,GAAA,IAAE/J,EAAF+J,EAAE/J,IAAK8pB,EAAP/f,EAAO+f,MAAO/H,EAAdhY,EAAcgY,MAAO0F,EAArB1d,EAAqB0d,MAArB,MACL,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC5G9wB,EAAAC,EAAA/P,cAAC+gC,GAAD,CAAYtF,aAAcnuB,EAAKgB,MAAMqyB,iBAAkB/6B,QAASssB,WAI5D,KACdpiB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACghC,GAAD,MACAlxB,EAAAC,EAAA/P,cAAA,WAAK8P,EAAAC,EAAA/P,cAAA,WACL8P,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,UAAW8pB,MAAO,kCAAmC/H,MAAO/qB,EAAgB+F,gBAAiB0qB,MAAO,SAC1G,CAACznB,IAAK,aAAc8pB,MAAO,uCAAwC/H,MAAO/qB,EAAgBiG,mBAAoBwqB,MAAO,SACrH,CAACznB,IAAK,UAAW8pB,MAAO,sBAAuB/H,MAAO/qB,EAAgBqF,YACtE,CAAC2D,IAAK,aAAc8pB,MAAO,yBAA0B/H,MAAO/qB,EAAgBsF,gBAC5E7F,OAAO,SAAAwT,GAAA,OAAAA,EAAE8X,MAAiB5wB,SAAQkD,IAAI,SAAAy8B,GAAA,IAAE9wB,EAAF8wB,EAAE9wB,IAAK8pB,EAAPgH,EAAOhH,MAAO/H,EAAd+O,EAAc/O,MAAO0F,EAArBqJ,EAAqBrJ,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAACkhC,GAAD,CACEp8B,KAAMA,EACNkxB,UAAWA,EACX9uB,YAAagrB,EACbuI,qBAAsBA,WAK9B3qB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,SAAU8pB,MAAO,eAAgB/H,MAAOpmB,EAAQ8rB,MAAO,SAC7D,CAACznB,IAAK,UAAW8pB,MAAO,gBAAiB/H,MAAOnmB,GAChD,CAACoE,IAAK,MAAO8pB,MAAO,YAAa/H,MAAOzsB,IACxCmB,OAAO,SAAAyT,GAAA,OAAAA,EAAE6X,MAAiB5wB,SAAQkD,IAAI,SAAA8V,GAAA,IAAEnK,EAAFmK,EAAEnK,IAAK8pB,EAAP3f,EAAO2f,MAAO/H,EAAd5X,EAAc4X,MAAO0F,EAArBtd,EAAqBsd,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAACmhC,GAAD,CACEr6B,OAAQA,EACRrB,MAAOysB,EACPptB,KAAMA,EACNmH,eAAgBA,EAChBqxB,iBAAkBjyB,EAClBkyB,mBAAoBvxB,YApGvB8D,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,uCAhBOjwB,cClUdkwB,8MAUJ/iB,MAAQ,CACNgjB,aAAc,KACd36B,KAAM/D,EAAK0L,MAAM3H,KACjBgnB,eAAgB,QAGlB4T,gBAAkB5W,IAAMC,cAExBtS,SAAW,SAAA3R,GACL/D,EAAK0L,MAAMkzB,OACb5+B,EAAK4uB,SAAS,CAAC7qB,SAEf/D,EAAK0L,MAAMgK,SAAS3R,GAElB/D,EAAK0L,MAAMmzB,yBACb7+B,EAAK0L,MAAMmzB,wBAAwB96B,MAIvCoqB,aAAe,WACbnuB,EAAK0V,SAAS1V,EAAK0b,MAAM3X,KAAKoqB,mBAGhCpO,KAAO,WACL/f,EAAK0V,SAAS1V,EAAK0b,MAAM3X,KAAKgc,WAGhC+e,QAAU,WACR9+B,EAAK0V,SAAS1V,EAAK0b,MAAM3X,KAAKoD,YAAY8I,aAG5C8uB,WAAa,SAAAh7B,GACX,IAAM26B,EAAe36B,IAAS/D,EAAK0b,MAAM3X,KAAO,KAAOA,EACvD/D,EAAK4uB,SAAS,CAAC8P,iBACX1+B,EAAK0L,MAAMszB,sBACbh/B,EAAK0L,MAAMszB,qBAAqBN,MAIpCO,mBAAqB,SAAAl7B,GACnB/D,EAAK++B,WAAWh7B,MAGlBm7B,uBAAyB,WACvBl/B,EAAK++B,WAAW/+B,EAAK0b,MAAMgjB,aAAavQ,mBAG1CgR,eAAiB,WACfn/B,EAAK++B,WAAW/+B,EAAK0b,MAAMgjB,aAAa3e,WAG1Cqf,aAAe,WACbp/B,EAAK++B,WAAW,SAGlBH,OAAS,WACP,IAAM90B,EAAQ9J,EAAKq/B,mBACfv1B,EAAMpL,QACRsB,EAAK0L,MAAMkzB,OAAO90B,EAAO9J,EAAK0b,MAAM3X,SAoBxCu7B,cAAgB,WACdt/B,EAAK0L,MAAMkzB,OAAO,aAwBpBW,sBAAwB,WACjBv/B,EAAK0L,MAAMxH,OAAO3E,mBAAmBoH,gBAGxC3G,EAAK0L,MAAM8zB,eAAXt/B,OAAA+M,EAAA,EAAA/M,CAAA,GAA8BF,EAAK0L,MAAMxJ,KAAK5D,SAA9C,CAAwDqI,iBAAiB,KAFzE3G,EAAK2+B,gBAAgBtW,QAAQoX,gBAMjCC,kBAAoB,WAClB1/B,EAAK0L,MAAM8zB,eAAXt/B,OAAA+M,EAAA,EAAA/M,CAAA,GAA8BF,EAAK0L,MAAMxJ,KAAK5D,SAA9C,CAAwDqI,iBAAiB,KACrE3G,EAAK2/B,aACP3/B,EAAK4+B,YAmBTgB,uBAAyB,SAAAtzB,GAAsB,IAApBye,EAAoBze,EAApBye,eACzB/qB,EAAK4uB,SAAS,CAAC7D,sGAxEE,IACJ8U,EAAa5/B,KAAKyL,MAAxB3H,KAED0U,EADoBxY,KAAKyb,MAAxB3X,KACmB6U,YACpBknB,EAAiBrnB,EAAQ5P,UAC7B,SAAA9E,GAAI,OAAIA,EAAK0O,yBAA2BotB,EAAUptB,yBACpD,OAAIqtB,EAAiB,GACnBn/B,QAAQo/B,MAAM,uCACP,IAEUtnB,EAAQ3P,MAAMg3B,EAAiB,GACzBl+B,IAAI,SAAAmC,GAAI,OAAIA,EAAKiL,sDASzBiZ,EAAWC,GACxBjoB,KAAKyL,MAAM3H,OAASkkB,EAAUlkB,SAE7B9D,KAAKyL,MAAM3H,OACRkkB,EAAUlkB,MACX9D,KAAKyL,MAAM3H,KAAKoD,cAAgB8gB,EAAUlkB,KAAKoD,aAC/ClH,KAAKyL,MAAM3H,KAAK0O,yBAA2BwV,EAAUlkB,KAAK0O,wBAC1DxS,KAAKyL,MAAM3H,KAAKi8B,mBAAqB/X,EAAUlkB,KAAKi8B,oBAGvD//B,KAAK8+B,WAAW,MAChB9+B,KAAK2uB,SAAS,CAAC7qB,KAAM9D,KAAKyL,MAAM3H,KAAMk8B,WAAW,MAGjDhgC,KAAKyL,MAAMxH,OAAO3E,mBAAmBoH,kBAClC1G,KAAK0/B,UAAU1X,EAAWC,IAAcjoB,KAAK0/B,aAChD1/B,KAAK2+B,6CAoBuC,IAAxClzB,EAAwCjN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCwB,KAAKyL,MAAOgQ,EAAoBjd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZwB,KAAKyb,MAClCkjB,EAAUlzB,EAAVkzB,OACAF,EAAsBhjB,EAAtBgjB,aAAc36B,EAAQ2X,EAAR3X,KACrB,QACI66B,IACEF,GACD36B,IAAS2H,EAAM3H,QACb9D,KAAKo/B,mBAAmB3gC,SAE3BqF,EAAKyF,UACFzF,EAAKwL,aAAe7D,EAAM3H,KAAKwL,6CAS/B,IAAA1D,EAGH5L,KAAKyL,MADPxH,EAFK2H,EAEL3H,OAAQhC,EAFH2J,EAEG3J,KAAMg+B,EAFTr0B,EAESq0B,MAAO3X,EAFhB1c,EAEgB0c,aAAc4X,EAF9Bt0B,EAE8Bs0B,UAAWC,EAFzCv0B,EAEyCu0B,SAA4BhN,EAFrEvnB,EAEmDjJ,UAAYoG,KAF/D4f,EAIsC3oB,KAAKyb,MAA3CgjB,EAJA9V,EAIA8V,aAAc36B,EAJd6kB,EAIc7kB,KAAMgnB,EAJpBnC,EAIoBmC,eACrBsV,EAAc3B,GAAgB36B,EAC9BqwB,EAAW7L,EAAa7pB,OAAS,EACjCihC,EAAY1/B,KAAK0/B,YACjBW,IAAmBH,GAAYA,EAAUG,iBACzCxX,EAAoBP,EAAa1iB,SAAS+I,EAAKmC,UAC/CvB,GAAWkvB,IAAiBz+B,KAAKyL,MAAMkzB,OAAS76B,EAAKiV,WAAa/Y,KAAKyL,MAAM3H,KAAKiV,WAAajV,EAAKyL,SACpG+wB,IAAkBtgC,KAAKyL,MAAMkzB,QAAWF,IAAgB36B,EAAKgL,UAE9DyxB,EACJtzB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGjB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACqjC,GAAD,CACEjwB,OAAQsY,EAAoBla,EAAKmC,SAAWnC,EAAKqC,SACjDyvB,WAAYP,EAAY/M,EAAU+M,EAAUz2B,QAAQof,EAAoB,EAAI,IAAM,KAClF6W,UAAWA,EACXgB,mBAAoBhB,EACpBnwB,QAASA,EACT+wB,YAAaA,EACb3B,OAAQ3+B,KAAKyL,MAAMkzB,OAAS3+B,KAAK2+B,OAAS,KAC1C7e,KAAM9f,KAAKyL,MAAMkzB,OAAS3+B,KAAKkuB,aAAeluB,KAAK8f,KACnD6gB,SAAU3gC,KAAKkuB,aACfoR,sBAAuBt/B,KAAKs/B,sBAC5Bx7B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3B2gC,MAAOA,EACP3X,aAAcA,KAGlBrb,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACqjC,GAAD,CACEjwB,OAAQsY,EAAoBla,EAAKqC,SAAWrC,EAAKmC,SACjD2vB,WAAYP,EAAY/M,EAAU+M,EAAUz2B,QAAQof,EAAoB,EAAI,IAAM,KAClF6W,WAAW,EACXgB,mBAAoBhB,EACpBnwB,QAASA,EACT+wB,YAAaA,EACb3B,OAAQ3+B,KAAKyL,MAAMkzB,OAAS3+B,KAAK2+B,OAAS,KAC1C7e,KAAM9f,KAAKyL,MAAMkzB,OAAS3+B,KAAKkuB,aAAeluB,KAAK8f,KACnD6gB,SAAU3gC,KAAKkuB,aACfoR,sBAAuBt/B,KAAKs/B,sBAC5Bx7B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3B2gC,MAAOA,EACP3X,aAAcA,KAGlBrb,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACyjC,GAAD,CAAgB98B,KAAMA,EAAM26B,aAAcA,EAAcK,WAAY9+B,KAAK8+B,cAE3E7xB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC0jC,GAAD,CAAqBjS,SAAU5uB,KAAK2/B,0BAErCQ,GAGAW,EACH7zB,EAAAC,EAAA/P,cAACy3B,GAAD,CACE9wB,KAAMs8B,EACNtV,eAAgBA,EAChBrV,SAAUgpB,EAAez+B,KAAKg/B,mBAAqBh/B,KAAKyV,SACxD0Y,cAAeiS,IAAgBt8B,EAC7B9D,KAAKyL,MAAMkzB,OAAS3+B,KAAKyL,MAAM3H,KAAKiV,WAClC/Y,KAAKyL,MAAM3H,KAAKyL,QAAUvP,KAAKyL,MAAM3H,KAAKgL,SAASiK,WAAa/Y,KAAKyL,MAAM3H,KAAKiV,WAEhF,EACJuP,aAAc8X,IAAgBt8B,EAAOwkB,OAAe5pB,EACpDL,SAAU4F,EAAO3E,mBACjBygB,SAAU9b,EAAO3E,mBAAmBtB,MAAM8I,WAC1CikB,WAAY9mB,EAAO3E,mBAAmBtB,MAAM+I,SAIhD,OACEkG,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,CAASlW,MAAO,CAACkgB,UAAW,WAC1B9zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,EAAC8K,QAAS,QAASD,UAAW,UAC1C9zB,EAAAC,EAAA/P,cAAC8jC,GAAA,EAAD,CAAY1zB,GAAI0oB,KAAKE,IAAK+K,SAAU,KAClCj0B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,KAAcZ,GACdtzB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,KAAcL,IAEhB7zB,EAAAC,EAAA/P,cAAC8jC,GAAA,EAAD,CAAY1zB,GAAI6zB,WAAUC,SAAU,KAClCp0B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaG,WAAW,EAAOP,UAAW,UACvCD,IAGL7zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaG,WAAW,EAAOP,UAAW,UACvCR,OAMVvgC,KAAKyL,MAAMkzB,QAAUxK,EACpBlnB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACokC,GAAA,EAAU3L,MAAX,CAAiB4L,OAAQ,MAAOpS,KAAM,QACpCniB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MACT2P,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEC,QAAS3pB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAClN,WAAYmP,GAAgBz+B,KAAKyL,MAAM3H,KAAKyF,UAAW82B,EAAmB,QAAU,UAC9GvJ,OAAQuJ,EAAmB,SAAW,UACtCtzB,QAAO,4BAAApN,OAA8B0gC,EAAmB,QAAU,UAA3D,KAAA1gC,OAAwE0gC,EAAmB,qCAAuC,IACzI5I,QAAS,CAAC,CAACnqB,IAAK,SAAUP,QAASszB,EAAmB,QAAU,SAAU7D,UAAU,EAAM5c,QAAS5f,KAAKq/B,eAAgB,CAAE/xB,IAAK,WAAYP,QAAS,WAAY00B,UAAU,EAAMnL,WAAW,QAG/LrpB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKyL,MAAMkzB,OAAS3+B,KAAKkuB,aAAeluB,KAAK8f,KAAMwP,UAAW/f,GAAxF,YAGpB,KACFvP,KAAKyL,MAAMkzB,OAOT,KANF1xB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACokC,GAAA,EAAU3L,MAAX,CAAiB4L,OAAQ,MAAOpS,KAAM,SACpCniB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKkuB,aAAcoB,UAAWgR,GAAxD,sBAClBrzB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAK6+B,QAASvP,WAAYmP,IAAiB36B,EAAKgL,UAA1E,gBAIxB7B,EAAAC,EAAA/P,cAACukC,GAAD,CACE59B,KAAMA,EACN26B,aAAcA,EACdK,WAAY9+B,KAAK8+B,WACjB78B,KAAMA,EACN3C,mBAAoB2E,EAAO3E,qBAE5Bm/B,EACCxxB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,CAASgK,UAAW,UAClB9zB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,2BACAN,EAAAC,EAAA/P,cAACokC,GAAA,EAAU3L,MAAX,CAAiB4L,OAAQ,QAASpS,KAAM,SACrCqP,EAAal1B,SACZ0D,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWxM,MAAO,QAASz3B,MAAO2iC,EAAMxB,EAAahvB,QAAS2nB,MAAO,SAErEnqB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2iC,EAAMxB,EAAanvB,YAAa8nB,MAAOp3B,KAAKkH,YAAYy6B,gBAAgBlD,EAAatvB,YAEzGlC,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAOmhC,EAAa5lB,UAAWue,MAAO,SACjDnqB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKk/B,eAAgB5P,UAAWmP,EAAalvB,SAAvE,WAEpBtC,EAAAC,EAAA/P,cAACokC,GAAA,EAAU3L,MAAX,CAAiB4L,OAAQ,MAAOpS,KAAM,SACpCniB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKi/B,uBAAwB3P,UAAWmP,EAAa3vB,UAA/E,sBAClB7B,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CAAWjkC,MAAO2P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKm/B,cAA/B,sBAGpB,KACJlyB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACE5N,IAAK/oB,KAAK0+B,gBACV5H,OAAQ,oBACR/pB,QAAS,0DACT0qB,QAAS,CACP,CAACnqB,IAAK,MAAOP,QAAS,cAAe6S,QAAS5f,KAAKy/B,kBAAmBmC,SAAS,GAC/E,CAACt0B,IAAK,KAAMP,QAAS,4BAA6BupB,WAAW,cA5StDhoB,aAAbkwB,GACGmD,sCACJhzB,EAAK0C,6BAA+B,iCACpC1C,EAAK4C,8BAAgC,iCACrC5C,EAAKoD,gCAAkC,kCACvCpD,EAAKoH,4BAA8B,8BACnCpH,EAAKsH,6BAA+B,8BACpCtH,EAAKwH,8BAAgC,aAiU1CqoB,GAAKjwB,aAAe,CAClB0xB,OAAK4B,GAAA,GAAA5hC,OAAA+T,EAAA,EAAA/T,CAAA4hC,GACFlzB,EAAKmC,SAAW,YADd7Q,OAAA+T,EAAA,EAAA/T,CAAA4hC,GAEFlzB,EAAKqC,SAAW,YAFd6wB,IAILvZ,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,WAGrCwtB,GAAOrM,GAAWqM,QAEZsD,8MAUJC,wBAA0B,WACxB96B,EAAKwE,MAAMkzB,SACX13B,EAAKwE,MAAMxH,OAAO+9B,eAAlB/hC,OAAA+M,EAAA,EAAA/M,CAAA,GAAqCgH,EAAKwE,MAAMxJ,KAAK5D,SAArD,CAA+DsI,oBAAoB,8EAG5E,IAAAgH,EAIH3N,KAAKyL,MAFP3H,EAFK6J,EAEL7J,KAAMyM,EAFD5C,EAEC4C,OAAQ+X,EAFT3a,EAES2a,aAAc2X,EAFvBtyB,EAEuBsyB,MAAO3gC,EAF9BqO,EAE8BrO,mBAAoBggC,EAFlD3xB,EAEkD2xB,sBAAuBmB,EAFzE9yB,EAEyE8yB,WAC9Ef,EAHK/xB,EAGL+xB,UAAWgB,EAHN/yB,EAGM+yB,mBAAoBnxB,EAH1B5B,EAG0B4B,QAAS+wB,EAHnC3yB,EAGmC2yB,YAAa3B,EAHhDhxB,EAGgDgxB,OAAQ7e,EAHxDnS,EAGwDmS,KAAM6gB,EAH9DhzB,EAG8DgzB,SAE/DsB,EAAqB3Z,EAAa1iB,SAAS2K,GAC3C2xB,EAAexB,EAAqB58B,EAAKgL,SAAWhL,EACpDq+B,EAAgBD,EAAa5yB,aAAeiB,EAC5C6xB,EAAYF,EAAazyB,SAAWc,EACpChH,EAAW24B,EAAa34B,SAE9B,OACE0D,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CACEk1B,WAAS,EACTt0B,UAAWgR,IAAW,CAAC2V,WAAYnrB,GAAY04B,GAAsBE,IAAkBzC,IACvFtQ,KAAM,UACNqS,SAAUl4B,GAAYgH,IAAW5B,EAAKqC,SACtC+jB,MAAOxrB,EAAY64B,EAAY,QAAU,WAAS1jC,EAClD2wB,MAAO,CACL,CAAC/hB,IAAK,OACJG,KAAMlE,EAAY64B,EAAY,SAAW,cAAkBD,EAAgB,OAAS,YACpFp1B,QACEE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACmlC,GAAD,CACEniB,SAAUrc,EAAKoD,YACfyX,QAAM,EACNrf,mBAAoBA,EACpBiR,OAAQA,EACR+X,aAAcA,IAEf2X,EAAM1vB,KAGb,CAACjD,IAAK,eAAgBP,QACpBxD,EACK64B,EAAY,MAAQ,OAErB1C,EAEIpgC,EAAmBoH,gBACf,kBAEAuG,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG5O,EAAmBqH,mBAClBsG,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEvH,KAAM,OACNwH,QACE3pB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEa,UAAQ,EACR3pB,UAAW,aAFb,aAOF+oB,OAAQ,cACR/pB,QACEE,EAAAC,EAAA/P,cAACw5B,GAAA,EAAMhC,QAAP,oDAEE1nB,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAACy3B,GAAD,CACE9wB,KAAMA,EACN6a,QAAM,EACNtgB,SAAUiB,EACVygB,UAAQ,EACRgL,YAAU,KAIhB0M,QAAS,CACP,CAACnqB,IAAK,kBAAmBP,QAAS,kBAAmB6S,QAAS5f,KAAK+hC,yBACnE,CAACz0B,IAAK,SAAUkvB,UAAU,EAAMzvB,QAAS,UACzC,CAACO,IAAK,KAAMoqB,UAAU,EAAM3qB,QAAS,SAAU6S,QAAS+e,MAI5D1xB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEa,UAAQ,EACR3pB,UAAW,YACX6R,QAAS+e,GAHX,UAQDsD,GAAsB1yB,EACrBtC,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG,OAAOjB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAACzvB,QAAS,OAAQuiB,UAAW/f,EAASqQ,QAASE,KAEvE,MAIVqiB,EAEIF,GAAsB1yB,EAElBtC,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGlO,KAAKkH,YAAYy6B,gBAAgBO,EAAa/yB,UAC9C,OAAOlC,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAACzvB,QAAS,OAAQuiB,UAAW/f,EAASqQ,QAASE,KAGzE9f,KAAKkH,YAAYy6B,gBAAgBO,EAAa/yB,UATzC,eAAAxP,OAWMsgC,EAAMtxB,EAAKiB,aAAaW,MAIpDhB,IAAW+wB,GAAgB6B,EAIxB,KAJwC,CAC1C70B,IAAK,iBAAkBP,QACrBE,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAACzvB,QAAS,iBAAkB6S,QAAS+gB,MAGxDp3B,GAAYo1B,GAAUrW,EAAa1iB,SAAS2K,GAAU,CACrDjD,IAAK,cAAeP,QAClBE,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,oBACPmL,QAAM,EACNxF,QAASz9B,EAAmBoH,gBAC5BkoB,SAAU0Q,KAGZ,KACJ/1B,GAAYk3B,GAAcA,EAAWx3B,OAAS,CAC5CqE,IAAK,YAAaP,QAChBE,EAAAC,EAAA/P,cAAC6+B,GAAD,CAAqBrB,UAAW8F,KAEhC,MACJ18B,OAAO,SAAAy+B,GAAI,OAAIA,aA7IAl0B,aAAnBwzB,GACGH,sCACJhzB,EAAK0C,6BAA+B,iCACpC1C,EAAK4C,8BAAgC,iCACrC5C,EAAKoD,gCAAkC,kCACvCpD,EAAKoH,4BAA8B,8BACnCpH,EAAKsH,6BAA+B,8BACpCtH,EAAKwH,8BAAgC,aA8J1C2rB,GAAa3P,GAAW2P,QAElBW,8MACJhnB,MAAQ,CACN6Z,WAAY,KAGdC,aAAe,SAACjvB,EAADoO,GAAqB,IAAhB4gB,EAAgB5gB,EAAhB4gB,WAClB5sB,EAAKimB,SAAS,CAAC2G,wFAGR,IAAArS,EAC8EjjB,KAAKyL,MAAnF3H,EADAmf,EACAnf,KAAMxE,EADN2jB,EACM3jB,mBAAoBm/B,EAD1Bxb,EAC0Bwb,aAAcK,EADxC7b,EACwC6b,WAAYtJ,EADpDvS,EACoDuS,SAAU3b,EAD9DoJ,EAC8DpJ,aAC9Dyb,EAAct1B,KAAKyb,MAAnB6Z,WAEDG,EAAaxkB,KAAKykB,MAAM5xB,EAAK0U,QAAQ/Z,OAAS,GAAK+2B,GACnDG,EAAe11B,OAAA6I,EAAA,EAAA7I,CAAI6D,EAAK0U,SAC3B3P,MAAM,GAAK4sB,EAAaH,GAAcE,EAAU,GAAKC,EAAaH,GAAcE,EAAWA,GAC3F1O,UACG4b,EAAkB/M,EAAaA,EAAal3B,OAAS,GAE3D,OACEwO,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACyjC,GAAD,CAAgB98B,KAAMA,EAAM26B,aAAcA,EAAcK,WAAYA,KAEtE7xB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACGR,EAAah0B,IAAI,SAAAugC,GAAY,OAC5Bj1B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,CAAUZ,IAAK40B,EAAanpB,YACzBmpB,EAAarpB,UAAY,IAAM,EAC9B5L,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASm1B,EAAarpB,UAAY,IACvC,KACJ5L,EAAAC,EAAA/P,cAACy3B,GAAD,CACE9wB,KAAMo+B,EACNxjB,OAAK,EACLE,SAAUkgB,EACVjgB,SAAUqjB,IAAiBzD,EAC3BpgC,SAAUiB,IAEXua,EACC5M,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,SACXmN,EAAa7oB,mBAAmB1X,IAAI,SAAA4K,GAAA,IAAE8D,EAAF9D,EAAE8D,EAAGF,EAAL5D,EAAK4D,EAAL,OAAA5D,EAAQiD,OACzC,IAD2D,GAAA7P,OAClD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK0Q,IADwB1Q,OACnBwQ,EAAI,KAAKjB,KAAK,MAE1D,QAGPwzB,GAAoBA,EAAgB7pB,UAAY,IAAM,EACrD5L,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAAS21B,EAAgB7pB,UAAY,IAC1C,MAEN5L,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACi5B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcv1B,KAAKu1B,aACnBc,UAAQ,EACRC,WAAS,cAxDGhoB,aA2E1Bm0B,GAAYl0B,aAAe,CACzBinB,SAAU,GACV3b,cAAc,OAGV8oB,8MA4CJC,gBAAkB,WACXv5B,EAAKw5B,sBAGVx5B,EAAKoC,MAAMqzB,WAAWz1B,EAAKoC,MAAM3H,SASnCg/B,aAAe,WACb,GAAKz5B,EAAK05B,kBAAV,CAGA,IAAMC,EAAoB35B,EAAKoC,MAAM3H,KAAK0U,QAAQU,QAAQ7P,EAAKoC,MAAMgzB,cAAgBp1B,EAAKoC,MAAM3H,MAChGuF,EAAKoC,MAAMqzB,WAAWz1B,EAAKoC,MAAM3H,KAAK0U,QAAQwqB,EAAoB,QAGpEC,aAAe,WAAM,IACZC,EAA+B75B,EAAK85B,YAApCD,4BACP75B,EAAKoC,MAAMqzB,WAAWz1B,EAAKoC,MAAM3H,KAAK0U,QAAQ0qB,OAShDE,iBAAmB,WACZ/5B,EAAKg6B,uBAGVh6B,EAAKoC,MAAMqzB,YAAYz1B,EAAKoC,MAAMgzB,cAAgBp1B,EAAKoC,MAAM3H,MAAMqV,sBAGrEmqB,0BAA4B,WAC1Bj6B,EAAKoC,MAAMqzB,WAAWz1B,EAAKoC,MAAMgzB,aAAatlB,sBAShDoqB,cAAgB,WACTl6B,EAAKm6B,oBAGVn6B,EAAKoC,MAAMqzB,WAAWz1B,EAAKoC,MAAM3H,KAAK0U,QAAQ,iGA5FX,IAAVirB,EAAUj3B,EAAVi3B,QACzB,GAAIA,EAAQC,MAAO,KAAAC,EACSF,EAAQC,MAA3BE,EADUD,EACVC,MAAOC,EADGF,EACHE,SACVD,IAAUE,KAAKC,MAAQF,EACzB7jC,KAAK4iC,kBACIgB,IAAUE,KAAKE,KACxBhkC,KAAK4iC,kBACIgB,IAAUE,KAAKC,MAASF,EAExBD,IAAUE,KAAKG,OAAUJ,EAEzBD,IAAUE,KAAKG,OAASJ,EACjC7jC,KAAKujC,gBACIK,IAAUE,KAAKE,MACxBhkC,KAAKujC,gBAJLvjC,KAAKojC,mBAFLpjC,KAAK8iC,6DAyBU,IAAAoB,EACwBlkC,KAAKmjC,YAEhD,OAHmBe,EACZlB,oBADYkB,EACOC,wDAYV,IAAAC,EAC2BpkC,KAAKmjC,YAAzCH,EADSoB,EACTpB,kBAAmBmB,EADVC,EACUD,cAE1B,OAAOnB,GAAqB,GAAKA,IAAsBmB,gDAgBnC,IACbnB,EAAqBhjC,KAAKmjC,YAA1BH,kBAEP,OAAOA,GAAqB,GAA2B,IAAtBA,6CAiBjC,OAA6B,IAFDhjC,KAAKmjC,YAA1BH,mDAYA,IAAAze,EACsBvkB,KAAKyL,MAA3B3H,EADAygB,EACAzgB,KAAM26B,EADNla,EACMka,aADN4F,EAEkDrkC,KAAKmjC,YAAvDH,EAFAqB,EAEArB,kBAAmBE,EAFnBmB,EAEmBnB,4BAE1B,OACEj2B,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMiiB,KAAM,UAAWC,MAAK,CAC1B,CAAC/hB,IAAK,UAAWG,KAAM,gBAAiBmS,QAAS5f,KAAK4iC,gBAAiBtT,UAAWtvB,KAAK6iC,uBAD7DljC,OAAAM,OAAA6I,EAAA,EAAA7I,CAEtB+iC,GAAqB,EAAI,CAC3B,CAAC11B,IAAK,WAAYG,KAAM,WAAYmS,QAAS5f,KAAK8iC,aAAcxT,UAAWtvB,KAAK+iC,mBAChF,CAACz1B,IAAK,YAAaP,QAASi2B,GAAqB,EAArB,GAAArjC,QAA6B8+B,GAAgB36B,GAAM+U,UAAnD,KAAAlZ,OAAgEmE,EAAK+U,WAAc4lB,EAAa5lB,UAAWyW,SAAUxrB,EAAKyF,UACtJ,CAAC+D,IAAK,OAAQG,KAAM,UAAWmS,QAAS5f,KAAKojC,iBAAkB9T,UAAWtvB,KAAKqjC,wBAC7E,CACF,CAAC/1B,IAAK,eAAgBP,QAAO,aAAApN,OAAeujC,EAAf,KAAAvjC,OAA8CmE,EAAK+U,WAAa+G,QAAS5f,KAAKijC,gBAPnF,CAS1B,CAAC31B,IAAK,QAASG,KAAM,eAAgBmS,QAAS5f,KAAKujC,cAAejU,UAAWtvB,KAAKwjC,qBATxDvjC,OAAA6I,EAAA,EAAA7I,CAUtB+iC,GAAqB,EAAI,GAAK,CAChC,CAAC11B,IAAK,WAAYP,QAAO,aAAApN,OAAe8+B,EAAa5lB,UAA5B,KAAAlZ,OAAyCujC,GAA+B5T,UAAU,GAC3G,CAAChiB,IAAK,OAAQG,KAAM,UAAWmS,QAAS5f,KAAKsjC,0BAA2BhU,SAAUmP,EAAa5lB,WAAa,4CAxFlH,IALgB,IAAA4U,EACaztB,KAAKyL,MAA3B3H,EADS2pB,EACT3pB,KAAM26B,EADGhR,EACHgR,aACPuE,EAAoBl/B,EAAK0U,QAAQU,QAAQulB,GAAgB36B,GAC3Do/B,EAA8BF,EAC9BsB,EAAW7F,GACyB,IAAjCyE,GAAsCoB,GAC3CA,EAAWA,EAASnrB,kBACpB+pB,EAA8Bp/B,EAAK0U,QAAQU,QAAQorB,GAIrD,MAAO,CAACtB,oBAAmBmB,cAFLrgC,EAAK0U,QAAQ/Z,OAAS,EAEFykC,sCAnCjB50B,aAAvBq0B,GACGnmB,KAAO,CACZ,OAAQ,QAAS,aAAc,cAAe,OAAQ,OAgI1DmmB,GAAiBc,aAAQd,GAAenmB,KAAvBinB,CAA6Bd,IAE/BnE,UCvmBArM,iNAtHb1W,mBACEgjB,aAAc,KACdqB,OAAO,GACJ//B,EAAKmH,YAAYq9B,oCA4BtBC,wBAA0B,WACxBzkC,EAAK4uB,SAAS,CAACmR,MAAO,UAGxBrqB,SAAW,SAAAopB,GACT9+B,EAAK4uB,SAAS,CAAC7qB,KAAM+6B,OAGvB4F,MAAQ,WACN,IAAM/4B,EAAMrL,OAAOiB,SAASojC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAM3gC,EAAO/D,EAAK0b,MAAM3X,KACxB6gC,UAAUF,MAAM,CACd/K,MAAK,6BAAA/5B,OAA+BmE,EAAK+U,UAApC,UACL7b,KAAI,uCAAA2C,OAAyCmE,EAAK+U,UAA9C,UACJnN,QACCk5B,MAAM,WACPv9B,EAAsBqE,GACtBm5B,MAAM,mCAGRx9B,EAAsBqE,GACtBm5B,MAAM,+BAIV9F,qBAAuB,SAAAN,GACrB1+B,EAAK4uB,SAAS,CAAC8P,oBAGjBqG,gBAAkB,WAChB/kC,EAAKglC,SAASp2B,EAAKsP,YAGrB+mB,YAAc,WACZjlC,EAAKglC,SAASp2B,EAAKwP,QAGrB4mB,SAAW,SAAA5kB,GACTpgB,EAAK4uB,SAAS,CACZ8P,aAAc,KACd36B,KAAMqc,EAASnQ,SACf8vB,OAAO,6EAIF,IAAAnX,EAC6B3oB,KAAKyb,MAAlC3X,EADA6kB,EACA7kB,KAAMg8B,EADNnX,EACMmX,MAAOrB,EADb9V,EACa8V,aACbx8B,EAAQjC,KAAKyL,MAAbxJ,KAEP,OACEgL,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,KAAMnF,EACN1Q,KAAM,OACNqH,QAASz2B,KAAKwkC,wBACd1N,OAAQ,iCACR/pB,QAAO,GAAApN,OAAKmgC,EAAL,+CACPrI,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAEjDzqB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMs0B,UAAQ,EAACrS,KAAM,UAAWC,MAAO,CACrC,CAAC/hB,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBgoB,MAAO,QAASmQ,QAAQ,EAAM33B,GAAI,IACzFm3B,KAAI,aAAA/kC,QAAgB8+B,GAAgB36B,GAAM0O,wBAC1CknB,MAAOiL,UAAUF,MAAQ,iCAAmC,kCAIpEx3B,EAAAC,EAAA/P,cAACgoC,GAAD,CACEljC,KAAMA,EACN6B,KAAMA,EACN2R,SAAUzV,KAAKyV,SACfspB,qBAAsB/+B,KAAK++B,sBAE3B9xB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQjX,QAAS5f,KAAK8kC,gBAAiB/3B,QAAS,oBAAqBuiB,SAAUxrB,EAAKoD,cAAgByH,EAAKsP,UACzGhR,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQjX,QAAS5f,KAAKglC,YAAaj4B,QAAS,gBAAiBuiB,SAAUxrB,EAAKoD,cAAgByH,EAAKwP,mEApGvG,IACMiP,EADS,IAAIgY,gBAAgB/kC,OAAOiB,SAAS+jC,QAC3BjL,IAAI,YAC5B,GAAIhN,EAAU,CACZ,IAAItpB,EAAMg8B,EACV,IAKIA,GAJFh8B,EAAO6K,EAAKsP,QAAQqnB,2BAA2BlY,IAIrC,KAFA,6BAIV,MAAO9mB,GACPxC,EAAO,KACPg8B,EAAQ,sCAEV,OAAKh8B,EAGE,CAACA,OAAMg8B,OAAO,GAFZ,CAACh8B,KAAM6K,EAAKsP,QAAQjO,SAAU8vB,SAIvC,MAAO,CAACh8B,KAAM6K,EAAKsP,QAAQjO,SAAU8vB,OAAO,UA5B5BxxB,uBCDhBi3B,8MACJC,mBAAqB,CACnB,CAACloC,MAAO,GAAI85B,MAAO,WACnB,CAAC95B,MAAO,SAAU85B,MAAO,UACzB,CAAC95B,MAAO,SAAU85B,MAAO,UACzB,CAAC95B,MAAO,QAAS85B,MAAO,SACxB,CAAC95B,MAAO,YAAa85B,MAAO,gBAE9BqO,kBAAoB,CAClB,CAACnoC,MAAO,WAAY85B,MAAO,YAC3B,CAAC95B,MAAO,YAAa85B,MAAO,gBAE9BsO,mBAAqB,CACnB,CAACpoC,MAAO,OAAQ85B,MAAO,QACvB,CAAC95B,MAAO,OAAQ85B,MAAO,QACvB,CAAC95B,MAAO,SAAU85B,MAAO,UACzB,CAAC95B,MAAO,cAAe85B,MAAO,QAC9B,CAAC95B,MAAO,MAAO85B,MAAO,OACtB,CAAC95B,MAAO,SAAU85B,MAAO,UACzB,CAAC95B,MAAO,MAAO85B,MAAO,OACtB,CAAC95B,MAAO,MAAO85B,MAAO,OACtB,CAAC95B,MAAO,OAAQ85B,MAAO,QACvB,CAAC95B,MAAO,sBAAuB85B,MAAO,wBACtC,CAAC95B,MAAO,qBAAsB85B,MAAO,uBACrC,CAAC95B,MAAO,gBAAiB85B,MAAO,kBAChC,CAAC95B,MAAO,mBAAoB85B,MAAO,qBACnC,CAAC95B,MAAO,gBAAiB85B,MAAO,kBAChC,CAAC95B,MAAO,sBAAuB85B,MAAO,wBACtC,CAAC95B,MAAO,oBAAqB85B,MAAO,sBACpC,CAAC95B,MAAO,kBAAmB85B,MAAO,uBAEpCuO,oBAAsB,CACpB,CAACroC,MAAO,GAAI85B,MAAO,QACnB,CAAC95B,MAAO,UAAW85B,MAAO,WAC1B,CAAC95B,MAAO,SAAU85B,MAAO,UACzB,CAAC95B,MAAO,cAAe85B,MAAO,kBAGhCwO,eAAiB,SAAAC,GAAa,IACV7nC,EAAU+B,EAAK0L,MAA1BpN,SAAWL,MAClB,OACEiP,EAAAC,EAAA/P,cAAC2oC,GAAD,CAAgBnnB,QAAM,EAACtgB,SAAU,CAACL,MAAMiC,OAAA+M,EAAA,EAAA/M,CAAA,GAAKjC,EAAN,CAAa8I,YAAY,GAAU++B,SAI9EE,qBAAuB,SAACz/B,EAAD+F,GAAkB,IAAb0wB,EAAa1wB,EAAb0wB,QAC1Bh9B,EAAK0L,MAAMu2B,eAAe,CAACt7B,gBAAiBq2B,OAG9CiJ,yBAA2B,SAAC1/B,EAADoO,GAAkB,IAAbqoB,EAAaroB,EAAbqoB,QAC9Bh9B,EAAK0L,MAAMu2B,eAAe,CAACr7B,mBAAoBo2B,OAGjDkJ,0BAA4B,SAAC3/B,EAADiG,GAAkB,IAAbwwB,EAAaxwB,EAAbwwB,QAC/Bh9B,EAAK0L,MAAMu2B,eAAe,CAACp7B,oBAAqBm2B,OAGlDmJ,2BAA6B,SAAC5/B,EAADkG,GAAkB,IAAbuwB,EAAavwB,EAAbuwB,QAChCh9B,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAACmB,gBAAiB49B,QAGtDoJ,0BAA4B,SAAC7/B,EAADmQ,GAAkB,IAAbsmB,EAAatmB,EAAbsmB,QAC/Bh9B,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAAC6I,eAAgBk2B,QAGrDqJ,iBAAmB,SAAC9/B,EAADqQ,GAAkB,IAAbomB,EAAapmB,EAAbomB,QACtBh9B,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAAC8I,WAAYi2B,QAGjDsJ,aAAe,SAAC//B,EAAD4Q,GAAkB,IAAb6lB,EAAa7lB,EAAb6lB,QAClBh9B,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAAC+I,OAAQg2B,QAG7CuJ,mBAAqB,SAAChgC,EAAD8Q,GAAgB,IAAX9Z,EAAW8Z,EAAX9Z,MACxByC,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAACgJ,QAAS1J,QAG9CipC,kBAAoB,SAACjgC,EAAD+Q,GAAgB,IAAX/Z,EAAW+Z,EAAX/Z,MACvByC,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAACG,OAAQb,QAG7CkpC,kBAAoB,SAAClgC,EAADiR,GAAgB,IAAXja,EAAWia,EAAXja,MACvByC,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAACE,OAAQZ,QAG7CmpC,iBAAmB,SAACngC,EAAD83B,GAAgB,IAAX9gC,EAAW8gC,EAAX9gC,MACtByC,EAAK0L,MAAMu2B,eAAe,CAAChkC,MAAO,CAACC,MAAOX,8EAGnC,IAAA2J,EAAAjH,KAAA4L,EACmI5L,KAAKyL,MADxIi7B,EAAA96B,EACAvN,SAAWqI,EADXggC,EACWhgC,gBAAiBC,EAD5B+/B,EAC4B//B,mBAAoBC,EADhD8/B,EACgD9/B,oBAAqB5I,EADrE0oC,EACqE1oC,MAAQsJ,EAD7EsE,EAC6EtE,uBAAwBC,EADrGqE,EACqGrE,2BACrGpI,EAA6GnB,EAA7GmB,gBAFAwnC,EAE6G3oC,EAA5FC,aAFjB,IAAA0oC,EAEyB,WAFzBA,EAAAC,EAE6G5oC,EAAxEE,cAFrC,IAAA0oC,EAE8C,OAF9CA,EAEsDzoC,EAAuDH,EAAvDG,OAAQ0I,EAA+C7I,EAA/C6I,eAAgBC,EAA+B9I,EAA/B8I,WAAYC,EAAmB/I,EAAnB+I,OAAQC,EAAWhJ,EAAXgJ,QAEzG,OACEiG,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,EAAMwQ,UAAU,GAAQh7B,MAAO,CACnD,CAACiB,SAAU,UAAWixB,OAAQ,kBAC5B9wB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAD,KACE/pB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,2BACPt5B,KAAM,kBACNi/B,QAASr2B,EACTkoB,SAAU3nB,EAAK8+B,wBAGnB94B,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,yCACPt5B,KAAM,qBACNi/B,QAASp2B,EACTioB,SAAU3nB,EAAK++B,4BAGnB/4B,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,uBACPt5B,KAAM,sBACNi/B,QAASn2B,EACTgoB,SAAU3nB,EAAKg/B,iCAMzB,CAACn5B,SAAU,QAASixB,OAAQ,kBAC1B9wB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMoM,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/C75B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,UACrB95B,EAAK2+B,eAAe,CAAC9+B,WAAY9I,EAAM8I,eAG5CmG,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,mCACPt5B,KAAM,wBACNi/B,QAAS59B,EACTyvB,SAAU3nB,EAAKi/B,8BAGnBj5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvCz5B,EACC2F,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG5G,EACD2F,EAAAC,EAAA/P,cAAA,WACC8J,EAAK2+B,eAAer+B,EAA2BvJ,QAEhD,OAGRiP,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,EAAMwQ,UAAU,GAAQh7B,MAAO,CACnD,CAACiB,SAAU,SAAUixB,OAAQ,kBAC3B9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KACAtxB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMoM,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/C75B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,kBACPt5B,KAAM,uBACNi/B,QAASl2B,EACT+nB,SAAU3nB,EAAKk/B,6BAGnBl5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC/+B,gBAAgB,MAG1CoG,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,YACPt5B,KAAM,mBACNi/B,QAASj2B,EACT8nB,SAAU3nB,EAAKm/B,oBAGnBn5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC9+B,YAAY,MAGtCmG,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACEhG,MAAO,SACPt5B,KAAM,eACNi/B,QAASh2B,EACT6nB,SAAU3nB,EAAKo/B,gBAGnBp5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC7+B,QAAQ,MAGlCkG,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,UACtB9zB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,KAAYhqB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,cAGftG,EAAKy+B,mBAAmB/jC,IAAI,SAAAolC,GAAM,OACjC95B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,CAAU7oB,IAAG,gBAAA3N,OAAkBonC,EAAOzpC,QACpC2P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACE4J,OAAK,EACL5P,MAAO2P,EAAO3P,MACdt5B,KAAM,eACNR,MAAOypC,EAAOzpC,MACdy/B,QAAS7+B,IAAW6oC,EAAOzpC,MAC3BsxB,SAAU3nB,EAAKu/B,qBAGnBv5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC1nC,OAAQ6oC,EAAOzpC,gBAO/C,CAACwP,SAAU,QAASixB,OAAQ,kBAC1B9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KACEtxB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMoM,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/C75B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,UACtB9zB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,KAAYhqB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,aAGftG,EAAKw+B,kBAAkB9jC,IAAI,SAAAolC,GAAM,OAChC95B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,CAAU7oB,IAAG,eAAA3N,OAAiBonC,EAAOzpC,QACnC2P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACE4J,OAAK,EACL5P,MAAO2P,EAAO3P,MACdt5B,KAAM,cACNR,MAAOypC,EAAOzpC,MACdy/B,QAAS9+B,IAAU8oC,EAAOzpC,MAC1BsxB,SAAU3nB,EAAKw/B,oBAGnBx5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC3nC,MAAO8oC,EAAOzpC,YAI1C2P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,UACtB9zB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,KAAYhqB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,eAGftG,EAAKu+B,mBAAmB7jC,IAAI,SAAAolC,GAAM,OACjC95B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,CAAU7oB,IAAG,gBAAA3N,OAAkBonC,EAAOzpC,QACpC2P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACE4J,OAAK,EACL5P,MAAO2P,EAAO3P,MACdt5B,KAAM,eACNR,MAAOypC,EAAOzpC,MACdy/B,QAAS5+B,IAAW4oC,EAAOzpC,MAC3BsxB,SAAU3nB,EAAKs/B,qBAGnBt5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAACznC,OAAQ4oC,EAAOzpC,gBAOjD,CAACwP,SAAU,mBAAoBixB,OAAQ,kBACrC9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KACEtxB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMoM,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC9C7/B,EAAK0+B,oBAAoBhkC,IAAI,SAAAolC,GAAM,OAClC95B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,CAAU7oB,IAAG,iBAAA3N,OAAmBonC,EAAOzpC,QACrC2P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAa7a,MAAO,GAClBrZ,EAAAC,EAAA/P,cAACigC,GAAA,EAAD,CACE4J,OAAK,EACL5P,MAAO2P,EAAO3P,MACdt5B,KAAM,gBACNR,MAAOypC,EAAOzpC,MACdy/B,QAAS/1B,IAAY+/B,EAAOzpC,MAC5BsxB,SAAU3nB,EAAKq/B,sBAGnBr5B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAazO,QAAS,QAASqO,UAAW,SACvC95B,EAAK2+B,eAAe,CAAC5+B,QAAS+/B,EAAOzpC,kCA/RtCgR,aAwXf6jB,iNAhEb1W,MAAQ,CACNxZ,KAAM,KACN5D,SAAUyB,EAAOqH,wBAcnB66B,eAAiB,SAAAxmB,GACf9S,EAAKimB,SAAS,SAAAlT,GAAK,MAAK,CACtBpd,SAAS4B,OAAA+M,EAAA,EAAA/M,CAAA,GACJwb,EAAMpd,SACNmd,EAFG,CAGNxd,MAAMiC,OAAA+M,EAAA,EAAA/M,CAAA,GACDwb,EAAMpd,SAASL,MACfwd,EAAOxd,eAMlBipC,KAAO,WACLv+B,EAAK+C,MAAMxH,OAAO+9B,eAAet5B,EAAK+S,MAAMpd,mFAGrC,IACAA,EAAY2B,KAAKyb,MAAjBpd,SACA4F,EAAUjE,KAAKyL,MAAfxH,OAEP,OACEgJ,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEC,QAAS3pB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,IAAKE,KAAM,MAAOV,QAAS,aAC/CqiB,KAAM,QACN0H,OAAQ,WACRW,QAAS,CACP,CAACnqB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,OAAQP,QAAS,OAAQ2qB,UAAU,EAAM9X,QAAS5f,KAAKinC,OAE/Dl6B,QAAS,CAACm6B,WAAW,EAAMn6B,QACzBE,EAAAC,EAAA/P,cAACgqC,GAAD,CACE9oC,SAAUA,EACV2jC,eAAgBhiC,KAAKgiC,eACrB16B,uBAAwBrD,EAAOqD,uBAC/BC,2BAA4BtD,EAAOsD,mFA9CbkE,EAAOgQ,GACrC,OAAIhQ,EAAMxJ,MAAQwJ,EAAMxJ,OAASwZ,EAAMxZ,KAC9B,CACLA,KAAMwJ,EAAMxJ,KACZ5D,SAAUoN,EAAMxH,OAAO5F,UAIpB,UAdYiQ,cC/SjB84B,oLACK,IAEHC,EAAeC,EAFZ17B,EACgB5L,KAAKyL,MAArB3H,EADA8H,EACA9H,KAAMyM,EADN3E,EACM2E,OAETzM,EACEA,EAAKyjC,eAAexmC,KAAOwP,EAAOxP,IACpCsmC,EAAgBvjC,EAAKyjC,eACrBD,EAAuBxjC,EAAK0jC,uBACnB1jC,EAAK2jC,eAAe1mC,KAAOwP,EAAOxP,IAC3CsmC,EAAgBvjC,EAAK2jC,eACrBH,EAAuBxjC,EAAK4jC,wBAE5BL,EAAgB,KAChBC,EAAuB,OAGzBD,EAAgB,KAChBC,EAAuB,MAEzB,IAAMK,EAAW7jC,GAAQA,EAAKo0B,eAAiB3nB,EAAOxP,GACtD,OACEkM,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGy5B,EAAW16B,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,SAAUi3B,MAAO,UAAc,KAAM,IAC7D9nB,EAAAC,EAAA/P,cAAA,QAAM0jB,MAAO8mB,EAAW,CAAC5S,MAAO,gBAAar2B,GAC1C6R,EAAOzS,KACPupC,IAAkBvjC,EAAK0vB,aACtBvmB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG,IADH,IACSo5B,EACLr6B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGy5B,EAAQ,IAAAhoC,OAAO0nC,EAAcO,WAAcP,EAAcQ,WACzD,IAAI56B,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,+BAAiC,IACjDwpC,GAGHr6B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACGm5B,EAAc1L,MACd,IAFH,IAES0L,EAAcO,UAFvB,IAEmCP,EAAcQ,YAVrD,KAcE,MAEN56B,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,QAAStD,KAAM,OAAQoD,KAAMjiB,EAAOxP,aA1ClCuN,aAqDzBw5B,8MACJrsB,MAAQ,CACNgjB,aAAc,QAGhBsJ,aAAeC,aAAe,CAC5B,SAAAv8B,GAAK,OAAIA,EAAMD,MAAMy8B,OAAOlnC,IAC5B,SAAA0K,GAAK,OAAIA,EAAM/H,UAAUqF,OACxB,SAAC5E,EAAQ00B,GAAT,OAAuBA,EAAU10B,OAMpC+jC,oBAAsBF,aAAe,CACnC,SAAAv8B,GAAK,OAAIA,EAAMxJ,MACf,SAAAwJ,GAAK,OAAIA,EAAM9I,WACf,kBAAM5C,EAAK+D,OACV,SAAC7B,EAADoK,EAA0BvI,GAAS,IAArBqvB,EAAqB9mB,EAA3BtD,KACH4qB,EAAUR,EAAUrvB,EAAK2F,QAAQ,IACjCmqB,EAAUT,EAAUrvB,EAAK2F,QAAQ,IACjCuqB,IAAgB/xB,GAAO0xB,EAAQ5yB,KAAOkB,EAAKlB,GAC3CkzB,IAAgBhyB,GAAO2xB,EAAQ7yB,KAAOkB,EAAKlB,GAIjD,MAAO,CACL4yB,UAASC,UACTI,gBAAeC,gBACfkU,WANiBnU,EAAgBrlB,EAAKmC,SAAWmjB,EAAgBtlB,EAAKqC,SAAW,KAMrE2pB,UALI3G,EAAgBJ,EAAUK,EAAgBN,EAAU,UAaxEyU,iBAAmBJ,aAAe,CAChC,kBAAMjoC,EAAK+D,OACV,SAAAA,GAAI,OAAIA,EAAO6K,EAAKsP,QAAQyV,YAAY5vB,EAAKA,MAAQ,SAMxDukC,oBAAsB,WACpBtoC,EAAK0L,MAAMynB,eAAe,SAG5ByL,OAAS,SAAA90B,GACP9J,EAAK0L,MAAMxH,OAAOqkC,eAAevoC,EAAK+D,KAAM+F,MAiB9C0+B,MAAQ,WACNxoC,EAAK0L,MAAMynB,eAAe,SAG5BqM,eAAiB,SAAAlhC,GACf0B,EAAK0L,MAAMxH,OAAO+9B,eAAe3jC,MAGnCmqC,UAAY,SAAAliC,GACV,IAAMoF,EAAMrL,OAAOiB,SAASojC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAM3gC,EAAO/D,EAAK+D,KADC2kC,EAEQ1oC,EAAK2oC,YAAzB/U,EAFY8U,EAEZ9U,QAASC,EAFG6U,EAEH7U,QAChB+Q,UAAUF,MAAM,CACd/K,MAAK,kBAAA/5B,OAAoBmE,EAAKyF,SAAW,SAAW,OAA/C,KAAA5J,OAAyDg0B,EAAQ71B,KAAjE,QAAA6B,OAA4Ei0B,EAAQ91B,MACzFd,KAAI,GAAA2C,OAAKmE,EAAKyF,SAAU,kBAAmB,aAAvC,4BAAA5J,OAA8Eg0B,EAAQ71B,KAAtF,SAAA6B,OAAkGi0B,EAAQ91B,MAC9G4N,QACCk5B,MAAM,WACPv9B,EAAsBqE,GACtBm5B,MAAM,mCAGRx9B,EAAsBqE,GACtBm5B,MAAM,4BAERv+B,EAAEqiC,oBAGJ5N,cAAgB,WAAM,IACbJ,EAAa56B,EAAK2oC,YAAlB/N,UACHA,GACF56B,EAAK0L,MAAMxH,OAAO62B,kBAAkBH,EAAU55B,OAIlD6nC,kBAAoB,WAClB7oC,EAAK0L,MAAMxH,OAAO62B,mBAAkB,MAGtCiE,qBAAuB,SAAAN,GACrB1+B,EAAK4uB,SAAS,CAAC8P,oBAGjBoK,iBAAmB,WACjBxhC,GAAuBtH,EAAK0b,MAAMgjB,cAAgB1+B,EAAK0b,MAAM3X,MAAMi8B,kBACnE8E,MAAM,yHA1DN,IAAM/gC,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKyL,MAAMynB,eAAepvB,gDAK5B,IAAMA,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKyL,MAAMynB,eAAepvB,oCAoDrB,IAAA4Q,EAAA/G,EAKH3N,KAAKyL,MAHPnK,EAFKqM,EAELrM,SAAU2C,EAFL0J,EAEK1J,OAAQhC,EAFb0L,EAEa1L,KAAM6B,EAFnB6J,EAEmB7J,KAAMovB,EAFzBvlB,EAEyBulB,eAFzBmI,EAAA1tB,EAGLhL,UAAYyG,EAHPiyB,EAGOjyB,eAAsB+pB,EAH7BkI,EAGuBtyB,KAHvB+/B,EAAAn7B,EAGyCjK,UAAuBqlC,EAHhED,EAGqDp/B,UAAmCs/B,EAHxFF,EAGgFt/B,OAC7D4pB,EAJnBzlB,EAILrJ,gBAAkByE,KAA+CsqB,EAJ5D1lB,EAIqC7K,YAAcC,QAEnD07B,EAAgBz+B,KAAKyb,MAArBgjB,aACAhL,EAAYzzB,KAAZyzB,SAEP,IAAKA,EACH,OACExmB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,MAAM,EACN7V,KAAM,OACNqH,QAASz2B,KAAKqoC,oBACdvR,OAAQ,sBACR/pB,QAAS,wGACT0qB,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAPnD,uBAXG,IAAAuR,EAyByEjpC,KAAK0oC,YAA9E/N,EAzBAsO,EAyBAtO,UAAWhH,EAzBXsV,EAyBWtV,QAASC,EAzBpBqV,EAyBoBrV,QAASI,EAzB7BiV,EAyB6BjV,cAAeC,EAzB5CgV,EAyB4ChV,cAAekU,EAzB3Dc,EAyB2Dd,WAClE,IAAKxU,IAAYC,EACf,OAAO,KAGT,IAAMsV,EACJj8B,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC6+B,GAAD,CAAqBrB,UAAW14B,IAChCgL,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAAC6gC,GAAD,CACE/7B,KAAMA,EACNixB,eAAgBA,EAChB1vB,MAAOwlC,EAAYrpC,OAAOopC,GAC1B5V,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYA,EACZC,OAAK,EACLhqB,MAAI,EACJiqB,cAAezvB,EAAOA,EAAK/C,GAAK,KAChC+lB,SAAS,EACTxnB,mBAAoB2E,EAAO3E,sBAI3ByK,EAAajG,EAAOsvB,EAAgBtvB,EAAK0vB,cAAgB,KACzDzwB,EAAUd,EAAOoxB,EAAWtvB,OAAO,SAAAvE,GAAM,OAC7CA,EAAO0F,KAAKf,SAAWL,EAAK/C,KACxBvB,EAAOmL,SAAW1I,EAAKlB,IAAOkB,EAAKsyB,aAAa/0B,EAAOuB,KAAOkB,EAAKsyB,aAAa/0B,EAAOuB,IAAImE,KAAKiG,OACjG,GAEL,OACE8B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACgsC,GAAD,MACAl8B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMk1B,WAAS,EAACjT,KAAM,UAAWqS,UAAQ,EAACpS,MAAO,CAC/C,CAAC/hB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKmS,QAAS5f,KAAKuoC,MAAOxT,MAAO,MAAOmQ,QAAQ,GACvF,CAAC53B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAASmS,QAAS5f,KAAKwoC,UAAWj7B,GAAIC,IAChFf,GAAInL,EAASsL,SAAUmoB,MAAO,QAASmQ,QAAQ,EAC/CxL,MAAOiL,UAAUF,MAAQ,iCAAmC,6BAC9D,CAACn3B,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,UAAWF,GAAIC,IAC3Df,GAAE,qBAAA9M,QAAwB8+B,GAAgBhL,GAAUjhB,wBAA0BuiB,MAAO,QAASmQ,QAAQ,EACtGxL,MAAO,uCAAwCyC,OAAQ,UACxDl6B,GAAQA,EAAKmnC,MAAS,CAAC97B,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,OAAQF,GAAIC,IAC/Ef,GAAE,2BAAA9M,QAA8B8+B,GAAgBhL,GAAUsM,iBAAxD,YAAApgC,OAAmFmE,EAAOA,EAAK/C,GAAK,IAAMg0B,MAAO,QAASmQ,QAAQ,EACpIxL,MAAO,8CAA+CyC,OAAQ,UAAY,KAC3El6B,GAAQA,EAAKmnC,MAAS,CAAC97B,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBgoB,MAAO,QAASmQ,QAAQ,EAClHxL,MAAO,0CAA2C9Z,QAAS5f,KAAK6oC,kBAAoB,MACtF9kC,OAAO,SAAAy+B,GAAI,OAAIA,OAEnBv1B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMk1B,WAAS,EAACjT,KAAM,UAAWC,MAAO,CACtC,CAAC/hB,IAAK,WAAYP,QAChBE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG8lB,EAAgB/mB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,QAAStnB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAA/P,cAACksC,GAAD,CAAkBvlC,KAAMA,EAAMyM,OAAQojB,KAEvCoB,MAAOf,EAAgB,aAAUt1B,GACpC,CAAC4O,IAAK,WAAYP,QAChBE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG+lB,EAAgBhnB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,QAAStnB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAA/P,cAACksC,GAAD,CAAkBvlC,KAAMA,EAAMyM,OAAQqjB,KAEvCmB,MAAOd,EAAgB,aAAUv1B,GACpCqL,EAAa,CAACuD,IAAK,aAAcP,QAC/BE,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAS78B,GAAE,eAAA9M,OAAiBoK,EAAWhJ,KACrCkM,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,YADd,IAC6BiM,EAAWjM,MAEvCyP,GAAI,QAAU,MACjBxJ,OAAO,SAAAy+B,GAAI,OAAIA,OAElBz/B,EAAQtE,OACPwO,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMk1B,WAAS,EAACjT,KAAM,UAAWC,MAAOtsB,EAAQpB,IAAI,SAAAnC,GAAM,MAAK,CAC7D8N,IAAK9N,EAAOuB,GAAIgM,QACdE,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAS78B,GAAE,WAAA9M,OAAaH,EAAOuB,KAC7BkM,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CACEl3B,KAAM,CAACu7B,EAAG,gBAAiBC,EAAG,cAAeC,EAAG,iBAAiB/5B,EAAO0F,KAAKs0B,YAC7EzE,MAAO,CAACsE,EAAG,QAASC,EAAG,SAAUC,EAAG,OAAO/5B,EAAO0F,KAAKs0B,cAExD,IACAnyB,EAAqB7H,UAK5B,MAENyN,EAAAC,EAAA/P,cAAC8jC,GAAA,EAAD,CAAY1zB,GAAI6zB,WAAUC,SAAU,KACjC6H,GAEHj8B,EAAAC,EAAA/P,cAACgoC,GAAD,CACEljC,KAAMA,EACN04B,UAAWA,EACX4E,eAAgBv/B,KAAKu/B,eACrBz7B,KAAM2vB,EACNyM,UAAWp8B,EACXm8B,OAAKvrB,EAAA,GAAAzU,OAAA+T,EAAA,EAAA/T,CAAAyU,EAAI/F,EAAKmC,SAAW6iB,EAAQ71B,MAA5BmC,OAAA+T,EAAA,EAAA/T,CAAAyU,EAAmC/F,EAAKqC,SAAW4iB,EAAQ91B,MAA3D4W,GACL4T,aAAc,CAAC6f,GAAYpkC,OAAO,SAAAwM,GAAM,OAAIA,IAC5CouB,OAAQ3+B,KAAK2+B,OACb5D,cAAe/6B,KAAK+6B,cACpB6N,kBAAmB5oC,KAAK4oC,kBACxBx/B,eAAgBA,EAChB21B,qBAAsB/+B,KAAK++B,sBAE3B9xB,EAAAC,EAAA/P,cAAC8jC,GAAA,EAAD,CAAY1zB,GAAI0oB,KAAKE,IAAK+K,SAAU,KACjCgI,kCA5OT,OAAOlpC,KAAK+nC,aAAa/nC,KAAKyL,2CAuB9B,OAAOzL,KAAKkoC,oBAAoBloC,KAAKyL,wCAQrC,OAAOzL,KAAKooC,iBAAiBpoC,KAAKyL,cA1CP6C,aA4Q/Bw5B,GAAmBt5B,YAAW2jB,GAAW2V,SAEnCyB,8MACJnB,iBAAmBJ,aAAe,CAChC,SAAAv8B,GAAK,OAAIA,EAAM3H,OACd,SAAAA,GAAI,OAAIA,EAAO6K,EAAKsP,QAAQyV,YAAY5vB,EAAKA,MAAQ,+EAM/C,IAAAmf,EAKHjjB,KAAKyL,MAHPynB,EAFKjQ,EAELiQ,eAAgBpvB,EAFXmf,EAEWnf,KAAMG,EAFjBgf,EAEiBhf,OAAQhC,EAFzBghB,EAEyBhhB,KAAkB8G,EAF3Cka,EAE+BtgB,UAAYoG,KAF3CygC,EAAAvmB,EAGLvf,UAAYF,EAHPgmC,EAGOhmC,MAAOgG,EAHdggC,EAGchgC,OAAQE,EAHtB8/B,EAGsB9/B,UAAWC,EAHjC6/B,EAGiC7/B,WAAYC,EAH7C4/B,EAG6C5/B,cAC1BwpB,EAJnBnQ,EAIL3e,gBAAkByE,KAA+CsqB,EAJ5DpQ,EAIqCngB,YAAcC,QAE1D,IAAK9C,OAAO0lB,OAAO5c,GAAMtK,OACvB,OAAO,KAET,IAAMg1B,EAAWzzB,KAAKyzB,SACtB,OACExmB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAMxK,KAAKyL,MAAMD,MAAMhB,MAClCyC,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,UAAW8pB,MAAO,gBAAiB/H,MAAO7lB,EAAQurB,MAAO,SAC/D,CAACznB,IAAK,aAAc8pB,MAAO,mBAAoB/H,MAAO3lB,EAAWqrB,MAAO,SACxE,CAACznB,IAAK,UAAW8pB,MAAO,gBAAiB/H,MAAO1lB,GAChD,CAAC2D,IAAK,aAAc8pB,MAAO,mBAAoB/H,MAAOzlB,GACtD,CAAC0D,IAAK,MAAO8pB,MAAO,YAAa/H,MAAO7rB,IACxCO,OAAO,SAAAwI,GAAA,OAAAA,EAAE8iB,MAAiB5wB,SAAQkD,IAAI,SAAA6K,GAAA,IAAEc,EAAFd,EAAEc,IAAK8pB,EAAP5qB,EAAO4qB,MAAO/H,EAAd7iB,EAAc6iB,MAAO0F,EAArBvoB,EAAqBuoB,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAAC6gC,GAAD,CACE/7B,KAAMA,EACNkxB,UAAWpqB,EACXqqB,gBAAiBA,EACjBC,WAAYA,EACZ7vB,MAAO6rB,EACP6D,eAAgBA,EAChB5zB,mBAAoB2E,EAAO3E,6BAMrC2N,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAO3D,KAAI,GAAA7K,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,SACTyC,EAAAC,EAAA/P,cAACssC,GAAD,CAAkB3lC,KAAMA,EAAM2vB,SAAUA,EAAUP,eAAgBA,uCAvCxE,OAAOlzB,KAAKooC,iBAAiBpoC,KAAKyL,cANb6C,aAgEVE,eAAW2jB,GAAWoX,6CChZtBG,GAAA,CACbC,cCqBoB,+NApBdtpC,OAAOupC,cAAmD,WAAnCvpC,OAAOupC,aAAaC,2CACvCxpC,OAAOupC,aAAaE,gRAKvB7lC,EAAO3E,mBAAmBsH,qFAGzB5G,KAAK8pC,2BACX,GAAIzpC,OAAOupC,cAAmD,YAAnCvpC,OAAOupC,aAAaC,WAC7C,IACE5pC,OAAA8pC,GAAA,EAAA9pC,CAAI2pC,aAAJvuB,MAAA2uB,UAAAnhC,MAAAoqB,KAAAgX,IACA,MAAO3jC,GACP5F,QAAQo/B,MAAM,8BAA+Bx5B,mICD/C4jC,sNACJC,mBAAqBnC,aAAe,CAClC,SAAAv8B,GAAK,OAAIA,EAAMD,MAAMy8B,OAAOlnC,IAC5B,SAAA0K,GAAK,OAAIA,EAAMnH,gBAAgByE,OAC9B,SAACyqB,EAAcJ,GAAf,OAAmCA,EAAgBI,OAMtD4W,0BAA4B,WAC1BrqC,EAAK0L,MAAMmsB,qBAAqB,SAiBlC2Q,MAAQ,WACNxoC,EAAK0L,MAAMmsB,qBAAqB,SAGlCyS,gBAAkB,SAAA/jC,GAChB,IAAMoF,EAAMrL,OAAOiB,SAASojC,KAC5B,GAAIC,UAAUF,MAAO,KACZ16B,EADY9J,OAAAqqC,GAAA,EAAArqC,CAAAF,GACZgK,WACP46B,UAAUF,MAAM,CACd/K,MAAK,kBAAA/5B,OAAoBoK,EAAWG,QAAWH,EAAWR,SAAW,OAAS,OAAU,SAAnF,gBAAA5J,OAA0GoK,EAAWjM,MAC1Hd,KAAI,GAAA2C,OAAKoK,EAAWG,QAAWH,EAAWR,SAAW,cAAgB,aAAgB,SAAjF,0BAAA5J,OAAkHoK,EAAWjM,MACjI4N,QACCk5B,MAAM,WACPv9B,EAAsBqE,GACtBm5B,MAAM,mCAGRx9B,EAAsBqE,GACtBm5B,MAAM,4BAERv+B,EAAEqiC,oBAGJ4B,oBAAsB,WAAM,IACnBxgC,EADmB9J,OAAAqqC,GAAA,EAAArqC,CAAAF,GACnBgK,WACPhK,EAAK0L,MAAM8+B,oBAAoBxgC,MAGjCygC,gBAAkB,WAAM,IACfzgC,EADe9J,OAAAqqC,GAAA,EAAArqC,CAAAF,GACfgK,WACPhK,EAAK0L,MAAM++B,gBAAgBzgC,MAG7B0gC,gBAAkB,WAAM,IACf1gC,EADe9J,OAAAqqC,GAAA,EAAArqC,CAAAF,GACfgK,WACPhK,EAAK0L,MAAMg/B,gBAAgB1gC,uFAjDT,IACXA,EAAc/J,KAAd+J,WACHA,GACF/J,KAAKyL,MAAMmsB,qBAAqB7tB,gDAIf,IACZA,EAAc/J,KAAd+J,WACHA,GACF/J,KAAKyL,MAAMmsB,qBAAqB7tB,oCA0C3B,IAAA6B,EAIH5L,KAAKyL,MAFPnK,EAFKsK,EAELtK,SAAU2C,EAFL2H,EAEK3H,OAAQhC,EAFb2J,EAEa3J,KAAMixB,EAFnBtnB,EAEmBsnB,eACNC,EAHbvnB,EAGLjJ,UAAYoG,KAAoC8vB,EAH3CjtB,EAGyBlI,UAAYqF,KAAkBzE,EAHvDsH,EAGuDtH,gBAAwC+uB,EAH/FznB,EAGwE9I,YAAcC,QAEhFqwB,EAAmB9uB,EAAzByE,KACAgB,EAAc/J,KAAd+J,WAEP,IAAKA,EACH,OACEkD,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,MAAM,EACN7V,KAAM,OACNqH,QAASz2B,KAAKoqC,0BACdtT,OAAQ,4BACR/pB,QAAS,oHACT0qB,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAPnD,6BAcJ,IAAMgT,EAAUtrC,IAAE4D,QAAQ+G,EAAWN,QAAQ9H,IAAI,SAAAgpC,GAAW,OAAIxX,EAAUwX,KAAe,CACvF,SAAA1oC,GAAI,OAAI8H,EAAW6gC,UAAY7gC,EAAW6gC,UAAU3oC,EAAKlB,IAAI8pC,OAAS,GACtE,SAAA5oC,GAAI,OAAI8H,EAAW6gC,UAAY7gC,EAAW6gC,UAAU3oC,EAAKlB,IAAI+pC,aAAanP,MAAQ,GAClF,MACC,CAAC,OAAQ,OAAQ,SACd7D,IAAiB71B,GAAO8H,EAAWN,QAAQ7D,SAAS3D,EAAKlB,IACzDg3B,IAAiB91B,GAAO8H,EAAWiuB,gBAAkB/1B,EAAKlB,GAEhE,OACEkM,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMk1B,WAAS,EAACjT,KAAM,UAAWqS,UAAQ,EAACpS,MAAO,CAC/C,CAAC/hB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKmS,QAAS5f,KAAKuoC,MAAOxT,MAAO,MAAOmQ,QAAQ,GACvF,CAAC53B,IAAK,QAASP,QAAS,mBAAoBU,KAAM,QAASmS,QAAS5f,KAAKqqC,gBAAiB98B,GAAIC,IAC5Ff,GAAInL,EAASsL,SAAUmoB,MAAO,QAASmQ,QAAQ,EAC/CxL,MAAOiL,UAAUF,MAAQ,iCAAmC,wCAIpEx3B,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACokC,GAAA,EAAU3L,MAAX,CAAiB4L,OAAQ,QAASpS,KAAM,QACtCniB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CACEjkC,MAAOyM,EAAWG,QAAWH,EAAWR,SAAW,WAAtB,GAAA5J,OAAsCoK,EAAWsuB,MAAjD,KAAA14B,OAA0DoK,EAAWuuB,QAAY,UAC9GlB,MAAOrtB,EAAWG,QAAWH,EAAWR,SAAW,SAAW,SAAY,WAE5E0D,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CACEjkC,MAAOyM,EAAWN,QAAQhL,OAC1B24B,MAAO,UAETnqB,EAAAC,EAAA/P,cAACokC,GAAA,EAAD,CACEjkC,MAAOyM,EAAWwsB,UAClBa,MAAO,6BAGXnqB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAM+K,QAAS,SACb/zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,QAAQ9zB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKuoC,OAA/B,UAChCt7B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,KACEl0B,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEa,UAAQ,EACRjqB,MAAI,EACJmS,QAAS5f,KAAKqqC,gBACdxpB,MAAO,CAACyF,MAAO,QACf/Y,GAAIC,IACJf,GAAInL,EAASsL,SACb8sB,MAAOiL,UAAUF,MAAQ,iCAAmC,mCAE5Dx3B,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,UATd,wBAcJiM,EAAWG,QAyCT,KAxCF+C,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAM+K,QAAS,SACb/zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,QACtB9zB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEvH,SAAUvlB,EAAWG,QACrB2W,MAAO,CAACyF,MAAO,QACfyO,MAAO+C,EAAiB,SAAW,QACnClY,QAAS5f,KAAKuqC,qBAEbxgC,EAAWG,QAAU,KAAO+C,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAMg6B,EAAiB,YAAc,SACvEA,EAAiB,gBAChB/tB,EAAWG,QACTH,EAAWR,SAAW,sBAAwB,qBAC5C,wBAIV0D,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,KACEl0B,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEvH,UAAWyI,GAAkB2S,EAAQjsC,OAAS,GAAKsL,EAAWG,QAC9DwtB,UAAQ,EACRjqB,MAAI,EACJmS,QAAS5f,KAAKwqC,gBACd3pB,MAAO,CAACyF,MAAO,QACfyO,MAAO2V,EAAQjsC,QAAU,GAAKs5B,EAAiB,QAAsB,UAEpEhuB,EAAWR,SAAY,KACtB0D,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM4sC,EAAQjsC,QAAU,EAAKs5B,EAAiB,OAAS,YAAe,SAE7EhuB,EAAWG,QACVH,EAAWR,SAAW,WAAa,UAEnCmhC,EAAQjsC,QAAU,EAChBs5B,EAAiB,mBAAqB,kCACpC,kCAOhB9qB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACGhtB,EAAWG,QACV+C,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,EAAMwQ,UAAU,GAAQh7B,MAAO,CACnD,CAACiB,SAAU,WAAYixB,OAAQ,kBAC7B9wB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCj+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMlW,OAAP,KACE5nB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,KACGpsB,EAAWR,SAAW0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,UAAyC,KAChEl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,aACAl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,aACAl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,mBACAl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,uBACCphC,EAAWG,UAAYH,EAAWR,SAAW0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,aAA4C,KACzFphC,EAAWR,SAAW0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,yBAAwD,OAGnFl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMK,KAAP,KACGV,EAAQ/oC,IAAI,SAAA4O,GACX,IAAM86B,EAAQthC,EAAW6gC,UAAUr6B,EAAOxP,IAC1C,OACEkM,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,CAAW7oB,IAAKiD,EAAOxP,IACpBgJ,EAAWR,SACV0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMjoC,MAAQ,EACzB6J,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CACEl3B,KAAM,CAACu7B,EAAG,SAAUC,EAAG,cAAeC,EAAG,eAAe8R,EAAMjoC,MAC9D2xB,MAAO,CAACsE,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAAS8R,EAAMjoC,QAElD,MACF,KACJ6J,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMjoC,MACnB6J,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KACEza,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,OAAQtD,KAAM,OAAQoD,KAAMjiB,EAAOxP,KACvDwP,EAAOzS,MAEVmP,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMR,SAAWQ,EAAMC,YAAcD,EAAMR,OAA3C,GAAAlrC,OAAuD0rC,EAAMC,YAA7D,MAAA3rC,OAA6E0rC,EAAMR,OAAnF,MACb59B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMP,aAAaS,eAAeC,QAAQ,IACtDzhC,EAAWG,UAAYH,EAAWR,SACjC0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMI,oBAAsB,yBACvCJ,EAAM9X,cACJtmB,EAAAC,EAAA/P,cAAC64B,GAAD,CACE/zB,KAAM,KACNkxB,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYA,EACZvvB,KAAM+0B,EAAUwS,EAAM9X,eACtBL,eAAgBA,EAChBI,OAAK,EACLhqB,MAAI,EACJhK,mBAAoB2E,EAAO3E,qBAE3B,YAEJ,KACHyK,EAAWR,SACV0D,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAa2jB,EAAMK,gBAAkB,EAAxB,IAAA/rC,OAAgC0rC,EAAMK,iBAAoBL,EAAMK,iBAC3E,YAOhB,CAAC5+B,SAAU,QAASixB,OAAQ,kBAC1B9wB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCj+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMlW,OAAP,KACE5nB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,KACElpB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACA1+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACA1+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,eAGHphC,EAAW6hC,SAASjqC,IAAI,SAAC02B,EAAOwT,GAAR,OACvB5+B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,CAAUZ,IAAKu+B,GACb5+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMlW,OAAP,KACE5nB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,KACElpB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAAmB,YAAftT,EAAM34B,KAAqB,cAAgB,KAA1E,SAAsF24B,EAAMA,SAGhGprB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMK,KAAP,KACG/S,EAAMyT,SAASnqC,IAAI,SAAA0K,EAA4C0/B,GAAc,IAAAC,EAAA/rC,OAAAqM,EAAA,EAAArM,CAAAoM,EAAxD5C,QAAwD,GAA9CwiC,EAA8CD,EAAA,GAAnCE,EAAmCF,EAAA,GAAvB7nC,EAAuBkI,EAAvBlI,OAC/CL,EAAO+0B,EAAU10B,GACjBgoC,EAAaroC,GAAQA,EAAKyF,UAAYzF,EAAKo0B,eAAiB+T,EAC5DG,EAAatoC,GAAQA,EAAKyF,UAAYzF,EAAKo0B,eAAiBgU,EAClE,OACEj/B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,CAAW7oB,IAAKy+B,GACd9+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,CAAY3Z,UAAWgR,IAAW,kBAAmB,WAAY,CAACstB,eAAgBF,EAAYG,eAAgBF,KAC3GH,EACCh/B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,OAAQtD,KAAM,OAAQoD,KAAMyZ,IAChD9Y,EAAU8Y,GAAWnuC,MAEtB,0BAENmP,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,CAAY3Z,UAAWgR,IAAW,kBAAmB,WAAY,CAACstB,eAAgBF,EAAYG,eAAgBF,KAC3GtoC,GAAQA,EAAKyF,SAAYzF,EAAKo0B,eAAiB+T,EAAY,IAAM,IAAO,KAE3Eh/B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,CAAY3Z,UAAWgR,IAAW,kBAAmB,WAAY,CAACstB,eAAgBF,EAAYG,eAAgBF,KAC3GF,EACCj/B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,OAAQtD,KAAM,OAAQoD,KAAM0Z,IAChD/Y,EAAU+Y,GAAWpuC,MAEtB,0BAENmP,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,CAAY3Z,UAAWgR,IAAW,kBAAmB,WAAY,CAACstB,eAAgBF,EAAYG,eAAgBF,KAC3GtoC,GAAQA,EAAKyF,SAAYzF,EAAKo0B,eAAiBgU,EAAY,IAAM,IAAO,KAE3Ej/B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KACGukB,GAAaC,EACZpoC,EACEmJ,EAAAC,EAAA/P,cAAC64B,GAAD,CACE/zB,KAAM,KACNkxB,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYA,EACZvvB,KAAMA,EACNovB,eAAgBA,EAChBI,OAAK,EACLhqB,MAAI,EACJhK,mBAAoB2E,EAAO3E,qBAE3B,kBACF,mBAYxB2N,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCj+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMlW,OAAP,KACE5nB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,KACElpB,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,aACAl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMI,WAAP,iBAGJl+B,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMK,KAAP,KACGV,EAAQ/oC,IAAI,SAAA4O,GAAM,OACjBtD,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAM5U,IAAP,CAAW7oB,IAAKiD,EAAOxP,IACrBkM,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KACEza,EAAAC,EAAA/P,cAAC83B,GAAD,CAAYvC,QAAS,OAAQtD,KAAM,OAAQoD,KAAMjiB,EAAOxP,KACvDwP,EAAOzS,MAEVmP,EAAAC,EAAA/P,cAAC4tC,GAAA,EAAMrjB,KAAP,KAAanX,EAAOorB,aAO/B5D,IAAmBhuB,EAAWG,QAC7B+C,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAM+K,QAAS,SACb/zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,CAAaJ,UAAW,SAExB9zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKkL,OAAN,KACEl0B,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEvH,KAAM,OACNwH,QACE3pB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACEvH,UAAWyI,EACXyE,UAAQ,EACR/uB,MAAI,EACJoT,MAAO,CAACyF,MAAO,SAEfrZ,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,SACX,oBAGLg5B,OAAQ,mBACR/pB,QAAS,iDACT0qB,QAAS,CACP,CAACnqB,IAAK,MAAOP,QAAS,QAAS6S,QAAS5f,KAAKyqC,gBAAiBjO,UAAU,GACxE,CAAClvB,IAAK,KAAMP,QAAS,sBAAuBupB,WAAW,SAM/D,yCAzWR,OAAOt2B,KAAKmqC,mBAAmBnqC,KAAKyL,cAPH6C,cAsYrC47B,GAAyB17B,YAAW2jB,GAAW+X,SAEzCqC,oLACK,IAAA5+B,EAIH3N,KAAKyL,MAFPynB,EAFKvlB,EAELulB,eAAgB0E,EAFXjqB,EAEWiqB,qBAAsB2S,EAFjC58B,EAEiC48B,oBAAqBC,EAFtD78B,EAEsD68B,gBAAiBC,EAFvE98B,EAEuE88B,gBAAiB1gC,EAFxF4D,EAEwF5D,WAAY9H,EAFpG0L,EAEoG1L,KACvFkxB,EAHbxlB,EAGLhL,UAAYoG,KAAkBzE,EAHzBqJ,EAGyBrJ,gBAEhC,OAAKrE,OAAO0lB,OAAOwN,GAAW10B,OAI5BwO,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAMxK,KAAKyL,MAAMD,MAAMhB,MAClCyC,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACghC,GAAD,MACAlxB,EAAAC,EAAA/P,cAAA,WAAK8P,EAAAC,EAAA/P,cAAA,WACL8P,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,UAAW8pB,MAAO,kCAAmC/H,MAAO/qB,EAAgB+F,gBAAiB0qB,MAAO,SAC1G,CAACznB,IAAK,aAAc8pB,MAAO,uCAAwC/H,MAAO/qB,EAAgBiG,mBAAoBwqB,MAAO,SACrH,CAACznB,IAAK,UAAW8pB,MAAO,sBAAuB/H,MAAO/qB,EAAgBqF,YACtE,CAAC2D,IAAK,aAAc8pB,MAAO,yBAA0B/H,MAAO/qB,EAAgBsF,gBAC5E7F,OAAO,SAAA2Q,GAAA,OAAAA,EAAE2a,MAAiB5wB,SAAQkD,IAAI,SAAA4K,GAAA,IAAEe,EAAFf,EAAEe,IAAK8pB,EAAP7qB,EAAO6qB,MAAO/H,EAAd9iB,EAAc8iB,MAAO0F,EAArBxoB,EAAqBwoB,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAACkhC,GAAD,CACEp8B,KAAMA,EACNkxB,UAAWA,EACX9uB,YAAagrB,EACbuI,qBAAsBA,YAMhC3qB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAO3D,KAAI,GAAA7K,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,SACTyC,EAAAC,EAAA/P,cAACqvC,GAAD,CACEziC,WAAYA,EACZmpB,eAAgBA,EAChB0E,qBAAsBA,EACtB2S,oBAAqBA,EACrBC,gBAAiBA,EACjBC,gBAAiBA,MAhChB,YAPkBn8B,aA8DhBE,eAAW2jB,GAAWoa,KC/c/BE,8MACJhxB,MAAQ,CACN7M,eAAgB7O,EAAK0L,MAAMmD,eAC3B7H,OAAQ,KACR2lC,iBAAkB,KAClBC,cAAe,KACfC,kBAAmB,KACnBzhC,KAAK,KASPqT,gBAAkB,SAAApO,GAAQ,IAAAxE,EACI7L,EAAK0L,MAA1BohC,EADiBjhC,EACjBihC,QAASC,EADQlhC,EACRkhC,SAChB,IAAKD,IAAYC,EACf,OAAO,EAHe,IAAAnkB,EAK2B5oB,EAAK0b,MAAjDixB,EALiB/jB,EAKjB+jB,iBAAkBE,EALDjkB,EAKCikB,kBACzB,OANwBjkB,EAKoBxd,MAIxC0hC,IAAYC,EACP/sC,EAAKgtC,yBAAyB38B,EAAMs8B,GAClCI,IAAaD,EACf9sC,EAAKitC,2BAA2B58B,EAAMw8B,GACpCC,GAAWC,EACfJ,GAAqBE,EAEfF,EACF3sC,EAAKgtC,yBAAyB38B,EAAMs8B,KAClCE,GACF7sC,EAAKitC,2BAA2B58B,EAAMw8B,GAJtC7sC,EAAKgtC,yBAAyB38B,EAAMs8B,QAFxC,MAgDTj3B,SAAW,SAAArF,GAAQ,IAAA6sB,EACkCl9B,EAAK0b,MAAjDixB,EADUzP,EACVyP,iBAAkBE,EADR3P,EACQ2P,kBACzB,IAFiB3P,EAC2B9xB,IAC5C,CAFiB,IAAAwC,EAKW5N,EAAK0L,MAA1BohC,EALUl/B,EAKVk/B,QAASC,EALCn/B,EAKDm/B,SACZD,IAAYC,EACd/sC,EAAKktC,eAAe78B,EAAMs8B,GACjBI,IAAaD,EACtB9sC,EAAKmtC,iBAAiB98B,EAAMw8B,GACnBC,GAAWC,IACfJ,GAAqBE,EAEfF,GACT3sC,EAAKktC,eAAe78B,EAAMs8B,GACP,IAAft8B,EAAKO,QACP5Q,EAAK4uB,SAAS,CAACge,cAAeD,IAC9B3sC,EAAKmtC,iBAAiB98B,EAAMw8B,KAErBA,IACT7sC,EAAKmtC,iBAAiB98B,EAAMw8B,GAC5B7sC,EAAK4uB,SAAS,CAACge,cAAe,QAT9B5sC,EAAKktC,eAAe78B,EAAMs8B,QA6DhCjuB,eAAiB,SAAArO,GACf,IAAKrQ,EAAK0L,MAAMohC,UAAY9sC,EAAK0L,MAAMqhC,SACrC,OAAO,EAFc,IAAAK,EAI4BptC,EAAK0b,MAAjDixB,EAJgBS,EAIhBT,iBAAkBE,EAJFO,EAIEP,kBACzB,GALuBO,EAIqBhiC,IAE1C,OAAO,EANc,IAAA8X,EAQKljB,EAAK0L,MAA1BohC,EARgB5pB,EAQhB4pB,QAASC,EARO7pB,EAQP6pB,SAChB,OAAID,IAAYC,EACc,OAArBJ,GAA6BA,EAAiBr8B,IAAMD,EAAKC,GAAKq8B,EAAiBv8B,IAAMC,EAAKD,EACxF28B,IAAaD,EACO,OAAtBD,GAA8BA,EAAkBv8B,IAAMD,EAAKC,GAAKu8B,EAAkBz8B,IAAMC,EAAKD,EAC3F08B,GAAWC,EAChBJ,EACKA,EAAiBr8B,IAAMD,EAAKC,GAAKq8B,EAAiBv8B,IAAMC,EAAKD,IAC3Dy8B,IACFA,EAAkBv8B,IAAMD,EAAKC,GAAKu8B,EAAkBz8B,IAAMC,EAAKD,QAJnE,KAWT2P,KAAO,WAAM,IAAAyE,EACiBxkB,EAAK0L,MAA1BohC,EADItoB,EACJsoB,QAASC,EADLvoB,EACKuoB,SADLM,EAEuDrtC,EAAK0b,MAAhEixB,EAFIU,EAEJV,iBAAkBC,EAFdS,EAEcT,cAAeC,EAF7BQ,EAE6BR,kBAF7BQ,EAEgDjiC,MAIvD0hC,IAAYC,EACd/sC,EAAK4uB,SAAS,CAAC+d,iBAAkB,OACxBI,IAAaD,EACtB9sC,EAAK4uB,SAAS,CAACie,kBAAmB,OACzBC,GAAWC,IAChBJ,EACF3sC,EAAK4uB,SAAS,CAAC+d,iBAAkB,OACxBE,GACT7sC,EAAKstC,mBAAmBV,EAAeC,QAK7Czd,MAAQ,WAAM,IACLvgB,EAAkB7O,EAAK0L,MAAvBmD,eACP7O,EAAK4uB,SAAS,CACZ/f,iBAAgB7H,OAAQ,KAAMoE,KAAK,EAAOuhC,iBAAkB,KAAMC,cAAe,KAAMC,kBAAmB,0FA1L3F5kB,EAAWC,EAAWC,GACnCF,EAAUpZ,iBAAmB5O,KAAKyL,MAAMmD,gBAC1C5O,KAAKmvB,yDA8BgB/e,EAAMs8B,GAC7B,OAAKA,EAG0B,IAA3BA,EAAiB/7B,QAG0E,IAA3FM,KAAKC,IAAID,KAAK+M,IAAI5N,EAAKC,EAAIq8B,EAAiBr8B,GAAIY,KAAK+M,IAAI5N,EAAKD,EAAIu8B,EAAiBv8B,QAGlFC,EAAKO,MAAQ+7B,EAAiB/7B,MAAS,KAGxCP,EAAKG,SAXAH,EAAKG,SAAW5B,EAAKmC,4DAiBLV,EAAMw8B,GAC/B,OAAKA,EAG4F,IAA7F37B,KAAKC,IAAID,KAAK+M,IAAI5N,EAAKC,EAAIu8B,EAAkBv8B,GAAIY,KAAK+M,IAAI5N,EAAKD,EAAIy8B,EAAkBz8B,QAGrFC,EAAKO,MAAQ,KAGbP,EAAKG,QARAH,EAAKG,SAAW5B,EAAKmC,gDAwCjBV,EAAMs8B,GACfA,EACF1sC,KAAK2uB,SAAS,SAAAtiB,GAAA,IAAAihC,EAAE1+B,EAAFvC,EAAEuC,eAAF,MAAuB,CACnC89B,iBAAkB,KAClB99B,gBAAgB0+B,EAAA3+B,EAAKsP,SAAQzH,YAAbrF,MAAAm8B,EAAA,CAAyB1+B,GAAzBjP,OAA4C,CAC1D,CAAC0Q,EAAGq8B,EAAiBr8B,EAAGF,EAAGu8B,EAAiBv8B,EAAGI,OAAQ,KAAME,OAAQ,MACrE,CAACJ,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQm8B,EAAiBn8B,OAAQE,OAAQi8B,EAAiBj8B,WAEnF1J,OAAQ,CACN,CAACpJ,KAAM+uC,EAAkBjgC,GAAI2D,EAAM1Q,KAAM,OAAQwiB,OAAQ,UAE3D/W,IAAoB,IAAfiF,EAAKO,SAGZ3Q,KAAK2uB,SAAS,CAAC+d,iBAAkBt8B,+CAIlBu8B,EAAeC,GAChC5sC,KAAK2uB,SAAS,SAAAja,GAAA,IAAA64B,EAAE3+B,EAAF8F,EAAE9F,eAAF,MAAuB,CACnC89B,iBAAkBC,EAClBC,kBAAmB,KACnBh+B,gBAAgB2+B,EAAA5+B,EAAKsP,SAAQzH,YAAbrF,MAAAo8B,EAAA,CAAyB3+B,GAAzBjP,OAA4C,CAC1D,CAAC0Q,EAAGu8B,EAAkBv8B,EAAGF,EAAGy8B,EAAkBz8B,EAAGI,OAAQ,KAAME,OAAQ,MACvE,CAACJ,EAAGs8B,EAAct8B,EAAGF,EAAGw8B,EAAcx8B,EAAGI,OAAQo8B,EAAcp8B,OAAQE,OAAQk8B,EAAcl8B,WAE/F1J,OAAQ,KACRoE,KAAK,8CAIQiF,EAAMw8B,GACjBA,EACF5sC,KAAK2uB,SAAS,SAAApiB,GAAA,IAAEqC,EAAFrC,EAAEqC,eAAF,MAAuB,CACnCg+B,kBAAmB,KACnBh+B,eAAgBD,EAAKsP,QAAQzH,YAAY5H,EAAgB,CACvDyB,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAO/B,EAAewB,EAAKD,GAAGlS,MAAMmS,EAAKC,GAAGM,MAAQ,IAE5E5J,OAAQ,CACN,CAACpJ,KAAMivC,EAAmBngC,GAAI2D,EAAM1Q,KAAM,QAASwiB,OAAQ,aAI/DliB,KAAK2uB,SAAS,CAACie,kBAAmBx8B,qCAsD7B,IAAAqd,EAC4EztB,KAAKyL,MAAjFxH,EADAwpB,EACAxpB,OAAQupC,EADR/f,EACQ+f,MAAOX,EADfpf,EACeof,QAASC,EADxBrf,EACwBqf,SAA0BW,EADlDhgB,EACkC7e,eADlC8+B,EAEoE1tC,KAAKyb,MAAzE7M,EAFA8+B,EAEA9+B,eAAgB7H,EAFhB2mC,EAEgB3mC,OAAQoE,EAFxBuiC,EAEwBviC,IAAKuhC,EAF7BgB,EAE6BhB,iBAAkBE,EAF/Cc,EAE+Cd,kBAChDe,EAAc1pC,EAAO3E,mBACrBjB,EAAQ4B,OAAA+M,EAAA,EAAA/M,CAAA,GAAO0tC,EAAP,CAAoB3vC,MAAMiC,OAAA+M,EAAA,EAAA/M,CAAA,GAAK0tC,EAAY3vC,MAAlB,CAAyBgJ,QAAS,cAEzE,OACEiG,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACG2+B,GAAWC,EACV7/B,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO5pB,EAAM,QAAU,OAAQsC,KAAMtC,EAAM,cAAWzM,EAAWqO,QACtE5B,EAAM,sCACHuhC,GAAqBE,EACpBF,EAAmB,0EACjB,2EAFsC,8BAO9Cz/B,EAAAC,EAAA/P,cAAA,YAEA,KACJ8P,EAAAC,EAAA/P,cAACixB,GAADnuB,OAAAoN,OAAA,CACE8S,SAAUxR,EAAKsP,QACfU,QAAM,EACN2J,aAAc,GACdhK,UAAWuuB,GAAWC,EACtBvuB,SAAUsuB,GAAWC,EACrBtuB,gBAAiBxe,KAAKwe,gBACtBC,eAAgBze,KAAKye,eACrBhJ,SAAUzV,KAAKyV,SACfqK,KAAM9f,KAAK8f,KACXzhB,SAAUA,EACV0hB,UAAQ,EAACgL,YAAU,EACnBnc,eAAgBA,GACX7H,EAAM9G,OAAA+M,EAAA,EAAA/M,CAAA,GAAOutC,EAAP,CAAczmC,WAAUymC,IAEpCX,GAAWC,EACV7/B,EAAAC,EAAA/P,cAAA,WACE8P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQjX,QAAS5f,KAAKmvB,MAAOG,SAAU1gB,IAAmB6+B,EAAwB7L,SAAO,GAAzF,UAEA,aAlPatzB,aAgQzBm+B,GAAWl+B,aAAe,CACxBs+B,SAAS,EACTC,UAAU,GAGZL,GAAata,GAAWsa,QAElBmB,8MA8kCJnyB,MAAQ,CACNoyB,UAAW,KAGbC,cAAgB,WACd7mC,EAAK0nB,SAAS,CAACkf,UAAW,OAG5BE,iBAAmB,WACjB9mC,EAAK0nB,SAAS,SAAAlT,GAAK,MAAK,CAACoyB,UAAWpyB,EAAMoyB,UAAY,QAGxDG,aAAe,WACb/mC,EAAK0nB,SAAS,SAAAlT,GAAK,MAAK,CAACoyB,UAAWpyB,EAAMoyB,UAAY,QAGxDI,aAAe,WACbhnC,EAAK0nB,SAAS,CAACkf,UAAW5mC,EAAKC,YAAY4U,MAAMrd,OAAS,6EAGnD,IACAovC,EAAa7tC,KAAKyb,MAAlBoyB,UACD/xB,EAAQ9b,KAAKkH,YAAY4U,MACzBoyB,EAAOpyB,EAAM+xB,GAEnB,OACE5gC,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,KACElhC,EAAAC,EAAA/P,cAACgxC,EAAA,EAAQxZ,QAAT,KACE1nB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAM+K,QAAS,QAAS8F,cAAe,SAAU/F,UAAW,UAC1D9zB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMiiB,KAAM,UAAWC,MAAO,CAC5B,CAAC/hB,IAAK,QAASG,KAAM,gBAAiBmS,QAAS5f,KAAK8tC,cAAexe,SAAwB,IAAdue,GAC7E,CAACvgC,IAAK,WAAYG,KAAM,WAAYmS,QAAS5f,KAAK+tC,iBAAkBze,SAAwB,IAAdue,GAC9E,CAACvgC,IAAK,OAAQG,KAAM,UAAWmS,QAAS5f,KAAKguC,aAAc1e,SAAUue,IAAc/xB,EAAMrd,OAAS,GAClG,CAAC6O,IAAK,OAAQG,KAAM,eAAgBmS,QAAS5f,KAAKiuC,aAAc3e,SAAUue,IAAc/xB,EAAMrd,OAAS,OAG3GwO,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KAAUlpB,EAAAC,EAAA/P,cAACgxC,EAAA,EAAQtZ,OAAT,KAAiBgZ,EAAY,EAA7B,MAAmCK,EAAKxU,QAClDzsB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KAAUlpB,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CAASphC,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,CAAUZ,IAAKugC,GAAYK,EAAK9wC,SAC5D6P,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACG0X,EAAY/xB,EAAMrd,OAAS,EAC1BwO,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ+K,SAAO,EAAChiB,QAAS5f,KAAKguC,aAAcvgC,KAAM,UAAWV,QAAS,oBAEtEE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQa,UAAQ,EAACnqB,GAAIC,IAASf,GAAI,SAAUgB,KAAM,OAAQV,QAAS,6BACnEE,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQa,UAAQ,EAACnqB,GAAIC,IAASf,GAAI,WAAYgB,KAAM,UAAWV,QAAS,sDA3nChEuB,aAApBs/B,GACG9xB,MAAQ,CACb,CAAC4d,MAAO,eAAgBt8B,KAAM6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAC5BjB,EAAAC,EAAA/P,cAAA,4CACgC8P,EAAAC,EAAA/P,cAAA,+BADhC,wCAGA8P,EAAAC,EAAA/P,cAAA,sCAC0B8P,EAAAC,EAAA/P,cAAA,iCAD1B,sBAC6E8P,EAAAC,EAAA/P,cAAA,uBAAuB,QAClG8P,EAAAC,EAAA/P,cAAA,uBAFF,aAEkC8P,EAAAC,EAAA/P,cAAA,wBAFlC,UAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAAA,kBACM8P,EAAAC,EAAA/P,cAAA,2BADN,qDACkF8P,EAAAC,EAAA/P,cAAA,2BADlF,uBAEoB8P,EAAAC,EAAA/P,cAAA,uCAFpB,8BAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,iBAG/D87B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,eAKrE,CAACwX,MAAO,SAAUt8B,KAAM6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACtBjB,EAAAC,EAAA/P,cAAA,sBACU8P,EAAAC,EAAA/P,cAAA,+BADV,sBAC2D8P,EAAAC,EAAA/P,cAAA,8BAD3D,IAEE8P,EAAAC,EAAA/P,cAAA,4BAFF,QAEkC8P,EAAAC,EAAA/P,cAAA,4BAFlC,KAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAAA,sBACU8P,EAAAC,EAAA/P,cAAA,+DADV,+BAGA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAAA,+BACmB8P,EAAAC,EAAA/P,cAAA,wCADnB,6BACoF8P,EAAAC,EAAA/P,cAAA,+CADpF,cAE+B8P,EAAAC,EAAA/P,cAAA,4CAF/B,mBAGK8P,EAAAC,EAAA/P,cAAA,0BAHL,qBAGgD8P,EAAAC,EAAA/P,cAAA,mCAHhD,KAKA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDo8B,SAAO,MAGX,CAACnT,MAAO,SAAUt8B,KAAK6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACrBjB,EAAAC,EAAA/P,cAAA,oCACwB8P,EAAAC,EAAA/P,cAAA,6BADxB,KACsD8P,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,SAAd,UADtD,IAEE9nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,QAAd,WAFF,KAEyC9nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,UAAd,WAFzC,IAGE9nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,OAAd,WAHF,aAGgD9nB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOC,MAAO,QAAd,2BAHhD,KAKA9nB,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAAA,yBACa8P,EAAAC,EAAA/P,cAAA,8BADb,QAC+C8P,EAAAC,EAAA/P,cAAA,2CAD/C,SAC+F8P,EAAAC,EAAA/P,cAAA,wCAD/F,aAEmC8P,EAAAC,EAAA/P,cAAA,+CAFnC,KAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,SAC7D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAAA,qCAGA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEvB,SAAO,EACPj+B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACipB,MAAO,WAAYt8B,KAAK6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACvBjB,EAAAC,EAAA/P,cAAA,yDAC6C8P,EAAAC,EAAA/P,cAAA,+CAD7C,8CAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAIpEjV,EAAAC,EAAA/P,cAAA,sBACU8P,EAAAC,EAAA/P,cAAA,qCADV,oCAC+E8P,EAAAC,EAAA/P,cAAA,qDAD/E,6FAKA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,SAC9D,CAACvkB,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAIpEjV,EAAAC,EAAA/P,cAAA,iFAGA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEtB,UAAQ,EACRl+B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACipB,MAAO,UAAWt8B,KAAK6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACtBjB,EAAAC,EAAA/P,cAAA,iHAEQ8P,EAAAC,EAAA/P,cAAA,wBAFR,KAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAKnDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAKpEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAKpEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAAA,WACA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAKpEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAKpEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,QAASwiB,OAAQ,aAKpEjV,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+8B,MAAO,CACLzmC,OAAQ,CACN,CAACpJ,KAAM,CAAC0S,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIzQ,KAAM,OAAQwiB,OAAQ,aAInEjV,EAAAC,EAAA/P,cAAA,4CAGA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEvB,SAAO,EAACC,UAAQ,EAChBl+B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACipB,MAAO,0BAA2Bt8B,KAAK6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACtCjB,EAAAC,EAAA/P,cAAA,8JAIA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACipB,MAAO,mCAAoCt8B,KAAK6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAC/CjB,EAAAC,EAAA/P,cAAA,wSAKA8P,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAA/P,cAACixC,GAAD,CACEx/B,eAAgB,CACd,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,sBAKnE,CAAC8nB,MAAO,wBAA0Bt8B,KAAM6P,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACtCjB,EAAAC,EAAA/P,cAAA,oDACwC8P,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAS78B,GAAI,aAAb,yCADxC,mBAEkCQ,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAS78B,GAAI,WAAb,gBAFlC,QA+DSmhC,UC34CTS,sNAGJ5yB,mBACE6yB,oBAAqB,CAACj+B,EAAG,EAAGF,EAAG,GAC/Bo+B,cAAe,CAACh+B,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cACpD0b,SAAUze,EAAKsP,QAAQnO,2BACvB0+B,cAAe,KACfC,UAAU,GACP1uC,EAAKwkC,kCACR9F,aAAc,KACdtR,iBAAkB,SA0BpBqX,wBAA0B,WACxBzkC,EAAK4uB,SAAS,CAACmR,MAAO,UAGxB4O,4BAA8B,SAACJ,EAAqBC,GAClDxuC,EAAK4uB,SAAS,CAAC2f,sBAAqBC,qBAGtCI,iBAAmB,SAAAvhB,GACjB,IAAItpB,EAAM0qC,EACV,IACE1qC,EAAO6K,EAAKsP,QAAQlL,aAAaqa,GACjCohB,EAAgB,KAChB,MAAOloC,GACPxC,EAAO6K,EAAKsP,QAAQjO,SACpBw+B,EAAgBloC,EAAEsoC,QAEpB7uC,EAAK4uB,SAAS,SAAAlT,GAAK,MAAK,CACtB2R,WACAtpB,OACA0qC,gBACArhB,iBAAkB1R,EAAM2R,eAI5B3X,SAAW,SAAAopB,GACT9+B,EAAK4uB,SAAS,CAAC7qB,KAAM+6B,OAGvBE,qBAAuB,SAAAN,GACrB1+B,EAAK4uB,SAAS,CAAC8P,oBAGjBoQ,SAAW,WAAM,IAAAlmB,EACc5oB,EAAK0b,MAA3B3X,EADQ6kB,EACR7kB,KACDgrC,EAFSnmB,EACF8V,cACuB36B,EACpC/D,EAAK4uC,iBAAiBG,EAAYlgC,mBAGpCmgC,WAAa,WACXhvC,EAAK4uC,iBAAiBhgC,EAAKsP,QAAQnO,+BAGrCgQ,KAAO,WACL/f,EAAK4uC,iBAAiB5uC,EAAK0b,MAAM0R,qBAGnC6hB,UAAY,WACVjvC,EAAK4uC,iBAAiB5uC,EAAK0b,MAAM2R,aAGnC6hB,aAAe,WACb5nC,EAAsBsH,EAAKsP,QAAQhE,oBAAoBla,EAAK0b,MAAM2R,WAClEyX,MAAM,mCAGRgE,iBAAmB,WACjBxhC,GAAuBtH,EAAK0b,MAAMgjB,cAAgB1+B,EAAK0b,MAAM3X,MAAMi8B,kBACnE8E,MAAM,wCAGRqK,YAAc,WACZnvC,EAAK0L,MAAMyjC,YAAYvgC,EAAKsP,QAAQlL,aAAahT,EAAK0b,MAAM2R,UAAU2S,mHApFtE,IACM3S,EADS,IAAIgY,gBAAgB/kC,OAAOiB,SAAS+jC,QAC3BjL,IAAI,aAAep6B,KAAKyL,MAAM0jC,wBACtD,GAAI/hB,EAAU,CACZ,IAAItpB,EAAM2qC,EACV,KACE3qC,EAAO6K,EAAKsP,QAAQhL,+BAA+Bma,MAEjDqhB,EAAW,8BAEb,MAAOnoC,GACPxC,EAAO,KACP2qC,EAAQ,qCAAA9uC,OAAwC2G,EAAEsoC,SAEpD,OAAK9qC,EAGE,CAACA,OAAM2qC,UAAU,EAAOrhB,SAAUtpB,EAAK8K,gBAFrC,CAAC9K,KAAM6K,EAAKsP,QAAQjO,SAAUy+B,WAAUrhB,SAAUze,EAAKsP,QAAQnO,4BAIxE,MAAO,CAAChM,KAAM6K,EAAKsP,QAAQjO,SAAUy+B,UAAU,EAAOrhB,SAAUze,EAAKsP,QAAQnO,6DAqExE,IAAAlE,EACsC5L,KAAKyL,MAA3CxJ,EADA2J,EACA3J,KAAMgC,EADN2H,EACM3H,OAAQw/B,EADd73B,EACc63B,QAASyL,EADvBtjC,EACuBsjC,YADvBjS,EAE+Gj9B,KAAKyb,MAApH6yB,EAFArR,EAEAqR,oBAAqBlhB,EAFrB6P,EAEqB7P,SAAUmhB,EAF/BtR,EAE+BsR,cAAeC,EAF9CvR,EAE8CuR,cAAeC,EAF7DxR,EAE6DwR,SAAU3qC,EAFvEm5B,EAEuEn5B,KAAM26B,EAF7ExB,EAE6EwB,aAActR,EAF3F8P,EAE2F9P,iBAC5F9uB,EAAW4F,EAAO3E,mBAElBygC,EAAmBpxB,EAAKsP,QAAQhE,oBAAoBmT,GAC1D,OACEngB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,OAAQwJ,EACRrf,KAAM,OACNqH,QAASz2B,KAAKwkC,wBACd1N,OAAQ,iCACR/pB,QAAO,GAAApN,OAAK8uC,EAAL,+CACPhX,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAEjDzqB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMs0B,UAAQ,EAACrS,KAAM,UAAWC,MAAO,CACrC,CAAC/hB,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBgoB,MAAO,QAASmQ,QAAQ,EAAM33B,GAAI,IACzFm3B,KAAI,aAAA/kC,OAAeogC,GACnBrG,MAAOiL,UAAUF,MAAQ,iCAAmC,iCAC9D,CAACn3B,IAAK,OAAQG,KAAM,YAAaV,QAAS,gBAAiBgoB,MAAO,QAASmQ,QAAQ,EACjFxL,MAAO,qCAAsC9Z,QAAS5f,KAAKivC,cAC7D,CAAC3hC,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBgoB,MAAO,QAASmQ,QAAQ,EAC3FxL,MAAO,0CAA2C9Z,QAAS5f,KAAK6oC,uBAIxE57B,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACGyX,EAAgBvhC,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CAASrO,OAAK,EAAC/yB,QAASyhC,IAAoB,KAC7DvhC,EAAAC,EAAA/P,cAACgoC,GAAD,CACEljC,KAAMA,EACN5D,SAAUA,EACVyF,KAAMA,EACN2R,SAAUzV,KAAKyV,SACfspB,qBAAsB/+B,KAAK++B,sBAE3B9xB,EAAAC,EAAA/P,cAAA,WACE8P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,aACT60B,SAAO,EACPhiB,QAAS5f,KAAKgvC,aAGlB/hC,EAAAC,EAAA/P,cAACiyC,GAAD,CACEC,aAAcf,EACdgB,qBAAsBtvC,KAAK0uC,4BAC3BjL,QAASA,IAEXx2B,EAAAC,EAAA/P,cAAA,WACE8P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,iBACT60B,SAAO,EACPtS,UAAWmP,GAAgB36B,GAAMi8B,mBAAqBA,EACtDngB,QAAS5f,KAAK6uC,WAEhB5hC,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,QACTyvB,UAAQ,EACRlN,SAAUyQ,IAAqB//B,KAAKkH,YAAYioC,wBAChDvvB,QAAS5f,KAAK+uC,aAEhB9hC,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,OACTupB,WAAS,EACThH,UAAWnC,EACXvN,QAAS5f,KAAK8f,QAGlB7S,EAAAC,EAAA/P,cAACoyC,GAAD,CACEniB,SAAUA,EACV5R,OAAQ+yB,EACRI,iBAAkB3uC,KAAK2uC,mBAExBO,EACCjiC,EAAAC,EAAA/P,cAAA,WACE8P,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,eACT60B,SAAO,EACPhiB,QAAS5f,KAAKkvC,YACd5f,WAAYkf,KAGd,eA1LWlgC,cAArB+/B,GACGc,wBAA0BxgC,EAAKsP,QAAQhE,oBAAoBtL,EAAKsP,QAAQnO,gCAyM3E0/B,8MA+BJ/zB,MAAQ,CACN4zB,aAAc,CAACh/B,EAAG,EAAGF,EAAG,MA6B1BqO,gBAAkB,SAAApO,GAChB,OAAQnJ,EAAKwX,eAAerO,KAAqB,IAAXA,EAAKD,GAAWC,EAAKC,GAAK,MAGlEoO,eAAiB,SAAArO,GAAQ,IAChBi/B,EADgBpvC,OAAAqqC,GAAA,EAAArqC,CAAAgH,GAChBooC,aACP,OAAOj/B,EAAKC,IAAMg/B,EAAah/B,GAAKD,EAAKD,IAAMk/B,EAAal/B,KAG9DsF,SAAW,SAAArF,GACT,IAAMi/B,EAAe,CAACh/B,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,GAIzC,QAHgCzR,IAA5BuI,EAAKwE,MAAM4jC,cACbpoC,EAAK0nB,SAAS,CAAC0gB,aAAcA,IAE3BpoC,EAAKwE,MAAM6jC,qBAAsB,CACnC,IAAM9zB,EAASpL,EAAKG,OAAS,CAACA,OAAQH,EAAKG,QAAU,CAACI,MAAOP,EAAKO,OAClE1J,EAAKwE,MAAM6jC,qBAAqBD,EAAc7zB,iGA1Cb,IAAVioB,EAAUp3B,EAAVo3B,QACzB,GAAIA,EAAQC,MAAO,KACVp2B,EAAOm2B,EAAQC,MAAfp2B,IACD0H,EAAchV,KAAKkH,YAAYuoC,YAAYniC,GACjD,GAAI0H,EAAa,KACR3E,EAAQ2E,EAAR3E,EAAGF,EAAK6E,EAAL7E,EACJmC,EAAOtS,KAAKkH,YAAY0H,eAAeuB,GAAGlS,MAAMoS,GACtDrQ,KAAKyV,SAASnD,gDAKD0V,EAAWC,EAAWC,QACRxpB,IAA3BspB,EAAUqnB,mBAA0D3wC,IAA5BsB,KAAKyL,MAAM4jC,cACrDrvC,KAAK2uB,SAAS,CAAC0gB,aAAcrnB,EAAUqnB,gDAgClC,IAEDhxC,EADW2B,KAAKyL,MAAfxH,OACiB3E,mBAExB,OACE2N,EAAAC,EAAA/P,cAACixB,GAAD,CACEjO,SAAUxR,EAAKsP,QACfU,QAAM,EACN2J,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgB5O,KAAKkH,YAAY0H,eACjC0P,WAAS,EAACC,UAAU,EACpBC,gBAAiBxe,KAAKwe,gBACtBC,eAAgBze,KAAKye,eACrBhJ,SAAUzV,KAAKyV,SACfpX,SAAUA,EACV0hB,UAAU,EACVgL,YAAY,yCA3ChB,YAAgCrsB,IAA5BsB,KAAKyL,MAAM4jC,aACNrvC,KAAKyb,MAAM4zB,aAEXrvC,KAAKyL,MAAM4jC,oBAzDU/gC,aAA5BkhC,GACG5gC,eAAiB,CACtB,CAACuB,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAGlS,MAAO,CACZ,CAACoS,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAd7C++B,GAiBGhzB,KAAO,CACZ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAlBjCgzB,GAoBGC,YAAc,CACnBC,EAAK,CAACr/B,EAAG,EAAGF,EAAG,GACfw/B,EAAG,CAACt/B,EAAG,EAAGF,EAAG,GACbkpB,EAAG,CAAChpB,EAAG,EAAGF,EAAG,GACbmpB,EAAG,CAACjpB,EAAG,EAAGF,EAAG,GACbopB,EAAG,CAAClpB,EAAG,EAAGF,EAAG,GACby/B,EAAG,CAACv/B,EAAG,EAAGF,EAAG,GACbjD,EAAG,CAACmD,EAAG,EAAGF,EAAG,GACb0/B,EAAG,CAACx/B,EAAG,EAAGF,EAAG,IAmFjBq/B,GAAsBrd,GAAWqd,QAE3BM,8MACJr0B,MAAQ,CACN2R,SAAUze,EAAKsP,QAAQnO,8BAiBzB0O,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGThJ,SAAW,SAAArF,GAAQ,IACVoL,EAAU9S,EAAK+C,MAAf+P,OACH,UAAWA,EACTpL,EAAKO,QAAU6K,EAAO7K,OACxBjI,EAAKqnC,eAAe,CAAC1/B,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAO6K,EAAO7K,QAElD,WAAY6K,IACjBpL,EAAKG,SAAWiL,EAAOjL,OACzB7H,EAAKqnC,eAAe,CAAC1/B,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQiL,EAAOjL,OAAQE,OAAQ9B,EAAK+C,eAE/EhJ,EAAKqnC,eAAe,CAAC1/B,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQ,KAAME,OAAQ,WAKvEs/B,eAAiB,SAAAC,GACf,IAAMC,EAActhC,EAAKsP,QAAQzH,YAAY9N,EAAK0kB,SAAU4iB,QAEhCtxC,IAAxBgK,EAAK+C,MAAM2hB,UACb1kB,EAAKimB,SAAS,CAACvB,SAAU6iB,IAEvBvnC,EAAK+C,MAAMkjC,kBACbjmC,EAAK+C,MAAMkjC,iBAAiBsB,sFA5CbjoB,EAAWC,EAAWC,QACZxpB,IAAvBspB,EAAUoF,eAAkD1uB,IAAxBsB,KAAKyL,MAAM2hB,UACjDptB,KAAK2uB,SAAS,CAACvB,SAAUpF,EAAUoF,4CA8C9B,IACAA,EAAYptB,KAAZotB,SAED/uB,EADW2B,KAAKyL,MAAfxH,OACiB3E,mBAExB,OACE2N,EAAAC,EAAA/P,cAACixB,GAAD,CACEjO,SAAUxR,EAAKsP,QACfU,QAAM,EACN2J,aAAc,CAAC3Z,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgBwe,EAChB9O,WAAS,EAACC,UAAU,EACpBC,gBAAiBxe,KAAKwe,gBACtBC,eAAgBze,KAAKye,eACrBhJ,SAAUzV,KAAKyV,SACfpX,SAAUA,EACV0hB,UAAU,EACVgL,YAAY,qCA1DhB,YAA4BrsB,IAAxBsB,KAAKyL,MAAM2hB,SACNptB,KAAKyb,MAAM2R,SAEXptB,KAAKyL,MAAM2hB,gBAfQ9e,aAoFhCwhC,GAAoB3d,GAAW2d,IAEhBrM,oBAAQ+L,GAAoBvd,aAAazV,KAAzCinB,CAA+CtR,GAAWkc,KC9YnE6B,8MACJz0B,MAAQ,CACN00B,SAAS,EACT3wC,OAAQ,KACR4wC,YAAa,KACbC,KAAM,KACNvsC,KAAM,QA0DRwsC,eAAiB,SAAA9wC,GACfO,EAAK4uB,SAAS,CACZwhB,SAAS,EACT3wC,SACA4wC,YAAa5wC,EAAO26B,iBACpBkW,KAAMtwC,EAAKwwC,QAAQ/wC,EAAO26B,kBAC1Br2B,KAAMtE,EAAO26B,iBAAiBr2B,UAclC2R,SAAW,SAAAopB,GACT9+B,EAAK4uB,SAAS,CAAC7qB,KAAM+6B,OAuFvBF,OAAS,SAAA90B,GAAS,IAEVg1B,EADgB9+B,EAAK0b,MAApB20B,YACqBtsC,KAAKmM,UAAUpG,GAErC2mC,EAAmBzwC,EAAK0wC,oBAAoB5R,GAClD,GAAI2R,EACFzwC,EAAK4uB,SAAS,CACZyhB,YAAaI,EACb1sC,KAAM0sC,EAAiB1sC,WAH3B,CAQA,IAAM4sC,EAAc3wC,EAAK4wC,iBAbTC,EAcoB7wC,EAAK8wC,gBAAgBH,GAApDI,EAdWF,EAcXE,UAAWC,EAdAH,EAcAG,iBACZC,EAAUjxC,EAAKkxC,cAAcF,EAAkBlS,GACnD9+B,EAAK4uB,SAAS,CACZnvB,OAAQsxC,EACRV,YAAaY,EACbX,KAAMtwC,EAAKwwC,QAAQO,EAAU3W,kBAC7Br2B,KAAMktC,EAAQltC,WAuBlBotC,gBAAkB,SAAAC,GAChB,IAAMC,EAAeD,EAASA,EAAS1yC,OAAS,GAChD,OAAI2yC,EAAaC,gBACXD,EAAaC,gBAAgB5yC,OACxB2yC,EAAaC,gBAAgB1vC,IAAI,SAAA2vC,GAAQ,OAAIH,EAASxxC,OAAO2xC,KAE7D,CAACH,GAGNC,EAAaG,eACR,CAACJ,EAASxxC,OAAOyxC,EAAaG,iBAE9B,CAACJ,MAKdK,kBAAoB,WAAM,IACjBpB,EAAerwC,EAAK0b,MAApB20B,YACDM,EAAc3wC,EAAK4wC,iBAAiB9nC,MAAM,GAAI,GAF5B4oC,EAGY1xC,EAAK8wC,gBAAgBH,GAApDI,EAHmBW,EAGnBX,UAAWC,EAHQU,EAGRV,iBACZC,EAAUjxC,EAAK2xC,WAAWX,EAAkBX,GAChDrwC,EAAK4uB,SAAS,CACZnvB,OAAQsxC,EACRV,YAAaY,EACbX,KAAMtwC,EAAKwwC,QAAQO,EAAU3W,kBAC7Br2B,KAAMktC,EAAQltC,UAIlB6tC,WAAa,WACX5xC,EAAK4uB,SAAS,CAACwhB,SAAS,OAG1ByB,aAAe,WACb,IAAMC,EAAgBtvC,KAAK8D,MAAM9D,KAAKC,UAAUzC,EAAK0b,MAAMjc,OAAQ,SAAC8N,EAAKhQ,GACvE,OAAIA,aAAiBqR,OACnB,EAEOrR,KAGXyC,EAAK0L,MAAMxH,OAAO2tC,aAAaC,MAGjCC,aAAe,WACb,IAAMD,EAAgBtvC,KAAK8D,MAAM9D,KAAKC,UAAUzC,EAAK0b,MAAMjc,OAAQ,SAAC8N,EAAKhQ,GACvE,OAAIA,aAAiBqR,OACnB,EAEOrR,KAGXyC,EAAK0L,MAAMxH,OAAO6tC,aAAaD,MAGjCE,qBAAuB,WACjBhyC,EAAK0b,MAAMjc,OAAOuB,GACpBhB,EAAK+xC,eAEL/xC,EAAK6xC,kBAITI,cAAgB,WACVjyC,EAAK0b,MAAMjc,OAAOuB,GACpBhB,EAAK0L,MAAM+M,QAAQtQ,KAAnB,WAAAvI,OAAmCI,EAAK0b,MAAMjc,OAAOuB,KAErDhB,EAAK4uB,SAAS,CACZwhB,SAAS,EACT3wC,OAAQ,KACR4wC,YAAa,KACbC,KAAM,KACNvsC,KAAM,2FAtRN9D,KAAKyL,MAAMwmC,eACbjyC,KAAKswC,eAAetwC,KAAKkyC,UAAUlyC,KAAKyL,MAAMwmC,2DAI/BjqB,EAAWC,EAAWC,GACvC,GAAIF,EAAUllB,YAAY6C,OAAS3F,KAAKyL,MAAM3I,YAAY6C,MACpD3F,KAAKyb,MAAMjc,SAAWQ,KAAKyb,MAAMjc,OAAOuB,GAAI,CAC9C,IAAMoxC,EAAcnyC,KAAKoyC,mBAAmBpqB,EAAUllB,YAAY6C,MAC5D5C,EAAU/C,KAAKoyC,mBAAmBpyC,KAAKyL,MAAM3I,YAAY6C,MAC/D,GAA2B,IAAvBwsC,EAAY1zC,QAAmC,IAAnBsE,EAAQtE,OAAc,KAC7Ce,EAD6CS,OAAAqM,EAAA,EAAArM,CACnC8C,EADmC,MAEpD/C,KAAKyL,MAAM+M,QAAQtQ,KAAnB,WAAAvI,OAAmCH,EAAOuB,GAA1C,uDAMWgC,GAAS,IACX+tC,EAAa9wC,KAAKyb,MAA1Bjc,OACP,OAAOuD,EAAQgB,OAAO,SAAAvE,GAAM,OAC1BA,EAAOm6B,YACJn6B,EAAO26B,iBAAiB/M,WAAa0jB,EAAU3W,iBAAiB/M,UAChE5tB,EAAOC,QAAQC,OAASoxC,EAAUrxC,QAAQC,MAC1CF,EAAO0F,KAAKmtC,SAAWvB,EAAU5rC,KAAKmtC,QACtC7yC,EAAO0F,KAAKf,SAAW2sC,EAAU5rC,KAAKf,QACtC3E,EAAO0F,KAAK2F,SAAWimC,EAAU5rC,KAAK2F,2CAInCynC,GAAiC,IAAArrC,EAAAjH,KAArBkiC,EAAqB1jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KASnC,KARA8zC,EAAUryC,OAAA+M,EAAA,EAAA/M,CAAA,GAAOqyC,IACDxuC,MAAQwuC,EAAWllB,WAC7B8U,GAAgBoQ,EAAWzoC,MAC7ByoC,EAAWxuC,KAAOo+B,EAAajyB,UAAUqiC,EAAWzoC,OAEpDyoC,EAAWxuC,KAAO6K,EAAKsP,QAAQhL,+BAA+Bq/B,EAAWllB,WAGzEklB,EAAWnY,iBACbmY,EAAWnY,iBAAmBn6B,KAAKkyC,UAAUI,EAAWnY,iBAAkBmY,EAAWxuC,WAChF,GAAIwuC,EAAWjB,gBACpBiB,EAAWjB,gBAAkBiB,EAAWjB,gBAAgB1vC,IAAI,SAAA2vC,GAAQ,OAAIrqC,EAAKirC,UAAUZ,EAAUgB,EAAWxuC,YACvG,MAAI,mBAAoBwuC,GAK7B,MAAM,IAAI5jC,MAAM,4BAJZ4jC,EAAWf,iBACbe,EAAWf,eAAiBvxC,KAAKkyC,UAAUI,EAAWf,eAAgBe,EAAWxuC,OAMrF,OAAOwuC,6CAaU9Y,EAAYC,GAC7B,OAAOr6B,IAAEgxB,MAAMqJ,GAAe93B,IAAI,SAAAwB,GAAK,OACrC8J,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CACE1nB,IAAKnK,EACLrF,KAAM07B,EAAar2B,EAAQ,OAAS,eACpC4xB,MAAO,yDASO8J,GAAS,IACpBuR,EAAepwC,KAAKyb,MAApB20B,YACP,OAAIA,EAAYiB,gBACPjB,EAAYiB,gBAChBzyC,KAAK,SAAA2zC,GAAQ,OAAIA,EAASnlB,WAAayR,EAAQkB,mBAE9CqQ,EAAYmB,gBAAkBnB,EAAYmB,eAAenkB,WAAayR,EAAQkB,iBACzEqQ,EAAYmB,eAIhB,8CAGQ,IAAA5oB,EACa3oB,KAAKyb,MAA1B20B,EADQznB,EACRynB,YACHe,EAFWxoB,EACK0nB,KACAzxC,KAAK,SAAAuyC,GAAQ,OAAIA,EAASvyC,KAAK,SAAA4zC,GAAY,OAAIA,IAAiBpC,MAYpF,OAXAe,EAAWA,EAAStoC,MAAM,EAAGsoC,EAASvoC,UAAU,SAAA4pC,GAAY,OAAIA,IAAiBpC,IAAe,IACnEzuC,IAAI,SAAC6wC,EAAcrvC,GAAf,OACrB,IAAVA,EACI,CAAC,SAAU,oBAEXguC,EAAShuC,EAAQ,GAAGkuC,gBAChB,CAAC,kBAAmBF,EAAShuC,EAAQ,GAAGkuC,gBAAgBn4B,QAAQs5B,IAChE,CAAC,4DAOG9B,GAAa,IACpBlxC,EAAUQ,KAAKyb,MAAfjc,OAEDsxC,EAAS7wC,OAAA+M,EAAA,EAAA/M,CAAA,GACVT,EADU,CAEb26B,iBAAiBl6B,OAAA+M,EAAA,EAAA/M,CAAA,GAAKT,EAAO26B,oBAE3B4W,EAAmBD,EAAU3W,iBAPN11B,GAAA,EAAAC,GAAA,EAAAC,OAAAjG,EAAA,IAQ3B,QAAAkG,EAAAC,EAAoBzF,IAAEgS,QAAQs/B,EAAY7nC,MAAM,IAAhD/D,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA1CtB,EAA0CyB,EAAAtH,MAC7Cm1C,EAAU1B,EAAiB5tC,GAC3B6tC,EAAU31B,MAAMq3B,QAAQD,GAAWA,EAAQ5pC,QAAjC5I,OAAA+M,EAAA,EAAA/M,CAAA,GAA+CwyC,GAC/D1B,EAAiB5tC,GAAS6tC,EAC1BD,EAAmBC,GAZM,MAAA5rC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAe3B,MAAO,CAACmsC,YAAWC,0DAGPA,EAAkBlS,GAC9B,IAAImS,EAAU,KAqBd,OApBID,EAAiBM,iBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgBxoC,QACpEkoC,EAAmBA,EAAiBM,gBACpCL,EAAU,CACR5jB,SAAUyR,EAAQkB,iBAClBl2B,MAAOg1B,EAAQxlB,mBACfvV,KAAM+6B,EACN0S,eAAgB,MAElBR,EAAiB7oC,KAAK8oC,KAEtBA,EAAU,CACR5jB,SAAUyR,EAAQkB,iBAClBl2B,MAAOg1B,EAAQxlB,mBACfvV,KAAM+6B,EACNwS,gBAAiB,IAEnBN,EAAiBQ,eAAiBP,GAG7BA,qCAGED,EAAkB7C,GAO3B,OANI6C,EAAiBM,gBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgBttC,OAAO,SAAAwuC,GAAQ,OAAIA,IAAarE,IAEpG6C,EAAiBQ,eAAiB,KAG7BR,oCA6BP,IAF6D,IACzDV,EAAO,CAAC,CADiD7xC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCwB,KAAKyb,MAAMjc,OAAO26B,mBAEpCkW,KAAUA,EAAOrwC,KAAK2yC,YAAYtC,MAEzC,OAAOA,sCAGGA,GACV,IAAMuC,EAAWxzC,IAAEgS,QAAQi/B,EAAK1uC,IAAI3B,KAAKkxC,kBACzC,OAAI0B,EAASn0C,SAAW4xC,EAAK5xC,OACpBm0C,EAELvC,EAAKzxC,KAAK,SAACuyC,EAAUhuC,GAAX,OAAqBguC,IAAayB,EAASzvC,KAChDyvC,EAGFvC,mCAiFA,IAAAhkC,EAAA3D,EAAA1I,KAAA4L,EAC8C5L,KAAKyL,MAAnDxJ,EADA2J,EACA3J,KAAMgC,EADN2H,EACM3H,OAA0B40B,EADhCjtB,EACclI,UAAYqF,KAD1Bk0B,EAE4Cj9B,KAAKyb,MAAjD00B,EAFAlT,EAEAkT,QAAS3wC,EAFTy9B,EAESz9B,OAAQsE,EAFjBm5B,EAEiBn5B,KAAMusC,EAFvBpT,EAEuBoT,KAAMD,EAF7BnT,EAE6BmT,YAC9B/xC,EAAW4F,EAAO3E,mBAExB,OAAI6wC,GAAa3wC,IAAUA,EAAOm6B,WAM7Bn6B,EAKHyN,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAOlG,EAAqB7H,IACxCyN,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,KAAMQ,UAAW,qBAAsB/N,KAAK6yC,mBAAmBrzC,EAAO0F,KAAKs0B,WAAYh6B,EAAO0F,KAAKu0B,gBAC/GxsB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAO/N,EAAO0F,KAAKmtC,UAGnCplC,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQP,WAAS,EAAC1W,QAAS5f,KAAK2xC,YAAhC,QACA1kC,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQa,UAAQ,EAAC9X,QAAS5f,KAAK+xC,sBAAuBvyC,EAAOuB,GAAK,SAAW,UAC7EkM,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC5c,QAAS5f,KAAKgyC,eAA/B,aAGJ/kC,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,QACAN,EAAAC,EAAA/P,cAAA,aACE8P,EAAAC,EAAA/P,cAAA,aACCkzC,EAAK1uC,IAAI,SAACwvC,EAAU2B,GAAX,OACR7lC,EAAAC,EAAA/P,cAAA,MAAImQ,IAAKwlC,GACN3B,EAASxvC,IAAI,SAAC6wC,EAAcO,GAAf,OACZ9lC,EAAAC,EAAA/P,cAAA,MAAImQ,IAAKylC,GACO,IAAbD,GAAkBN,IAAiBnC,EAAKyC,EAAW,GAAGC,GACrD9lC,EAAAC,EAAA/P,cAACy3B,GAAD,CACElW,OAAK,EACLG,SAAU/a,IAAS0uC,EAAa1uC,KAChC8a,SAAU,WACRlW,EAAKimB,SAAS,CACZyhB,YAAaoC,EACb1uC,KAAM0uC,EAAa1uC,QAGvBzF,SAAUA,EACVyF,KAAM0uC,EAAa1uC,OAEnB,cAQfssC,EAAYtsC,KAAOmJ,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KAClB9pB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,gBACAN,EAAAC,EAAA/P,cAACgoC,GAAD,CACEljC,KAAMA,EACNs9B,eAAgBv/B,KAAKu/B,eACrBz7B,KAAMA,EACNwkB,aAAc,CAAC8nB,EAAYtsC,KAAKwL,YAChC2wB,OAAK5zB,EAAA,GAAApM,OAAA+T,EAAA,EAAA/T,CAAAoM,EAAI7M,EAAOC,QAAQ4nC,cAAgB,UAAnCpnC,OAAA+T,EAAA,EAAA/T,CAAAoM,EAA8CsC,EAAKiB,aAAapQ,EAAOC,QAAQ4nC,eAAiB,UAAhGh7B,GACLsyB,OAAQ3+B,KAAK2+B,OACbC,wBAAyB5+B,KAAK4+B,wBAC9BnpB,SAAUzV,KAAKyV,UAEfxI,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ2F,UAAQ,EAAClN,SAAU8gB,IAAgB5wC,EAAQogB,QAAS5f,KAAKwxC,mBAC/DvkC,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CAAMl3B,KAAM,WADd,qBAIS,MAhER,KALLmP,EAAAC,EAAA/P,cAAC61C,GAAD,CAAYf,cAAezyC,EAAQ8wC,eAAgBtwC,KAAKswC,eAAgBzX,UAAWA,WA5ShEvqB,aA8XrB2kC,8MAOJx3B,MAAQ,CACNjc,OAAQ6J,EAAKoC,MAAMwmC,eAAiB,CAClCtY,YAAY,EACZl6B,QAAS,CACP4nC,cAAe14B,EAAKmC,SACpBpR,KAAM,OACNE,YAAa,CACXC,OAAQ,IAGZqF,KAAM,CACJmtC,OAAQ,GACRluC,OAAQ,KACRL,KAAM,KACN01B,WAAY,EACZC,cAAe,EACf5uB,QAAQ,EACR1F,gBAAiB,MAEnBg1B,iBAAkB,CAChB/M,SAAUze,EAAKsP,QAAQjO,SAAS+vB,iBAChCj8B,KAAM6K,EAAKsP,QAAQjO,SACnBqhC,gBAAiB,KAGrBvR,MAAO,CACL1S,SAAU,KACVjpB,OAAQ,MAEV+uC,iBAAiB,KAuBnBxc,SAAW,SAACpwB,EAADoO,GAA+B,IAA1B5W,EAA0B4W,EAA1B5W,KAAMR,EAAoBoX,EAApBpX,MAAOy/B,EAAaroB,EAAbqoB,aACbr+B,IAAVpB,UAA8By/B,WAAmB,IACnDz/B,EAAQy/B,GAEV,IAAIoW,EAAiB71C,EACjBQ,KAAQuL,EAAKnC,YAAYksC,kBAC3BD,EAAiB9pC,EAAKnC,YAAYksC,gBAAgBt1C,GAAMq1C,IAE1D9pC,EAAKslB,SAAS,SAAAlT,GACZ,IAAMjc,EAAMS,OAAA+M,EAAA,EAAA/M,CAAA,GACPwb,EAAMjc,QAEP6zC,EAAoB7zC,EAClB8zC,EAAQx1C,EAAKqU,MAAM,KALJe,GAAA,EAAAC,GAAA,EAAAC,OAAA1U,EAAA,IAMrB,QAAA2U,EAAAC,EAAmBggC,EAAMzqC,MAAM,EAAGyqC,EAAM70C,OAAS,GAAjDqG,OAAAC,cAAAmO,GAAAG,EAAAC,EAAAtO,QAAAC,MAAAiO,GAAA,EAAqD,CACnDmgC,EAAoBA,EAD+BhgC,EAAA/V,QACJ,IAP5B,MAAA8H,GAAA+N,GAAA,EAAAC,EAAAhO,EAAA,YAAA8N,GAAA,MAAAI,EAAAjO,QAAAiO,EAAAjO,SAAA,WAAA8N,EAAA,MAAAC,GAUrB,OADAigC,EAAkBC,EAAMA,EAAM70C,OAAS,IAAM00C,EACtC,CAAC3zC,YAEV6J,EAAKkqC,WAAWz1C,EAAMq1C,MAGxBI,WAAa,SAAAz1C,GACE,8BAATA,EACFuL,EAAKslB,SAAS,SAAAlT,GACZ,IAAM2R,EAAW3R,EAAMjc,OAAO26B,iBAAiB/M,SACzComB,IAAkBpmB,GACpBze,EAAKsP,QAAQw1B,kCAAkCrmB,GAC7CtpB,EAAO0vC,EAAkB7kC,EAAKsP,QAAQhL,+BAA+Bma,GAAY,KACvF,MAAO,CACL0S,MAAM7/B,OAAA+M,EAAA,EAAA/M,CAAA,GACDwb,EAAMqkB,MADN,CAEH1S,UAAWA,GAAYomB,EAAkB,KAAO,iCAElDh0C,OAAOS,OAAA+M,EAAA,EAAA/M,CAAA,GACFwb,EAAMjc,OADL,CAEJC,QAAQQ,OAAA+M,EAAA,EAAA/M,CAAA,GACHwb,EAAMjc,OAAOC,QADX,CAEL4nC,cAAevjC,EAAOA,EAAKwL,WAAa,OAE1C6qB,iBAAiBl6B,OAAA+M,EAAA,EAAA/M,CAAA,GACZwb,EAAMjc,OAAO26B,iBADF,CAEdr2B,cAKU,iBAAThG,EACTuL,EAAKslB,SAAS,SAAAlT,GACZ,OAAQA,EAAMjc,OAAOC,QAAQC,MAC3B,IAAK,OAUL,IAAK,YACH,OAAON,IAAEC,MAAM,GAAI,CAACG,OAAQic,EAAMjc,QAAS,CACzCA,OAAQ,CACNC,QAAS,CACPG,YAAa,CACXC,OAAQ,OAKlB,QACE,OAAO,QAGK,gBAAT/B,GACTuL,EAAKslB,SAAS,SAAAlT,GACZ,IAAM3X,EAAOuF,EAAKoC,MAAMotB,UAAUpd,EAAMjc,OAAO0F,KAAKf,QACpD,OAAO/E,IAAEC,MAAM,GAAI,CAACG,OAAQic,EAAMjc,QAAS,CACzCsgC,MAAO,CACL37B,QAASL,GAAQ2X,EAAMjc,OAAO0F,KAAKf,OAAS,mCAAqC,MAEnF3E,OAAQ,CACN0F,KAAM,CACJpB,KAAMA,EAAO6K,EAAKsP,QAAQyV,YAAY5vB,EAAKA,MAAQ,cAQ/D8tC,aAAe,WAAM,IAAA8B,EACKrqC,EAAKoS,MAAtBjc,EADYk0C,EACZl0C,OADYk0C,EACJ5T,MACL1S,UAGV/jB,EAAKoC,MAAM6kC,eAAe9wC,MAG5B0vC,YAAc,SAAAnP,GACZ12B,EAAKslB,SAAS,CACZukB,iBAAiB,IAEnB7pC,EAAKqtB,SAAS,KAAM,CAAC54B,KAAM,4BAA6BR,MAAOyiC,OAGjE4T,aAAe,WACbtqC,EAAKslB,SAAS,CAACukB,iBAAiB,wFA/HhC,IAAMjL,EAAS,IAAI7C,gBAAgB/kC,OAAOiB,SAAS+jC,QACnD,IAAKrlC,KAAKyL,MAAMwmC,cAAe,CAC7B,IAAM7kB,EAAW6a,EAAO7N,IAAI,YACxBhN,GACFptB,KAAK02B,SAAS,KAAM,CAAC54B,KAAM,4BAA6BR,MAAO8vB,IAGnE,IAAMjpB,EAAS8jC,EAAO7N,IAAI,UACtBj2B,GACFnE,KAAK02B,SAAS,KAAM,CAAC54B,KAAM,cAAeR,MAAO6G,+CAIlC6jB,EAAWC,EAAWC,GACnCF,EAAU6Q,YAAc74B,KAAKyL,MAAMotB,WACrC74B,KAAKuzC,WAAW,gDAmHX,IAAA5lC,EACyB3N,KAAKyL,MAA9BxH,EADA0J,EACA1J,OAAQguC,EADRtkC,EACQskC,cADR9E,EAEkCntC,KAAKyb,MAAvCy3B,EAFA/F,EAEA+F,gBAAiB1zC,EAFjB2tC,EAEiB3tC,OAAQsgC,EAFzBqN,EAEyBrN,MAC1BzhC,EAAW4F,EAAO3E,mBAExB,OAAI4zC,EAEAjmC,EAAAC,EAAA/P,cAACy2C,GAAD,CACE1E,YAAalvC,KAAKkvC,YAClBC,wBAAyB3vC,EAAO26B,iBAAiB/M,WAMrDngB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,wBACA5nB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAD,CAAM6c,SAAU7zC,KAAK4xC,cACnB3kC,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEn5B,KAAM,4BACNo5B,QAASC,KACTC,MAAO,mBACPC,YAAa,gBACbzI,SAAU5uB,KAAK02B,SACfp5B,MAAOkC,EAAO26B,iBAAiB/M,SAC/BkK,UAAQ,EACRwI,MAAOA,EAAM1S,WAEfngB,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CACE9pB,QAAS,gBACTupB,WAAS,EACT1W,QAAS5f,KAAK2zC,gBAGlB1mC,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,CAAYke,QAAM,GAChB7mC,EAAAC,EAAA/P,cAAA,gCACA8P,EAAAC,EAAA/P,cAAC65B,GAAA,EAAK+c,MAAN,CACEj2C,KAAM,wBACNs5B,MAAO,WACPxI,SAAU5uB,KAAK02B,SACfp5B,MAAOqR,EAAKmC,SACZisB,QAASv9B,EAAOC,QAAQ4nC,gBAAkB14B,EAAKmC,SAC/Cwe,SAAU9vB,EAAOC,QAAQ4nC,gBAAkB14B,EAAKmC,WAElD7D,EAAAC,EAAA/P,cAAC65B,GAAA,EAAK+c,MAAN,CACEj2C,KAAM,wBACNs5B,MAAO,WACPxI,SAAU5uB,KAAK02B,SACfp5B,MAAOqR,EAAKqC,SACZ+rB,QAASv9B,EAAOC,QAAQ4nC,gBAAkB14B,EAAKqC,SAC/Cse,SAAU9vB,EAAOC,QAAQ4nC,gBAAkB14B,EAAKqC,YAGnDxR,EAAO26B,iBAAiBr2B,KACvBmJ,EAAAC,EAAA/P,cAACy3B,GAAD,CACEjW,QAAM,EACNtgB,SAAUA,EACVyF,KAAMtE,EAAO26B,iBAAiBr2B,OAE9B,KACJmJ,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKgd,OAAN,CACEv0C,QAAS,CACP,CAAC6N,IAAK,OAAQhQ,MAAO,OAAQN,KAAM,QACnC,CAACsQ,IAAK,YAAahQ,MAAO,YAAaN,KAAM,eAE/Cc,KAAM,eACNs5B,MAAO,OACPxI,SAAU5uB,KAAK02B,SACfY,UAAQ,EACRh6B,MAAOkC,EAAOC,QAAQC,OAEC,SAAxBF,EAAOC,QAAQC,KACduN,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTz3B,KAAM,QACN03B,MAAK,YAAAz3B,OAAcH,EAAOC,QAAQG,YAAYC,QAC9C23B,IAAK,EACLtmB,IAAK,GACLpT,KAAM,6BACN8wB,SAAU5uB,KAAK02B,SACfY,UAAQ,EACRh6B,MAAOkC,EAAOC,QAAQG,YAAYC,UAGZ,cAAxBL,EAAOC,QAAQC,KACjBuN,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTz3B,KAAM,QACN03B,MAAK,kBAAAz3B,OAAoBH,EAAOC,QAAQG,YAAYC,QACpD23B,IAAK,EACLtmB,IAAK,GACLpT,KAAM,6BACN8wB,SAAU5uB,KAAK02B,SACfY,UAAQ,EACRh6B,MAAOkC,EAAOC,QAAQG,YAAYC,UAGpC,sBACJoN,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTC,MAAO,SACPt5B,KAAM,cACN8wB,SAAU5uB,KAAK02B,SACfp5B,MAAOkC,EAAO0F,KAAKmtC,SAErBplC,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTz3B,KAAM,QACN03B,MAAK,eAAAz3B,OAAiBH,EAAO0F,KAAKs0B,WAA7B,KAAA75B,OAA2CH,EAAO0F,KAAKu0B,eAC5DjC,IAAK,EACLtmB,IAAK1R,EAAO0F,KAAKu0B,cACjB37B,KAAM,kBACN8wB,SAAU5uB,KAAK02B,SACfY,UAAQ,EACRh6B,MAAOkC,EAAO0F,KAAKs0B,cAGvBvsB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEn5B,KAAM,cACNo5B,QAASC,KACTC,MAAO,YACPC,YAAa,UACbzI,SAAU5uB,KAAK02B,SACfp5B,MAAOkC,EAAO0F,KAAKf,QAAU,GAC7B27B,MAAOA,EAAM37B,UAGhB3E,EAAO0F,KAAKpB,KACXmJ,EAAAC,EAAA/P,cAACy3B,GAAD,CACEjW,QAAM,EACNtgB,SAAUA,EACVyF,KAAMtE,EAAO0F,KAAKpB,OAElB,KACJmJ,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKpB,MAAN,KACE3oB,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASkG,KACThG,MAAO,SACPt5B,KAAM,cACN8wB,SAAU5uB,KAAK02B,SACfqG,QAASv9B,EAAO0F,KAAK2F,SAEvBoC,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTz3B,KAAM,iBACN03B,MAAO,aACPt5B,KAAM,uBACN8wB,SAAU5uB,KAAK02B,SACfp5B,MAAOkC,EAAO0F,KAAKC,gBAAkB3F,EAAO0F,KAAKC,gBAAgB8uC,OAAO,oBAAsB,MAGlGhnC,EAAAC,EAAA/P,cAAC65B,GAAA,EAAKH,OAAN,CAAa+K,SAAO,EAAC70B,QAASklC,EAAgB,SAAW,qBAvU5C3jC,aAAnB2kC,GACGG,gBAAkB,CACvBc,6BAA8B72B,SAC9B82B,kBAAmB92B,SACnB+2B,uBAAwB,SAAAC,GAAS,OAAIA,EAAYz2C,IAAOy2C,GAAa,OAmVzEpB,GAAa9gB,GAAW8gB,IAETzkC,mBAAW2jB,GAAW+d,KC7tB/BoE,8MAOJC,sBAAwB,WACtBx0C,EAAK0L,MAAM+M,QAAQtQ,KAAK,oFAIxB,IAAM1I,EAASQ,KAAKR,OACpB,OAAKA,GAAWA,EAAOm6B,WAiBrB1sB,EAAAC,EAAA/P,cAACq3C,GAAD,CAAcvC,cAAezyC,IAf3ByN,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,MAAM,EACN7V,KAAM,OACNqH,QAASz2B,KAAKu0C,sBACdzd,OAAQ,wBACR/pB,QAAS,4GACT0qB,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAPnD,wDAdO,IAAA9rB,EAC0B5L,KAAKyL,MAAnCD,EADII,EACJJ,MAEP,OAHWI,EACG9I,YAAciG,KACRyC,EAAMy8B,OAAOlnC,WAHZuN,aAyCVE,eAAW2jB,GAAWmiB,KCjC/BG,oLACK,IAAA10C,EAAAC,KAAA4L,EACwF5L,KAAKyL,MAA7FxJ,EADA2J,EACA3J,KADAyyC,EAAA9oC,EACM9I,YAAcuI,EADpBqpC,EACoBrpC,aAAcC,EADlCopC,EACkCppC,gBAAiBJ,EADnDwpC,EACmDxpC,YAAaF,EADhE0pC,EACgE1pC,SAAUC,EAD1EypC,EAC0EzpC,UAEjF,OACEgC,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAMxK,KAAKyL,MAAMD,MAAMhB,MAClCyC,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACIjM,GAAQA,EAAKmnC,MACbn8B,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAM78B,GAAE,GAAA9M,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,YAAqCyC,EAAAC,EAAA/P,cAAC05B,GAAA,EAAD,CAAQ9pB,QAAS,oBAE9D,KACJE,EAAAC,EAAA/P,cAACkR,EAAA,EAAD,CAAKR,KAAM,CAACwoB,UAAU,GAAOxqB,MAAO,CAClC,CAACyB,IAAK,gBAAiB8pB,MAAO,kBAAmB/H,MAAOhkB,EAAc0pB,MAAO,SAC7E,CAACznB,IAAK,oBAAqB8pB,MAAO,cAAe/H,MAAO/jB,GACxD,CAACgC,IAAK,eAAgB8pB,MAAO,iBAAkB/H,MAAOnkB,GACtD,CAACoC,IAAK,YAAa8pB,MAAO,oBAAqB/H,MAAOrkB,GACtD,CAACsC,IAAK,aAAc8pB,MAAO,qBAAsB/H,MAAOpkB,IACxDlH,OAAO,SAAAsI,GAAA,OAAAA,EAAEgjB,MAAiB5wB,SAAQkD,IAAI,SAAA+S,GAAA,IAAEpH,EAAFoH,EAAEpH,IAAK8pB,EAAP1iB,EAAO0iB,MAAO/H,EAAd3a,EAAc2a,MAAO0F,EAArBrgB,EAAqBqgB,MAArB,MACtC,CAACjoB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KAAWkpB,EAAX,IAAkBnqB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAO/nB,QAASsiB,EAAM5wB,OAAQs2B,MAAOA,MAAuBgJ,OAAQ,kBAC9G9wB,EAAAC,EAAA/P,cAAC+gC,GAAD,CAAYtF,aAAc74B,EAAK0L,MAAMqyB,iBAAkB/6B,QAASssB,YAKtEptB,GAAQA,EAAKmnC,MACbn8B,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAI,GAAA7K,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,YACfyC,EAAAC,EAAA/P,cAACq3C,GAAD,OAEA,KACFvyC,GAAQA,EAAKmnC,MACbn8B,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAI,GAAA7K,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,cACfyC,EAAAC,EAAA/P,cAACw3C,GAAD,OAEA,KACJ1nC,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,CAAOC,OAAK,EAAC5D,KAAI,GAAA7K,OAAKK,KAAKyL,MAAMD,MAAMhB,KAAtB,SACfyC,EAAAC,EAAA/P,cAACy3C,GAAD,CACE1hB,eAAgBlzB,KAAKyL,MAAMynB,eAC3B4K,iBAAkB99B,KAAKyL,MAAMqyB,4BAvCnBxvB,aAuDhBumC,8MACJp5B,MAAQ,CACNq5B,SAAU7tC,EAAKzH,OAASyH,EAAKzH,OAAOuB,GAAK,KACzC+C,KAAMmD,EAAK8tC,uBACXC,cAAe,KACfxqC,KAAMvD,EAAKzH,OAAS,GAAK,KACzBy1C,WAAW,EACX9pC,KAAK,KAkEPwzB,OAAS,SAAC90B,EAAOg1B,GACX53B,EAAKwU,MAAMtQ,KAIflE,EAAK6qC,aAAajT,EAAS,CAACqW,WAAW,OA+EzCtW,wBAA0B,WACpB33B,EAAKwU,MAAMw5B,WACbhuC,EAAK0nB,SAAS,CAACsmB,WAAW,EAAOD,cAAe,UAcpDT,sBAAwB,WACtBttC,EAAKwE,MAAMqyB,iBAAiB,SAG9ByK,MAAQ,WACNthC,EAAKwE,MAAMqyB,iBAAiB,SAG9BqX,YAAc,SAAA7uC,GACZ,IAAMoF,EAAMrL,OAAOiB,SAASojC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAMjlC,EAASyH,EAAKzH,OACpBmlC,UAAUF,MAAM,CACd/K,MAAK,+BAAA/5B,OAAiC0H,EAAqB7H,IAC3DxC,KAAI,yBACJ0O,QACCk5B,MAAM,WACPv9B,EAAsBqE,GACtBm5B,MAAM,mCAGRx9B,EAAsBqE,GACtBm5B,MAAM,4BAERv+B,EAAEqiC,qGAhKF,IAAMnpC,EAASQ,KAAKR,OAEhBA,GACFQ,KAAKyL,MAAMqyB,iBAAiBt+B,8CAIbwoB,EAAWC,GAC5B,IAAMzoB,EAASQ,KAAKR,OAEhBA,GAAUyoB,EAAU6sB,WAAat1C,EAAOuB,KAC1Cf,KAAKyL,MAAMqyB,iBAAiBt+B,GAC5BQ,KAAK2uB,SAAS,CACZmmB,SAAUt1C,EAAOuB,GACjB+C,KAAM9D,KAAK+0C,uBACXC,cAAe,KACfxqC,KAAM,GACNyqC,WAAW,EACX9pC,KAAK,MAGJ3L,GAAUQ,KAAKyb,MAAMq5B,UACxB90C,KAAK2uB,SAAS,CACVmmB,SAAU,KACVhxC,KAAM,KACNkxC,cAAe,KACfxqC,KAAM,GACNyqC,WAAW,EACX9pC,KAAK,IAGP3L,GAAUQ,KAAKyL,MAAMxJ,MAAQjC,KAAKyb,MAAMu5B,eAC1Ch1C,KAAK8xC,aAAa9xC,KAAKyb,MAAMu5B,cAAe,CAACE,WAAW,mDAa1D,IAAMnc,EAAa/4B,KAAK+4B,WACxB,IAAKA,EACH,OAAO,KAIT,IAFA,IAAIqc,EAAgBzmC,EAAKsP,QAAQhL,+BAA+B8lB,EAAWoB,iBAAiB/M,UACxFioB,EAAiBtc,EAAWoB,iBACzBkb,GAAgB,CACrB,IAAMC,EAAqBD,EAAehE,gBAAgBgE,EAAehE,gBAAgB5yC,OAAS,GAClG,IAAK62C,EACH,MAGF,GADAF,EAAgBA,EAAcnlC,UAAUqlC,EAAmBzrC,QACtDyrC,EAAmB/D,eACtB,MAEF6D,EAAgBA,EAAcnlC,UAAUqlC,EAAmB/D,eAAe1nC,OAC1EwrC,EAAiBC,EAAmB/D,eAGtC,OAAO6D,uCAGIG,GAAuC,IAAA7sC,EAAA1I,KAAAw1C,GAAAh3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAApB02C,iBAAwB,IAAAM,KAElD,GADex1C,KAAKyL,MAAbxJ,KACP,CAGA,IAAMzC,EAASQ,KAAKR,OACdu5B,EAAa/4B,KAAK+4B,WAElBvgB,EAAU+8B,EAAa/8B,QACzB68B,EAAiBtc,EAAWoB,iBAC5Bsb,EAAmBj9B,EAAQ3P,MAAM,GAAG9E,OAAO,SAACD,EAAMX,GAAP,OAAiBA,EAAQ,IAAM,IAC9E,GAAKsyC,EAAiBh3C,OAAtB,CAGA,IAdkD,IAAAi3C,EAAA,WAehD,IAAMC,EAAcF,EAAiB75B,QACrC,GAAIy5B,EAAeO,uBAAuBhwC,SAAS+vC,EAAY5V,kBAM7D,OALAr3B,EAAKimB,SAAS,CACZsmB,WAAW,EACX9pC,KAAK,EACL6pC,cAAe,OAEjB,CAAAa,OAAA,GAEF,IAAMC,EAAsBT,EAAehE,gBACxCzyC,KAAK,SAAA2zC,GAAQ,OAAIA,EAASnlB,WAAauoB,EAAY5V,mBACtD,OAAK+V,EAOAA,EAAoBvE,oBASzB8D,EAAiBS,EAAoBvE,iBARnC7oC,EAAKimB,SAAS,CACZsmB,WAAW,EACX9pC,KAAK,EACLrH,KAAM6xC,EAAY5V,mBAAqBr3B,EAAK+S,MAAM3X,KAAKi8B,iBAAmB4V,EAAcjtC,EAAK+S,MAAM3X,KACnGkxC,cAAe,OAEjB,CAAAa,OAAA,KAbIX,IACFxsC,EAAK+C,MAAMxH,OAAO8xC,iBAAiBv2C,EAAQ+1C,EAAa/qC,KAAKzG,OAAO,SAACy+B,EAAMr/B,GAAP,OAAiBA,EAAQ,IAAM,KACnGuF,EAAKimB,SAAS,CAACqmB,cAAeO,KAEhC,CAAAM,OAAA,KAjBGJ,EAAiBh3C,QAAQ,KAAAu3C,EAAAN,IAAA,qBAAAM,EAAA,OAAAA,EAAAH,EA+BhC71C,KAAK2uB,SAAS,CACZ7qB,KAAMyxC,EAAatlC,UAAUolC,EAAexrC,OAC5CorC,WAAW,EACX9pC,KAAK,EACL6pC,cAAe,oDAUAxb,EAAYC,GAC7B,OAAOr6B,IAAEgxB,MAAMqJ,GAAe93B,IAAI,SAAAwB,GAAK,OACrC8J,EAAAC,EAAA/P,cAAC63B,GAAA,EAAD,CACE1nB,IAAKnK,EACLrF,KAAM07B,EAAar2B,EAAQ,OAAS,eACpC4xB,MAAO,8CAgCJ,IAAAvoB,EACP,IAAKxM,KAAKyL,MAAMxJ,KACd,OAAO,KAET,IAAMzC,EAASQ,KAAKR,OACpB,IAAKA,EACH,OACEyN,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAACw5B,GAAA,EAAD,CACEsO,MAAM,EACN7V,KAAM,OACNqH,QAASz2B,KAAKu0C,sBACdzd,OAAQ,wBACR/pB,QAAS,4GACT0qB,QAAS,CAAC,CAACnqB,IAAK,KAAMP,QAAS,KAAM2qB,UAAU,MAPnD,yBAPG,IAAA/O,EAqBwB3oB,KAAKyb,MAA7B3X,EArBA6kB,EAqBA7kB,KAAMmxC,EArBNtsB,EAqBMssB,UAAW9pC,EArBjBwd,EAqBiBxd,IACxB,IAAKrH,EACH,OAAO,KAvBF,IAAA6J,EA+BH3N,KAAKyL,MAJPxH,EA3BK0J,EA2BL1J,OAAQhC,EA3BH0L,EA2BG1L,KACUkxB,EA5BbxlB,EA4BLhL,UAAYoG,KAAoC8vB,EA5B3ClrB,EA4ByBjK,UAAYqF,KAA0CqqB,EA5B/EzlB,EA4BuDrJ,gBAAkByE,KACvDsqB,EA7BlB1lB,EA6BL7K,YAAcC,QACdzB,EA9BKqM,EA8BLrM,SAAU4xB,EA9BLvlB,EA8BKulB,eAEN8F,GAAiBx5B,EAAOuB,MAASkB,GAAQzC,EAAOmL,SAAW1I,EAAKlB,GAChE6tC,EACJqG,EACEhoC,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CAASrO,OAAK,EAACryB,KAAM,UAAWV,QAAS,gCACvC5B,EACF8B,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CAAS8H,SAAO,EAACxoC,KAAM,QAASV,QAAS,4BAEzCE,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CAASphC,QAAS1F,EAAqB7H,KAG3C,OACEyN,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,KACEjB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAD,CAAMC,UAAQ,GACZjpB,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAACgQ,EAAA,EAAD,CAAMk1B,WAAS,EAACjT,KAAM,UAAWqS,UAAQ,EAACpS,MAAO,CAC/C,CAAC/hB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKmS,QAAS5f,KAAKuoC,MAAOxT,MAAO,MAAOmQ,QAAQ,GACvF,CAAC53B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAASmS,QAAS5f,KAAKm1C,YAAa5nC,GAAIC,IAClFf,GAAInL,EAASsL,SAAUmoB,MAAO,QAASmQ,QAAQ,EAC/CxL,MAAOiL,UAAUF,MAAQ,iCAAmC,+BAC7DjlC,EAAOm6B,WAAa,CAACrsB,IAAK,OAAQP,QAAS,cAAeU,KAAM,OAAQF,GAAIC,IAC3Ef,GAAE,WAAA9M,OAAaH,EAAOuB,GAApB,SAA+Bg0B,MAAO,QAASmQ,QAAQ,EACzDxL,MAAO,4BAA8B,MACvC31B,OAAO,SAAAy+B,GAAI,OAAIA,OAEnBv1B,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACElpB,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,KACE9pB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAOlG,EAAqB7H,IACxCyN,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,KAAMQ,UAAW,qBAAsB/N,KAAK6yC,mBAAmBrzC,EAAO0F,KAAKs0B,WAAYh6B,EAAO0F,KAAKu0B,gBAC9Gj6B,EAAO0F,KAAKmtC,OAASplC,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAO/N,EAAO0F,KAAKmtC,QAAmB,KACvE7yC,EAAO0F,KAAKf,OACX8I,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MACTpC,GAAO6tB,EACN/rB,EAAAC,EAAA/P,cAAC+Q,EAAA,SAAD,YACO,IACLjB,EAAAC,EAAA/P,cAAC64B,GAAD,CACE/zB,KAAM,KACNkxB,UAAWA,EACXC,gBAAiBA,EACjBC,WAAYA,EACZvvB,KAAM+0B,EAAUr5B,EAAO0F,KAAKf,QAC5B+uB,eAAgBA,EAChBI,OAAK,EACLhqB,MAAI,EACJhK,mBAAoB2E,EAAO3E,sBAG7B,mCAEJ,OAGR2N,EAAAC,EAAA/P,cAAC84B,GAAA,EAAKE,IAAN,KACGyY,IAGL3hC,EAAAC,EAAA/P,cAACgoC,GAAD,CACEljC,KAAMA,EACNs9B,eAAgBv/B,KAAKu/B,eACrBz7B,KAAMA,EACNwkB,aAAc,CAAC9oB,EAAOC,QAAQ4nC,eAC9BpH,OAAKzzB,EAAA,GAAAvM,OAAA+T,EAAA,EAAA/T,CAAAuM,EAAIhN,EAAOC,QAAQ4nC,cAAgB,OAAnCpnC,OAAA+T,EAAA,EAAA/T,CAAAuM,EAA2CmC,EAAKiB,aAAapQ,EAAOC,QAAQ4nC,eAAiB,UAA7F76B,GACLmyB,OAAQ3+B,KAAK2+B,OACbC,wBAAyB5+B,KAAK4+B,yBAE7BgQ,mCA9RI,IAAA3rB,EAC0BjjB,KAAKyL,MAAnCD,EADIyX,EACJzX,MAEP,OAHWyX,EACGngB,YAAciG,KACRyC,EAAMy8B,OAAOlnC,uCAKjC,IAAMvB,EAASQ,KAAKR,OACpB,OAAKA,EAGUQ,KAAKyL,MAAbxJ,KACKc,QAAQvD,EAAOuB,KAAO,CAChCmE,KAAM,CACJgF,SAAS,EACTkvB,SAAU,EACVjuB,KAAK,GAEPgvB,iBAAkB,CAChB/M,SAAU5tB,EAAO26B,iBAAiB/M,SAClCwoB,uBAAwB,GACxBvE,gBAAiB,KAZZ,YAnBc/iC,aA0T3BumC,GAAermC,YAAW2jB,GAAW0iB,KAEtBrmC,mBAAW2jB,GAAWsiB,KC7W/ByB,8MACJz6B,MAAQ,CACN06B,SAAU,KACVC,eAAgB,KAChBC,WAAY,QAGdnjB,eAAiB,SAAAijB,GACf,IAAIG,GAEFA,EADEH,EACK,SAAAx2C,OAAYw2C,EAASp1C,IAElB,WAEIhB,EAAK0L,MAAMnK,SAASsL,UAClC7M,EAAK0L,MAAM+M,QAAQtQ,KAAKouC,GAEtBv2C,EAAK0b,MAAM06B,WAAaA,GAG5Bp2C,EAAK4uB,SAAS,CAACwnB,gBAGjBve,qBAAuB,SAAAwe,GACrB,IAAIG,GAEFA,EADEH,EACW,eAAAz2C,OAAkBy2C,EAAer1C,IAEjC,iBAEOhB,EAAK0L,MAAMnK,SAASsL,UACxC7M,EAAK0L,MAAM+M,QAAQtQ,KAAKquC,GAEtBx2C,EAAK0b,MAAM26B,iBAAmBA,GAGlCr2C,EAAK4uB,SAAS,CAACynB,sBAGjBtY,iBAAmB,SAAAuY,GACjB,IAAIG,GAEFA,EADEH,EACO,WAAA12C,OAAc02C,EAAWt1C,IAEzB,aAEOhB,EAAK0L,MAAMnK,SAASsL,UACpC7M,EAAK0L,MAAM+M,QAAQtQ,KAAKsuC,GAEtBz2C,EAAK0b,MAAM46B,aAAeA,GAG9Bt2C,EAAK4uB,SAAS,CAAC0nB,kBAGjB9L,oBAAsB,SAAAxgC,GAAc,IAAA6B,EACX7L,EAAK0L,MAArBxJ,EAD2B2J,EAC3B3J,KAAMgC,EADqB2H,EACrB3H,OAET8F,EAAWN,QAAQ7D,SAAS3D,EAAKlB,IACnCkD,EAAOwyC,gBAAgB1sC,GAEvB9F,EAAOyyC,eAAe3sC,MAI1BygC,gBAAkB,SAAAzgC,GACChK,EAAK0L,MAAfxH,OAEAumC,gBAAgBzgC,MAGzB0gC,gBAAkB,SAAA1gC,GACChK,EAAK0L,MAAfxH,OAEAwmC,gBAAgB1gC,sFAGNie,GACjBhoB,KAAK22C,0CAA0C3uB,GAC/ChoB,KAAK42C,oBAAoB5uB,GACzBhoB,KAAK62C,kBAAkB7uB,qEAGiBA,GACxC,IAAM/lB,EAAOjC,KAAKyL,MAAMxJ,KACnBA,IAGC+lB,EAAU/lB,MAAS+lB,EAAU/lB,KAAKuG,cAAiBvG,IAAQA,EAAKuG,cAAgBvG,EAAK5D,SAASuI,qBAClG8iC,GAASC,cAAcG,iEAIP9hB,GAClB,IAAM/lB,EAAOjC,KAAKyL,MAAMxJ,KACxB,GAAKA,GAID+lB,EAAUtkB,UAAU8F,SAAWxJ,KAAKyL,MAAM/H,UAAU8F,UAIpDxJ,KAAKyb,MAAM06B,UAAan2C,KAAKyb,MAAM06B,SAAS5sC,UAAhD,CAIA,IAAMutC,EAAwB,IAAIC,IAAI/uB,EAAUtkB,UAAU8F,OAAO7H,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,MAE5Ei2C,EADgBh3C,KAAKyL,MAAM/H,UAAU8F,OAAO7H,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,KAC5BgD,OAAO,SAAAhD,GAAE,OAAK+1C,EAAsBG,IAAIl2C,KAC/E,GAAgC,IAA5Bi2C,EAAiBv4C,OAArB,CAIA,IAAMogC,EAAU7+B,KAAKyL,MAAM/H,UAAUqF,KAAKiuC,EAAiB,IAC3D,GAAqB,IAAjBnY,EAAQvsB,KAAY,CACtB,IAAMq4B,EAAc9L,EAAQp1B,QAAQ,KAAOxH,EAAKlB,GAAK89B,EAAQp1B,QAAQ,GAAMo1B,EAAQp1B,QAAQ,KAAOxH,EAAKlB,GAAK89B,EAAQp1B,QAAQ,GAAK,KAC3HkxB,EAAY36B,KAAKyL,MAAM9I,UAAUoG,KAAK4hC,GAC5CjB,GAASC,cAAcuN,OAAOvc,EAAS,eAAAh7B,OAAkBg7B,EAAU78B,KAA5B,gCAEpB,IAAjB+gC,EAAQvsB,MACVtS,KAAKkzB,eAAe2L,+CAIN7W,GAAW,IAAA/gB,EAAAjH,KACrBiC,EAAOjC,KAAKyL,MAAMxJ,KACxB,GAAKA,GAGAjC,KAAKyL,MAAM/H,UAAU8F,OAAO/K,OAAjC,CAGA,IAAM04C,EAA2Bn3C,KAAKyL,MAAM/H,UAAU8F,OACnDzF,OAAO,SAAAD,GAAI,OAAIA,EAAKszC,aAAen1C,EAAKlB,KACxCgD,OAAO,SAAAD,GACN,IAAMuzC,EAAWrvB,EAAUtkB,UAAUqF,KAAKjF,EAAK/C,IAC/C,OAAOs2C,GAAYA,EAASD,aAAen1C,EAAKlB,KAEpD,GAAKo2C,EAAyB14C,OAA9B,CAIA,IAAMgK,EAAa0uC,EAAyBx1C,IAAI,SAAAmC,GAC9C,IAAM6mC,EAAc7mC,EAAK2F,QAAQ,KAAOxH,EAAKlB,GAAK+C,EAAK2F,QAAQ,GAAM3F,EAAK2F,QAAQ,KAAOxH,EAAKlB,GAAK+C,EAAK2F,QAAQ,GAAK,KAErH,OADkBxC,EAAKwE,MAAM9I,UAAUoG,KAAK4hC,KAGxChQ,EAAkC,IAAtBlyB,EAAWhK,OAAegK,EAAW,GAAK,KAC5DihC,GAASC,cAAcuN,OAAOvc,EAAS,wBAAAh7B,OAA2Bg7B,EAAU78B,MAArC,6BAAA6B,OAA2Ew3C,EAAyB14C,QAAU,CACnJ64C,IAAK,YACLl6C,KAAI,6BAAAuC,OAA+Bw3C,EAAyB14C,OAAxD,+CAIC,IAAAiK,EAAA1I,KAAA2oB,EACwC3oB,KAAKyb,MAA7C06B,EADAxtB,EACAwtB,SAAUC,EADVztB,EACUytB,eAAgBC,EAD1B1tB,EAC0B0tB,WAD1B1oC,EAE0E3N,KAAKyL,MAA/EhK,EAFAkM,EAEAlM,UAAWK,EAFX6L,EAEW7L,aAAcgG,EAFzB6F,EAEyB7F,UAAW7F,EAFpC0L,EAEoC1L,KAAwBkxB,EAF5DxlB,EAE0ChL,UAAYoG,KACvD4qB,EAAUwiB,EAAWhjB,EAAUgjB,EAAS1sC,QAAQ,IAAM,KACtDmqB,EAAUuiB,EAAWhjB,EAAUgjB,EAAS1sC,QAAQ,IAAM,KACtDuqB,KAAiB/xB,IAAQ0xB,IAAWA,EAAQ5yB,KAAOkB,EAAKlB,GACxDkzB,KAAiBhyB,IAAQ2xB,IAAWA,EAAQ7yB,KAAOkB,EAAKlB,GACxDozB,EAAWH,GAAiBC,EAC5BsjB,EAAmBpB,GAAYxiB,GAAWC,EAC3CuiB,EAAS5sC,SAAT,UAAA5J,OACWq0B,EAAgB,MAAQL,EAAQ71B,KAD3C,QAAA6B,OACsDs0B,EAAgB,MAAQL,EAAQ91B,MACpFq2B,EAAQ,aAAAx0B,OACMq0B,EAAgB,MAAQL,EAAQ71B,KADtC,QAAA6B,OACiDs0B,EAAgB,MAAQL,EAAQ91B,MADjF,YAAA6B,OAEKq0B,EAAgB,MAAQL,EAAQ71B,KAFrC,QAAA6B,OAEgDs0B,EAAgB,MAAQL,EAAQ91B,MAC3F,4BACEg6B,KAAkBse,IAAkBn0C,IAAQm0C,EAAe3sC,QAAQ7D,SAAS3D,EAAKlB,IACjFy2C,EAAwBpB,EACzBA,EAAe7sC,SAAf,qBAAA5J,OACsBy2C,EAAet4C,MACnCg6B,EAAc,mBAAAn4B,OACMy2C,EAAet4C,MADrB,uBAAA6B,OAEUy2C,EAAet4C,MAC1C,cACJ,OACEmP,EAAAC,EAAA/P,cAACs6C,EAAA,EAAD,KACExqC,EAAAC,EAAA/P,cAACu6C,GAAmB9xB,YAApB,MACA3Y,EAAAC,EAAA/P,cAAC45B,EAAA,EAAD,CAASgK,UAAW,UAClB9zB,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,MAAZ,gBACAN,EAAAC,EAAA/P,cAACgsC,GAAD,MACAl8B,EAAAC,EAAA/P,cAACw6C,GAAD,CAAO1zC,OAAQA,IACdhC,EAAOgL,EAAAC,EAAA/P,cAACq+B,GAAD,CAAUv3B,OAAQA,EAAQhC,KAAMA,EAAM20B,QAAS3pB,EAAAC,EAAA/P,cAAC23B,EAAA,EAAD,CAAOvnB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WAAgB,KAC9GE,EAAAC,EAAA/P,cAACy6C,GAAD,CAAQ3zC,OAAQA,KAEhBxC,EAaE,KAZDK,IAAiBgG,EAChBmF,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CACE3R,UAAQ,EACR1F,OAAQ,iCACR/pB,QAASE,EAAAC,EAAA/P,cAAA,0HAGX8P,EAAAC,EAAA/P,cAACgxC,EAAA,EAAD,CACErX,OAAQ,0BACR/pB,QAASE,EAAAC,EAAA/P,cAAA,wEAIf8P,EAAAC,EAAA/P,cAAC06C,EAAD,CAAiBhqC,KAAM,CAACwoB,UAAU,EAAMwQ,UAAU,EAAOxE,WAAW,GAAOx2B,MAAO,CAChF5H,EAAO6D,UAAY,CAACgF,SAAU,CAACW,KAAM,QAASV,QAAS,SAAUvC,KAAM,QAASuzB,OAAQ,kBACtF9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KAAUtxB,EAAAC,EAAA/P,cAAC26C,GAAD,CAAO5kB,eAAgBxqB,EAAKwqB,eAAgB0E,qBAAsBlvB,EAAKkvB,qBAAsBkG,iBAAkBp1B,EAAKo1B,sBAC3H,KACL75B,EAAO6D,UAAY,CAACgF,SAAU,CAACW,KAAM,OAAQV,QAASwqC,GAAkB/sC,KAAM,OAAQmC,SAAUwpC,EAAQ,QAAAx2C,OAAWw2C,EAASp1C,IAAO,OAAQg9B,OAAQ,kBACjJ9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KAAUtxB,EAAAC,EAAA/P,cAAC46C,GAAD,CAAYj0C,KAAMqyC,EAAUjjB,eAAgBxqB,EAAKwqB,oBACxD,KACLjvB,EAAO6D,UAAY,CAACgF,SAAU,CAACW,KAAM,UAAWV,QAASyqC,GAAwBhtC,KAAM,aAAcmC,SAAUypC,EAAc,cAAAz2C,OAAiBy2C,EAAer1C,IAAO,aAAcg9B,OAAQ,kBACxL9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KACEtxB,EAAAC,EAAA/P,cAAC66C,GAAD,CACEjuC,WAAYqsC,EACZxe,qBAAsBlvB,EAAKkvB,qBAC3B1E,eAAgBxqB,EAAKwqB,eACrBqX,oBAAqB7hC,EAAK6hC,oBAC1BC,gBAAiB9hC,EAAK8hC,gBACtBC,gBAAiB/hC,EAAK+hC,qBAGvB,KACL,CAAC39B,SAAU,CAACW,KAAM,UAAWV,QAAS,WAAYvC,KAAM,UAAWuzB,OAAQ,kBACzE9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KAAUtxB,EAAAC,EAAA/P,cAAC86C,GAAD,SAEZ,CAACnrC,SAAU,CAACW,KAAM,SAAUV,QAASspC,EAAahvC,EAAqBgvC,GAAc,WACrF7rC,KAAM,SACNmC,SAAU0pC,EAAU,UAAA12C,OAAa02C,EAAWt1C,IAAO,SACnDg9B,OAAQ,kBACN9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KACEtxB,EAAAC,EAAA/P,cAAC+6C,GAAD,CACE14C,OAAQ62C,EACRnjB,eAAgBxqB,EAAKwqB,eACrB4K,iBAAkBp1B,EAAKo1B,sBAI7B,CAAChxB,SAAU,CAACW,KAAM,OAAQV,QAAS,iBAAkBvC,KAAM,gBAAiBuzB,OAAQ,kBAClF9wB,EAAAC,EAAA/P,cAACkR,EAAA,EAAIkwB,KAAL,KAAUtxB,EAAAC,EAAA/P,cAACg7C,GAAD,YAGdlrC,EAAAC,EAAA/P,cAAC03B,EAAA,EAAD,CAAQtnB,GAAI,KAAMsT,MAAO,CAACkU,MAAO,YAAaltB,kBAhPpCyG,aA6PHE,eAAW2jB,GAAW+jB,KCtQjBkC,QACW,cAA7B/3C,OAAOiB,SAAS+2C,UAEe,UAA7Bh4C,OAAOiB,SAAS+2C,UAEhBh4C,OAAOiB,SAAS+2C,SAAS7sC,MACvB,2DCXN8sC,IAASva,OACP9wB,EAAAC,EAAA/P,cAACmsC,EAAA,EAAD,CAAeiP,SAAU1wC,iBACvBoF,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACgR,EAAA,EAAD,KACElB,EAAAC,EAAA/P,cAACq7C,GAAD,SAILt7C,SAAS2D,eAAe,SDkHrB,kBAAmB8jC,WACrBA,UAAU8T,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2e197531.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport const copyToClipboard = text => {\r\n  const textArea = document.createElement(\"textarea\");\r\n  // This won't work\r\n  // textArea.style.display = 'none'\r\n  document.body.appendChild(textArea);\r\n  textArea.value = text;\r\n  textArea.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(textArea);\r\n};\r\n\r\nexport const topicalThemes = [\r\n  {\r\n    from: moment(\"2019-10-28T12:30:00\"),\r\n    until: moment(\"2019-11-01T00:00:00\"),\r\n    name: 'Halloween',\r\n    override: {\r\n      theme: {\r\n        cells: 'halloween',\r\n        pieces: 'halloween-ghost',\r\n        scheme: 'halloween',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst getTopicalThemeOverrideAndNextUpdateDate = (on = moment()) => {\r\n  const matchingTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrBefore(on) && topicalTheme.until.isSameOrAfter(on)\r\n  ));\r\n  if (matchingTopicalTheme) {\r\n    return {\r\n      override: matchingTopicalTheme.override,\r\n      nextUpdatedDate: matchingTopicalTheme.until,\r\n      name: matchingTopicalTheme.name,\r\n    };\r\n  }\r\n\r\n  const nextTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrAfter(on)\r\n  ));\r\n  if (nextTopicalTheme) {\r\n    return {override: null, nextUpdatedDate: nextTopicalTheme.from, name: null};\r\n  }\r\n\r\n  return {override: null, nextUpdatedDate: null, name: null};\r\n};\r\n\r\nexport const getApplicableSettingsAndNextUpdateDate = (settings, on) => {\r\n  const {override, nextUpdatedDate, name} = getTopicalThemeOverrideAndNextUpdateDate(on);\r\n  if (settings.theme.useTopicalTheme && override) {\r\n    settings = _.merge({}, settings, override);\r\n  }\r\n\r\n  return {applicableSettings: settings, nextUpdatedDate, override, name};\r\n};\r\n\r\nexport const getPuzzleTitle = puzzle => {\r\n  switch (puzzle.options.type) {\r\n    case 'mate':\r\n      return `Find mate in ${puzzle.options.typeOptions.mateIn}`;\r\n    case 'avoidMate':\r\n      return `Avoid mate in ${puzzle.options.typeOptions.mateIn}`;\r\n    default:\r\n      return 'Unknown puzzle';\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst appVersion = 12;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return {\r\n      autoSubmitMoves: false,\r\n      confirmSubmitMoves: true,\r\n      enableNotifications: false,\r\n      theme: {\r\n        useTopicalTheme: true,\r\n        cells: 'original',\r\n        pieces: 'king',\r\n        scheme: '',\r\n        rotateOpponent: true,\r\n        animations: true,\r\n        arrows: true,\r\n        numbers: 'obvious',\r\n      },\r\n    };\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      settings = null;\r\n    }\r\n    this.updateApplicableSettingsTimeout = null;\r\n    this.setSettings(settings);\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onPuzzles = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  setSettings(settings) {\r\n    if (settings) {\r\n      this.settings = _.merge(this.constructor.getDefaultSettings(), settings);\r\n    } else {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    const {applicableSettings, nextUpdatedDate, override, name} = utils.getApplicableSettingsAndNextUpdateDate(this.settings);\r\n    this.applicableSettings = applicableSettings;\r\n    this.applicableSettingsName = name;\r\n    this.applicableSettingsOverride = override;\r\n    if (this.updateApplicableSettingsTimeout) {\r\n      clearTimeout(this.updateApplicableSettingsTimeout);\r\n      this.updateApplicableSettingsTimeout = null;\r\n    }\r\n    if (nextUpdatedDate) {\r\n      const millisecondsUntilUpdate = nextUpdatedDate.diff(moment());\r\n      this.updateApplicableSettingsTimeout = setTimeout(() => {\r\n        this.setSettings(this.settings);\r\n        this.onUser.map(callback => callback(this.user));\r\n      }, millisecondsUntilUpdate);\r\n    }\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n    this.socket.on(\"game\", this.gotGame);\r\n    this.socket.on(\"deleted-game\", this.gotDeletedGame);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.puzzlesInfo = this.preparePuzzles([]);\r\n    this.socket.on(\"puzzles\", this.gotNonPersonalPuzzles);\r\n    this.socket.on(\"personal-puzzles\", this.gotPersonalPuzzles);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onPuzzles']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onPuzzles']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.setSettings(user.settings);\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n    this.gotPuzzles(this.puzzlesInfo.puzzles);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  gotGame = game => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== game.id).concat([game]);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  gotDeletedGame = gameId => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== gameId);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createPuzzle(puzzle) {\r\n    this.socket.emit('create-puzzle', puzzle);\r\n  }\r\n\r\n  updatePuzzle(puzzle) {\r\n    this.socket.emit('update-puzzle', puzzle);\r\n  }\r\n\r\n  submitPuzzleMove(puzzle, path) {\r\n    this.socket.emit(\"submit-puzzle-moves\", {id: puzzle.id, path});\r\n  }\r\n\r\n  gotPuzzles = puzzles => {\r\n    for (const puzzle of puzzles) {\r\n      puzzle.meta.publishDatetime = moment(puzzle.meta.publishDatetime);\r\n    }\r\n    puzzles = _.sortBy(puzzles, ['publishDatetime', 'createdDatetime', 'id'], ['desc', 'desc']);\r\n    this.puzzlesInfo = this.preparePuzzles(puzzles);\r\n    this.onPuzzles.map(callback => callback(this.puzzlesInfo));\r\n  };\r\n\r\n  gotNonPersonalPuzzles = nonPersonalPuzzles => {\r\n    const nonPersonalPuzzlesIds = nonPersonalPuzzles.map(puzzle => puzzle.id);\r\n    this.gotPuzzles(nonPersonalPuzzles.concat(this.puzzlesInfo.mine.filter(puzzle => !nonPersonalPuzzlesIds.includes(puzzle.id))));\r\n  };\r\n\r\n  gotPersonalPuzzles = personalPuzzles => {\r\n    const personalPuzzlesIds = personalPuzzles.map(puzzle => puzzle.id);\r\n    this.gotPuzzles(personalPuzzles.concat(this.puzzlesInfo.other.filter(puzzle => !personalPuzzlesIds.includes(puzzle.id))));\r\n  };\r\n\r\n  preparePuzzles(puzzles) {\r\n    const otherPuzzles = this.user ? puzzles.filter(puzzle => puzzle.userId !== this.user.id) : puzzles;\r\n    const myPuzzles = this.user ? puzzles.filter(puzzle => puzzle.userId === this.user.id) : [];\r\n    return {\r\n      puzzles,\r\n      public: puzzles.filter(puzzle => puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()),\r\n      private: puzzles.filter(puzzle => !puzzle.meta.public || puzzle.meta.publishDatetime.isAfter()),\r\n      byId: _.fromPairs(puzzles.map(game => [game.id, game])),\r\n      mine: myPuzzles,\r\n      myPublic: myPuzzles.filter(puzzle => puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()),\r\n      myPrivate: myPuzzles.filter(puzzle => !puzzle.meta.public || puzzle.meta.publishDatetime.isAfter()),\r\n      other: otherPuzzles,\r\n      otherSolved: this.user ? otherPuzzles.filter(puzzle => this.user.puzzles[puzzle.id] && this.user.puzzles[puzzle.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherPuzzles.filter(puzzle => !this.user.puzzles[puzzle.id] || !this.user.puzzles[puzzle.id].meta.won) : otherPuzzles,\r\n      otherStarted: this.user ? otherPuzzles.filter(puzzle => this.user.puzzles[puzzle.id] && this.user.puzzles[puzzle.id].meta.started && !this.user.puzzles[puzzle.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherPuzzles.filter(puzzle => !this.user.puzzles[puzzle.id] || !this.user.puzzles[puzzle.id].meta.started) : otherPuzzles,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    this.status = status;\r\n    this.moveType = this.status.moveType;\r\n    this.availableMovesMatrix = this.status.availableMovesMatrix;\r\n    this.resignedPlayer = this.status.resignedPlayer;\r\n    this.nextPlayer = this.status.nextPlayer;\r\n    this.canUndo = this.status.canUndo;\r\n    this.lastMove = lastMove ? lastMove : (this.resignedPlayer ? {resign: this.resignedPlayer} : lastMove);\r\n    this.isNextMove = isNextMove;\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  _getProperty(name, func) {\r\n    if (!this.hasOwnProperty(name)) {\r\n      // if (this._getPropertyDependencyCycle.includes(name)) {\r\n      //   throw new Error(`Dependency cycle detected for properties: ${this._getPropertyDependencyCycle.concat([name]).join(', ')}`);\r\n      // }\r\n      // this._getPropertyDependencyCycle.push(name);\r\n      this[name] = func();\r\n      // if (this._getPropertyDependencyCycle[this._getPropertyDependencyCycle.length - 1] !== name) {\r\n      //   throw new Error(`Expected the last property set being '${name}', but it was ${this._getPropertyDependencyCycle.join(', ')}`);\r\n      // }\r\n      // this._getPropertyDependencyCycle.pop();\r\n    }\r\n\r\n    return this[name];\r\n\r\n  }\r\n  // _getPropertyDependencyCycle = [];\r\n\r\n  get history() {\r\n    return this._getProperty('_history', () => (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]));\r\n  }\r\n\r\n  get previousInHistory() {\r\n    return this._getProperty('_previousInHistory', () => this.history[this.history.length - 2]);\r\n  }\r\n\r\n  get fullHistory() {\r\n    return this._getProperty('_fullHistory', ()=> (this.previous ? this.previous.fullHistory : []).concat(this))\r\n  };\r\n  get moveCount() {\r\n    return this._getProperty('_moveCount', ()=> this.previous ? (this.isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1)\r\n  };\r\n  get chainCount() {\r\n    return this._getProperty('_chainCount', ()=> this.previous ? this.previous.chainCount + 1 : 0)\r\n  };\r\n  get moves() {\r\n    return this._getProperty('_moves', ()=> this.previous ? this.previous.moves.concat([this.lastMove]) : [])\r\n  };\r\n  get lastMovesInHistory() {\r\n    return this._getProperty('_lastMovesInHistory', ()=> this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove))\r\n  };\r\n  get path() {\r\n    return this._getProperty('_path', ()=> this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [])\r\n  };\r\n\r\n  get thisPlayer() {\r\n    return this._getProperty('_thisPlayer', () => this.previous ? this.previous.nextPlayer : Game.PLAYER_A);\r\n  }\r\n  get thisMoveType() {\r\n    return this._getProperty('_thisMoveType', () => this.previous ? this.previous.moveType : null);\r\n  }\r\n  get canTakeMoveBack() {\r\n    return this._getProperty('_canTakeMoveBack', () => !!this.previous);\r\n  }\r\n  get moveNotation() {return this._getProperty('_moveNotation', () => this.resignedPlayer\r\n    ? this.constructor.MOVE_RESIGNED_NOTATION[this.resignedPlayer]\r\n    : (this.lastMove\r\n      ? this.constructor.MOVE_NOTATION[this.lastMove.y][this.lastMove.x]\r\n      : ''));\r\n  }\r\n  get fullNotation() {\r\n    return this._getProperty('_fullNotation', () => `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`);\r\n  }\r\n  get compressedFullNotation() {\r\n    return this._getProperty('_compressedFullNotation', () => this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join(''));\r\n  }\r\n  get positionNotation() {\r\n    return this._getProperty('_positionNotation', () => this.constructor.getPositionNotation(this.rowsAndColumns));\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    throw new Error('Not implemented `areCellsNeighbours`');\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => this.areCellsNeighbours(cell, playerCell))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  getAvailableMoves() {\r\n    if (this.finished) {\r\n      return [];\r\n    }\r\n\r\n    return _.flatten(this.availableMovesMatrix\r\n      .map((xs, y) => xs\r\n        .map((available, x) => [x, y, available])\r\n        .filter(([, , available]) => available)\r\n        .map(([x,y])=>({x,y}))));\r\n  }\r\n\r\n  getNextGames() {\r\n    return this.getAvailableMoves().map(move => this.makeMove(move));\r\n  }\r\n\r\n  getNextFullMoveGames(nextPlayer = this.nextPlayer) {\r\n    if (this.nextPlayer !== nextPlayer) {\r\n      return [this];\r\n    }\r\n\r\n    return _.flatten(this.getNextGames().map(game => game.getNextFullMoveGames(nextPlayer)));\r\n  }\r\n\r\n  getSearchState(maxDepth, previous = null) {\r\n    const result = this.finished ? (this.winner === this.nextPlayer ? 'won' : 'lost') : null;\r\n    return {\r\n      game: this,\r\n      result: result,\r\n      nextGamesLeft: this.getNextFullMoveGames(),\r\n      results: {\r\n        won: result === 'won',\r\n        lost: result === 'lost',\r\n        undetermined: false,\r\n      },\r\n      ...(!previous || previous.loseLeaves ? {\r\n        winLeaves: result ==='won' ? [this] : [],\r\n      } : {\r\n        loseLeaves: result === 'lost' ? [this] : [],\r\n      }),\r\n      previous,\r\n      moves: null,\r\n      maxDepth,\r\n    };\r\n  }\r\n\r\n  static advanceSearchState(state) {\r\n    if (state.result !== null) {\r\n      console.log('got result', state.result, 'with', state.maxDepth, 'depth');\r\n      if (state.previous) {\r\n        if (state.result === 'won') {\r\n          state.previous.results.lost = true;\r\n          if (state.winLeaves) {\r\n            state.previous.loseLeaves.push(...state.winLeaves);\r\n          }\r\n        } else if (state.result === 'lost') {\r\n          state.previous.results.won = true;\r\n          // state.previous.result = 'won';\r\n          if (state.loseLeaves) {\r\n            state.previous.winLeaves.push(...state.loseLeaves);\r\n          }\r\n        } else {\r\n          throw new Error(`Unknown result '${state.result}'`);\r\n        }\r\n        return state.previous;\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    if (state.maxDepth <= 0) {\r\n      // console.log('undetermined');\r\n      state.results.undetermined = true;\r\n      if (state.previous) {\r\n        state.previous.results.undetermined = true;\r\n        return state.previous;\r\n      } else {\r\n        console.log('finished');\r\n        return state;\r\n      }\r\n    }\r\n    if (!state.nextGamesLeft.length) {\r\n      if (state.results.won) {\r\n        state.result = 'won';\r\n        return state;\r\n      } else if (state.results.undetermined) {\r\n        if (state.previous) {\r\n          state.previous.results.undetermined = true;\r\n          return state.previous;\r\n        } else {\r\n          console.log('finished');\r\n          return state;\r\n        }\r\n      } else if (state.results.lost) {\r\n        state.result = 'lost';\r\n        return state;\r\n      }\r\n      console.log(state);\r\n      throw new Error('Result is null, there are no next games, and there are no results');\r\n    }\r\n    const nextGame = state.nextGamesLeft.shift();\r\n    return nextGame.getSearchState(state.maxDepth - 1, state);\r\n  }\r\n\r\n  static advanceSearchStateSteps(state, steps = 20) {\r\n    let rootState = state;\r\n    while (rootState.previous) {\r\n      rootState = rootState.previous;\r\n    }\r\n    for (let i = 0 ; i < steps ; i++) {\r\n      if (rootState.result !== null ) {\r\n        break;\r\n      }\r\n      state = this.advanceSearchState(state);\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n\r\nclass GameClassic extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    return (\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    );\r\n  }\r\n}\r\nGame.Classic = GameClassic;\r\n\r\nclass GameHex extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    if (!(\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    )) {\r\n      return false;\r\n    }\r\n\r\n    if (lhs.x === rhs.x) {\r\n      return true;\r\n    } else if (lhs.x % 2 === 0) {\r\n      return rhs.y >= lhs.y;\r\n    } else {\r\n      return rhs.y <= lhs.y;\r\n    }\r\n  }\r\n}\r\nGame.Hex = GameHex;\r\n\r\nGame.GAME_TYPES = [Game.Classic, Game.Hex];\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import Game from \"../../../game/game\";\r\n\r\nexport const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n\r\nexport const translate = (gameType, point) => {\r\n  return getTranslate(gameType)(point);\r\n};\r\n\r\nexport const getTranslate = gameType => {\r\n  if (gameType === Game.Classic) {\r\n    return getTranslateClassic;\r\n  } else if (gameType === Game.Hex) {\r\n    return getTranslateHex;\r\n  }\r\n\r\n  throw new Error(`Unknown game type of type '${gameType ? gameType.constructor.name : gameType}'`);\r\n};\r\n\r\nexport const getTranslateClassic = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: point.y * cellSize,\r\n  });\r\n};\r\n\r\nexport const getTranslateHex = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: (point.y + (point.x % 2 === 0 ? 0.25 : -0.25)) * cellSize,\r\n  });\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenWitchHat = definePiece('PieceHalloweenWitchHat', {\r\n  path: <path d=\"m503.15112,306.14207c-0.08158,-19.00159 -17.54216,-60.97152 -168.51607,-65.22834l-56.26328,-124.83471l76.29825,31.88264l-114.45191,-123.15047c-15.62768,-10.96294 -68.47535,146.47597 -90.00964,213.1728l0,0c-15.14543,2.38948 -62.92045,11.0826 -99.71439,30.45222c-35.89653,18.84568 -54.83104,35.48317 -49.64961,58.60561c-3.7637,26.02861 5.74707,103.14994 246.53844,113.09401c77.45129,3.20712 270.97346,-48.42768 255.7682,-133.99376zm-240.39978,5.43162c-121.8814,8.58253 -132.04665,-25.29799 -132.04665,-25.29799l11.06991,-24.04705c0,0 33.36383,22.50785 101.67601,21.3258c68.31218,-1.19474 96.66319,-31.58713 96.66319,-31.58713l17.99721,21.89507c-4.4073,28.55043 -95.35967,37.7113 -95.35967,37.7113z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCauldron = definePiece('PieceHalloweenCauldron', {\r\n  path: <path d=\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954 c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673 c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939 c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954 c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689 c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1 c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715 c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z M244.915,236c-78.418,0-125.798-29.477-125.798-51.3 c0-20.734,49.014-50.853,125.816-50.853c8.044,0,15.73,0.399,23.128,1.01l-12.19,28.209c-3.218,7.447-2.473,16.014,1.983,22.794 c4.456,6.78,12.024,10.862,20.138,10.862c9.611,0,18.303-5.711,22.118-14.532l16.543-38.252 c34.191,10.619,54.079,27.573,54.079,40.762C370.731,207.889,320.981,236,244.915,236z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenBat = definePiece('PieceHalloweenBat', {\r\n  path: <path d=\"m520.84272,171.44399c-8.83353,-12.69106 -16.6399,-27.11688 -22.85989,-42.92364c-9.91775,-25.0968 -14.56277,-50.31915 -14.5057,-73.25893c0.01141,-8.66234 -10.44274,-13.31877 -16.87957,-7.50964c-28.86304,25.99842 -77.48168,46.1763 -136.24632,55.95709c5.66076,-27.88153 5.47816,-60.38526 -10.4998,-91.3825c-2.86462,-5.55805 -10.62534,-6.19716 -14.28886,-1.14128c-4.65643,6.42542 -9.55254,15.94372 -9.55254,27.61904l-68.13457,0c0,-11.67532 -4.88469,-21.19362 -9.54112,-27.61904c-3.66352,-5.06729 -11.41283,-4.42818 -14.28886,1.14128c-15.97796,30.98582 -16.14915,63.4439 -10.48839,91.32544c-58.76464,-9.78079 -107.3947,-29.94726 -136.24632,-55.93426c-6.43683,-5.79772 -16.87957,-1.12987 -16.87957,7.53247c0.06848,22.93978 -4.58796,48.17354 -14.5057,73.25893c-6.21999,15.80676 -14.02636,30.24399 -22.85989,42.92364c-6.6765,9.56395 -1.92877,22.98543 9.19874,26.50058c10.19165,3.207 20.60015,7.74931 30.81463,13.60409c35.3227,20.23494 56.25382,50.76425 60.5108,76.28333c1.17552,7.0303 3.62928,9.74655 13.30736,8.19441c24.05824,-3.90319 56.71033,-1.27824 88.11843,16.71979c17.29043,9.91775 31.5907,22.26642 41.93072,35.25422c3.36678,4.22275 7.79496,6.99606 15.00787,6.99606c7.07595,0 11.54978,-2.79614 14.90515,-7.00748c10.35143,-12.99921 24.69736,-25.32506 41.9992,-35.23139c31.41951,-18.00944 64.07161,-20.63439 88.15267,-16.7312c9.67808,1.56356 12.12042,-1.17552 13.30736,-8.20582c4.25698,-25.50767 25.19952,-56.03698 60.52222,-76.28333c10.22589,-5.86619 20.65722,-10.39708 30.81463,-13.60409c11.11609,-3.49232 15.85242,-16.91381 9.18733,-26.47776z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 0, y: 100},\r\n});\r\n\r\nconst PieceHalloweenSpider = definePiece('PieceHalloweenSpider', {\r\n  path: <path d=\"M392.236,256.85c-3.204-3.473-7.704-5.451-12.436-5.451h-20.374c-3.501-15.538-8.927-30.108-16.075-43.152 l44.043-13.528l68.976,73.267c3.34,3.542,7.826,5.325,12.339,5.325c4.169,0,8.332-1.528,11.608-4.603 c6.798-6.41,7.109-17.127,0.712-23.938l-76.206-80.945c-4.416-4.697-11.13-6.464-17.299-4.581l-65.142,20.012 c-6.842-7.334-14.321-13.819-22.387-19.144l79.475-60.708l63.803,37.227c8.073,4.703,18.425,1.968,23.151-6.096 c4.713-8.08,1.987-18.447-6.086-23.161l-73.59-42.94c-5.917-3.447-13.362-2.994-18.82,1.176l-61.323,46.84 c-2.544-8.789-7.769-16.651-14.916-23.168l9.129-19.879c3.903-8.5,0.168-18.554-8.333-22.448c-8.532-3.92-18.554-0.182-22.445,8.325 l-8.448,18.416c-5.988-1.463-12.204-2.49-18.769-2.49s-12.786,1.026-18.768,2.49l-8.455-18.416 c-3.885-8.507-13.938-12.23-22.439-8.325c-8.501,3.894-12.236,13.948-8.338,22.448l9.135,19.879 c-6.785,6.177-11.744,13.593-14.405,21.838l-61.835-47.231c-5.456-4.151-12.901-4.629-18.82-1.167l-73.597,42.94 c-8.066,4.713-10.798,15.085-6.085,23.161c4.713,8.08,15.085,10.814,23.157,6.095l63.802-37.227l80.732,61.669 c-8.054,5.166-15.577,11.384-22.439,18.555l-66.347-20.384c-6.17-1.884-12.87-0.107-17.298,4.58L4.613,243.058 c-6.402,6.814-6.085,17.528,0.712,23.938c3.27,3.086,7.439,4.607,11.608,4.607c4.5,0,8.993-1.787,12.333-5.326l68.981-73.271 l44.916,13.794c-7.296,12.955-12.916,27.402-16.586,42.888h-20.736c-4.733,0-9.232,1.978-12.437,5.451L4.496,351.453 c-6.35,6.872-5.923,17.587,0.958,23.927c3.256,3.006,7.375,4.49,11.478,4.49c4.565,0,9.11-1.835,12.45-5.447l83.879-90.868h8.72 c-0.103,2.606-0.317,5.17-0.317,7.808c0,82.225,54.247,148.879,121.156,148.879c66.91,0,121.156-66.654,121.156-148.879 c0-2.059-0.181-4.06-0.252-6.095h8.649l83.878,90.867c3.341,3.612,7.892,5.448,12.456,5.448c4.098,0,8.215-1.489,11.478-4.49 c6.876-6.341,7.31-17.059,0.959-23.928L392.236,256.85z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCat = definePiece('PieceHalloweenCat', {\r\n  path: <path d=\"M535.892,69.273c-1.147-7.46-7.924-12.77-15.396-12.135c-18.883,1.568-36.254,5.171-53.12,11.036 c-26.556,9.215-50.526,22.663-71.3,39.987l-0.308-0.086c-14.421-3.867-29.328-7.866-44.305-11.164 c-22.579-4.957-45.793-7.843-68.993-8.569c-21.208-0.665-43.206,0.343-67.381,3.097c-24.638,2.791-49.336,8.058-73.413,15.628 c-0.21,0.065-0.397,0.119-0.567,0.166c-1.97-1.857-3.953-3.192-5.603-4.301c-0.621-0.429-1.265-0.84-1.849-1.304 c-21.19-16.97-46.129-29.802-74.134-38.137c-13.444-4.004-26.71-6.356-40.545-7.206C11.8,55.825,5.42,60.755,4.011,67.791 c-0.182,0.913-0.383,1.801-0.574,2.681c-0.497,2.28-1.013,4.632-1.363,7.236c-3.068,22.953-2.728,46.419,0.99,69.745 c4.587,28.742,13.229,55.232,25.692,78.808c-6.198,14.209-10.097,30.103-11.889,48.472c-3.624,37.075,3.206,72.854,20.302,106.335 c13.562,26.546,33.085,49.106,58.047,67.047c22.906,16.461,44.463,24.021,70.319,31.83c25.86,7.812,52.794-18.394,103.458-18.053 c47.781,0.304,59.902,19.845,93.234,19.845c0,0,1.218-0.275,1.204-0.275c18.337-5.021,34.737-11.397,50.143-19.49 c27.872-14.626,51.054-34.909,68.896-60.294c19.695-28.012,31.298-59.897,34.504-94.77c2.525-27.56-1.115-54.252-10.889-79.539 l1.956-4.331c5.596-12.405,11.383-25.219,16.186-38.447c7.761-21.406,12.134-44.354,13.366-70.146 C538.166,102.325,538.497,86.233,535.892,69.273z M228.288,339.606c0,0-55.298,5.619-85.933-25.015 c-30.635-30.645-25.013-85.936-25.013-85.936s55.293-5.612,85.928,25.022C233.909,284.311,228.288,339.606,228.288,339.606z  M401.251,314.591c-30.635,30.634-85.93,25.015-85.93,25.015s-5.614-55.295,25.02-85.928 c30.631-30.635,85.926-25.022,85.926-25.022S431.891,283.957,401.251,314.591z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenTombstone = definePiece('PieceHalloweenTombstone', {\r\n  path: <g>\r\n   <path d=\"m310.57959,214.18901c18.11361,-19.31361 -3.7406,-43.37905 -25.98583,-38.09752l0,42.67408c9.2552,1.74895 18.77428,3.11653 25.98583,-4.57656z\"/>\r\n   <path d=\"m129.70544,175.71203l0,42.67408c1.4138,0.01734 2.82568,0.04045 4.23563,0.07705c40.18933,0.00193 36.10009,-50.48851 -4.23563,-42.75112z\"/>\r\n   <path d=\"m413.15147,392.28371l-16.74989,0l0,-215.12898c0,-40.68243 -13.72389,-78.15395 -36.78388,-108.06144l-22.93479,7.21154l9.8003,27.57684l0.81284,2.2748l-1.54285,1.56597l-23.05228,23.42789c-1.05361,1.07287 -2.77752,1.08443 -3.85232,0.03274c-1.02472,-1.01509 -1.07865,-2.65617 -0.13676,-3.7329l20.04555,-22.91938l-12.48344,-29.52418l-1.64687,-3.89277l4.24718,-2.15345l21.51906,-10.90592c-32.4115,-35.66478 -79.16711,-58.05447 -131.15032,-58.05447c-47.67246,0 -90.9398,18.83399 -122.78115,49.45994l25.07861,12.71458l2.53097,1.28282l0.31589,2.24205l7.99742,56.33826c0.2138,1.48892 -0.8244,2.86613 -2.31332,3.07993c-1.42151,0.20032 -2.74285,-0.74542 -3.04333,-2.12841l-11.27574,-52.83457l-30.02113,-9.43818c-27.17619,31.13831 -43.64679,71.86504 -43.64679,116.44023l0,215.12898l-16.75181,0c-10.63818,0 -19.2616,8.62342 -19.2616,19.2616l0,18.9226c0,10.63433 8.62342,19.2616 19.2616,19.2616l387.82079,0c10.63818,0 19.2616,-8.62727 19.2616,-19.2616l0,-18.9226c-0.00193,-10.63818 -8.62535,-19.26353 -19.26353,-19.26353zm-144.04211,-222.43298c5.59164,-0.28122 11.37783,-0.57207 17.23143,-0.57207c13.94155,0 31.1229,1.44847 40.31261,12.73577c0.00385,0.00385 0.0077,0.0077 0.01156,0.01156l0.0077,0.01541c0.00385,0.00578 0.01156,0.01156 0.01541,0.01734c0.0077,0.0077 0.01541,0.01541 0.01926,0.02504c0.00385,0.00578 0.0077,0.01156 0.01541,0.01926c6.75697,8.36531 8.55408,16.01602 5.34124,22.74025c-5.38362,11.27959 -23.59931,17.36819 -37.99736,17.36819c-3.28025,0 -9.09533,-0.89374 -9.09533,-0.89374s-4.54959,37.16719 2.2382,44.46541c1.52745,1.63724 3.37078,2.8199 5.51267,3.54221l-32.98549,0c10.84621,-4.50721 15.75406,-26.9778 15.75406,-49.26732c0,-22.61312 -4.91171,-45.40923 -15.76947,-49.79509c2.96629,-0.09246 6.11556,-0.2504 9.3881,-0.4122zm-59.43938,0.48154l34.88854,0c-3.75794,1.56019 -7.90881,5.69758 -11.09468,15.3149c-2.9085,8.77944 -3.1069,20.6677 -3.1069,33.48244c0,22.0006 3.46516,45.50553 14.04749,50.19381l-34.89624,0c3.74253,-1.55826 7.88955,-5.69373 11.05616,-15.3149c2.89117,-8.77173 3.13001,-20.66192 3.13001,-33.46896c0.00385,-22.00831 -3.48635,-45.51709 -14.02437,-50.20729zm-104.76,-0.05201c3.66741,-0.07705 7.46002,-0.23692 11.41443,-0.40257c5.73803,-0.23884 11.6629,-0.48732 17.50109,-0.48732c11.63979,0 20.4173,1.0305 27.62114,3.24558c11.07542,3.40545 17.20446,10.95407 16.81538,20.71393c-0.47769,12.00961 -10.52647,23.21986 -23.3701,26.07636c-0.59518,0.13098 -1.08443,0.55088 -1.29823,1.1191c-0.2138,0.56629 -0.13483,1.20578 0.22151,1.69887l21.18006,29.4298c6.29854,8.78714 12.74155,15.2263 22.73062,17.64748l-21.625,0l-34.1932,-47.22752c-0.35056,-0.48732 -0.92263,-0.76276 -1.5313,-0.74542c-1.7374,0.06742 -3.79646,0.13676 -5.89598,0.13676c-1.68154,0 -3.20898,-0.04238 -4.66516,-0.13483c-0.48924,-0.02889 -0.98619,0.14446 -1.35024,0.48539c-0.36212,0.34286 -0.56822,0.81862 -0.56822,1.31749c0,2.50016 -0.22921,5.6398 -0.46228,8.96435c-0.84558,11.75536 -1.89919,26.37876 4.88667,33.66735c1.52359,1.63531 3.36308,2.81605 5.50304,3.53643l-32.95275,0c10.89051,-4.50721 15.8157,-26.97973 15.8157,-49.27118c0,-22.57652 -4.91363,-45.33411 -15.77718,-49.77005z\"/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 50, y: 50},\r\n});\r\n\r\nconst PieceHalloweenPumpkin = definePiece('PieceHalloweenPumpkin', {\r\n  path: <path d=\"m468.74161,145.38332c-25.52721,-31.3253 -52.92613,-46.95841 -82.22343,-46.95841c-20.72406,0 -40.16348,8.29877 -58.36017,25.00115c-12.62923,-9.61583 -26.26865,-16.44316 -40.93732,-20.48009c-3.03246,-39.3801 -20.45722,-67.93597 -52.29333,-85.65997l-33.33805,23.54115c21.70947,14.12736 34.34823,33.82218 37.88389,59.08636c-21.72472,2.535 -41.93416,10.61267 -60.63213,24.23112c-18.68273,-17.16363 -38.64438,-25.72163 -59.85448,-25.72163c-29.81764,0 -56.60092,15.63311 -80.33839,46.95841c-25.77309,32.32024 -38.6482,70.49765 -38.6482,114.44265c0,11.10824 1.014,22.26984 3.01722,33.35139c7.58211,45.47172 28.81127,85.15297 63.6646,118.97324c31.32339,30.84689 60.38435,46.24556 87.16381,46.24556c0.6328,0 1.28465,-0.02287 1.93651,-0.06671c30.65438,-9.40998 63.19572,-14.48378 96.93403,-14.48378c28.17847,0 55.52974,3.54137 81.64019,10.18954l-0.14104,-0.18679l0.61564,0.30496c4.98994,1.27703 9.93032,2.67604 14.82877,4.17988c0.66329,0.04003 1.32658,0.0629 1.98797,0.0629c26.78518,0 55.56786,-15.39867 86.39569,-46.24556l0,-0.00191c33.84124,-33.82027 55.57167,-73.49962 65.16463,-118.97324c2.55406,-12.61017 3.79296,-25.00115 3.79296,-37.12911c0.00191,-42.46213 -12.76075,-79.34345 -38.25937,-110.66113zm-373.25996,61.40407l108.37772,37.1577c-9.0993,24.7305 -25.51387,37.10433 -49.26277,37.10433c-6.56812,0 -12.38717,-1.0159 -17.42666,-3.03056l0,0c-32.34883,-13.12289 -46.2284,-36.88323 -41.68828,-71.23146zm96.2574,231.91396c0.50509,-0.51081 1.26559,-1.27322 2.26244,-2.27578l0.75859,0.77193c-0.50509,0.49938 -1.50956,0.99303 -3.02103,1.50384zm184.91743,-70.48812l-249.34824,0l-18.17954,-50.80093l48.5099,32.62139l39.39535,-32.62139l53.07289,37.14054l55.32199,-39.37439l43.19022,37.12911l50.78568,-31.82467l-22.74825,47.73034zm0.00191,-90.19437c-5.56555,2.01275 -11.36364,3.03056 -17.42095,3.03056c-24.25781,0 -40.68953,-12.37383 -49.27421,-37.10433l108.3701,-37.1596c4.05218,34.34823 -9.8617,58.11048 -41.67494,71.23337z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenGhost = definePiece('PieceHalloweenGhost', {\r\n  path: <g>\r\n    <path d={\"m201.144531 256c-17.300781 0-36.574219 30.042969-36.574219 73.144531-.179687 13.222657.574219 26.441407 2.25 39.558594 20.023438-16.175781 48.621094-16.175781 68.644532 0 1.675781-13.117187 2.429687-26.335937 2.25-39.558594 0-43.101562-19.273438-73.144531-36.570313-73.144531zm0 0\"}/>\r\n    <path d={\"m201.144531 374.855469c-11.320312-.027344-22.007812 5.222656-28.902343 14.199219 6.390624 13.230468 16.449218 13.230468 28.902343 13.230468 12.449219 0 22.507813 0 28.898438-13.230468-6.894531-8.976563-17.582031-14.226563-28.898438-14.199219zm0 0\"}/>\r\n    <path d={\"m146.285156 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m9.390625 137.398438c-6.011719 5.988281-9.390625 14.125-9.390625 22.609374 0 8.488282 3.378906 16.621094 9.390625 22.613282l27.179687 27.234375v-22.691407c.042969-19.089843 2.753907-38.082031 8.046876-56.421874-12.015626-5.023438-25.871094-2.40625-35.226563 6.65625zm0 0\"}/>\r\n    <path d={\"m292.570312 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m434.707031 387.328125c-9.484375-16.925781-14.359375-36.042969-14.136719-55.441406v-66.40625c-2.863281-1.125-4.96875-3.617188-5.601562-6.632813-.632812-3.011718.296875-6.140625 2.464844-8.324218l67.886718-67.886719c12.472657-12.507813 12.472657-32.75 0-45.257813-12.667968-12.078125-32.589843-12.078125-45.257812 0l-67.882812 67.886719c-3.589844 3.464844-9.292969 3.414063-12.816407-.109375-3.527343-3.527344-3.578125-9.230469-.113281-12.816406l55.351562-55.351563c-20.773437-80.652343-93.511718-137.0117185-176.796874-136.988281h-2.832032c-78.738281 1.859375-147.5 53.765625-170.863281 128.976562-6.140625 18.785157-9.261719 38.425782-9.253906 58.1875v178.550782c.078125 14.484375 3.398437 28.769531 9.71875 41.800781 29.476562 61.511719 121.363281 104.484375 223.425781 104.484375 100.761719 0 178.148438-32.171875 215.863281-88.960938-28.007812 2.40625-54.90625-11.484374-69.15625-35.710937zm-343.277343-209.042969c0-33.882812 15.722656-59.429687 36.570312-59.429687 20.84375 0 36.570312 25.546875 36.570312 59.429687 0 33.882813-15.726562 59.429688-36.570312 59.429688-20.847656 0-36.570312-25.546875-36.570312-59.429688zm157.859374 210.960938c-.171874 1.1875-.578124 2.324218-1.199218 3.347656-9.296875 25.070312-26.128906 27.976562-46.945313 27.976562-20.820312 0-37.652343-2.90625-46.949219-27.976562-.621093-1.023438-1.027343-2.160156-1.199218-3.347656-5.195313-19.589844-7.457032-39.847656-6.710938-60.101563 0-51.265625 24.101563-91.429687 54.859375-91.429687 30.753907 0 54.855469 40.164062 54.855469 91.429687.75 20.253907-1.511719 40.511719-6.710938 60.101563zm24.996094-151.53125c-20.84375 0-36.570312-25.546875-36.570312-59.429688 0-33.882812 15.726562-59.429687 36.570312-59.429687 20.847656 0 36.570313 25.546875 36.570313 59.429687 0 33.882813-15.722657 59.429688-36.570313 59.429688zm0 0\"}/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n    'halloween-witch-hat': PieceHalloweenWitchHat,\r\n    'halloween-cauldron': PieceHalloweenCauldron,\r\n    'halloween-bat': PieceHalloweenBat,\r\n    'halloween-spider': PieceHalloweenSpider,\r\n    'halloween-cat': PieceHalloweenCat,\r\n    'halloween-tombstone': PieceHalloweenTombstone,\r\n    'halloween-pumpkin': PieceHalloweenPumpkin,\r\n    'halloween-ghost': PieceHalloweenGhost,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass BaseCellDefinitions extends PureComponent {\r\n  static defaultBorder = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`M0,0h${constants.cellSize}v${constants.cellSize}h-${constants.cellSize}z M${constants.borderWidth},${constants.borderWidth}v${constants.cellSize - constants.borderWidth * 2}h${constants.cellSize - constants.borderWidth * 2}v-${constants.cellSize - constants.borderWidth * 2}z`} />\r\n    </g>\r\n  );\r\n  static defaultBorderHex = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`\r\n        M ${(() => {\r\n          const center = {x: 0, y: 0};\r\n          return [0, 1, 2, 3, 4, 5]\r\n            .map(index => index / 6 * Math.PI * 2)\r\n            .map(angle => {\r\n              const radius = constants.cellSize * 1.5 / 2;\r\n              const x = center.x + Math.cos(angle) * radius;\r\n              const y = center.y + Math.sin(angle) * radius;\r\n              return `${x},${y}`;\r\n            })\r\n            .join('L');\r\n        })()} z \r\n        M ${[0, 1, 2, 3, 4, 5].reverse().map(index => index / 6 * Math.PI * 2).map(angle => `${Math.cos(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2},${Math.sin(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2}`).concat('L')} z \r\n      `} />\r\n    </g>\r\n  );\r\n\r\n\trender() {\r\n\t  const {name, paths} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`cell-${name}-border`} className={\"cell-border\"}>\r\n          {paths.border}\r\n        </g>\r\n        <g id={`cell-${name}-0`} className={\"cell-0\"}>\r\n          {paths.level0}\r\n        </g>\r\n        <g id={`cell-${name}-1`} className={\"cell-1\"}>\r\n          {paths.level1}\r\n        </g>\r\n        <g id={`cell-${name}-2`} className={\"cell-2\"}>\r\n          {paths.level2}\r\n        </g>\r\n        <g id={`cell-${name}-3`} className={\"cell-3\"}>\r\n          {paths.level3}\r\n        </g>\r\n        <g id={`cell-${name}-4`} className={\"cell-4\"}>\r\n          {paths.level4}\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBaseCellDefinitions.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  paths: PropTypes.shape({\r\n    border: PropTypes.node.isRequired,\r\n    level0: PropTypes.node.isRequired,\r\n    level1: PropTypes.node.isRequired,\r\n    level2: PropTypes.node.isRequired,\r\n    level3: PropTypes.node.isRequired,\r\n    level4: PropTypes.node.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst defineCellDefinitions = (className, name, paths) => {\r\n  class CellDefinitionsFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BaseCellDefinitions name={name} paths={paths} />\r\n      );\r\n    }\r\n  }\r\n  CellDefinitionsFor.displayName = className;\r\n\r\n  return CellDefinitionsFor;\r\n};\r\n\r\nconst OriginalCellDefinitions = defineCellDefinitions('OriginalCellDefinitions', 'original', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <rect\r\n      className={'border fill'}\r\n      width={constants.cellSize - constants.borderWidth * 2}\r\n      height={constants.cellSize - constants.borderWidth * 2}\r\n      transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n    />\r\n  ),\r\n  level1: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 2}\r\n        height={constants.cellSize - constants.borderWidth * 2}\r\n        transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level3: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level4: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 10}\r\n        height={constants.cellSize - constants.borderWidth * 10}\r\n        transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nconst HalloweenCellDefinitions = defineCellDefinitions('HalloweenCellDefinitions', 'halloween', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <path className={\"fill\"} transform={\"scale(0.21)\"} d={\"m475.484375 292.628906h18.285156c8.34375.027344 15.640625-5.609375 17.71875-13.691406 2.074219-8.082031-1.605469-16.539062-8.933593-20.53125.082031-.433594.132812-.875.148437-1.316406.09375-.339844.164063-.683594.210937-1.035156v-171.820313c6.503907-11.746094 9.664063-25.046875 9.140626-38.464844 0-27.902343-10.832032-45.7148435-18.285157-45.7148435-7.449219 0-18.285156 17.8125005-18.285156 45.7148435-.523437 13.417969 2.636719 26.71875 9.144531 38.464844v109.511719c-11.957031-32.042969-32.140625-60.375-58.515625-82.148438-4.039062-3.027344-9.769531-2.210937-12.800781 1.828125-3.027344 4.042969-2.210938 9.773438 1.828125 12.800781 49.691406 37.265626 67 117.863282 69.332031 129.828126h-27.273437c0-2.53125-.492188-62.117188-43.492188-72.867188-3.179687-.820312-6.550781.125-8.839843 2.476562-2.289063 2.355469-3.140626 5.753907-2.230469 8.90625.90625 3.15625 3.4375 5.578126 6.625 6.355469 29.121093 7.277344 29.652343 54.527344 29.652343 55.128907h-173.488281c2.828125-12.214844 22.457031-88.640626 77.449219-120.0625 4.253906-2.566407 5.679688-8.054688 3.21875-12.363282-2.464844-4.3125-7.917969-5.871094-12.285156-3.507812-33.832032 19.34375-55.425782 52.480468-68.574219 81.003906v-116.890625c6.492187-11.75 9.640625-25.050781 9.105469-38.464844 0-27.902343-10.832032-45.7148435-18.285156-45.7148435-7.449219 0-18.285157 17.8125005-18.285157 45.7148435-.523437 13.417969 2.640625 26.71875 9.144531 38.464844v120.339844c-15.261718-33.203125-38.578124-62.0625-67.832031-83.960938-4.109375-2.933593-9.820312-1.980469-12.753906 2.128907-2.933594 4.113281-1.980469 9.824218 2.128906 12.757812 55.167969 39.402344 75.054688 108.496094 78.171875 120.554688h-173.429687c0-.601563.53125-47.851563 29.648437-55.128907 4.867188-1.257812 7.804688-6.203125 6.585938-11.074219-1.222656-4.875-6.144532-7.851562-11.027344-6.664062-43 10.75-43.492188 70.335938-43.492188 72.867188h-27.429687c.714844-7.988282 9.4375-91.675782 60.34375-129.828126 2.613281-1.960937 3.980469-5.164062 3.589844-8.40625-.390625-3.242187-2.480469-6.03125-5.484375-7.316406-3.003906-1.28125-6.464844-.863281-9.078125 1.09375-22.324219 17.949219-39.382813 41.597656-49.371094 68.445313v-95.808594c6.503906-11.746094 9.667969-25.046875 9.144531-38.464844 0-27.902343-10.835937-45.7148435-18.289062-45.7148435-7.449219 0-18.2851565 17.8125005-18.2851565 45.7148435-.5234375 13.417969 2.6406245 26.71875 9.1445315 38.464844v171.820313c.054687.488281.152343.96875.292969 1.4375 0 .292968 0 .601562.109374.914062-7.320312 3.988281-11 12.433594-8.9375 20.507812 2.0625 8.078126 9.34375 13.722657 17.675782 13.714844h54.859375c20.199219 0 36.570312 16.371094 36.570312 36.570313s-16.371093 36.570312-36.570312 36.570312h-36.570313c-10.101562 0-18.289062 8.1875-18.289062 18.285157 0 10.101562 8.1875 18.285156 18.289062 18.285156h128c20.195313 0 36.570313 16.375 36.570313 36.574218 0 20.195313-16.375 36.570313-36.570313 36.570313h-118.859375c-10.097656 0-18.285156 8.1875-18.285156 18.285156 0 10.101563 8.1875 18.285157 18.285156 18.285157h448c10.101563 0 18.285157-8.183594 18.285157-18.285157 0-10.097656-8.183594-18.285156-18.285157-18.285156h-36.570312c-20.199219 0-36.570313-16.375-36.570313-36.570313 0-20.199218 16.371094-36.574218 36.570313-36.574218h36.570312c10.101563 0 18.285157-8.183594 18.285157-18.285156 0-10.097657-8.183594-18.285157-18.285157-18.285157h-18.285156c-20.199219 0-36.570313-16.371093-36.570313-36.570312s16.371094-36.570313 36.570313-36.570313zm-338.285156 0c0-5.050781 4.09375-9.144531 9.140625-9.144531h64c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625h-64c-5.046875 0-9.140625-4.09375-9.140625-9.140625zm27.429687 54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046875 4.09375-9.140625 9.144531-9.140625h228.570313c5.050781 0 9.140625 4.09375 9.140625 9.140625 0 5.050781-4.089844 9.144531-9.140625 9.144531zm27.425782 36.570313c0-5.046876 4.09375-9.140626 9.144531-9.140626h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531zm182.859374 36.574218c5.046876 0 9.140626 4.09375 9.140626 9.140625 0 5.050781-4.09375 9.144531-9.140626 9.144531h-118.859374c-5.046876 0-9.140626-4.09375-9.140626-9.144531 0-5.046875 4.09375-9.140625 9.140626-9.140625zm-64 64h-91.429687c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h91.429687c5.046876 0 9.140626 4.09375 9.140626 9.144531s-4.09375 9.144531-9.140626 9.144531zm91.425782 0h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.144531s-4.09375 9.144531-9.144531 9.144531zm0-91.429687h-109.710938c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046876 4.09375-9.140626 9.144531-9.140626h109.710938c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531zm0-91.429688h-82.285156c-5.046876 0-9.140626-4.09375-9.140626-9.140625 0-5.050781 4.09375-9.144531 9.140626-9.144531h82.285156c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625zm0 0\"}/>\r\n  ),\r\n  level1: (\r\n    <g className={\"fill\"} transform={\"translate(-1,6),scale(0.33,0.33)\"}>\r\n      <path d={\"m221.30057,128.34535c12.80287,-11.57301 -2.64389,-25.9934 -18.36703,-22.82862l0,25.57096c6.54166,1.048 13.26984,1.86747 18.36703,-2.74234z\"}/>\r\n      <path d={\"m93.457,105.28936l0,25.57096c0.99929,0.01039 1.99722,0.02424 2.99378,0.04617c28.4062,0.00115 25.51589,-30.25349 -2.99378,-25.61713z\"}/>\r\n      <path d={\"m293.79936,235.06243l-11.83898,0l0,-128.90859c0,-24.37754 -9.70018,-46.83105 -25.9992,-64.75208l-16.21053,4.32127l6.92695,16.52446l0.57452,1.36309l-1.0905,0.93835l-16.29357,14.03835c-0.7447,0.64288 -1.96318,0.64981 -2.72286,0.01962c-0.72428,-0.60826 -0.7624,-1.59162 -0.09666,-2.23681l14.16839,-13.73365l-8.82342,-17.69134l-1.16402,-2.33261l3.00195,-1.29038l15.20988,-6.53499c-22.90876,-21.37089 -55.95607,-34.78713 -92.6983,-34.78713c-33.69535,0 -64.27712,11.28562 -86.78289,29.63716l17.7258,7.61877l1.78892,0.76869l0.22327,1.34347l5.65265,33.75875c0.15112,0.89218 -0.58269,1.71743 -1.63508,1.84554c-1.00473,0.12004 -1.93867,-0.44667 -2.15106,-1.27537l-7.9698,-31.65929l-21.21922,-5.65551c-19.20839,18.65855 -30.84997,43.06264 -30.84997,69.77278l0,128.90859l-11.84034,0c-7.51917,0 -13.61428,5.16729 -13.61428,11.54185l0,11.33871c0,6.37225 6.09511,11.54185 13.61428,11.54185l274.11544,0c7.51917,0 13.61428,-5.16959 13.61428,-11.54185l0,-11.33871c-0.00136,-6.37456 -6.09648,-11.543 -13.61565,-11.543zm-101.81034,-133.28526c3.95223,-0.16851 8.04196,-0.34279 12.17934,-0.34279c9.85402,0 21.99796,0.86795 28.49333,7.63147c0.00272,0.00231 0.00545,0.00462 0.00817,0.00693l0.00545,0.00923c0.00272,0.00346 0.00817,0.00693 0.01089,0.01039c0.00545,0.00462 0.01089,0.00923 0.01361,0.015c0.00272,0.00346 0.00545,0.00693 0.01089,0.01154c4.77589,5.01262 6.0461,9.59705 3.77524,13.62631c-3.80519,6.75891 -16.68022,10.40728 -26.8569,10.40728c-2.31851,0 -6.42866,-0.53554 -6.42866,-0.53554s-3.21569,22.27115 1.58198,26.64436c1.07961,0.98106 2.3825,1.68973 3.89641,2.12255l-23.31446,0c7.6662,-2.70079 11.13512,-16.16551 11.13512,-29.52174c0,-13.55013 -3.47164,-27.20991 -11.14601,-29.83799c2.0966,-0.0554 4.32254,-0.15004 6.6356,-0.247zm-42.01232,0.28855l24.65955,0c-2.65615,0.93489 -5.59002,3.41408 -7.84183,9.17692c-2.05576,5.26077 -2.19598,12.3844 -2.19598,20.06319c0,13.1831 2.44921,27.26762 9.9289,30.0769l-24.665,0c2.64526,-0.93374 5.57641,-3.41177 7.8146,-9.17692c2.0435,-5.25616 2.21232,-12.38094 2.21232,-20.05512c0.00272,-13.18772 -2.46419,-27.27454 -9.91256,-30.08498zm-74.04537,-0.03116c2.59216,-0.04617 5.27281,-0.14196 8.06782,-0.24122c4.0557,-0.14312 8.24345,-0.29201 12.36994,-0.29201c8.22711,0 14.43114,0.61749 19.52288,1.9448c7.82821,2.0406 12.16028,6.56385 11.88527,12.4121c-0.33763,7.19634 -7.44021,13.9137 -16.51821,15.62535c-0.42068,0.07848 -0.76648,0.3301 -0.9176,0.67058c-0.15112,0.33933 -0.0953,0.72252 0.15656,1.01799l14.97027,17.63479c4.45187,5.26539 9.00585,9.12383 16.06622,10.57464l-15.28476,0l-24.16808,-28.29946c-0.24778,-0.29201 -0.65212,-0.45706 -1.08234,-0.44667c-1.22801,0.0404 -2.68338,0.08195 -4.16733,0.08195c-1.18853,0 -2.26814,-0.02539 -3.29738,-0.08079c-0.3458,-0.01731 -0.69705,0.08656 -0.95436,0.29085c-0.25595,0.20544 -0.40162,0.49053 -0.40162,0.78946c0,1.49813 -0.16201,3.37945 -0.32674,5.37158c-0.59767,7.04399 -1.34237,15.80656 3.45394,20.174c1.07689,0.9799 2.37705,1.68742 3.8896,2.11908l-23.29132,0c7.69752,-2.70079 11.17869,-16.16667 11.17869,-29.52405c0,-13.5282 -3.473,-27.16489 -11.15146,-29.82298z\"}/>\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <path className={\"fill\"} transform={\"translate(9,7),scale(0.3,0.3)\"} d={\"M245.928,84.493c-13.393-16.435-27.768-24.637-43.139-24.637c-10.873,0-21.072,4.354-30.619,13.117   c-6.626-5.045-13.782-8.627-21.478-10.745c-1.591-20.661-10.733-35.643-27.436-44.942l-17.491,12.351   c11.39,7.412,18.021,17.745,19.876,31c-11.398,1.33-22.001,5.568-31.811,12.713c-9.802-9.005-20.275-13.495-31.403-13.495   c-15.644,0-29.696,8.202-42.15,24.637C6.755,101.449,0,121.479,0,144.535c0,5.828,0.532,11.684,1.583,17.498   c3.978,23.857,15.116,44.676,33.402,62.42c16.434,16.184,31.681,24.263,45.731,24.263c0.332,0,0.674-0.012,1.016-0.035   c16.083-4.937,33.156-7.599,50.857-7.599c14.784,0,29.134,1.858,42.833,5.346l-0.074-0.098l0.323,0.16   c2.618,0.67,5.21,1.404,7.78,2.193c0.348,0.021,0.696,0.033,1.043,0.033c14.053,0,29.154-8.079,45.328-24.263v-0.001   c17.755-17.744,29.156-38.562,34.189-62.42c1.34-6.616,1.99-13.117,1.99-19.48C266.002,120.274,259.306,100.924,245.928,84.493z\"}/>\r\n  ),\r\n  level3: (\r\n    <path className={\"fill\"} transform={\"translate(18,10),scale(0.13,0.13)\"} d={\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954  c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673  c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939  c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954  c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689  c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1  c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715  c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z\"}/>\r\n  ),\r\n  level4: (\r\n    <path className={\"fill\"} transform={\"translate(15,0),scale(0.25)\"} d={\"M277.531,179.745c-0.045-10.481-9.676-33.631-92.951-35.979l-31.034-68.857l42.085,17.586 l-63.13-67.928c-8.62-6.047-37.77,80.794-49.648,117.583l0,0c-8.354,1.318-34.706,6.113-55.001,16.797 c-19.8,10.395-30.244,19.572-27.386,32.326c-2.076,14.357,3.17,56.896,135.987,62.381 C179.174,255.423,285.918,226.942,277.531,179.745z M144.93,182.741c-67.228,4.734-72.835-13.954-72.835-13.954l6.106-13.264 c0,0,18.403,12.415,56.083,11.763c37.68-0.659,53.318-17.423,53.318-17.423l9.927,12.077 C195.098,177.688,144.93,182.741,144.93,182.741z\"}/>\r\n  ),\r\n});\r\n\r\nclass CellDefinitions extends PureComponent {\r\n  static cellDefinitionsStyleMap = {\r\n    'original': OriginalCellDefinitions,\r\n    'halloween': HalloweenCellDefinitions,\r\n  };\r\n\r\n\trender() {\r\n  \treturn Object.values(this.constructor.cellDefinitionsStyleMap)\r\n    \t.map(CellDefinitionsStyle =>\r\n        <CellDefinitionsStyle key={CellDefinitionsStyle.displayName || CellDefinitionsStyle.name} />);\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl, gameType,\r\n      theme: {cells = 'original', pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translate = constants.translate(gameType, {x, y});\r\n    return (\r\n    \t<g transform={`translate(${translate.x},${translate.y})`}>\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`#cell-${cells}-${i}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`#cell-${cells}-${i}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n        <use\r\n          xlinkHref={`#cell-${cells}-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows, gameType,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  gameType={gameType}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces gameType={gameType} rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {gameType, rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(gameType.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            gameType={gameType}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {gameType, cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translateTo = constants.translate(gameType, position);\r\n    const translateFrom = constants.translate(gameType, previousPosition);\r\n    return (\r\n      <g transform={`translate(${translateTo.x},${translateTo.y})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${translateFrom.x} ${translateFrom.y}`}\r\n          to={`${translateTo.x} ${translateTo.y}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      gameType, cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl,\r\n    } = this.props;\r\n    return (\r\n      <Cell\r\n        gameType={gameType}\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        gameType={game.constructor}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {gameType, small, medium, player, applicableSettings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={applicableSettings}\r\n        allowControl={allowControl}\r\n        gameType={gameType}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    puzzlesInfo: client.puzzlesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onPuzzles: this.gotPuzzles,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onPuzzles: this.gotPuzzles,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotPuzzles = puzzlesInfo => {\r\n    this.setState({puzzlesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, puzzlesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        puzzlesInfo={puzzlesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, tournamentsById, allPuzzles, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.Classic.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n    const puzzles = !terse && user ? allPuzzles.filter(puzzle => (\r\n      puzzle.meta.gameId === game.id\r\n      && (puzzle.userId === user.id || (user.puzzlesStats[puzzle.id] && user.puzzlesStats[puzzle.id].meta.won))\r\n    )) : null;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={applicableSettings}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n              {\" \"}\r\n              {puzzles.length ? <Label content={`${puzzles.length} puzzles`} icon={'puzzle'} />  : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  allPuzzles: PropTypes.array.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {applicableSettings, user, usersById, tournamentsById, allPuzzles, games, terse, live, selectLiveGame, currentGameId, pageSize, reverse} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    let visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize);\r\n    if (reverse) {\r\n      visibleGames = visibleGames.reverse();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              allPuzzles={allPuzzles}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n              applicableSettings={applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  allPuzzles: PropTypes.array.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n  reverse: PropTypes.bool.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n  reverse: true,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport class PuzzleCard extends Component {\r\n  selectPuzzle = () => {\r\n    this.props.selectPuzzle(this.props.puzzle);\r\n  };\r\n\r\n  get userPuzzle() {\r\n    const {user, puzzle} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n    return user.puzzles[puzzle.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, gamesById, puzzle, currentPuzzleId} = this.props;\r\n    const userPuzzle = this.userPuzzle;\r\n\r\n    const creator = usersById[puzzle.userId];\r\n    const userIsCreator = !!user && puzzle.userId === user.id;\r\n    const game = gamesById[puzzle.meta.gameId];\r\n    const playerA = game ? usersById[game.userIds[0]] : null;\r\n    const playerB = game ? usersById[game.userIds[1]] : null;\r\n    const userInProgress = !!userPuzzle && userPuzzle.meta.started && !userPuzzle.meta.won;\r\n    const userSolvedPuzzle = !!userPuzzle && userPuzzle.meta.won;\r\n    const userMadeMistakes = !!userPuzzle && !!userPuzzle.meta.mistakes;\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/puzzle/${puzzle.id}`}\r\n        onClick={this.selectPuzzle}\r\n        style={{\r\n          ...(puzzle.id === currentPuzzleId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {utils.getPuzzleTitle(puzzle)}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[puzzle.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[puzzle.meta.difficulty],\r\n              }}\r\n              content={`${puzzle.meta.difficulty}/${puzzle.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[puzzle.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userInProgress ? (\r\n              <Label\r\n                  icon={{name: 'play', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ? `Started (${userPuzzle.meta.mistakes} mistakes)` : 'Started'}\r\n              />\r\n            ) : userSolvedPuzzle ? (\r\n              <Label\r\n                  icon={{name: 'trophy', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ?`Solved with ${userPuzzle.meta.mistakes} mistakes` : 'Perfect'}\r\n              />\r\n            ) : userMadeMistakes ? (\r\n              <Label\r\n                  icon={{name: 'exclamation', color: 'orange'}}\r\n                  content={`${userPuzzle.meta.mistakes} mistakes`}\r\n              />\r\n            ) : null}\r\n            {user && puzzle.isMyPuzzle ? (\r\n              <Label\r\n                icon={(\r\n                  puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      puzzle.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()\r\n                    ? puzzle.meta.publishDatetime.fromNow() : (\r\n                      puzzle.meta.public\r\n                        ? puzzle.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={puzzle.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            {puzzle.usersStats && puzzle.usersStats.attempted ? (\r\n              <Label\r\n                icon={'user'}\r\n                content={`${puzzle.usersStats.averagePerfectScore !== null ? puzzle.usersStats.averagePerfectScore : 'No perfect solve'} (${puzzle.usersStats.perfect}/${puzzle.usersStats.imperfect}/${puzzle.usersStats.attempted})`}\r\n                title={`${puzzle.usersStats.averagePerfectScore !== null ? `${puzzle.usersStats.averagePerfectScore} average user score` : 'No perfect solve'} (${puzzle.usersStats.perfect} perfect solves, out of ${puzzle.usersStats.imperfect} solves, out of ${puzzle.usersStats.attempted} attempts)`}\r\n              />\r\n            ) : null}\r\n            {game ? (\r\n              userSolvedPuzzle || userIsCreator ? (\r\n                <Label\r\n                  icon={'play'}\r\n                  content={`${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                  title={`From game between ${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                />\r\n              ) : (\r\n                <Label icon={'play'} content={'Solve to see game'} />\r\n              )\r\n            ) : null}\r\n            <Board\r\n              game={Game.Classic.fromCompressedPositionNotation(puzzle.startingPosition.position)}\r\n              medium\r\n              settings={applicableSettings}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n  puzzle: PropTypes.object.isRequired,\r\n  selectPuzzle: PropTypes.func.isRequired,\r\n  currentPuzzleId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nclass PuzzleList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById},\r\n      puzzles, selectPuzzle, currentPuzzleId, pageSize,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(puzzles.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visiblePuzzles = puzzles\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visiblePuzzles.map(puzzle => (\r\n            <PuzzleCard\r\n              key={puzzle.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              puzzle={puzzle}\r\n              selectPuzzle={selectPuzzle}\r\n              currentPuzzleId={currentPuzzleId}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  puzzles: PropTypes.array.isRequired,\r\n  selectPuzzle: PropTypes.func.isRequired,\r\n  currentPuzzleId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPuzzleList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(PuzzleList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport PuzzleList, {PuzzleCard} from \"./PuzzleList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n            {otherUser.puzzlesStats && otherUser.puzzlesStats.attempted ? (\r\n              <Label\r\n                icon={'puzzle'}\r\n                content={`${otherUser.puzzlesStats.perfectStars}⭐ (${otherUser.puzzlesStats.perfect}/${otherUser.puzzlesStats.imperfect}/${otherUser.puzzlesStats.attempted})`}\r\n                title={`${otherUser.puzzlesStats.perfectStars} total perfect stars (${otherUser.puzzlesStats.perfect} perfect puzzles, out of ${otherUser.puzzlesStats.imperfect} solved, out of ${otherUser.puzzlesStats.attempted} attempted)`}\r\n              />\r\n            ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {byId: gamesById, myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      puzzlesInfo: {otherUnsolved, puzzles, otherStarted, otherNotStarted, otherSolved},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <PuzzleCard\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              puzzle={otherUnsolved[0]}\r\n              selectPuzzle={this.props.selectLivePuzzle}\r\n              currentPuzzleId={null}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournamentsById={tournamentsById}\r\n                allPuzzles={puzzles}\r\n                games={items}\r\n                selectLiveGame={selectLiveGame}\r\n                applicableSettings={client.applicableSettings}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {puzzles ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let puzzlesList = [\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!puzzlesList.length) {\r\n              puzzlesList = [\r\n                {key: 'puzzles', label: \"Puzzles\", items: puzzles},\r\n              ];\r\n            }\r\n            return puzzlesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <PuzzleList selectPuzzle={this.props.selectLivePuzzle} puzzles={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(this.state.game.constructor.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.constructor !== prevProps.game.constructor\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.client.applicableSettings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.client.applicableSettings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !!(!this.props.submit && !selectedGame && game.previous);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={displayGame === game ? (\r\n          this.props.submit ? this.props.game.chainCount : (\r\n            this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n          )\r\n        ) : 0}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={client.applicableSettings}\r\n        animated={client.applicableSettings.theme.animations}\r\n        showArrows={client.applicableSettings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  submitAndDisableConfirm = () => {\r\n    this.props.submit();\r\n    this.props.client.updateSettings({...this.props.user.settings, confirmSubmitMoves: false});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, applicableSettings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canAnyPlayerSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const previousGame = canAnyPlayerSubmit ? game.previous : game;\r\n    const isPlayersTurn = previousGame.nextPlayer === player;\r\n    const playerWon = previousGame.winner === player;\r\n    const finished = previousGame.finished;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={finished || player === Game.PLAYER_B}\r\n        color={finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard\r\n                  gameType={game.constructor}\r\n                  medium\r\n                  applicableSettings={applicableSettings}\r\n                  player={player}\r\n                  allowControl={allowControl}\r\n                />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    applicableSettings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          {applicableSettings.confirmSubmitMoves ? (\r\n                            <Modal\r\n                              size={'mini'}\r\n                              trigger={\r\n                                <Button\r\n                                  positive\r\n                                  className={'attention'}\r\n                                >\r\n                                  Submit...\r\n                                </Button>\r\n                              }\r\n                              header={'Submit move'}\r\n                              content={\r\n                                <Modal.Content>\r\n                                  Are you sure you want to submit these moves?\r\n                                  <br />\r\n                                  <Board\r\n                                    game={game}\r\n                                    medium\r\n                                    settings={applicableSettings}\r\n                                    animated\r\n                                    showArrows\r\n                                  />\r\n                                </Modal.Content>\r\n                              }\r\n                              actions={[\r\n                                {key: 'never-ask-again', content: 'Never ask again', onClick: this.submitAndDisableConfirm},\r\n                                {key: 'cancel', negative: true, content: 'Cancel'},\r\n                                {key: 'ok', positive: true, content: 'Submit', onClick: submit},\r\n                              ]}\r\n                            />\r\n                          ) : (\r\n                            <Button\r\n                              positive\r\n                              className={'attention'}\r\n                              onClick={submit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          )}\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? {\r\n            key: 'take-move-back', content: (\r\n              <Button negative content={'Take move back'} onClick={takeBack}/>\r\n            ),\r\n          } : null,\r\n          !finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={applicableSettings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  applicableSettings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canAnyPlayerSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayPlayer = withClient(PlayPlayer);\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, applicableSettings, selectedGame, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={applicableSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu, Button} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.Classic.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.Classic.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  switchToClassic = () => {\r\n    this.switchTo(Game.Classic);\r\n  };\r\n\r\n  switchToHex = () => {\r\n    this.switchTo(Game.Hex);\r\n  };\r\n\r\n  switchTo = gameType => {\r\n    this.setState({\r\n      selectedGame: null,\r\n      game: gameType.create(),\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Button onClick={this.switchToClassic} content={'Switch to Classic'} disabled={game.constructor === Game.Classic}/>\r\n          <Button onClick={this.switchToHex} content={'Switch to Hex'} disabled={game.constructor === Game.Hex}/>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themeCellsOptions = [\r\n    {value: 'original', label: 'Original'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n    {value: 'halloween-witch-hat', label: 'Halloween: Witch Hat'},\r\n    {value: 'halloween-cauldron', label: 'Halloween: Cauldron'},\r\n    {value: 'halloween-bat', label: 'Halloween: Bat'},\r\n    {value: 'halloween-spider', label: 'Halloween: Spider'},\r\n    {value: 'halloween-cat', label: 'Halloween: Cat'},\r\n    {value: 'halloween-tombstone', label: 'Halloween: Tombstone'},\r\n    {value: 'halloween-pumpkin', label: 'Halloween: Pumpkin'},\r\n    {value: 'halloween-ghost', label: 'Halloween: Ghost'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateConfirmSubmitMoves = (e, {checked}) => {\r\n    this.props.updateSettings({confirmSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeUseTopicalTheme = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {useTopicalTheme: checked}});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  updateThemeCells = (e, {value}) => {\r\n    this.props.updateSettings({theme: {cells: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, confirmSubmitMoves, enableNotifications, theme}, applicableSettingsName, applicableSettingsOverride} = this.props;\r\n    const {useTopicalTheme, cells = 'original', pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Confirm before submitting online moves'}\r\n                  name={'confirmSubmitMoves'}\r\n                  checked={confirmSubmitMoves}\r\n                  onChange={this.updateConfirmSubmitMoves}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Use topical theme when available'}\r\n                    name={'theme.useTopicalTheme'}\r\n                    checked={useTopicalTheme}\r\n                    onChange={this.updateThemeUseTopicalTheme}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  {applicableSettingsName ? (\r\n                    <Fragment>\r\n                      {applicableSettingsName}\r\n                      <br/>\r\n                      {this.themeDemoBoard(applicableSettingsOverride.theme)}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Cells:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                          </Grid.Row>\r\n                        {this.themeCellsOptions.map(option => (\r\n                          <Grid.Row key={`theme-cells-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.cells'}\r\n                                value={option.value}\r\n                                checked={cells === option.value}\r\n                                onChange={this.updateThemeCells}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({cells: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Colours:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  applicableThemeName: PropTypes.string,\r\n  applicableSettingsOverride: PropTypes.object,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.client.settings,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n    const {client} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: (\r\n          <SettingsContent\r\n            settings={settings}\r\n            updateSettings={this.updateSettings}\r\n            applicableSettingsName={client.applicableSettingsName}\r\n            applicableSettingsOverride={client.applicableSettingsOverride}\r\n          />\r\n        )}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById}, puzzlesInfo: {puzzles: allPuzzles},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          allPuzzles={allPuzzles}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n          reverse={false}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n    const puzzles = user ? allPuzzles.filter(puzzle => (\r\n      puzzle.meta.gameId === game.id\r\n      && (puzzle.userId === user.id || (user.puzzlesStats[puzzle.id] && user.puzzlesStats[puzzle.id].meta.won))\r\n    )) : [];\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              (user && user.admin) ? {key: 'edit', content: 'Create Puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/create?position=${(selectedGame || gameGame).positionNotation}&gameId=${game ? game.id : ''}`, color: 'green', active: true,\r\n                title: 'Click to create a puzzle from this position', target: '_blank'} : null,\r\n              (user && user.admin) ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n          {puzzles.length ? (\r\n            <Grid.Row>\r\n              <Menu stackable size={'massive'} items={puzzles.map(puzzle => ({\r\n                key: puzzle.id, content: (\r\n                  <NavLink to={`/puzzle/${puzzle.id}`}>\r\n                    <Icon\r\n                      name={{1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[puzzle.meta.difficulty]}\r\n                      color={{1: 'green', 2: 'orange', 3: 'red'}[puzzle.meta.difficulty]}\r\n                    />\r\n                    {\" \"}\r\n                    {utils.getPuzzleTitle(puzzle)}\r\n                  </NavLink>\r\n                )\r\n              }))} />\r\n            </Grid.Row>\r\n          ) : null}\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, client, user, usersInfo: {byId},\r\n      gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById}, puzzlesInfo: {puzzles: allPuzzles},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList\r\n                  user={user}\r\n                  usersById={byId}\r\n                  tournamentsById={tournamentsById}\r\n                  allPuzzles={allPuzzles}\r\n                  games={items}\r\n                  selectLiveGame={selectLiveGame}\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!client.applicableSettings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo, puzzlesInfo: {puzzles: allPuzzles},\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  allPuzzles={allPuzzles}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                  applicableSettings={client.applicableSettings}\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      allPuzzles={allPuzzles}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                      applicableSettings={client.applicableSettings}\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {client, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = client.applicableSettings;\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          gameType={Game.Classic}\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong>{\" and \"}\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.Classic.getPositionNotation(Game.Classic.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.Classic.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), urlError, position: Game.Classic.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.Classic.create(), urlError: false, position: Game.Classic.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.Classic.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.Classic.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.Classic.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.Classic.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.Classic.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    const positionNotation = Game.Classic.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition ? (\r\n              <div>\r\n                <Button\r\n                  content={'Use position'}\r\n                  primary\r\n                  onClick={this.usePosition}\r\n                  disabled={!!positionError}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.Classic.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass CreatePuzzle extends Component {\r\n  state = {\r\n    editing: true,\r\n    puzzle: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.initialPuzzle) {\r\n      this.onCreatePuzzle(this.fillGames(this.props.initialPuzzle));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.puzzlesInfo.mine !== this.props.puzzlesInfo.mine) {\r\n      if (this.state.puzzle && !this.state.puzzle.id) {\r\n        const prevPuzzles = this.getMatchingPuzzles(prevProps.puzzlesInfo.mine);\r\n        const puzzles = this.getMatchingPuzzles(this.props.puzzlesInfo.mine);\r\n        if (prevPuzzles.length === 0 && puzzles.length === 1) {\r\n          const [puzzle] = puzzles;\r\n          this.props.history.push(`/puzzle/${puzzle.id}/edit`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMatchingPuzzles(puzzles) {\r\n    const {puzzle: newPuzzle} = this.state;\r\n    return puzzles.filter(puzzle => (\r\n      puzzle.isMyPuzzle\r\n      && puzzle.startingPosition.position === newPuzzle.startingPosition.position\r\n      && puzzle.options.type === newPuzzle.options.type\r\n      && puzzle.meta.source === newPuzzle.meta.source\r\n      && puzzle.meta.gameId === newPuzzle.meta.gameId\r\n      && puzzle.meta.public === newPuzzle.meta.public\r\n    ));\r\n  }\r\n\r\n  fillGames(puzzleStep, previousGame = null) {\r\n    puzzleStep = {...puzzleStep};\r\n    if (!puzzleStep.game && puzzleStep.position) {\r\n      if (previousGame && puzzleStep.moves) {\r\n        puzzleStep.game = previousGame.makeMoves(puzzleStep.moves);\r\n      } else {\r\n        puzzleStep.game = Game.Classic.fromCompressedPositionNotation(puzzleStep.position);\r\n      }\r\n    }\r\n    if (puzzleStep.startingPosition) {\r\n      puzzleStep.startingPosition = this.fillGames(puzzleStep.startingPosition, puzzleStep.game);\r\n    } else if (puzzleStep.playerResponses) {\r\n      puzzleStep.playerResponses = puzzleStep.playerResponses.map(nextStep => this.fillGames(nextStep, puzzleStep.game));\r\n    } else if ('puzzleResponse' in puzzleStep) {\r\n      if (puzzleStep.puzzleResponse) {\r\n        puzzleStep.puzzleResponse = this.fillGames(puzzleStep.puzzleResponse, puzzleStep.game);\r\n      }\r\n    } else {\r\n      throw new Error('Cannot find type of step');\r\n    }\r\n\r\n    return puzzleStep;\r\n  }\r\n\r\n  onCreatePuzzle = puzzle => {\r\n    this.setState({\r\n      editing: false,\r\n      puzzle,\r\n      currentStep: puzzle.startingPosition,\r\n      tree: this.getTree(puzzle.startingPosition),\r\n      game: puzzle.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.puzzleResponse && currentStep.puzzleResponse.position === newGame.positionNotation) {\r\n        return currentStep.puzzleResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['puzzle', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['puzzleResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicatePuzzle(pathIndexes) {\r\n    const {puzzle} = this.state;\r\n\r\n    const newPuzzle = {\r\n      ...puzzle,\r\n      startingPosition: {...puzzle.startingPosition},\r\n    };\r\n    let newModifyingStep = newPuzzle.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newPuzzle, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        puzzleResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.puzzleResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.puzzleResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newPuzzle, newModifyingStep} = this.duplicatePuzzle(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      puzzle: newPuzzle,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newPuzzle.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.puzzle.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.puzzleResponse) {\r\n        return [treePath.concat(lastTreeStep.puzzleResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newPuzzle, newModifyingStep} = this.duplicatePuzzle(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      puzzle: newPuzzle,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newPuzzle.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editPuzzle = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createPuzzle = () => {\r\n    const cleanedPuzzle = JSON.parse(JSON.stringify(this.state.puzzle, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createPuzzle(cleanedPuzzle);\r\n  };\r\n\r\n  updatePuzzle = () => {\r\n    const cleanedPuzzle = JSON.parse(JSON.stringify(this.state.puzzle, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.updatePuzzle(cleanedPuzzle);\r\n  };\r\n\r\n  createOrUpdatePuzzle = () => {\r\n    if (this.state.puzzle.id) {\r\n      this.updatePuzzle();\r\n    } else {\r\n      this.createPuzzle();\r\n    }\r\n  };\r\n\r\n  discardPuzzle = () => {\r\n    if (this.state.puzzle.id) {\r\n      this.props.history.push(`/puzzle/${this.state.puzzle.id}`);\r\n    } else {\r\n      this.setState({\r\n        editing: true,\r\n        puzzle: null,\r\n        currentStep: null,\r\n        tree: null,\r\n        game: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client, gamesInfo: {byId: gamesById}} = this.props;\r\n    const {editing, puzzle, game, tree, currentStep} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editing && (!puzzle || puzzle.isMyPuzzle)) {\r\n      return (\r\n        <PuzzleForm initialPuzzle={puzzle} onCreatePuzzle={this.onCreatePuzzle} gamesById={gamesById} />\r\n      )\r\n    }\r\n\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getPuzzleTitle(puzzle)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(puzzle.meta.difficulty, puzzle.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{puzzle.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editPuzzle}>Edit</Button>\r\n            <Button positive onClick={this.createOrUpdatePuzzle}>{puzzle.id ? 'Update' : 'Create'}</Button>\r\n            <Button negative onClick={this.discardPuzzle}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[puzzle.options.initialPlayer]: 'Player', [Game.OTHER_PLAYER[puzzle.options.initialPlayer]]: 'Puzzle'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === puzzle} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCreatePuzzle.propTypes = {\r\n  initialPuzzle: PropTypes.object,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nclass PuzzleForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    puzzle: this.props.initialPuzzle || {\r\n      isMyPuzzle: true,\r\n      options: {\r\n        initialPlayer: Game.PLAYER_A,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        gameId: null,\r\n        game: null,\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: Game.Classic.create().positionNotation,\r\n        game: Game.Classic.create(),\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n      gameId: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (!this.props.initialPuzzle) {\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n      }\r\n    }\r\n    const gameId = params.get('gameId');\r\n    if (gameId) {\r\n      this.setValue(null, {name: 'meta.gameId', value: gameId});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gamesById !== this.props.gamesById) {\r\n      this.onValueSet('meta.gameId');\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const puzzle = {\r\n        ...state.puzzle,\r\n      };\r\n      let newPuzzleToChange = puzzle;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newPuzzleToChange = newPuzzleToChange[part] || {};\r\n      }\r\n      newPuzzleToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {puzzle};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.puzzle.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.Classic.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.Classic.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          puzzle: {\r\n            ...state.puzzle,\r\n            options: {\r\n              ...state.puzzle.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.puzzle.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    } else if (name === 'options.type') {\r\n      this.setState(state => {\r\n        switch (state.puzzle.options.type) {\r\n          case 'mate':\r\n            return _.merge({}, {puzzle: state.puzzle}, {\r\n              puzzle: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          case 'avoidMate':\r\n            return _.merge({}, {puzzle: state.puzzle}, {\r\n              puzzle: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          default:\r\n            return null;\r\n        }\r\n      });\r\n    } else if (name === 'meta.gameId') {\r\n      this.setState(state => {\r\n        const game = this.props.gamesById[state.puzzle.meta.gameId];\r\n        return _.merge({}, {puzzle: state.puzzle}, {\r\n          error: {\r\n            gameId: !game && state.puzzle.meta.gameId ? 'There is no game with such an ID' : null,\r\n          },\r\n          puzzle: {\r\n            meta: {\r\n              game: game ? Game.Classic.deserialize(game.game) : null,\r\n            },\r\n          },\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  createPuzzle = () => {\r\n    const {puzzle, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreatePuzzle(puzzle);\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {client, initialPuzzle} = this.props;\r\n    const {editingPosition, puzzle, error} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          initialPositionNotation={puzzle.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a puzzle</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createPuzzle}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={puzzle.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={puzzle.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={puzzle.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={puzzle.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={puzzle.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {puzzle.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={puzzle.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n                {key: 'avoidMate', value: 'avoidMate', text: 'Avoid Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={puzzle.options.type}\r\n            />\r\n            {puzzle.options.type === 'mate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Mate In: ${puzzle.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={puzzle.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : puzzle.options.type === 'avoidMate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Avoid Mate In: ${puzzle.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={puzzle.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : \"Unknown puzzle type\"}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${puzzle.meta.difficulty}/${puzzle.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={puzzle.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={puzzle.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'meta.gameId'}\r\n                control={Input}\r\n                label={'From game'}\r\n                placeholder={'Game ID'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.gameId || ''}\r\n                error={error.gameId}\r\n              />\r\n            </Form.Group>\r\n            {puzzle.meta.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={puzzle.meta.game}\r\n              />\r\n            ) : null}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={puzzle.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.publishDatetime ? puzzle.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialPuzzle ? 'Update' : 'Create'} />\r\n          </Form>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleForm.propTypes = {\r\n  initialPuzzle: PropTypes.object,\r\n  onCreatePuzzle: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n};\r\n\r\nPuzzleForm = withClient(PuzzleForm);\r\n\r\nexport default withRouter(withClient(CreatePuzzle));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Modal} from \"semantic-ui-react\";\r\nimport CreatePuzzle from \"./CreatePuzzle\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass EditPuzzle extends Component {\r\n  get puzzle() {\r\n    const {match, puzzlesInfo: {byId}} = this.props;\r\n    const puzzle = byId[match.params.id];\r\n    return puzzle;\r\n  }\r\n\r\n  dismissUrlPuzzleError = () => {\r\n    this.props.history.push('/puzzle');\r\n  };\r\n\r\n  render() {\r\n    const puzzle = this.puzzle;\r\n    if (!puzzle || !puzzle.isMyPuzzle) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlPuzzleError}\r\n            header={'Could not find puzzle'}\r\n            content={'This puzzle cannot be found. Please check that you copied the full URL, or perhaps the puzzle was deleted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find puzzle\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CreatePuzzle initialPuzzle={puzzle} />\r\n    );\r\n  }\r\n}\r\n\r\nEditPuzzle.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(EditPuzzle));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Menu, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/puzzles.css\";\r\nimport PuzzleList from \"./PuzzleList\";\r\nimport {Link, NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreatePuzzle from \"./CreatePuzzle\";\r\nimport EditPuzzle from \"./EditPuzzle\";\r\nimport * as utils from \"../utils\";\r\nimport {GameCard} from \"./GameList\";\r\n\r\nclass Puzzles extends Component {\r\n  render() {\r\n    const {user, puzzlesInfo: {otherStarted, otherNotStarted, otherSolved, myPublic, myPrivate}} = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            {(user && user.admin) ? (\r\n              <Segment>\r\n                <Link to={`${this.props.match.path}/create`}><Button content={'Create Puzzle'} /></Link>\r\n              </Segment>\r\n            ) : null}\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n              {key: 'my-public', label: \"My Public Puzzles\", items: myPublic},\r\n              {key: 'my-private', label: \"My Private Puzzles\", items: myPrivate},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <PuzzleList selectPuzzle={this.props.selectLivePuzzle} puzzles={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/create`}>\r\n            <CreatePuzzle />\r\n          </Route>\r\n        ) : null}\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/:id/edit`}>\r\n            <EditPuzzle />\r\n          </Route>\r\n        ) : null}\r\n        <Route exact path={`${this.props.match.path}/:id`}>\r\n          <PuzzlePlayer\r\n            selectLiveGame={this.props.selectLiveGame}\r\n            selectLivePuzzle={this.props.selectLivePuzzle}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzles.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  livePuzzle: PropTypes.object,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PuzzlePlayer extends Component {\r\n  state = {\r\n    puzzleId: this.puzzle ? this.puzzle.id : null,\r\n    game: this.getResumedPuzzleGame(),\r\n    submittedGame: null,\r\n    path: this.puzzle ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get puzzle() {\r\n    const {match, puzzlesInfo: {byId}} = this.props;\r\n    const puzzle = byId[match.params.id];\r\n    return puzzle;\r\n  }\r\n\r\n  get userPuzzle() {\r\n    const puzzle = this.puzzle;\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.puzzles[puzzle.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: puzzle.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const puzzle = this.puzzle;\r\n\r\n    if (puzzle) {\r\n      this.props.selectLivePuzzle(puzzle);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const puzzle = this.puzzle;\r\n\r\n    if (puzzle && prevState.puzzleId !== puzzle.id) {\r\n      this.props.selectLivePuzzle(puzzle);\r\n      this.setState({\r\n        puzzleId: puzzle.id,\r\n        game: this.getResumedPuzzleGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!puzzle && this.state.puzzleId) {\r\n      this.setState({\r\n          puzzleId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (puzzle && this.props.user && this.state.submittedGame) {\r\n      this.updatePuzzle(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updatePuzzle(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedPuzzleGame() {\r\n    const userPuzzle = this.userPuzzle;\r\n    if (!userPuzzle) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.Classic.fromCompressedPositionNotation(userPuzzle.startingPosition.position);\r\n    let userPuzzleStep = userPuzzle.startingPosition;\r\n    while (userPuzzleStep) {\r\n      const lastPlayerResponse = userPuzzleStep.playerResponses[userPuzzleStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.puzzleResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.puzzleResponse.moves);\r\n      userPuzzleStep = lastPlayerResponse.puzzleResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updatePuzzle(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const puzzle = this.puzzle;\r\n    const userPuzzle = this.userPuzzle;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userPuzzleStep = userPuzzle.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userPuzzleStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userPuzzleStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitPuzzleMove(puzzle, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.puzzleResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userPuzzleStep = validPlayerResponse.puzzleResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userPuzzleStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  dismissUrlPuzzleError = () => {\r\n    this.props.selectLivePuzzle(null);\r\n  };\r\n\r\n  close = () => {\r\n    this.props.selectLivePuzzle(null);\r\n  };\r\n\r\n  sharePuzzle = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const puzzle = this.puzzle;\r\n      navigator.share({\r\n        title: `Thyra Online - Solve puzzle ${utils.getPuzzleTitle(puzzle)}`,\r\n        text: `Solve Santorini puzzle`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const puzzle = this.puzzle;\r\n    if (!puzzle) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlPuzzleError}\r\n            header={'Could not find puzzle'}\r\n            content={'This puzzle cannot be found. Please check that you copied the full URL, or perhaps the puzzle was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find puzzle\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo: {byId: tournamentsById},\r\n      puzzlesInfo: {puzzles: allPuzzles},\r\n      location, selectLiveGame,\r\n    } = this.props;\r\n    const userIsCreator = !puzzle.id || (!!user && puzzle.userId === user.id);\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={utils.getPuzzleTitle(puzzle)} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.sharePuzzle, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to puzzle'},\r\n              (puzzle.isMyPuzzle ? {key: 'edit', content: 'Edit puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/${puzzle.id}/edit`, color: 'green', active: true,\r\n                title: 'Click to edit the puzzle'} : null),\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getPuzzleTitle(puzzle)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(puzzle.meta.difficulty, puzzle.meta.maxDifficulty)}</Header>\r\n              {puzzle.meta.source ? <Header as={'h4'}>{puzzle.meta.source}</Header> : null}\r\n              {puzzle.meta.gameId ? (\r\n                <Header as={'h4'}>\r\n                  {won || userIsCreator ? (\r\n                    <Fragment>\r\n                      From{\" \"}\r\n                      <GameCard\r\n                        user={null}\r\n                        usersById={usersById}\r\n                        tournamentsById={tournamentsById}\r\n                        allPuzzles={allPuzzles}\r\n                        game={gamesById[puzzle.meta.gameId]}\r\n                        selectLiveGame={selectLiveGame}\r\n                        terse\r\n                        live\r\n                        applicableSettings={client.applicableSettings}\r\n                      />\r\n                    </Fragment>\r\n                  ) : \"Solve puzzle to see source game\"}\r\n                </Header>\r\n              ) : null}\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          allowControl={[puzzle.options.initialPlayer]}\r\n          names={{[puzzle.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[puzzle.options.initialPlayer]]: 'Puzzle'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzlePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nPuzzlePlayer = withRouter(withClient(PuzzlePlayer));\r\n\r\nexport default withRouter(withClient(Puzzles));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Puzzles from \"./components/Puzzles\";\nimport * as utils from \"./utils\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    livePuzzle: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/game';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/tournament`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLivePuzzle = livePuzzle => {\n    let puzzleUrl;\n    if (livePuzzle) {\n      puzzleUrl = `/puzzle/${livePuzzle.id}`;\n    } else {\n      puzzleUrl = `/puzzle`;\n    }\n    if (puzzleUrl !== this.props.location.pathname) {\n      this.props.history.push(puzzleUrl);\n    }\n    if (this.state.livePuzzle === livePuzzle) {\n      return;\n    }\n    this.setState({livePuzzle});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, livePuzzle} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLivePuzzle={this.selectLivePuzzle} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          {menuItem: {icon: 'puzzle', content: livePuzzle ? utils.getPuzzleTitle(livePuzzle) : 'Puzzles'},\n          path: 'puzzle',\n          navigate: livePuzzle ? `puzzle/${livePuzzle.id}` : 'puzzle',\n          render: () => (\n            <Tab.Pane>\n              <Puzzles\n                puzzle={livePuzzle}\n                selectLiveGame={this.selectLiveGame}\n                selectLivePuzzle={this.selectLivePuzzle}\n              />\n            </Tab.Pane>\n          )},\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}