{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","onTournaments","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","getAvailableMoves","winningCell","find","_this4","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","Array","RA","RB","keys","sort","String","fromCharCode","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","_this$constructor","Arrow","diff","rotation","rotationMap","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","arrows","rowCount","columnCount","max","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","sortBy","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","isMoveAvailable","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this3$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","flipped","transpose","flipX","flipY","reverseConfig","reverseTransformCoordinates","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this5$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","animations","PlayerColourBoard","colours","Play","selectedGame","autoSubmitModal","submit","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","displayGame","isMyGame","tooShortToResign","Segment","textAlign","Grid","centered","Row","Play_PlayNavigation","Play_PlayPlayer","components_Board","Board_BoardTransformation","Statistic","Group","widths","Modal","trigger","Button","negative","header","actions","inverted","secondary","Play_PlayHistory","Header","color","label","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","attention","Board_PlayerColourBoard","positive","Checkbox","toggle","checked","item","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToPreviousMove","canGoToPreviousMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","gameIndexes","lastGameIndex","_this$gameIndexes2","_this$props5","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","gotTournaments","SubComponent","ClientWatcherForComponent","withClient","forComponent","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","render","Form","columns","verticalAlign","Column","Pane","floated","Field","option","radio","update","save","scrolling","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","components_Settings","open","onClose","active","href","components_Play","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","GameCard","selectLiveGame","usersById","terse","currentGameId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","Icon","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","UserCard","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","loading","Lobby_EditUser","hasPassword","winCount","gameCount","score","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","Input","action","LogIn","changeMergeUsers","logIn","_this$state2","modal","LogOut","logOut","_this$props4$usersInf","_this$props4$gamesInf","Lobby_LogIn","Lobby_LogOut","components_GameList","Lobby_UserList","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winnerUserId","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","getEditPositionUrl","assertThisInitialized","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","Board_SvgBoardBackground","Message","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54024cd7.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, numbers: ''},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.orderBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static dimensions = {x: 261.5, y: 532};\r\n  static offset = {x: 100, y: 125};\r\n\r\n  render() {\r\n    const {dimensions, offset} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n            `translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-white\"}>\r\n          <use xlinkHref={\"#arrow-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-black\"}>\r\n          <use xlinkHref={\"#arrow-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {from, to, colour} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(0,${constants.cellSize / 2})`,\r\n        ].join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <SvgBoardArrows game={game} transformation={transformation} />\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(_.flatten(rowsAndColumns.map(row => row.cells.filter(cell => cell.player))), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <PlayPlayer\r\n                player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n                canSubmit={false}\r\n                submit={this.props.submit ? this.submit : null}\r\n                changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n                game={canSubmit ? game.previous : game}\r\n                settings={settings}\r\n                names={names}\r\n                allowControl={allowControl}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Board\r\n                game={displayGame}\r\n                transformation={transformation}\r\n                makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n                minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n                  this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n                )}\r\n                allowControl={displayGame === game ? allowControl : undefined}\r\n                settings={settings}\r\n                animated={settings.theme.animations}\r\n                showArrows={settings.theme.arrows}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <PlayPlayer\r\n                player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n                canSubmit={canSubmit}\r\n                submit={this.props.submit ? this.submit : null}\r\n                changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n                game={canSubmit ? game.previous : game}\r\n                settings={settings}\r\n                names={names}\r\n                allowControl={allowControl}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <BoardTransformation onChange={this.onTransformationChange} />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {game, player, allowControl, names, settings, canSubmit, submit, changeAutoSubmitMoves} = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Button\r\n                          positive\r\n                          onClick={submit}\r\n                          className={'attention'}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      : 'Waiting for opponent'\r\n                  )\r\n              )\r\n          )},\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n        {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n        {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${game.compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play user={user} defaultSettings={client.settings} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <LogIn client={client} />\r\n        <LogOut client={client} />\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n            {menuItem: `${users.length} users`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={users}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Header, Icon, Label, Menu, Modal, Segment} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  getEditPositionUrl = () => {\r\n    const {gameGame} = this;\r\n    return `${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n    } = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: 'a',\r\n                href: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'edit', content: 'Edit position', icon: 'edit', as: 'a', href: this.getEditPositionUrl(),\r\n                color: 'green', active: true, title: 'Click to open hotseat with this game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n            ]}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <GameList user={user} selectLiveGame={selectLiveGame} games={myLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          {otherLiveGames.length ? (\r\n            <GameList user={user} selectLiveGame={selectLiveGame} games={otherLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          ) : null}\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {live, myLive}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={byId} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n          <Segment>\r\n            <Header as={'h2'}>Live games ({live.length})</Header>\r\n            <GameList user={user} usersById={byId} games={live} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n          client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}