{"version":3,"sources":["game/game.js","components/board.js","components/play.js","client/client.js","App.js","serviceWorker.js","index.js"],"names":["Game","cells","status","previous","lastMove","isNextMove","_this","this","Object","classCallCheck","Error","history","filter","game","canUndo","concat","fullHistory","moveCount","chainCount","allCells","values","map","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMoves","resignedPlayer","winner","getWinner","finished","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","serialize","_ref","Math","floor","JSON","stringify","undefined","arguments","length","available","coordinates","getAvailableCoordinates","winningCell","find","cell","player","level","_this2","_this3","getMovableAvailableMoves","_this4","maximumLevel","abs","_this5","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","defineProperty","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref2","checkCanMakeMove","objectSpread","worker","WORKER_FIRST","getEmptyCellsAvailableMoves","_ref3","WORKER_SECOND","createNext","PLAYER_A","getPlayerAvailableMoves","_ref4","to","_this6","fromCell","toCell","getBuildableAvailableMoves","_ref5","moveWorker","_ref6","_ref7","_ref8","deserialize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","allMovesAreAvailable","_this7","_this8","PLAYER_B","PLAYERS","Array","from","index","Board","makeMove","props","onSelect","_this$props","small","selected","clickable","allowControl","includes","react_default","a","createElement","className","classNames","editable","selectable","onClick","key","Component","defaultProps","Play","state","selectedGame","submit","setState","takeMoveBack","undo","newGame","create","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","propsGameIndex","findIndex","newHistory","slice","moves","console","log","resign","prevProps","resigning","names","_this$state","displayGame","isMyGame","react","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","negative","disabled","positive","Modal","trigger","header","content","actions","style","textAlign","board","toConsumableArray","reverse","previousGame","Header","as","_names","Client","gotUser","user","id","password","localStorage","setItem","onUser","gotUsers","users","usersById","onUsers","gotGames","games","onGames","getItem","window","io","on","warn","emit","unavailable","socket","location","hostname","getUser","name","checked","client","App","username","liveGame","liveGameGame","changeUsername","target","updateUsername","changeReadyToPlay","e","selectLiveGame","submitGameMove","myIndex","newLiveGame","onlineUsers","online","liveGames","pastGames","Container","text","Tab","menu","pointing","panes","menuItem","render","Pane","attached","Input","onChange","Checkbox","readyToPlay","List","bulleted","otherUser","Item","Label","Icon","otherGame","playerA","userIds","playerB","isUserPlayerA","isUserPlayerB","winnerUserId","userPlayer","components_play","pane","Boolean","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3038d4d5.chunk.js","sourcesContent":["class Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove;\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMoves, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMoves = availableMoves;\r\n    this.canUndo = canUndo;\r\n    this.resignedPlayer = resignedPlayer;\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMoves)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMoves = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMoves: this.availableMoves,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMoves: this.allMovesAreAvailable(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMoves[y] === undefined || this.availableMoves[y][x] === undefined) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  getAvailableCoordinates(availableMoves = this.availableMoves) {\r\n    return availableMoves\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)\r\n        .filter(coordinates => coordinates))\r\n      .reduce((total, current) => total.concat(current));\r\n  }\r\n\r\n  hasAvailableMove(availableMoves = this.availableMoves) {\r\n    return this.getAvailableCoordinates(availableMoves).length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMoves(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMoves(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMoves(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMoves(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMoves(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new Error(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new Error(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMoves[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMoves: this.availableMoves,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, null);\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new Error(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMoves: this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMoves: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMoves(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMoves: this.getMovableAvailableMoves(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMoves: this.getBuildableAvailableMoves(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMoves: this.getPlayerAvailableMoves(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    let {game, small, makeMove, onSelect, selected, allowControl} = this.props;\r\n    const clickable = allowControl.includes(game.nextPlayer);\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\"background\", {small, editable: !!makeMove && clickable, selectable: !!onSelect, selected})}\r\n        onClick={onSelect ? this.onSelect : null}\r\n      >\r\n        {game.rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => {\r\n              const available = game.availableMoves[cell.y][cell.x];\r\n              return (\r\n                <div\r\n                  key={`row-${cell.x}-${cell.y}`}\r\n                  className={classNames(\"cell\", `level-${cell.level}`, {available})}\r\n                  onClick={this.props.makeMove && available && clickable ? () => this.makeMove(cell) : null}\r\n                >\r\n                  <div className={classNames(\"level\", \"level-1\")}>\r\n                    <div className={classNames(\"level\", \"level-2\")}>\r\n                      <div className={classNames(\"level\", \"level-3\")}>\r\n                        {cell.player ? (\r\n                          <div className={classNames(\"worker\", `player-${cell.player}`)} />\r\n                        ) : cell.level === 4 ? (\r\n                          <div className={classNames(\"level\", \"level-4\")} />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  small: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./board\";\r\nimport {Button, Header, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.previous);\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.previous);\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const history = this.state.game.fullHistory;\r\n    const propsGameIndex = history.findIndex(game => game === this.props.game);\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n    console.log('Submitting moves', {history, propsGameIndex, newHistory, moves});\r\n    this.props.submit(moves);\r\n  };\r\n\r\n  resign = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {names, allowControl} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              !this.props.submit ? (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              ) : null\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={<Button positive onClick={this.submit} disabled={!!selectedGame || game === this.props.game || (game.nextPlayer === this.props.game.nextPlayer && !game.finished)}>Submit</Button>}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>Resign</Button>}\r\n                  header='Resign?'\r\n                  content='Are you sure you want to forfeit?'\r\n                  actions={[{key: 'resign', content: 'Resign', negative: true, onClick: this.resign}, { key: 'continue', content: 'Continue', positive: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board game={displayGame} makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove} allowControl={allowControl} />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","class Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.password = localStorage.getItem('user-password') || null;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(window.location.hostname === 'localhost' ? \"http://localhost:4000\" : \"https://thyra.basdekis.io\");\r\n    this.available = !this.socket.unavailable;\r\n    this.socket.on('connect', () => {\r\n      this.getUser();\r\n    });\r\n    this.socket.on('disconnect', () => {\r\n      this.gotUser(null);\r\n      this.gotUsers([]);\r\n    });\r\n\r\n    this.user = null;\r\n    this.onUser = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.users = [];\r\n    this.usersById = {};\r\n    this.onUsers = null;\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.games = [];\r\n    this.onGames = null;\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {id: this.id, password: this.password});\r\n  }\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.password = user.password;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-password', this.password);\r\n    }\r\n    this.user = user;\r\n    if (this.onUser) {\r\n      this.onUser(user);\r\n    }\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changeReadyToPlay(checked) {\r\n    this.socket.emit(\"change-ready-to-play\", !!checked);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    this.users = users;\r\n    this.usersById = {};\r\n    for (const user of this.users) {\r\n      this.usersById[user.id] = user;\r\n    }\r\n    if (this.onUsers) {\r\n      this.onUsers(users, this.usersById);\r\n    }\r\n  };\r\n\r\n  gotGames = games => {\r\n    this.games = games;\r\n    if (this.onGames) {\r\n      this.onGames(games);\r\n    }\r\n  };\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import React, {Component, Fragment} from 'react';\nimport 'fomantic-ui-css/semantic.css';\nimport {Button, Checkbox, Container, Header, Icon, Input, Label, List, Statistic, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport Game from \"./game/game\";\nimport Play from \"./components/play\";\nimport {client} from \"./client/client\";\n\nclass App extends Component {\n  state = {\n    game: Game.create(),\n    user: client.user,\n    username: client.user ? client.user.name : null,\n    users: client.users,\n    usersById: client.usersById,\n    games: client.games,\n    liveGame: null,\n    liveGameGame: null,\n  };\n\n  componentDidMount() {\n    client.onUser = user => {\n      this.setState({user, username: user ? user.name : null});\n      if (!user) {\n        this.setState({users: [], usersById: {}, games: [], liveGame: null, liveGameGame: null});\n      }\n    };\n    client.onUsers = (users, usersById) => {\n      if (this.state.user) {\n        const myIndex = users.findIndex(user => user.id === this.state.user.id);\n        if (myIndex >= 0) {\n          users = [users[myIndex], ...users.slice(0, myIndex), ...users.slice(myIndex + 1)];\n        }\n      }\n      this.setState({users, usersById});\n    };\n    client.onGames = games => {\n      this.setState({games});\n      if (this.state.liveGame) {\n        const newLiveGame = this.state.games.find(game => game.id === this.state.liveGame.id);\n        console.log('got games', this.state.liveGame, newLiveGame);\n        if (!newLiveGame) {\n          this.setState({liveGame: null, liveGameGame: null});\n        } else if (newLiveGame.chainCount !== this.state.liveGame.chainCount || newLiveGame.finished !== this.state.liveGame.finished) {\n          this.setState({liveGame: newLiveGame, liveGameGame: Game.deserialize(newLiveGame.game)});\n        }\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    client.onUser = null;\n    client.onUsers = null;\n    client.onGames = null;\n  }\n\n  makeMove = newGame => {\n    this.setState({game: newGame});\n  };\n\n  changeUsername = ({target: {value}}) => {\n    this.setState({username: value});\n  };\n\n  updateUsername = () => {\n    client.changeUsername(this.state.username);\n  };\n\n  changeReadyToPlay = (e, {checked}) => {\n    client.changeReadyToPlay(checked);\n  };\n\n  selectLiveGame = game => {\n    this.setState({liveGame: game, liveGameGame: Game.deserialize(game.game)});\n  };\n\n  submit = moves => {\n    client.submitGameMove(this.state.liveGame, moves);\n  };\n\n  render() {\n    const {game, user, username, users, usersById, games, liveGame, liveGameGame} = this.state;\n    const onlineUsers = users.filter(user => user.online);\n    const liveGames = games.filter(game => !game.finished);\n    const pastGames = games.filter(game => game.finished);\n    return (\n      <Container text>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n        <Tab menu={{pointing: true}} panes={[\n          client.available ? { menuItem: 'Lobby', render: () => (\n            <Tab.Pane attached={false}>\n              {user ? (\n                <Fragment>\n                  Welcome\n                  <Input value={username} onChange={this.changeUsername} />\n                  <Button onClick={this.updateUsername}>Change</Button>\n                  <br />\n                  <Checkbox label={\"Ready to play?\"} checked={user.readyToPlay} onChange={this.changeReadyToPlay} />\n                  <Tab menu={{pointing: true}} panes={[\n                    {menuItem: `${onlineUsers.length} users online`, render: () => (\n                      <List bulleted>\n                        {onlineUsers.map(otherUser => (\n                          <List.Item key={otherUser.id}>\n                            {otherUser.name}\n                            {otherUser.id === user.id ? <Label><Icon name={\"user\"} />Me</Label> : null}\n                            {otherUser.readyToPlay ? <Label><Icon name={\"checkmark\"} color={\"green\"} />Ready to play</Label> : null}\n                          </List.Item>\n                        ))}\n                      </List>\n                    )},\n                    {menuItem: `${liveGames.length} live games`, render: () => (\n                      <List bulleted>\n                        {liveGames.map(otherGame => {\n                          const playerA = usersById[otherGame.userIds[0]];\n                          const playerB = usersById[otherGame.userIds[1]];\n                          const isUserPlayerA = playerA.id === user.id;\n                          const isUserPlayerB = playerB.id === user.id;\n                          const isMyGame = isUserPlayerA || isUserPlayerB;\n                          return (\n                            <List.Item key={otherGame.id}>\n                              {playerA.name} {isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\n                              {\" vs \"}\n                              {playerB.name} {isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\n                              <Button onClick={() => this.selectLiveGame(otherGame)}>{isMyGame ? \"Play\" : \"Spectate\"}</Button>\n                            </List.Item>\n                          );\n                        })}\n                      </List>\n                    )},\n                    {menuItem: `${pastGames.length} past games`, render: () => (\n                      <List bulleted>\n                        {pastGames.map(otherGame => {\n                          const playerA = usersById[otherGame.userIds[0]];\n                          const playerB = usersById[otherGame.userIds[1]];\n                          const isUserPlayerA = playerA.id === user.id;\n                          const isUserPlayerB = playerB.id === user.id;\n                          return (\n                            <List.Item key={otherGame.id}>\n                              {playerA.name}\n                              {isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\n                              {otherGame.finished && isUserPlayerA && otherGame.winnerUserId === user.id ? <Label><Icon name={\"trophy\"} />Winner</Label> : null}\n                              {\" vs \"}\n                              {playerB.name}\n                              {isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\n                              {otherGame.finished && isUserPlayerA && otherGame.winnerUserId === user.id ? <Label><Icon name={\"trophy\"} />Winner</Label> : null}\n                              <Button onClick={() => this.selectLiveGame(otherGame)}>Review</Button>\n                            </List.Item>\n                          );\n                        })}\n                      </List>\n                    )},\n                  ]} />\n                </Fragment>\n              ) : \"Connecting to server...\"}\n            </Tab.Pane>\n          ) } : null,\n          client.available ? {menuItem: liveGame ? (liveGame.finished ? 'Review' : (user && liveGame.userIds.includes(user.id) ? 'Live Play' : 'Spectate')) : 'Live Play/Spectate/Review', render: () => {\n            if (!liveGame || !user) {\n              return <Segment>Choose a game from the lobby</Segment>;\n            }\n            const playerA = usersById[liveGame.userIds[0]];\n            const playerB = usersById[liveGame.userIds[1]];\n            const isUserPlayerA = playerA.id === user.id;\n            const isUserPlayerB = playerB.id === user.id;\n            const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\n            return (\n              <Fragment>\n                <Segment>\n                  <Statistic.Group widths={\"three\"} size={\"tiny\"}>\n                    <Statistic value={playerA.name} label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null} color={isUserPlayerA ? \"green\" : undefined}/>\n                    <Statistic label={\"vs\"}/>\n                    <Statistic value={playerB.name} label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null} color={isUserPlayerB ? \"green\" : undefined}/>\n                  </Statistic.Group>\n                </Segment>\n                <Play\n                  game={liveGameGame}\n                  names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\n                  allowControl={[userPlayer].filter(player => player)}\n                  submit={this.submit}\n                />\n              </Fragment>\n            );\n          }} : null,\n          { menuItem: 'Hotseat', render: () => <Tab.Pane attached={false}><Play game={game} makeMove={this.makeMove} /></Tab.Pane> },\n        ].filter(pane => pane)} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}