{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","components/Play.js","utils.js","client/withClient.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/Lobby.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","animations","arrows","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this4","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","getAvailableMoves","winningCell","find","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","Array","RA","RB","keys","sort","String","fromCharCode","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","_this$constructor","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","diff","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","max","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","isMoveAvailable","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this3$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","flipped","transpose","flipX","flipY","reverseConfig","reverseTransformCoordinates","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this5$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","Play","selectedGame","autoSubmitModal","submit","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","children","displayGame","isMyGame","tooShortToResign","controlsNode","Grid","Row","Play_PlayPlayer","Play_PlayNavigation","Board_BoardTransformation","boardNode","components_Board","Segment","textAlign","centered","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","Group","widths","Modal","trigger","Button","negative","header","actions","inverted","secondary","Play_PlayHistory","Header","color","label","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","attention","Board_PlayerColourBoard","positive","Checkbox","toggle","checked","item","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToPreviousMove","canGoToPreviousMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","gameIndexes","lastGameIndex","_this$gameIndexes2","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","active","href","components_Play","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","updateIcon","jdenticon","update","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","_len","args","_key","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","Icon","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","gameCount","createTournament","parseInt","setValue","Form","Field","control","Input","placeholder","required","defaultValue","min","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDate","TournamentList","visibleTournaments","TournamentList_TournamentCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","UserCard","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","loading","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","LogIn","_Component4","_getPrototypeOf4","_len3","_key3","changeMergeUsers","logIn","_this$state2","modal","float","LogOut","_Component5","_getPrototypeOf5","_len4","_key4","logOut","_this$props4$usersInf","_this$props4$gamesInf","render","components_GameList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","getEditPositionUrl","assertThisInitialized","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","App","liveGame","liveTournament","gameUrl","getLiveGameUrl","tournamentUrl","getLiveTournamentUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","Message","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0716427c.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, animations: true, arrows: true, numbers: 'obvious'},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = _.flatten(game.rowsAndColumns.map(row => row.cells.filter(isCellAvailable)));\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(_.flatten(rowsAndColumns.map(row => row.cells.filter(cell => cell.player))), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (this.props.allowControl.length === 2) {\r\n        return true;\r\n      }\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination, Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame, children,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            canSubmit={false}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            canSubmit={canSubmit}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n          this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n        )}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {game, player, allowControl, names, settings, canSubmit, submit, changeAutoSubmitMoves} = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Button\r\n                          positive\r\n                          onClick={submit}\r\n                          className={'attention'}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      : 'Waiting for opponent'\r\n                  )\r\n              )\r\n          )},\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n        {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n        {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${game.compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play user={user} defaultSettings={client.settings} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDate).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {label: \"My Live games\", items: myLive, color: 'green'},\r\n            {label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {label: \"My Past games\", items: myFinished},\r\n            {label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({label, items, color}) => (\r\n            {menuItem: {content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({label, items, color}) => (\r\n            {menuItem: {content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {label: \"Online Users\", items: online, color: 'green'},\r\n            {label: \"Offline Users\", items: offline},\r\n            {label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({label, items, color}) => (\r\n            {menuItem: {key: label, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  getEditPositionUrl = () => {\r\n    const {gameGame} = this;\r\n    return `${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n        />\r\n        {otherLiveGames.length ? (\r\n          <GameList\r\n            user={user}\r\n            selectLiveGame={selectLiveGame}\r\n            games={otherLiveGames}\r\n            usersById={usersById}\r\n            tournamentsById={tournamentsById}\r\n            terse\r\n            live\r\n            currentGameId={game ? game.id : null}\r\n          />\r\n        ) : null}\r\n      </Segment>\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: 'a',\r\n                href: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'edit', content: 'Edit position', icon: 'edit', as: 'a', href: this.getEditPositionUrl(),\r\n                color: 'green', active: true, title: 'Click to open hotseat with this game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n            ]}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {label: \"My Live games\", items: myLive, color: 'green'},\r\n              {label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {label: \"My Past games\", items: myFinished},\r\n              {label: \"Other Past games\", items: otherFinished},\r\n            ].filter(({items}) => items.length).map(({label, items, color}) => (\r\n              {menuItem: {content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {/*<Segment>*/}\r\n        {/*  <TournamentList*/}\r\n        {/*    user={user}*/}\r\n        {/*    usersById={usersById}*/}\r\n        {/*    currentTournamentId={tournament.id}*/}\r\n        {/*    tournaments={tournamentsInfo.myLive.concat(tournamentsInfo.myFuture)}*/}\r\n        {/*    selectLiveTournament={selectLiveTournament}*/}\r\n        {/*    terse*/}\r\n        {/*  />*/}\r\n        {/*  {(tournamentsInfo.otherLive.length || tournamentsInfo.otherFuture.length) ? (*/}\r\n        {/*    <TournamentList*/}\r\n        {/*      user={user}*/}\r\n        {/*      usersById={usersById}*/}\r\n        {/*      tournaments={tournamentsInfo.otherLive.concat(tournamentsInfo.otherFuture)}*/}\r\n        {/*      selectLiveTournament={selectLiveTournament}*/}\r\n        {/*      terse*/}\r\n        {/*    />*/}\r\n        {/*  ) : null}*/}\r\n        {/*</Segment>*/}\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n        {/*<Play*/}\r\n        {/*  user={user}*/}\r\n        {/*  defaultSettings={client.settings}*/}\r\n        {/*  otherUser={otherUser}*/}\r\n        {/*  changeSettings={this.changeSettings}*/}\r\n        {/*  game={gameGame}*/}\r\n        {/*  matchGame={game}*/}\r\n        {/*  names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}*/}\r\n        {/*  allowControl={[userPlayer].filter(player => player)}*/}\r\n        {/*  submit={this.submit}*/}\r\n        {/*  challengeUser={this.challengeUser}*/}\r\n        {/*  stopChallengeUser={this.stopChallengeUser}*/}\r\n        {/*  challengedUser={challengedUser}*/}\r\n        {/*/>*/}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({label, items, color}) => (\r\n              {menuItem: {content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  getLiveTournamentUrl(tournament) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/tournament/${tournament.id}`;\n  }\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = this.getLiveTournamentUrl(liveTournament);\n    } else {\n      tournamentUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n          client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: onlineTournamentLabel, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}