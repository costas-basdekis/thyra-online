{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","onDisconnect","gotUser","user","id","password","localStorage","setItem","onUser","gotUsers","usersInfo","users","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","io","on","console","warn","emit","unavailable","socket","process","available","callbacks","_i","_arr","length","name","push","_i2","_arr2","_","pull","appVersion","settings","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","index","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","Game","cells","status","previous","lastMove","isNextMove","Error","history","canUndo","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMoves","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","serializeCompact","serialize","_ref","Math","floor","JSON","stringify","arguments","coordinates","getAvailableCoordinates","winningCell","find","cell","player","level","_this4","_this5","getMovableAvailableMoves","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","defineProperty","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref2","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMoves","_ref3","WORKER_SECOND","createNext","PLAYER_A","getPlayerAvailableMoves","_ref4","_this8","fromCell","toCell","getBuildableAvailableMoves","_ref5","moveWorker","_ref6","_ref7","serialized","deserializeCompact","deserializeVerbose","_ref8","_ref9","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailable","_this9","_this10","PLAYER_B","PLAYERS","Array","flatten","RA","RB","keys","sort","String","fromCharCode","BoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","allowControl","children","_settings$theme","theme","scheme","rotated","rounded","numbers","classNames","small-board","medium-board","editable","selectable","theme-subtle","theme-pastel","theme-green","theme-rotated","theme-rounded","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","Board_BoardCell","undo","onClick","BoardCell","displayLevel","ThemeDemoBoard","_this$props3","Board_BoardBackground","demoRowsAndColumns","Board","takeMoveBack","minChainCount","_this$props4","isGameUndoable","Play","state","selectedGame","submit","setState","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","propsGameIndex","changeAutoSubmitMoves","autoSubmitMoves","changeSettings","canSubmit","prevProps","prevState","resigning","otherUser","challengeUser","stopChallengeUser","names","_this$state","displayGame","isMyGame","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","disabled","positive","attention","Modal","trigger","header","actions","style","textAlign","components_Board","reverse","previousGame","Header","_names","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","username","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","possibleConstructorReturn","getPrototypeOf","apply","inherits","withClient","forComponent","SettingsContent","themeSchemeOptions","themeNumbersOptions","updateAutoSubmitMove","e","checked","updateSettings","updateEnableNotifications","enableNotifications","updateThemeRotated","updateThemeRounded","updateThemeNumbers","updateThemeScheme","_this$props$settings","_this$props$settings$","pointing","attached","render","Form","Checkbox","onChange","Grid","stackable","columns","verticalAlign","Row","Column","Board_ThemeDemoBoard","width","floated","Field","option","radio","update","save","Label","Settings_SettingsContent","error","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","position","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","ref","React","createRef","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","UserList","readyToPlayUsers","readyToPlayMeUsers","Card","maxHeight","overflowY","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Content","components_HashedIcon","Lobby_EditUserName","Meta","extra","EditUserName","changeUsername","target","updateUsername","Input","GameList","usersById","gameGame","playerA","playerB","nextPlayerUser","isUserPlayerA","isUserPlayerB","winnerUser","selectLiveGame","_this$props4$usersInf","_this$props4$gamesInf","centered","Lobby_GameList","Lobby_UserList","Pane","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","_this$playersInfo","playersInfo","preventDefault","_this$playersInfo2","Value","OnlineGame","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb1abb47.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 1;\r\n\r\nclass Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.password = localStorage.getItem('user-password') || null;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.onConnect = [];\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.onDisconnect = [];\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {appVersion, id: this.id, password: this.password});\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.password = user.password;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-password', this.password);\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (index === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMoves, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMoves = availableMoves;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMoves)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMoves = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMoves: this.availableMoves,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMoves: this.allMovesAreAvailable(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMoves[y] === undefined || this.availableMoves[y][x] === undefined) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  getAvailableCoordinates(availableMoves = this.availableMoves) {\r\n    return availableMoves\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)\r\n        .filter(coordinates => coordinates))\r\n      .reduce((total, current) => total.concat(current));\r\n  }\r\n\r\n  hasAvailableMove(availableMoves = this.availableMoves) {\r\n    return this.getAvailableCoordinates(availableMoves).length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMoves(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMoves(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMoves(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMoves(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMoves(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new Error(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new Error(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMoves[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMoves: this.availableMoves,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new Error(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMoves: this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMoves: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMoves(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMoves: this.getMovableAvailableMoves(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMoves: this.getBuildableAvailableMoves(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMoves: this.getPlayerAvailableMoves(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, children, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, rotated, rounded, numbers}} = settings;\r\n\r\n    className = classNames(\"background\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'theme-subtle': scheme === 'subtle',\r\n      'theme-pastel': scheme === 'pastel',\r\n      'theme-green': scheme === 'green',\r\n      'theme-rotated': rotated,\r\n      'theme-rounded': rounded,\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n    if (!children) {\r\n      children = (\r\n        rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <BoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                allowControl={allowControl}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <div className={className} onClick={onSelect}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  children: PropTypes.node,\r\n  rowsAndColumns: PropTypes.array,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass BoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.availableMoves[cell.y][cell.x];\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    let {game, allowControl, onSelect, makeMove} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={this.isGameUndoable()}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={game.rowsAndColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {Button, Header, Icon, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const history = this.state.game.fullHistory;\r\n    const propsGameIndex = history.findIndex(game => game === this.props.game);\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n    this.props.submit(moves);\r\n  };\r\n\r\n  resign = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    const autoSubmitMoves = !this.props.user.settings.autoSubmitMoves;\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: autoSubmitMoves});\r\n    if (autoSubmitMoves && this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {user, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names, allowControl} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? <Button content={'Auto submit move'} color={user.settings.autoSubmitMoves ? 'green' : 'yellow'} onClick={this.changeAutoSubmitMoves} /> : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>Resign</Button>}\r\n                  header='Resign?'\r\n                  content='Are you sure you want to forfeit?'\r\n                  actions={[{key: 'resign', content: 'Resign', negative: true, onClick: this.resign}, { key: 'continue', content: 'Continue', positive: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board\r\n            game={displayGame}\r\n            makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n            minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n              this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n            )}\r\n            allowControl={allowControl}\r\n            settings={user ? user.settings : undefined}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} settings={user ? user.settings : undefined} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotated = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotated: checked}});\r\n  };\r\n\r\n  updateThemeRounded = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rounded: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme: {scheme, rotated, rounded, numbers}}} = this.props;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotated'}\r\n                    name={'theme.rotated'}\r\n                    checked={rotated}\r\n                    onChange={this.updateThemeRotated}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated: true, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rounded'}\r\n                    name={'theme.rounded'}\r\n                    checked={rounded}\r\n                    onChange={this.updateThemeRounded}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded: true, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme: option.value, rotated, rounded, numbers}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: {\r\n      autoSubmitMoves: false,\r\n      theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || {\r\n          autoSubmitMoves: false,\r\n          theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUserName client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Rename'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUserName extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  render() {\r\n    const {username} = this.state;\r\n    const {trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'mini'}\r\n        header={'Change name'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'change', positive: true, content: 'Change', onClick: this.updateUsername},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUserName.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass GameList extends Component {\r\n  render() {\r\n    const {user, usersById, games} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {games.map(game => {\r\n          const gameGame = Game.deserialize(game.game);\r\n          const playerA = usersById[game.userIds[0]];\r\n          const playerB = usersById[game.userIds[1]];\r\n          const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n          const isUserPlayerA = user ? playerA.id === user.id : false;\r\n          const isUserPlayerB = user ? playerB.id === user.id : false;\r\n          const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n          const isMyGame = isUserPlayerA || isUserPlayerB;\r\n\r\n          return (\r\n            <Card key={game.id} onClick={() => this.props.selectLiveGame(game)}>\r\n              <Card.Content>\r\n                <Board className={'ui image floated right mini'} game={gameGame} small settings={user ? user.settings : undefined} />\r\n                {/*<Image floated='right' size='mini' src='/images/avatar/large/steve.jpg' />*/}\r\n                <Card.Header>\r\n                  <Label color={winnerUser === playerA ? 'green' : undefined} >\r\n                    {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerA ? <Icon name={'caret right'}/> : null}\r\n                    {playerA.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n                  </Label>\r\n                  {\" vs \"}\r\n                  <Label color={winnerUser === playerB ? 'green' : undefined} >\r\n                    {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerB ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                    {playerB.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n                  </Label>\r\n                </Card.Header>\r\n                <Card.Meta>\r\n                  {isMyGame ? <Label><Icon name={\"user\"} color={\"green\"} />My game</Label> : null}\r\n                  {\" \"}\r\n                  {!game.finished ? <Label><Icon name={\"circle\"} color={\"green\"} />Live</Label> : null}\r\n                  {\" \"}\r\n                  <Label content={`Move ${game.move}`} />\r\n                </Card.Meta>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  share = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {location, user, usersInfo: {challengedUser}} = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerA.name}<HashedIcon floated={'right'} size={'mini'} hash={playerA.id} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerB.name}<HashedIcon floated={'right'} size={'mini'} hash={playerB.id} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.share}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, usersInfo: {byId}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>Choose a game from the lobby</Route>\r\n        <Route path={`${this.props.match.path}/:id`}><ChosenOnlineGame gameGame={gameGame} selectLiveGame={selectLiveGame} /></Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (!this.state.liveGame || !this.state.liveGame.finished || newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n          <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}