{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","onDisconnect","gotUser","user","id","username","name","token","localStorage","setItem","onUser","gotUsers","usersInfo","users","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","password","removeItem","io","on","console","warn","emit","unavailable","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","_","pull","appVersion","mergeUsers","settings","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","index","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_ref","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","PLAYER_A","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","JSON","stringify","getAvailableMoves","_ref3","winningCell","find","_this4","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref4","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","Array","RA","RB","keys","sort","String","fromCharCode","BoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","allowControl","children","_settings$theme","theme","scheme","rotated","rounded","numbers","classNames","small-board","medium-board","editable","selectable","theme-subtle","theme-pastel","theme-green","theme-rotated","theme-rounded","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","Board_BoardCell","undo","onClick","BoardCell","displayLevel","ThemeDemoBoard","_this$props3","Board_BoardBackground","demoRowsAndColumns","Board","takeMoveBack","isMoveAvailable","minChainCount","_this$props4","isGameUndoable","Play","state","selectedGame","submit","setState","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","changeAutoSubmitMoves","autoSubmitMoves","changeSettings","canSubmit","propsGame","propsGameIndex","error","prevProps","prevState","resigning","otherUser","challengeUser","stopChallengeUser","names","_this$state","displayGame","isMyGame","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","disabled","positive","attention","Modal","trigger","header","actions","style","textAlign","components_Board","reverse","previousGame","Header","_names","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","possibleConstructorReturn","getPrototypeOf","apply","inherits","withClient","forComponent","SettingsContent","themeSchemeOptions","themeNumbersOptions","updateAutoSubmitMove","e","checked","updateSettings","updateEnableNotifications","enableNotifications","updateThemeRotated","updateThemeRounded","updateThemeNumbers","updateThemeScheme","_this$props$settings","_this$props$settings$","pointing","attached","render","Form","Checkbox","onChange","Grid","stackable","columns","verticalAlign","Row","Column","Board_ThemeDemoBoard","width","floated","Field","option","radio","update","save","Label","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","position","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","ref","React","createRef","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","GameCard","selectLiveGame","usersById","terse","currentGameId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","components_HashedIcon","Meta","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","UserList","readyToPlayUsers","readyToPlayMeUsers","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Lobby_EditUser","hasPassword","isUserRatingProvisional","winCount","gameCount","score","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","Input","action","LogIn","changeMergeUsers","logIn","_this$state2","modal","LogOut","logOut","_this$props4$usersInf","_this$props4$gamesInf","Lobby_LogIn","Lobby_LogOut","centered","components_GameList","Lobby_UserList","Pane","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winnerUserId","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","Value","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d3b8596.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.onConnect = [];\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.onDisconnect = [];\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {appVersion, id: this.id, name: this.username, token: this.token});\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (index === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, children, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, rotated, rounded, numbers}} = settings;\r\n\r\n    className = classNames(\"background\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'theme-subtle': scheme === 'subtle',\r\n      'theme-pastel': scheme === 'pastel',\r\n      'theme-green': scheme === 'green',\r\n      'theme-rotated': rotated,\r\n      'theme-rounded': rounded,\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n    if (!children) {\r\n      children = (\r\n        rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <BoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                allowControl={allowControl}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <div className={className} onClick={onSelect}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  children: PropTypes.node,\r\n  rowsAndColumns: PropTypes.array,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass BoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    let {game, allowControl, onSelect, makeMove} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={this.isGameUndoable()}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={game.rowsAndColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {Button, Header, Icon, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resign = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    const autoSubmitMoves = !this.props.user.settings.autoSubmitMoves;\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: autoSubmitMoves});\r\n    if (autoSubmitMoves && this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {user, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names, allowControl} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? <Button content={'Auto submit move'} color={user.settings.autoSubmitMoves ? 'green' : 'yellow'} onClick={this.changeAutoSubmitMoves} /> : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>Resign</Button>}\r\n                  header='Resign?'\r\n                  content='Are you sure you want to forfeit?'\r\n                  actions={[{key: 'resign', content: 'Resign', negative: true, onClick: this.resign}, { key: 'continue', content: 'Continue', positive: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board\r\n            game={displayGame}\r\n            makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n            minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n              this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n            )}\r\n            allowControl={displayGame === game ? allowControl : undefined}\r\n            settings={user ? user.settings : undefined}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} settings={user ? user.settings : undefined} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotated = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotated: checked}});\r\n  };\r\n\r\n  updateThemeRounded = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rounded: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme: {scheme, rotated, rounded, numbers}}} = this.props;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotated'}\r\n                    name={'theme.rotated'}\r\n                    checked={rotated}\r\n                    onChange={this.updateThemeRotated}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated: true, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rounded'}\r\n                    name={'theme.rounded'}\r\n                    checked={rounded}\r\n                    onChange={this.updateThemeRounded}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded: true, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme: option.value, rotated, rounded, numbers}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: {\r\n      autoSubmitMoves: false,\r\n      theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || {\r\n          autoSubmitMoves: false,\r\n          theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label><Icon name={\"user\"} color={\"green\"} />My game</Label> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label><Icon name={\"circle\"} color={\"green\"} />Live</Label> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  render() {\r\n    const {user, usersById, games, terse, live, selectLiveGame, currentGameId} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n        {games.map(game => (\r\n          <GameCard\r\n            key={game.id}\r\n            user={user}\r\n            usersById={usersById}\r\n            game={game}\r\n            selectLiveGame={selectLiveGame}\r\n            terse={terse}\r\n            live={live}\r\n            currentGameId={currentGameId}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}>\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <LogIn client={client} />\r\n        <LogOut client={client} />\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Header, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {resultingPlayerScore - initialPlayer.score}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : initialPlayer.score})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {location, user, usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames}, game, selectLiveGame} = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerA} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerB} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareGame}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share Game\r\n              </Button>\r\n              <Button\r\n                positive\r\n                icon\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={`${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`}\r\n                title={'Click to open hotseat with this game'}\r\n                target={'_blank'}\r\n              >\r\n                <Icon name={'share'}/> Edit position\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Segment>\r\n          <GameList user={user} selectLiveGame={selectLiveGame} games={myLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          {otherLiveGames.length ? (\r\n            <GameList user={user} selectLiveGame={selectLiveGame} games={otherLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          ) : null}\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {live, myLive}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={byId} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n          <Segment>\r\n            <Header as={'h2'}>Live games ({live.length})</Header>\r\n            <GameList user={user} usersById={byId} games={live} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n          <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}