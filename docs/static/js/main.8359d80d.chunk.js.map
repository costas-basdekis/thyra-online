{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","components/Play.js","utils.js","client/withClient.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/Lobby.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","animations","arrows","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this4","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","find","row","cells","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","_this5","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","_this6","POSITION_NOTATION_DECOMPRESSION","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","fromRowsAndColumns","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","_ref10","_this9","getAvailableMoves","playerCells","playerCell","abs","_this10","_this11","getAvailableMovesMatrix","_this12","_this13","maximumLevel","_this14","isMoveAvailable","updates","_len","arguments","newCells","Array","_key","_newCells","update","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref11","_ref12","levelStr","notations","_ref13","_ref14","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref15","_ref17","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","values","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","current","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","diff","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","children","displayGame","isMyGame","tooShortToResign","controlsNode","Grid","Row","Play_PlayPlayer","Play_PlayNavigation","Board_BoardTransformation","boardNode","components_Board","Segment","textAlign","centered","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","Group","widths","Modal","trigger","Button","negative","header","actions","inverted","secondary","Play_PlayHistory","Header","color","label","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","attention","Board_PlayerColourBoard","positive","Checkbox","toggle","checked","item","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","active","href","components_Play","URLSearchParams","search","get","fromCompressedMoveNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","Icon","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","gameCount","createTournament","setValue","Form","Field","control","Input","placeholder","required","defaultValue","min","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDate","TournamentList","visibleTournaments","TournamentList_TournamentCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","UserCard","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","loading","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","LogIn","_Component4","_getPrototypeOf4","_len3","_key3","changeMergeUsers","logIn","_this$state2","modal","float","LogOut","_Component5","_getPrototypeOf5","_len4","_key4","logOut","_this$props4$usersInf","_this$props4$gamesInf","render","components_GameList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","won","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","copyPosition","copyPlayPosition","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","initialPositionNotation","EditPosition_EditPositionBoard","fromCompressedPositionNotation","EditPositionPalette","moveFromKey","q","b","EditPositionBoard","updatePosition","newCell","newPosition","Challenges","challenge","challenges","challengePlayerResponses","playerResponses","wrongMove","playerResponse","playerMoves","pR","challengeResponse","response","difficulty","maxDifficulty","challengePrompt","options","mateIn","success","getDifficultyStars","meta","source","App","liveGame","liveTournament","gameUrl","getLiveGameUrl","tournamentUrl","getLiveTournamentUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","REACT_APP_DEBUG","components_EditPosition","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8359d80d.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 4;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, animations: true, arrows: true, numbers: 'obvious'},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => (\r\n        Math.abs(cell.x - playerCell.x) <= 1\r\n        && Math.abs(cell.y - playerCell.y) <= 1\r\n      ))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(Game.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (this.props.allowControl.length === 2) {\r\n        return true;\r\n      }\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination, Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame, children,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            canSubmit={false}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            canSubmit={canSubmit}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n          this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n        )}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {game, player, allowControl, names, settings, canSubmit, submit, changeAutoSubmitMoves} = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Button\r\n                          positive\r\n                          onClick={submit}\r\n                          className={'attention'}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      : 'Waiting for opponent'\r\n                  )\r\n              )\r\n          )},\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        // onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDate).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n        />\r\n        {otherLiveGames.length ? (\r\n          <GameList\r\n            user={user}\r\n            selectLiveGame={selectLiveGame}\r\n            games={otherLiveGames}\r\n            usersById={usersById}\r\n            tournamentsById={tournamentsById}\r\n            terse\r\n            live\r\n            currentGameId={game ? game.id : null}\r\n          />\r\n        ) : null}\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              {key: 'edit', content: 'Edit position', icon: 'edit', as: NavLink,\r\n                to: `/edit-position?position=${(selectedGame || gameGame).positionNotation}`, color: 'green', active: true,\r\n                title: 'Click to edit the position for this game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = user ? user.settings : Client.getDefaultSettings();\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong> and\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.getPositionNotation(Game.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), urlError, position: Game.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.create(), urlError: false, position: Game.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.fromRowsAndColumns(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    const positionNotation = Game.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            defaultSettings={client.settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Grid, Header, Icon, Message, Segment} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\n\r\nclass Challenges extends Component {\r\n  static challenges = [\r\n    {\r\n      position: 'AABMAAAJAIAAEFMAJADMADAAD',\r\n      player: Game.PLAYER_B,\r\n      type: 'mate',\r\n      options: {\r\n        mateIn: 5,\r\n      },\r\n      meta: {\r\n        source: 'From the first tournament on Thyra Online, Tommy vs Costas',\r\n        difficulty: 4,\r\n        maxDifficulty: 5,\r\n      },\r\n      playerResponses: [\r\n        {\r\n          playerMoves: [\r\n            'AABMDAAJCGAAEFMAJADMADAAD',\r\n          ],\r\n          response: [{x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],\r\n          playerResponses: [\r\n            {\r\n              playerMoves: [\r\n                'AAAMGABJCIADEDMAJADMADAAD',\r\n              ],\r\n              response: [{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],\r\n              playerResponses: [\r\n                {\r\n                  playerMoves: [\r\n                    'AAAMGAAMCGBGEFMAJADMADAAD',\r\n                    'AAAMGAAMAIBGEFMAJADMADAAD',\r\n                  ],\r\n                  response: [{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],\r\n                  playerResponses: [\r\n                    {\r\n                      playerMoves: [\r\n                        'AAAMGADMAIBHFDMAMADMADAAD',\r\n                        'AAAMGADMAGBHFFMAMADMADAAD',\r\n                      ],\r\n                      response: [{x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}],\r\n                      playerResponses: [\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMJBGMAIAHFDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMJBGMCIAHDDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMIBGMAJAHFDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                }\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    challenge: this.constructor.challenges[0],\r\n    challengePlayerResponses: this.constructor.challenges[0].playerResponses,\r\n    game: Game.fromCompressedPositionNotation(this.constructor.challenges[0].position),\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  submit = (moves, newGame) => {\r\n    const {challengePlayerResponses, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const playerResponse = challengePlayerResponses.find(\r\n      playerResponse => playerResponse.playerMoves.includes(newGame.positionNotation));\r\n    if (!playerResponse) {\r\n      console.log(_.flatten(challengePlayerResponses.map(pR => pR.playerMoves)), newGame.positionNotation);\r\n      this.setState({wrongMove: true});\r\n      return;\r\n    }\r\n    const challengeResponse = playerResponse.response ? newGame.makeMoves(playerResponse.response) : newGame;\r\n    this.setState({\r\n      game: challengeResponse,\r\n      challengePlayerResponses: playerResponse.playerResponses || null,\r\n      wrongMove: false,\r\n      won: !playerResponse.response,\r\n    });\r\n  };\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const {challenge, game, wrongMove, won} = this.state;\r\n    const {user, client} = this.props;\r\n    const challengePrompt = challenge.type === 'mate' ? `Find mate in ${challenge.options.mateIn}` : 'Unknown challenge';\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={challengePrompt} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challengePrompt}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          matchGame={game}\r\n          allowControl={[challenge.player]}\r\n          names={{[challenge.player]: 'You', [Game.OTHER_PLAYER[challenge.player]]: 'Challenge'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withClient(Challenges);\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport EditPosition from \"./components/EditPosition\";\nimport Challenges from \"./components/Challenges\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  getLiveTournamentUrl(tournament) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/tournament/${tournament.id}`;\n  }\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = this.getLiveTournamentUrl(liveTournament);\n    } else {\n      tournamentUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          process.env.REACT_APP_DEBUG ? {menuItem: {icon: 'edit', content: 'Edit position'}, path: 'edit-position', render: () => (\n            <Tab.Pane><EditPosition /></Tab.Pane>\n          )} : null,\n          process.env.REACT_APP_DEBUG ? {menuItem: {icon: 'shield', content: 'Challenges'}, path: 'challenges', render: () => (\n            <Tab.Pane><Challenges /></Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}