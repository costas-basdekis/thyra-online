{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/ChallengeList.js","components/Lobby.js","components/Play.js","utils.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreateChallenge.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","gotChallenges","challenges","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","challenge","value","meta","publishDatetime","moment","err","return","challengesInfo","prepareChallenges","onChallenges","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","animations","arrows","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this4","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this5","otherChallenges","userId","otherSolved","won","otherUnsolved","otherStarted","otherNotStarted","client","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","lastMovesInHistory","indexOf","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","find","row","cells","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","_this6","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","_ref10","_this9","getAvailableMoves","playerCells","playerCell","abs","_this10","_this11","getAvailableMovesMatrix","_this12","_this13","maximumLevel","_this14","isMoveAvailable","updates","_len","arguments","newCells","Array","_key","_newCells","update","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref11","_ref12","levelStr","notations","_ref13","_ref14","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref15","_ref17","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","values","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","current","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","diff","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","GameList","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDate","TournamentList","visibleTournaments","TournamentList_TournamentCard","ChallengeCard","selectChallenge","currentChallengeId","userChallenge","options","typeOptions","mateIn","difficulty","maxDifficulty","title","mistakes","public","isSameOrBefore","fromNow","toNow","startingPosition","get","ChallengeList","visibleChallenges","ChallengeList_ChallengeCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$challeng","selectLiveChallenge","render","components_GameList","challengesList","components_ChallengeList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","Play_PlayHistory","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","PlayHistory","lastVisibleGame","previousGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","catch","utils","alert","open","active","href","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","REACT_APP_DEBUG","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","b","EditPositionBoard","updatePosition","newCell","newPosition","CreateChallenge","editing","currentStep","tree","onCreateChallenge","getTree","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicateChalle","duplicateChallenge","newChallenge","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","challengeResponse","deleteCurrentStep","_this$duplicateChalle2","removeStep","editChallenge","createChallenge","cleanedChallenge","discardChallenge","response","treePathStep","oldStep","isArray","getNextTree","nextTree","CreateChallenge_ChallengeForm","initialChallenge","challengePrompt","getDifficultyStars","source","rowIndex","columnIndex","ChallengeForm","editingPosition","convertedValue","valueConversion","newChallengeToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this3$state","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","Challenges","_this$props$challenge","components_CreateChallenge","Challenges_ChallengePlayer","ChallengePlayer","challengeId","getResumedChallengeGame","submittedGame","wrongMove","updateChallenge","askServer","dismissUrlChallengeError","resultingGame","userChallengeStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","shift","invalidPlayerPositions","v","validPlayerResponse","submitChallengeMove","_ret","success","App","liveGame","liveTournament","liveChallenge","gameUrl","tournamentUrl","challengeUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.faf2f8c6.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nconst appVersion = 5\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, animations: true, arrows: true, numbers: 'obvious'},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onChallenges = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.challengesInfo = this.prepareChallenges([]);\r\n    this.socket.on(\"challenges\", this.gotChallenges);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createChallenge(challenge) {\r\n    this.socket.emit('create-challenge', challenge);\r\n  }\r\n\r\n  submitChallengeMove(challenge, path) {\r\n    this.socket.emit(\"submit-challenge-moves\", {id: challenge.id, path});\r\n  }\r\n\r\n  gotChallenges = challenges => {\r\n    for (const challenge of challenges) {\r\n      challenge.meta.publishDatetime = moment(challenge.meta.publishDatetime);\r\n    }\r\n    challenges = _.sortBy(challenges, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.challengesInfo = this.prepareChallenges(challenges);\r\n    this.onChallenges.map(callback => callback(this.challengesInfo));\r\n  };\r\n\r\n  prepareChallenges(challenges) {\r\n    const otherChallenges = this.user ? challenges.filter(challenge => challenge.userId !== this.user.id) : challenges;\r\n    return {\r\n      challenges,\r\n      byId: _.fromPairs(challenges.map(game => [game.id, game])),\r\n      mine: this.user ? challenges.filter(challenge => challenge.userId === this.user.id) : [],\r\n      other: otherChallenges,\r\n      otherSolved: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.won) : otherChallenges,\r\n      otherStarted: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.started && !this.user.challenges[challenge.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.started) : otherChallenges,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n    this.lastMovesInHistory = this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove);\r\n    this.path = this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => (\r\n        Math.abs(cell.x - playerCell.x) <= 1\r\n        && Math.abs(cell.y - playerCell.y) <= 1\r\n      ))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(Game.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (this.props.allowControl.length === 2) {\r\n        return true;\r\n      }\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    challengesInfo: client.challengesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotChallenges = challengesInfo => {\r\n    this.setState({challengesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, challengesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        challengesInfo={challengesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDate).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nexport class ChallengeCard extends Component {\r\n  selectChallenge = () => {\r\n    this.props.selectChallenge(this.props.challenge);\r\n  };\r\n\r\n  get userChallenge() {\r\n    const {user, challenge} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    return user.challenges[challenge.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, usersById, challenge, currentChallengeId} = this.props;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const creator = usersById[challenge.userId];\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/challenge/${challenge.id}`}\r\n        onClick={this.selectChallenge}\r\n        style={{\r\n          ...(challenge.id === currentChallengeId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {challenge.options.type === 'mate'\r\n              ? `Find mate in ${challenge.options.typeOptions.mateIn}`\r\n              : 'Unknown challenge'}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[challenge.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[challenge.meta.difficulty],\r\n              }}\r\n              content={`${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[challenge.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userChallenge && userChallenge.meta.started && !userChallenge.meta.won ? (\r\n              <Label icon={{name: 'play', color: 'green'}} content={'Started'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.won ? (\r\n              <Label icon={{name: 'trophy', color: 'green'}} content={'Solved'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.mistakes ? (\r\n              <Label icon={{name: 'exclamation', color: 'red'}} content={`${userChallenge.meta.mistakes} mistakes`} />\r\n            ) : null}\r\n            {user && challenge.userId === user.id ? (\r\n              <Label\r\n                icon={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      challenge.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? challenge.meta.publishDatetime.fromNow() : (\r\n                      challenge.meta.public\r\n                        ? challenge.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={challenge.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            <Board\r\n              game={Game.fromCompressedPositionNotation(challenge.startingPosition.position)}\r\n              medium\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  challenge: PropTypes.object.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n};\r\n\r\nclass ChallengeList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersInfo: {byId: usersById}, challenges, selectChallenge, currentChallengeId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(challenges.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleChallenges = challenges\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visibleChallenges.map(challenge => (\r\n            <ChallengeCard\r\n              key={challenge.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={challenge}\r\n              selectChallenge={selectChallenge}\r\n              currentChallengeId={currentChallengeId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  challenges: PropTypes.array.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nChallengeList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(ChallengeList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport ChallengeList, {ChallengeCard} from \"./ChallengeList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      challengesInfo: {otherUnsolved, challenges, otherStarted, otherNotStarted, otherSolved},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <ChallengeCard\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={otherUnsolved[0]}\r\n              selectChallenge={this.props.selectLiveChallenge}\r\n              currentChallengeId={null}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {challenges ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let challengesList = [\r\n              {key: 'other-started', label: \"Started Challenges\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Challenges\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Challenges\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!challengesList.length) {\r\n              challengesList = [\r\n                {key: 'challenges', label: \"Challenges\", items: challenges},\r\n              ];\r\n            }\r\n            return challengesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination, Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !this.props.submit && !selectedGame && game.previous;\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n          this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n        )}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, settings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          <Button\r\n                            positive\r\n                            onClick={submit}\r\n                            className={'attention'}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[game.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? (\r\n            <Button negative content={'Take move back'} onClick={takeBack} />\r\n          ) : null,\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          game.finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              process.env.REACT_APP_DEBUG ? {key: 'edit', content: 'Edit position', icon: 'edit', as: NavLink,\r\n                to: `/challenge/create?position=${(selectedGame || gameGame).positionNotation}`, color: 'green', active: true,\r\n                title: 'Click to edit the position for this game', target: '_blank'} : null,\r\n              process.env.REACT_APP_DEBUG ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = user ? user.settings : Client.getDefaultSettings();\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong> and\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.getPositionNotation(Game.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), urlError, position: Game.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.create(), urlError: false, position: Game.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    const positionNotation = Game.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            defaultSettings={client.settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition ? (\r\n              <div>\r\n                <Button\r\n                  content={'Use position'}\r\n                  primary\r\n                  onClick={this.usePosition}\r\n                  disabled={!!positionError}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\n\r\nclass CreateChallenge extends Component {\r\n  state = {\r\n    editing: true,\r\n    challenge: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  onCreateChallenge = challenge => {\r\n    this.setState({\r\n      editing: false,\r\n      challenge,\r\n      currentStep: challenge.startingPosition,\r\n      tree: this.getTree(challenge.startingPosition),\r\n      game: challenge.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.challengeResponse && currentStep.challengeResponse.position === newGame.positionNotation) {\r\n        return currentStep.challengeResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['challenge', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['challengeResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicateChallenge(pathIndexes) {\r\n    const {challenge} = this.state;\r\n\r\n    const newChallenge = {\r\n      ...challenge,\r\n      startingPosition: {...challenge.startingPosition},\r\n    };\r\n    let newModifyingStep = newChallenge.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newChallenge, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        challengeResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.challengeResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.challengeResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.challenge.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.challengeResponse) {\r\n        return [treePath.concat(lastTreeStep.challengeResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editChallenge = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createChallenge(cleanedChallenge);\r\n  };\r\n\r\n  discardChallenge = () => {\r\n    this.setState({\r\n      editing: true,\r\n      challenge: null,\r\n      currentStep: null,\r\n      tree: null,\r\n      game: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const {editing, challenge, game, tree, currentStep} = this.state;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    if (editing) {\r\n      return (\r\n        <ChallengeForm initialChallenge={challenge} onCreateChallenge={this.onCreateChallenge} />\r\n      )\r\n    }\r\n    const challengePrompt = challenge.options.type === 'mate' ? `Find mate in ${challenge.options.typeOptions.mateIn}` : 'Unknown challenge';\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challengePrompt}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editChallenge}>Edit</Button>\r\n            <Button positive onClick={this.createChallenge}>Create</Button>\r\n            <Button negative onClick={this.discardChallenge}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            defaultSettings={client.settings}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            matchGame={currentStep.game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[challenge.initialPlayer]: 'Player', [Game.OTHER_PLAYER[challenge.initialPlayer]]: 'Challenge'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === challenge} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass ChallengeForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    challenge: this.props.initialChallenge || {\r\n      options: {\r\n        initialPlayer: null,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: '',\r\n        game: null,\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.initialChallenge) {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n        this.setState({editingPosition: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const challenge = {\r\n        ...state.challenge,\r\n      };\r\n      let newChallengeToChange = challenge;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newChallengeToChange = newChallengeToChange[part] || {};\r\n      }\r\n      newChallengeToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {challenge};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.challenge.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          challenge: {\r\n            ...state.challenge,\r\n            options: {\r\n              ...state.challenge.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.challenge.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const {challenge, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreateChallenge(challenge);\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {user, client, initialChallenge} = this.props;\r\n    const {editingPosition, challenge, error} = this.state;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          initialPositionNotation={challenge.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a challenge</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createChallenge}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={challenge.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {challenge.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={challenge.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={challenge.options.type}\r\n            />\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                min={1}\r\n                max={10}\r\n                name={'options.typeOptions.mateIn'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.options.typeOptions.mateIn}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={challenge.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={challenge.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.publishDatetime ? challenge.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialChallenge ? 'Update' : 'Create'} />\r\n          </Form>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeForm.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n  onCreateChallenge: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeForm = withClient(ChallengeForm);\r\n\r\nexport default withClient(CreateChallenge);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\nimport ChallengeList from \"./ChallengeList\";\r\nimport {Link, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\n\r\nclass Challenges extends Component {\r\n  render() {\r\n    const {challengesInfo: {otherStarted, otherNotStarted, otherSolved, mine}} = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            <Segment>\r\n              <Link to={`${this.props.match.path}/create`}><Button content={'Create Challenge'} /></Link>\r\n            </Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Challenges\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Challenges\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Challenges\", items: otherSolved},\r\n              {key: 'mine', label: \"My Challenges\", items: mine},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {process.env.REACT_APP_DEBUG ? (\r\n          <Route path={`${this.props.match.path}/create`}>\r\n            <CreateChallenge />\r\n          </Route>\r\n        ) : null}\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChallengePlayer selectLiveChallenge={this.props.selectLiveChallenge} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  liveChallenge: PropTypes.object,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nclass ChallengePlayer extends Component {\r\n  state = {\r\n    challengeId: this.challenge ? this.challenge.id : null,\r\n    game: this.getResumedChallengeGame(),\r\n    submittedGame: null,\r\n    path: this.challenge ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  get userChallenge() {\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.challenges[challenge.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: challenge.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge) {\r\n      this.props.selectLiveChallenge(challenge);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge && prevState.challengeId !== challenge.id) {\r\n      this.props.selectLiveChallenge(challenge);\r\n      this.setState({\r\n        challengeId: challenge.id,\r\n        game: this.getResumedChallengeGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!challenge && this.state.challengeId) {\r\n      this.setState({\r\n          challengeId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (challenge && this.props.user && this.state.submittedGame) {\r\n      this.updateChallenge(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updateChallenge(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedChallengeGame() {\r\n    const userChallenge = this.userChallenge;\r\n    if (!userChallenge) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.fromCompressedPositionNotation(userChallenge.startingPosition.position);\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    while (userChallengeStep) {\r\n      const lastPlayerResponse = userChallengeStep.playerResponses[userChallengeStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.challengeResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.challengeResponse.moves);\r\n      userChallengeStep = lastPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updateChallenge(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const challenge = this.challenge;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userChallengeStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userChallengeStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitChallengeMove(challenge, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.challengeResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userChallengeStep = validPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userChallengeStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {user, client} = this.props;\r\n    const challengePrompt = challenge.options.type === 'mate'\r\n      ? `Find mate in ${challenge.options.typeOptions.mateIn}`\r\n      : 'Unknown challenge';\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={challengePrompt} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challengePrompt}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          matchGame={game}\r\n          allowControl={[challenge.options.initialPlayer]}\r\n          names={{[challenge.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Challenge'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired\r\n};\r\n\r\nChallengePlayer = withRouter(withClient(ChallengePlayer));\r\n\r\nexport default withRouter(withClient(Challenges));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Challenges from \"./components/Challenges\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    liveChallenge: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/lobby';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLiveChallenge = liveChallenge => {\n    let challengeUrl;\n    if (liveChallenge) {\n      challengeUrl = `/challenge/${liveChallenge.id}`;\n    } else {\n      challengeUrl = `/lobby`;\n    }\n    if (challengeUrl !== this.props.location.pathname) {\n      this.props.history.push(challengeUrl);\n    }\n    if (this.state.liveChallenge === liveChallenge) {\n      return;\n    }\n    this.setState({liveChallenge});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, liveChallenge} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          process.env.REACT_APP_DEBUG ? {menuItem: {icon: 'shield', content: liveChallenge ? (\n            liveChallenge.options.type === 'mate'\n              ? `Find mate in ${liveChallenge.options.typeOptions.mateIn}`\n              : 'Unknown challenge'\n          ) : 'Challenges'}, path: 'challenge', render: () => (\n            <Tab.Pane><Challenges challenge={liveChallenge} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}