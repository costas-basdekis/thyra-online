{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","onDisconnect","gotUser","user","id","password","localStorage","setItem","onUser","gotUsers","usersInfo","users","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","io","on","console","warn","emit","unavailable","socket","process","available","callbacks","_i","_arr","length","name","push","_i2","_arr2","_","pull","appVersion","settings","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","index","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_ref","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","PLAYER_A","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","JSON","stringify","getAvailableMoves","_ref3","winningCell","find","_this4","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref4","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","Array","RA","RB","keys","sort","String","fromCharCode","BoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","allowControl","children","_settings$theme","theme","scheme","rotated","rounded","numbers","classNames","small-board","medium-board","editable","selectable","theme-subtle","theme-pastel","theme-green","theme-rotated","theme-rounded","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","Board_BoardCell","undo","onClick","BoardCell","displayLevel","ThemeDemoBoard","_this$props3","Board_BoardBackground","demoRowsAndColumns","Board","takeMoveBack","isMoveAvailable","minChainCount","_this$props4","isGameUndoable","Play","state","selectedGame","submit","setState","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","changeAutoSubmitMoves","autoSubmitMoves","changeSettings","canSubmit","propsGame","propsGameIndex","error","prevProps","prevState","resigning","otherUser","challengeUser","stopChallengeUser","names","_this$state","displayGame","isMyGame","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","disabled","positive","attention","Modal","trigger","header","actions","style","textAlign","components_Board","reverse","previousGame","Header","_names","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","username","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","possibleConstructorReturn","getPrototypeOf","apply","inherits","withClient","forComponent","SettingsContent","themeSchemeOptions","themeNumbersOptions","updateAutoSubmitMove","e","checked","updateSettings","updateEnableNotifications","enableNotifications","updateThemeRotated","updateThemeRounded","updateThemeNumbers","updateThemeScheme","_this$props$settings","_this$props$settings$","pointing","attached","render","Form","Checkbox","onChange","Grid","stackable","columns","verticalAlign","Row","Column","Board_ThemeDemoBoard","width","floated","Field","option","radio","update","save","Label","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","position","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","ref","React","createRef","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","UserList","readyToPlayUsers","readyToPlayMeUsers","Card","maxHeight","overflowY","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Content","components_HashedIcon","Lobby_EditUserName","Meta","extra","EditUserName","changeUsername","target","updateUsername","Input","GameList","usersById","gameGame","playerA","playerB","nextPlayerUser","isUserPlayerA","isUserPlayerB","winnerUser","selectLiveGame","_this$props4$usersInf","_this$props4$gamesInf","centered","Lobby_GameList","Lobby_UserList","Pane","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","_this$playersInfo2","Value","OnlineGame","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4857d25f.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 1;\r\n\r\nclass Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.password = localStorage.getItem('user-password') || null;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.onConnect = [];\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.onDisconnect = [];\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {appVersion, id: this.id, password: this.password});\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.password = user.password;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-password', this.password);\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (index === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, children, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, rotated, rounded, numbers}} = settings;\r\n\r\n    className = classNames(\"background\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'theme-subtle': scheme === 'subtle',\r\n      'theme-pastel': scheme === 'pastel',\r\n      'theme-green': scheme === 'green',\r\n      'theme-rotated': rotated,\r\n      'theme-rounded': rounded,\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n    if (!children) {\r\n      children = (\r\n        rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <BoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                allowControl={allowControl}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <div className={className} onClick={onSelect}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  children: PropTypes.node,\r\n  rowsAndColumns: PropTypes.array,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass BoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    let {game, allowControl, onSelect, makeMove} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={this.isGameUndoable()}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={game.rowsAndColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {Button, Header, Icon, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resign = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    const autoSubmitMoves = !this.props.user.settings.autoSubmitMoves;\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: autoSubmitMoves});\r\n    if (autoSubmitMoves && this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {user, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names, allowControl} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? <Button content={'Auto submit move'} color={user.settings.autoSubmitMoves ? 'green' : 'yellow'} onClick={this.changeAutoSubmitMoves} /> : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>Resign</Button>}\r\n                  header='Resign?'\r\n                  content='Are you sure you want to forfeit?'\r\n                  actions={[{key: 'resign', content: 'Resign', negative: true, onClick: this.resign}, { key: 'continue', content: 'Continue', positive: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board\r\n            game={displayGame}\r\n            makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n            minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n              this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n            )}\r\n            allowControl={displayGame === game ? allowControl : undefined}\r\n            settings={user ? user.settings : undefined}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} settings={user ? user.settings : undefined} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotated = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotated: checked}});\r\n  };\r\n\r\n  updateThemeRounded = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rounded: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme: {scheme, rotated, rounded, numbers}}} = this.props;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotated'}\r\n                    name={'theme.rotated'}\r\n                    checked={rotated}\r\n                    onChange={this.updateThemeRotated}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated: true, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rounded'}\r\n                    name={'theme.rounded'}\r\n                    checked={rounded}\r\n                    onChange={this.updateThemeRounded}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded: true, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme: option.value, rotated, rounded, numbers}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: {\r\n      autoSubmitMoves: false,\r\n      theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || {\r\n          autoSubmitMoves: false,\r\n          theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUserName client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Rename'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUserName extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  render() {\r\n    const {username} = this.state;\r\n    const {trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'mini'}\r\n        header={'Change name'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'change', positive: true, content: 'Change', onClick: this.updateUsername},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUserName.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass GameList extends Component {\r\n  render() {\r\n    const {user, usersById, games} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {games.map(game => {\r\n          const gameGame = Game.deserialize(game.game);\r\n          const playerA = usersById[game.userIds[0]];\r\n          const playerB = usersById[game.userIds[1]];\r\n          const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n          const isUserPlayerA = user ? playerA.id === user.id : false;\r\n          const isUserPlayerB = user ? playerB.id === user.id : false;\r\n          const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n          const isMyGame = isUserPlayerA || isUserPlayerB;\r\n\r\n          return (\r\n            <Card key={game.id} onClick={() => this.props.selectLiveGame(game)}>\r\n              <Card.Content>\r\n                <Board className={'ui image floated right mini'} game={gameGame} small settings={user ? user.settings : undefined} />\r\n                {/*<Image floated='right' size='mini' src='/images/avatar/large/steve.jpg' />*/}\r\n                <Card.Header>\r\n                  <Label color={winnerUser === playerA ? 'green' : undefined} >\r\n                    {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerA ? <Icon name={'caret right'}/> : null}\r\n                    {playerA.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n                  </Label>\r\n                  {\" vs \"}\r\n                  <Label color={winnerUser === playerB ? 'green' : undefined} >\r\n                    {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerB ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                    {playerB.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n                  </Label>\r\n                </Card.Header>\r\n                <Card.Meta>\r\n                  {isMyGame ? <Label><Icon name={\"user\"} color={\"green\"} />My game</Label> : null}\r\n                  {\" \"}\r\n                  {!game.finished ? <Label><Icon name={\"circle\"} color={\"green\"} />Live</Label> : null}\r\n                  {\" \"}\r\n                  <Label content={`Move ${game.move}`} />\r\n                </Card.Meta>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {location, user, usersInfo: {challengedUser}} = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerA.name}<HashedIcon floated={'right'} size={'mini'} hash={playerA.id} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerB.name}<HashedIcon floated={'right'} size={'mini'} hash={playerB.id} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareGame}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share Game\r\n              </Button>\r\n              <Button\r\n                positive\r\n                icon\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={`${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`}\r\n                title={'Click to open hotseat with this game'}\r\n                target={'_blank'}\r\n              >\r\n                <Icon name={'share'}/> Edit position\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, usersInfo: {byId}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>Choose a game from the lobby</Route>\r\n        <Route path={`${this.props.match.path}/:id`}><ChosenOnlineGame gameGame={gameGame} selectLiveGame={selectLiveGame} /></Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n          <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}