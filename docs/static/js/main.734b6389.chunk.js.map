{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","components/Play.js","utils.js","client/withClient.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/Lobby.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","animations","arrows","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this4","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","useCheck","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","find","row","cells","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","_this5","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","_this6","POSITION_NOTATION_DECOMPRESSION","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","fromRowsAndColumns","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref10$useCheck","_this9","_ref11","deserialize","_this10","getAvailableMoves","playerCells","playerCell","abs","_this11","_this12","getAvailableMovesMatrix","_this13","_this14","maximumLevel","_this15","isMoveAvailable","updates","_len","arguments","newCells","Array","_key","_newCells","update","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref12","_ref13","levelStr","notations","_ref14","_ref15","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref16","_ref18","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","values","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","current","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","diff","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","flipped","transpose","flipX","flipY","reverseConfig","reverseTransformCoordinates","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","children","displayGame","isMyGame","tooShortToResign","controlsNode","Grid","Row","Play_PlayPlayer","Play_PlayNavigation","Board_BoardTransformation","boardNode","components_Board","Segment","textAlign","centered","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","Group","widths","Modal","trigger","Button","negative","header","actions","inverted","secondary","Play_PlayHistory","Header","color","label","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","attention","Board_PlayerColourBoard","positive","Checkbox","toggle","checked","item","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","active","href","components_Play","URLSearchParams","search","get","fromCompressedMoveNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","Icon","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","gameCount","createTournament","setValue","Form","Field","control","Input","placeholder","required","defaultValue","min","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDate","TournamentList","visibleTournaments","TournamentList_TournamentCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","UserCard","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","loading","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","LogIn","_Component4","_getPrototypeOf4","_len3","_key3","changeMergeUsers","logIn","_this$state2","modal","float","LogOut","_Component5","_getPrototypeOf5","_len4","_key4","logOut","_this$props4$usersInf","_this$props4$gamesInf","render","components_GameList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","won","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","copyPosition","copyPlayPosition","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","initialPositionNotation","EditPosition_EditPositionBoard","fromCompressedPositionNotation","EditPositionPalette","moveFromKey","q","b","EditPositionBoard","updatePosition","newCell","newPosition","Challenges","challenge","challenges","challengePlayerResponses","playerResponses","wrongMove","playerResponse","playerMoves","pR","challengeResponse","response","difficulty","maxDifficulty","options","mateIn","getDifficultyStars","meta","source","success","App","liveGame","liveTournament","gameUrl","getLiveGameUrl","tournamentUrl","getLiveTournamentUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","REACT_APP_DEBUG","components_EditPosition","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.734b6389.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, animations: true, arrows: true, numbers: 'obvious'},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves, useCheck) {\r\n    if (useCheck === undefined) {\r\n      throw new Error(`Expected useCheck is not set`);\r\n    }\r\n    let game = this.create();\r\n    if (!useCheck) {\r\n      game.useCheck = false;\r\n    }\r\n    game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n            useCheck: true,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n            useCheck: true,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n            useCheck: true,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n            useCheck: true,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A, true),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n            useCheck: true,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A, true),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n          useCheck: true,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B, true),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n          useCheck: true,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer', 'useCheck']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer, useCheck} = status;\r\n    this.useCheck = useCheck;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      rowsAndColumns: this.rowsAndColumns,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves, useCheck = false}) {\r\n    return this.fromMoves(moves, useCheck);\r\n  }\r\n\r\n  static deserializeVerbose({cells, rowsAndColumns, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    // TODO: Remove `cells` after deploying\r\n    if (!rowsAndColumns) {\r\n      rowsAndColumns = this.ROWS.map(y => ({\r\n        y,\r\n        cells: this.COLUMNS.map(x => cells[y][x]),\r\n      }));\r\n    }\r\n    return new this(rowsAndColumns, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n      useCheck: true,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => (\r\n        Math.abs(cell.x - playerCell.x) <= 1\r\n        && Math.abs(cell.y - playerCell.y) <= 1\r\n      ))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (this.useCheck && !this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player, useCheck) {\r\n    if (useCheck === undefined) {\r\n      throw new Error(`Expected useCheck`);\r\n    }\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell, useCheck));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates, useCheck) {\r\n    if (useCheck === undefined) {\r\n      throw new Error(`Expected useCheck`);\r\n    }\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (!useCheck || this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell, useCheck)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates, useCheck) {\r\n    if (useCheck === undefined) {\r\n      throw new Error(`Expected useCheck`);\r\n    }\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!useCheck || !this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n      useCheck: this.useCheck,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n      useCheck: this.useCheck,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer, this.useCheck)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n      useCheck: this.useCheck,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(\r\n        this.rowsAndColumns, {x, y}, this.useCheck),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n      useCheck: this.useCheck,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to, this.useCheck),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n      useCheck: this.useCheck,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer, this.useCheck),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n      useCheck: this.useCheck,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(Game.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (this.props.allowControl.length === 2) {\r\n        return true;\r\n      }\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination, Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame, children,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            canSubmit={false}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            canSubmit={canSubmit}\r\n            submit={this.props.submit ? this.submit : null}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={canSubmit ? game.previous : game}\r\n            settings={settings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n          this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n        )}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {game, player, allowControl, names, settings, canSubmit, submit, changeAutoSubmitMoves} = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Button\r\n                          positive\r\n                          onClick={submit}\r\n                          className={'attention'}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      : 'Waiting for opponent'\r\n                  )\r\n              )\r\n          )},\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        // onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDate).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n        />\r\n        {otherLiveGames.length ? (\r\n          <GameList\r\n            user={user}\r\n            selectLiveGame={selectLiveGame}\r\n            games={otherLiveGames}\r\n            usersById={usersById}\r\n            tournamentsById={tournamentsById}\r\n            terse\r\n            live\r\n            currentGameId={game ? game.id : null}\r\n          />\r\n        ) : null}\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              {key: 'edit', content: 'Edit position', icon: 'edit', as: NavLink,\r\n                to: `/edit-position?position=${(selectedGame || gameGame).positionNotation}`, color: 'green', active: true,\r\n                title: 'Click to edit the position for this game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={items} selectLiveGame={selectLiveGame} />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = user ? user.settings : Client.getDefaultSettings();\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong> and\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.getPositionNotation(Game.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), urlError, position: Game.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.create(), urlError: false, position: Game.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.fromRowsAndColumns(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    const positionNotation = Game.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            defaultSettings={client.settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {user, client} = this.props;\r\n    const settings = user ? user.settings : client.settings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Grid, Header, Icon, Message, Segment} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\n\r\nclass Challenges extends Component {\r\n  static challenges = [\r\n    {\r\n      position: 'AABMAAAJAIAAEFMAJADMADAAD',\r\n      player: Game.PLAYER_B,\r\n      type: 'mate',\r\n      options: {\r\n        mateIn: 5,\r\n      },\r\n      meta: {\r\n        source: 'From the first tournament on Thyra Online, Tommy vs Costas',\r\n        difficulty: 4,\r\n        maxDifficulty: 5,\r\n      },\r\n      playerResponses: [\r\n        {\r\n          playerMoves: [\r\n            'AABMDAAJCGAAEFMAJADMADAAD',\r\n          ],\r\n          response: [{x: 2, y: 0}, {x: 1, y: 1}, {x: 1, y: 2}],\r\n          playerResponses: [\r\n            {\r\n              playerMoves: [\r\n                'AAAMGABJCIADEDMAJADMADAAD',\r\n              ],\r\n              response: [{x: 1, y: 1}, {x: 0, y: 2}, {x: 1, y: 2}],\r\n              playerResponses: [\r\n                {\r\n                  playerMoves: [\r\n                    'AAAMGAAMCGBGEFMAJADMADAAD',\r\n                    'AAAMGAAMAIBGEFMAJADMADAAD',\r\n                  ],\r\n                  response: [{x: 2, y: 2}, {x: 1, y: 2}, {x: 1, y: 1}],\r\n                  playerResponses: [\r\n                    {\r\n                      playerMoves: [\r\n                        'AAAMGADMAIBHFDMAMADMADAAD',\r\n                        'AAAMGADMAGBHFFMAMADMADAAD',\r\n                      ],\r\n                      response: [{x: 0, y: 2}, {x: 0, y: 1}, {x: 1, y: 1}],\r\n                      playerResponses: [\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMJBGMAIAHFDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMJBGMCIAHDDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                        {\r\n                          playerMoves: [\r\n                            'AAAMIBGMAJAHFDMAMADMADAAD',\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                }\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  state = {\r\n    challenge: this.constructor.challenges[0],\r\n    challengePlayerResponses: this.constructor.challenges[0].playerResponses,\r\n    game: Game.fromCompressedPositionNotation(this.constructor.challenges[0].position),\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  submit = (moves, newGame) => {\r\n    const {challengePlayerResponses, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const playerResponse = challengePlayerResponses.find(\r\n      playerResponse => playerResponse.playerMoves.includes(newGame.positionNotation));\r\n    if (!playerResponse) {\r\n      console.log(_.flatten(challengePlayerResponses.map(pR => pR.playerMoves)), newGame.positionNotation);\r\n      this.setState({wrongMove: true});\r\n      return;\r\n    }\r\n    const challengeResponse = playerResponse.response ? newGame.makeMoves(playerResponse.response) : newGame;\r\n    this.setState({\r\n      game: challengeResponse,\r\n      challengePlayerResponses: playerResponse.playerResponses || null,\r\n      wrongMove: false,\r\n      won: !playerResponse.response,\r\n    });\r\n  };\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const {challenge, game, wrongMove, won} = this.state;\r\n    const {user, client} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challenge.type === 'mate' ? `Find mate in ${challenge.options.mateIn}` : 'Unknown challenge'}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          {wrongMove || won ? (\r\n            <Grid.Row>\r\n              {wrongMove ? <Message error icon={'warning'} content={\"That's not the right answer\"} /> : null}\r\n              {won ? <Message success icon={'check'} content={\"Correct! You solved it!\"} /> : null}\r\n            </Grid.Row>\r\n          ) : null}\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          matchGame={game}\r\n          allowControl={[challenge.player]}\r\n          names={{[challenge.player]: 'You', [Game.OTHER_PLAYER[challenge.player]]: 'Challenge'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {wrongMove ? (\r\n            <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n          ) : null}\r\n          {won ? (\r\n            <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n          ) : null}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withClient(Challenges);\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport EditPosition from \"./components/EditPosition\";\nimport Challenges from \"./components/Challenges\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  getLiveTournamentUrl(tournament) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/tournament/${tournament.id}`;\n  }\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = this.getLiveTournamentUrl(liveTournament);\n    } else {\n      tournamentUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          process.env.REACT_APP_DEBUG ? {menuItem: {icon: 'edit', content: 'Edit position'}, path: 'edit-position', render: () => (\n            <Tab.Pane><EditPosition /></Tab.Pane>\n          )} : null,\n          process.env.REACT_APP_DEBUG ? {menuItem: {icon: 'shield', content: 'Challenges'}, path: 'challenges', render: () => (\n            <Tab.Pane><Challenges /></Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}