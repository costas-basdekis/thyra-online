{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/Lobby.js","components/OnlineGame.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","gotUser","user","id","password","localStorage","setItem","onUser","map","callback","gotUsers","usersInfo","users","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","io","on","console","warn","emit","unavailable","socket","process","available","getUser","callbacks","_i","_arr","length","name","push","_i2","_arr2","_","pull","appVersion","settings","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","mine","moves","client","NavigationalTab","path","match","props","url","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","index","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","Game","cells","status","previous","lastMove","isNextMove","Error","history","canUndo","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMoves","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","serializeCompact","serialize","_ref","Math","floor","JSON","stringify","arguments","coordinates","getAvailableCoordinates","winningCell","find","cell","player","level","_this4","_this5","getMovableAvailableMoves","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","defineProperty","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref2","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMoves","_ref3","WORKER_SECOND","createNext","PLAYER_A","getPlayerAvailableMoves","_ref4","_this8","fromCell","toCell","getBuildableAvailableMoves","_ref5","moveWorker","_ref6","_ref7","serialized","deserializeCompact","deserializeVerbose","_ref8","_ref9","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailable","_this9","_this10","PLAYER_B","PLAYERS","Array","flatten","RA","RB","keys","sort","String","fromCharCode","BoardBackground","clickable","isCellAvailable","small","medium","onSelect","selected","allowControl","children","_settings$theme","theme","scheme","rotated","rounded","numbers","classNames","small-board","medium-board","editable","selectable","theme-subtle","theme-pastel","theme-green","theme-rotated","theme-rounded","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","Board_BoardCell","onClick","BoardCell","displayLevel","ThemeDemoBoard","_this$props3","Board_BoardBackground","demoRowsAndColumns","Board","_this$props4","Play","state","selectedGame","submit","setState","takeMoveBack","undo","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","propsGameIndex","changeAutoSubmitMoves","changeSettings","autoSubmitMoves","prevProps","prevState","resigning","canSubmit","otherUser","challengeUser","stopChallengeUser","names","_this$state","displayGame","isMyGame","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","disabled","positive","attention","Modal","trigger","header","actions","style","textAlign","components_Board","reverse","previousGame","Header","_names","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","username","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","possibleConstructorReturn","getPrototypeOf","apply","inherits","withClient","forComponent","SettingsContent","themeSchemeOptions","themeNumbersOptions","updateAutoSubmitMove","e","checked","updateSettings","updateThemeRotated","updateThemeRounded","updateThemeNumbers","updateThemeScheme","_this$props$settings","_this$props$settings$","pointing","attached","render","Form","Checkbox","onChange","Grid","stackable","columns","verticalAlign","Row","Column","Board_ThemeDemoBoard","width","floated","Field","option","radio","update","save","Label","Settings_SettingsContent","error","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","position","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","ref","React","createRef","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","UserList","readyToPlayUsers","readyToPlayMeUsers","Card","maxHeight","overflowY","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Content","components_HashedIcon","Lobby_EditUserName","Meta","extra","EditUserName","changeUsername","target","updateUsername","Input","GameList","usersById","gameGame","playerA","playerB","nextPlayerUser","isUserPlayerA","isUserPlayerB","winnerUser","selectLiveGame","previousMyLiveGameIds","Set","newMyLiveGameIds","has","_this$props4$usersInf","_this$props4$gamesInf","centered","Lobby_GameList","Lobby_UserList","Pane","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","_this$playersInfo","playersInfo","preventDefault","_this$playersInfo2","Value","OnlineGame","OnlineGame_ChosenOnlineGame","App","liveGame","gameUrl","hidden","Notification","permission","requestPermission","onlineGameLabel","Container","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4e0542b.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 1;\r\n\r\nclass Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.password = localStorage.getItem('user-password') || null;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.socket.on('connect', () => {\r\n      this.getUser();\r\n    });\r\n    this.socket.on('disconnect', () => {\r\n      this.gotUser(null);\r\n      this.gotUsers([]);\r\n    });\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {appVersion, id: this.id, password: this.password});\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.password = user.password;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-password', this.password);\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url === '/' ? '' : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (index === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMoves, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMoves = availableMoves;\r\n    this.canUndo = canUndo;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMoves)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMoves = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMoves: this.availableMoves,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMoves: this.allMovesAreAvailable(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMoves[y] === undefined || this.availableMoves[y][x] === undefined) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  getAvailableCoordinates(availableMoves = this.availableMoves) {\r\n    return availableMoves\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)\r\n        .filter(coordinates => coordinates))\r\n      .reduce((total, current) => total.concat(current));\r\n  }\r\n\r\n  hasAvailableMove(availableMoves = this.availableMoves) {\r\n    return this.getAvailableCoordinates(availableMoves).length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMoves(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMoves(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMoves(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMoves(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMoves(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new Error(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new Error(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMoves[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMoves: this.availableMoves,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new Error(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMoves: this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMoves: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMoves(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMoves: this.getMovableAvailableMoves(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMoves: this.getBuildableAvailableMoves(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMoves: this.getPlayerAvailableMoves(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {className, clickable, isCellAvailable, small, medium, makeMove, onSelect, selected, allowControl, settings, children, rowsAndColumns} = this.props;\r\n    const {theme: {scheme, rotated, rounded, numbers}} = settings;\r\n\r\n    className = classNames(\"background\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && clickable,\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'theme-subtle': scheme === 'subtle',\r\n      'theme-pastel': scheme === 'pastel',\r\n      'theme-green': scheme === 'green',\r\n      'theme-rotated': rotated,\r\n      'theme-rounded': rounded,\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n    if (!children) {\r\n      children = (\r\n        rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <BoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable}\r\n                available={isCellAvailable(cell)}\r\n                allowControl={allowControl}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <div className={className} onClick={onSelect}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  children: PropTypes.node,\r\n  rowsAndColumns: PropTypes.array,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass BoardCell extends Component {\r\n  render() {\r\n    let {cell, clickable, available, settings: {theme: {numbers}}, makeMove} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available})}\r\n        onClick={makeMove && available && clickable ? () => makeMove(cell) : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n};\r\n\r\nBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n};\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        isCellAvailable={this.isCellAvailable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.availableMoves[cell.y][cell.x];\r\n  };\r\n\r\n  render() {\r\n    let {game, allowControl, onSelect, makeMove} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={this.isCellAvailable}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        rowsAndColumns={game.rowsAndColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {Button, Header, Icon, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.previous);\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.previous);\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const history = this.state.game.fullHistory;\r\n    const propsGameIndex = history.findIndex(game => game === this.props.game);\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n    this.props.submit(moves);\r\n  };\r\n\r\n  resign = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: !this.props.user.settings.autoSubmitMoves});\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !game.finished\r\n      && game.nextPlayer !== props.game.nextPlayer\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {user, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names, allowControl} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? <Button content={'Auto submit move'} color={user.settings.autoSubmitMoves ? 'green' : 'yellow'} onClick={this.changeAutoSubmitMoves} /> : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>Resign</Button>}\r\n                  header='Resign?'\r\n                  content='Are you sure you want to forfeit?'\r\n                  actions={[{key: 'resign', content: 'Resign', negative: true, onClick: this.resign}, { key: 'continue', content: 'Continue', positive: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board game={displayGame} makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove} allowControl={allowControl} settings={user ? user.settings : undefined} />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} settings={user ? user.settings : undefined} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateThemeRotated = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotated: checked}});\r\n  };\r\n\r\n  updateThemeRounded = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rounded: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, theme: {scheme, rotated, rounded, numbers}}} = this.props;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotated'}\r\n                    name={'theme.rotated'}\r\n                    checked={rotated}\r\n                    onChange={this.updateThemeRotated}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated: true, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rounded'}\r\n                    name={'theme.rounded'}\r\n                    checked={rounded}\r\n                    onChange={this.updateThemeRounded}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded: true, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme: option.value, rotated, rounded, numbers}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: {\r\n      autoSubmitMoves: false,\r\n      theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || {\r\n          autoSubmitMoves: false,\r\n          theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`/hotseat?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUserName client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Rename'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUserName extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  render() {\r\n    const {username} = this.state;\r\n    const {trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'mini'}\r\n        header={'Change name'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'change', positive: true, content: 'Change', onClick: this.updateUsername},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUserName.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass GameList extends Component {\r\n  render() {\r\n    const {user, usersById, games} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {games.map(game => {\r\n          const gameGame = Game.deserialize(game.game);\r\n          const playerA = usersById[game.userIds[0]];\r\n          const playerB = usersById[game.userIds[1]];\r\n          const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n          const isUserPlayerA = user ? playerA.id === user.id : false;\r\n          const isUserPlayerB = user ? playerB.id === user.id : false;\r\n          const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n          const isMyGame = isUserPlayerA || isUserPlayerB;\r\n\r\n          return (\r\n            <Card key={game.id} onClick={() => this.props.selectLiveGame(game)}>\r\n              <Card.Content>\r\n                <Board className={'ui image floated right mini'} game={gameGame} small settings={user ? user.settings : undefined} />\r\n                {/*<Image floated='right' size='mini' src='/images/avatar/large/steve.jpg' />*/}\r\n                <Card.Header>\r\n                  <Label color={winnerUser === playerA ? 'green' : undefined} >\r\n                    {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerA ? <Icon name={'caret right'}/> : null}\r\n                    {playerA.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n                  </Label>\r\n                  {\" vs \"}\r\n                  <Label color={winnerUser === playerB ? 'green' : undefined} >\r\n                    {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                    {nextPlayerUser === playerB ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                    {playerB.name}\r\n                    <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n                  </Label>\r\n                </Card.Header>\r\n                <Card.Meta>\r\n                  {isMyGame ? <Label><Icon name={\"user\"} color={\"green\"} />My game</Label> : null}\r\n                  {\" \"}\r\n                  {!game.finished ? <Label><Icon name={\"circle\"} color={\"green\"} />Live</Label> : null}\r\n                  {\" \"}\r\n                  <Label content={`Move ${game.move}`} />\r\n                </Card.Meta>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.gamesInfo.myLive !== this.props.gamesInfo.myLive) {\r\n      const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\r\n      const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\r\n      const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\r\n      if (newMyLiveGameIds.length === 1) {\r\n        const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\r\n        this.props.selectLiveGame(newGame);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  share = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {location, user, usersInfo: {challengedUser}} = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerA.name}<HashedIcon floated={'right'} size={'mini'} hash={playerA.id} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value>{playerB.name}<HashedIcon floated={'right'} size={'mini'} hash={playerB.id} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.share}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, usersInfo: {byId}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>Choose a game from the lobby</Route>\r\n        <Route path={`${this.props.match.path}/:id`}><ChosenOnlineGame gameGame={gameGame} selectLiveGame={selectLiveGame} /></Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/lobby';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n    if (document.hidden) {\n      if (window.Notification && Notification.permission === \"granted\") {\n        try {\n          new Notification(\"New game ready\");\n        } catch (e) {\n          console.error(\"Could not send notification\", e);\n        }\n      }\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.user && !prevProps.user.readyToPlay && this.props.user && this.props.user.readyToPlay) {\n      if (window.Notification && Notification.permission !== 'denied') {\n        Notification.requestPermission();\n      }\n    }\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}