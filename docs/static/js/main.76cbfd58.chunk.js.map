{"version":3,"sources":["utils.js","client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/ChallengeList.js","components/Lobby.js","components/Play.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreateChallenge.js","components/EditChallenge.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["copyToClipboard","text","textArea","document","createElement","body","appendChild","value","select","execCommand","removeChild","topicalThemes","from","moment","until","name","override","theme","cells","pieces","scheme","getApplicableSettingsAndNextUpdateDate","settings","on","_getTopicalThemeOverr","arguments","length","undefined","matchingTopicalTheme","find","topicalTheme","isSameOrBefore","isSameOrAfter","nextUpdatedDate","nextTopicalTheme","getTopicalThemeOverrideAndNextUpdateDate","useTopicalTheme","_","merge","applicableSettings","getChallengeTitle","challenge","options","type","concat","typeOptions","mateIn","Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","getElementById","newScriptEl","id","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","token","setSettings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","gotChallenges","challengesInfo","challenges","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotGame","game","filter","oldGame","client","gotDeletedGame","gameId","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","meta","publishDatetime","err","return","prepareChallenges","onChallenges","gotNonPersonalChallenges","personalChallenges","mine","gotPersonalChallenges","other","getItem","password","removeItem","localSettings","parse","e","updateApplicableSettingsTimeout","emit","setInterval","autoSubmitMoves","confirmSubmitMoves","enableNotifications","rotateOpponent","animations","arrows","numbers","_this2","constructor","getDefaultSettings","_utils$getApplicableS","utils","applicableSettingsName","applicableSettingsOverride","clearTimeout","millisecondsUntilUpdate","diff","setTimeout","socket","process","available","callbacks","_i","_arr","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this3","myIndex","findIndex","slice","toConsumableArray","byId","fromPairs","online","includes","offline","readyToPlayMe","challengedUser","_this4","live","finished","myLive","userIds","otherLive","myFinished","otherFinished","moves","data","tournament","_this5","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this6","otherChallenges","userId","myChallenges","public","private","isAfter","myPublic","myPrivate","otherSolved","won","otherUnsolved","otherStarted","otherNotStarted","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","lastMovesInHistory","indexOf","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","row","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","_ref10","_this9","getAvailableMoves","lhs","rhs","_this10","playerCells","playerCell","areCellsNeighbours","_this11","_this12","getAvailableMovesMatrix","_this13","_this14","maximumLevel","_this15","isMoveAvailable","updates","_len","newCells","Array","_key","_newCells","update","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref11","_ref12","levelStr","notations","_ref13","_ref14","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref15","_ref17","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","GameClassic","abs","Classic","GameHex","Hex","GAME_TYPES","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","translate","gameType","point","getTranslate","getTranslateClassic","getTranslateHex","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","PieceHalloweenWitchHat","PieceHalloweenCauldron","PieceHalloweenBat","PieceHalloweenSpider","PieceHalloweenCat","PieceHalloweenTombstone","PieceHalloweenPumpkin","PieceHalloweenGhost","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","halloween-witch-hat","halloween-cauldron","halloween-bat","halloween-spider","halloween-cat","halloween-tombstone","halloween-pumpkin","halloween-ghost","PieceDefinitions","values","Definitions","BaseCellDefinitions","paths","border","level0","level1","level2","level3","level4","defaultBorder","width","height","defaultBorderHex","center","PI","angle","cos","sin","reverse","defineCellDefinitions","CellDefinitionsFor","_PureComponent2","Cell_BaseCellDefinitions","OriginalCellDefinitions","HalloweenCellDefinitions","CellDefinitions","cellDefinitionsStyleMap","CellDefinitionsStyle","original","halloween","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","levelAnimate","current","beginElement","allowControl","_this$props2$theme","_this$props2$theme$ce","_this$props2$theme$pi","_this$props2$theme$ro","_this$state","isPlayerAOpponent","isPlayerBOpponent","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","translateTo","translateFrom","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","GameList","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDatetime","TournamentList","visibleTournaments","TournamentList_TournamentCard","ChallengeCard","selectChallenge","gamesById","currentChallengeId","userChallenge","userIsCreator","userInProgress","userSolvedChallenge","userMadeMistakes","mistakes","1","2","3","difficulty","maxDifficulty","title","isMyChallenge","fromNow","toNow","usersStats","attempted","averagePerfectScore","perfect","imperfect","startingPosition","get","ChallengeList","visibleChallenges","ChallengeList_ChallengeCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","challengesStats","perfectStars","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$challeng","selectLiveChallenge","render","components_GameList","challengesList","components_ChallengeList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","canAnyPlayerSubmit","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","Play_PlayHistory","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","submitAndDisableConfirm","updateSettings","isPlayerControlled","previousGame","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","PlayHistory","lastVisibleGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","href","navigator","catch","alert","switchToClassic","switchTo","switchToHex","open","active","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themeCellsOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateConfirmSubmitMoves","updateEnableNotifications","updateThemeUseTopicalTheme","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","updateThemeCells","_this$props$settings","_theme$cells","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","admin","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","_Game$Classic","_Game$Classic2","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","0","4","b","EditPositionBoard","updatePosition","newCell","newPosition","CreateChallenge","editing","currentStep","tree","onCreateChallenge","getTree","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicateChalle","duplicateChallenge","newChallenge","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","challengeResponse","deleteCurrentStep","_this$duplicateChalle2","removeStep","editChallenge","createChallenge","cleanedChallenge","updateChallenge","createOrUpdateChallenge","discardChallenge","initialChallenge","fillGames","prevChallenges","getMatchingChallenges","source","challengeStep","response","treePathStep","oldStep","isArray","getNextTree","nextTree","getDifficultyStars","rowIndex","columnIndex","CreateChallenge_ChallengeForm","ChallengeForm","editingPosition","convertedValue","valueConversion","newChallengeToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this4$state","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","EditChallenge","dismissUrlChallengeError","components_CreateChallenge","Challenges","_this$props$challenge","components_EditChallenge","Challenges_ChallengePlayer","ChallengePlayer","challengeId","getResumedChallengeGame","submittedGame","wrongMove","askServer","shareChallenge","resultingGame","userChallengeStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","shift","invalidPlayerPositions","v","validPlayerResponse","submitChallengeMove","_ret","success","App","liveGame","liveTournament","liveChallenge","gameUrl","tournamentUrl","challengeUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76cbfd58.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport const copyToClipboard = text => {\r\n  const textArea = document.createElement(\"textarea\");\r\n  // This won't work\r\n  // textArea.style.display = 'none'\r\n  document.body.appendChild(textArea);\r\n  textArea.value = text;\r\n  textArea.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(textArea);\r\n};\r\n\r\nexport const topicalThemes = [\r\n  {\r\n    from: moment(\"2019-10-28T12:30:00\"),\r\n    until: moment(\"2019-11-01T00:00:00\"),\r\n    name: 'Halloween',\r\n    override: {\r\n      theme: {\r\n        cells: 'halloween',\r\n        pieces: 'halloween-ghost',\r\n        scheme: 'halloween',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst getTopicalThemeOverrideAndNextUpdateDate = (on = moment()) => {\r\n  const matchingTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrBefore(on) && topicalTheme.until.isSameOrAfter(on)\r\n  ));\r\n  if (matchingTopicalTheme) {\r\n    return {\r\n      override: matchingTopicalTheme.override,\r\n      nextUpdatedDate: matchingTopicalTheme.until,\r\n      name: matchingTopicalTheme.name,\r\n    };\r\n  }\r\n\r\n  const nextTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrAfter(on)\r\n  ));\r\n  if (nextTopicalTheme) {\r\n    return {override: null, nextUpdatedDate: nextTopicalTheme.from, name: null};\r\n  }\r\n\r\n  return {override: null, nextUpdatedDate: null, name: null};\r\n};\r\n\r\nexport const getApplicableSettingsAndNextUpdateDate = (settings, on) => {\r\n  const {override, nextUpdatedDate, name} = getTopicalThemeOverrideAndNextUpdateDate(on);\r\n  if (settings.theme.useTopicalTheme && override) {\r\n    settings = _.merge({}, settings, override);\r\n  }\r\n\r\n  return {applicableSettings: settings, nextUpdatedDate, override, name};\r\n};\r\n\r\nexport const getChallengeTitle = challenge => {\r\n  switch (challenge.options.type) {\r\n    case 'mate':\r\n      return `Find mate in ${challenge.options.typeOptions.mateIn}`;\r\n    case 'avoidMate':\r\n      return `Avoid mate in ${challenge.options.typeOptions.mateIn}`;\r\n    default:\r\n      return 'Unknown challenge';\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst appVersion = 11;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return {\r\n      autoSubmitMoves: false,\r\n      confirmSubmitMoves: true,\r\n      enableNotifications: false,\r\n      theme: {\r\n        useTopicalTheme: true,\r\n        cells: 'original',\r\n        pieces: 'king',\r\n        scheme: '',\r\n        rotateOpponent: true,\r\n        animations: true,\r\n        arrows: true,\r\n        numbers: 'obvious',\r\n      },\r\n    };\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      settings = null;\r\n    }\r\n    this.updateApplicableSettingsTimeout = null;\r\n    this.setSettings(settings);\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onChallenges = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  setSettings(settings) {\r\n    if (settings) {\r\n      this.settings = _.merge(this.constructor.getDefaultSettings(), settings);\r\n    } else {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    const {applicableSettings, nextUpdatedDate, override, name} = utils.getApplicableSettingsAndNextUpdateDate(this.settings);\r\n    this.applicableSettings = applicableSettings;\r\n    this.applicableSettingsName = name;\r\n    this.applicableSettingsOverride = override;\r\n    if (this.updateApplicableSettingsTimeout) {\r\n      clearTimeout(this.updateApplicableSettingsTimeout);\r\n      this.updateApplicableSettingsTimeout = null;\r\n    }\r\n    if (nextUpdatedDate) {\r\n      const millisecondsUntilUpdate = nextUpdatedDate.diff(moment());\r\n      this.updateApplicableSettingsTimeout = setTimeout(() => {\r\n        this.setSettings(this.settings);\r\n        this.onUser.map(callback => callback(this.user));\r\n      }, millisecondsUntilUpdate);\r\n    }\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n    this.socket.on(\"game\", this.gotGame);\r\n    this.socket.on(\"deleted-game\", this.gotDeletedGame);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.challengesInfo = this.prepareChallenges([]);\r\n    this.socket.on(\"challenges\", this.gotNonPersonalChallenges);\r\n    this.socket.on(\"personal-challenges\", this.gotPersonalChallenges);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.setSettings(user.settings);\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n    this.gotChallenges(this.challengesInfo.challenges);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  gotGame = game => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== game.id).concat([game]);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  gotDeletedGame = gameId => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== gameId);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createChallenge(challenge) {\r\n    this.socket.emit('create-challenge', challenge);\r\n  }\r\n\r\n  updateChallenge(challenge) {\r\n    this.socket.emit('update-challenge', challenge);\r\n  }\r\n\r\n  submitChallengeMove(challenge, path) {\r\n    this.socket.emit(\"submit-challenge-moves\", {id: challenge.id, path});\r\n  }\r\n\r\n  gotChallenges = challenges => {\r\n    for (const challenge of challenges) {\r\n      challenge.meta.publishDatetime = moment(challenge.meta.publishDatetime);\r\n    }\r\n    challenges = _.sortBy(challenges, ['publishDatetime', 'createdDatetime', 'id'], ['desc', 'desc']);\r\n    this.challengesInfo = this.prepareChallenges(challenges);\r\n    this.onChallenges.map(callback => callback(this.challengesInfo));\r\n  };\r\n\r\n  gotNonPersonalChallenges = personalChallenges => {\r\n    this.gotChallenges(personalChallenges.concat(this.challengesInfo.mine));\r\n  };\r\n\r\n  gotPersonalChallenges = personalChallenges => {\r\n    this.gotChallenges(personalChallenges.concat(this.challengesInfo.other));\r\n  };\r\n\r\n  prepareChallenges(challenges) {\r\n    const otherChallenges = this.user ? challenges.filter(challenge => challenge.userId !== this.user.id) : challenges;\r\n    const myChallenges = this.user ? challenges.filter(challenge => challenge.userId === this.user.id) : [];\r\n    return {\r\n      challenges,\r\n      public: challenges.filter(challenge => challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()),\r\n      private: challenges.filter(challenge => !challenge.meta.public || challenge.meta.publishDatetime.isAfter()),\r\n      byId: _.fromPairs(challenges.map(game => [game.id, game])),\r\n      mine: myChallenges,\r\n      myPublic: myChallenges.filter(challenge => challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()),\r\n      myPrivate: myChallenges.filter(challenge => !challenge.meta.public || challenge.meta.publishDatetime.isAfter()),\r\n      other: otherChallenges,\r\n      otherSolved: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.won) : otherChallenges,\r\n      otherStarted: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.started && !this.user.challenges[challenge.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.started) : otherChallenges,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n    this.lastMovesInHistory = this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove);\r\n    this.path = this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    throw new Error('Not implemented `areCellsNeighbours`');\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => this.areCellsNeighbours(cell, playerCell))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nclass GameClassic extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    return (\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    );\r\n  }\r\n}\r\nGame.Classic = GameClassic;\r\n\r\nclass GameHex extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    if (!(\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    )) {\r\n      return false;\r\n    }\r\n\r\n    if (lhs.x === rhs.x) {\r\n      return true;\r\n    } else if (lhs.x % 2 === 0) {\r\n      return rhs.y >= lhs.y;\r\n    } else {\r\n      return rhs.y <= lhs.y;\r\n    }\r\n  }\r\n}\r\nGame.Hex = GameHex;\r\n\r\nGame.GAME_TYPES = [Game.Classic, Game.Hex];\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import Game from \"../../../game/game\";\r\n\r\nexport const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n\r\nexport const translate = (gameType, point) => {\r\n  return getTranslate(gameType)(point);\r\n};\r\n\r\nexport const getTranslate = gameType => {\r\n  if (gameType === Game.Classic) {\r\n    return getTranslateClassic;\r\n  } else if (gameType === Game.Hex) {\r\n    return getTranslateHex;\r\n  }\r\n\r\n  throw new Error(`Unknown game type of type '${gameType ? gameType.constructor.name : gameType}'`);\r\n};\r\n\r\nexport const getTranslateClassic = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: point.y * cellSize,\r\n  });\r\n};\r\n\r\nexport const getTranslateHex = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: (point.y + (point.x % 2 === 0 ? 0.25 : -0.25)) * cellSize,\r\n  });\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenWitchHat = definePiece('PieceHalloweenWitchHat', {\r\n  path: <path d=\"m503.15112,306.14207c-0.08158,-19.00159 -17.54216,-60.97152 -168.51607,-65.22834l-56.26328,-124.83471l76.29825,31.88264l-114.45191,-123.15047c-15.62768,-10.96294 -68.47535,146.47597 -90.00964,213.1728l0,0c-15.14543,2.38948 -62.92045,11.0826 -99.71439,30.45222c-35.89653,18.84568 -54.83104,35.48317 -49.64961,58.60561c-3.7637,26.02861 5.74707,103.14994 246.53844,113.09401c77.45129,3.20712 270.97346,-48.42768 255.7682,-133.99376zm-240.39978,5.43162c-121.8814,8.58253 -132.04665,-25.29799 -132.04665,-25.29799l11.06991,-24.04705c0,0 33.36383,22.50785 101.67601,21.3258c68.31218,-1.19474 96.66319,-31.58713 96.66319,-31.58713l17.99721,21.89507c-4.4073,28.55043 -95.35967,37.7113 -95.35967,37.7113z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCauldron = definePiece('PieceHalloweenCauldron', {\r\n  path: <path d=\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954 c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673 c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939 c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954 c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689 c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1 c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715 c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z M244.915,236c-78.418,0-125.798-29.477-125.798-51.3 c0-20.734,49.014-50.853,125.816-50.853c8.044,0,15.73,0.399,23.128,1.01l-12.19,28.209c-3.218,7.447-2.473,16.014,1.983,22.794 c4.456,6.78,12.024,10.862,20.138,10.862c9.611,0,18.303-5.711,22.118-14.532l16.543-38.252 c34.191,10.619,54.079,27.573,54.079,40.762C370.731,207.889,320.981,236,244.915,236z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenBat = definePiece('PieceHalloweenBat', {\r\n  path: <path d=\"m520.84272,171.44399c-8.83353,-12.69106 -16.6399,-27.11688 -22.85989,-42.92364c-9.91775,-25.0968 -14.56277,-50.31915 -14.5057,-73.25893c0.01141,-8.66234 -10.44274,-13.31877 -16.87957,-7.50964c-28.86304,25.99842 -77.48168,46.1763 -136.24632,55.95709c5.66076,-27.88153 5.47816,-60.38526 -10.4998,-91.3825c-2.86462,-5.55805 -10.62534,-6.19716 -14.28886,-1.14128c-4.65643,6.42542 -9.55254,15.94372 -9.55254,27.61904l-68.13457,0c0,-11.67532 -4.88469,-21.19362 -9.54112,-27.61904c-3.66352,-5.06729 -11.41283,-4.42818 -14.28886,1.14128c-15.97796,30.98582 -16.14915,63.4439 -10.48839,91.32544c-58.76464,-9.78079 -107.3947,-29.94726 -136.24632,-55.93426c-6.43683,-5.79772 -16.87957,-1.12987 -16.87957,7.53247c0.06848,22.93978 -4.58796,48.17354 -14.5057,73.25893c-6.21999,15.80676 -14.02636,30.24399 -22.85989,42.92364c-6.6765,9.56395 -1.92877,22.98543 9.19874,26.50058c10.19165,3.207 20.60015,7.74931 30.81463,13.60409c35.3227,20.23494 56.25382,50.76425 60.5108,76.28333c1.17552,7.0303 3.62928,9.74655 13.30736,8.19441c24.05824,-3.90319 56.71033,-1.27824 88.11843,16.71979c17.29043,9.91775 31.5907,22.26642 41.93072,35.25422c3.36678,4.22275 7.79496,6.99606 15.00787,6.99606c7.07595,0 11.54978,-2.79614 14.90515,-7.00748c10.35143,-12.99921 24.69736,-25.32506 41.9992,-35.23139c31.41951,-18.00944 64.07161,-20.63439 88.15267,-16.7312c9.67808,1.56356 12.12042,-1.17552 13.30736,-8.20582c4.25698,-25.50767 25.19952,-56.03698 60.52222,-76.28333c10.22589,-5.86619 20.65722,-10.39708 30.81463,-13.60409c11.11609,-3.49232 15.85242,-16.91381 9.18733,-26.47776z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 0, y: 100},\r\n});\r\n\r\nconst PieceHalloweenSpider = definePiece('PieceHalloweenSpider', {\r\n  path: <path d=\"M392.236,256.85c-3.204-3.473-7.704-5.451-12.436-5.451h-20.374c-3.501-15.538-8.927-30.108-16.075-43.152 l44.043-13.528l68.976,73.267c3.34,3.542,7.826,5.325,12.339,5.325c4.169,0,8.332-1.528,11.608-4.603 c6.798-6.41,7.109-17.127,0.712-23.938l-76.206-80.945c-4.416-4.697-11.13-6.464-17.299-4.581l-65.142,20.012 c-6.842-7.334-14.321-13.819-22.387-19.144l79.475-60.708l63.803,37.227c8.073,4.703,18.425,1.968,23.151-6.096 c4.713-8.08,1.987-18.447-6.086-23.161l-73.59-42.94c-5.917-3.447-13.362-2.994-18.82,1.176l-61.323,46.84 c-2.544-8.789-7.769-16.651-14.916-23.168l9.129-19.879c3.903-8.5,0.168-18.554-8.333-22.448c-8.532-3.92-18.554-0.182-22.445,8.325 l-8.448,18.416c-5.988-1.463-12.204-2.49-18.769-2.49s-12.786,1.026-18.768,2.49l-8.455-18.416 c-3.885-8.507-13.938-12.23-22.439-8.325c-8.501,3.894-12.236,13.948-8.338,22.448l9.135,19.879 c-6.785,6.177-11.744,13.593-14.405,21.838l-61.835-47.231c-5.456-4.151-12.901-4.629-18.82-1.167l-73.597,42.94 c-8.066,4.713-10.798,15.085-6.085,23.161c4.713,8.08,15.085,10.814,23.157,6.095l63.802-37.227l80.732,61.669 c-8.054,5.166-15.577,11.384-22.439,18.555l-66.347-20.384c-6.17-1.884-12.87-0.107-17.298,4.58L4.613,243.058 c-6.402,6.814-6.085,17.528,0.712,23.938c3.27,3.086,7.439,4.607,11.608,4.607c4.5,0,8.993-1.787,12.333-5.326l68.981-73.271 l44.916,13.794c-7.296,12.955-12.916,27.402-16.586,42.888h-20.736c-4.733,0-9.232,1.978-12.437,5.451L4.496,351.453 c-6.35,6.872-5.923,17.587,0.958,23.927c3.256,3.006,7.375,4.49,11.478,4.49c4.565,0,9.11-1.835,12.45-5.447l83.879-90.868h8.72 c-0.103,2.606-0.317,5.17-0.317,7.808c0,82.225,54.247,148.879,121.156,148.879c66.91,0,121.156-66.654,121.156-148.879 c0-2.059-0.181-4.06-0.252-6.095h8.649l83.878,90.867c3.341,3.612,7.892,5.448,12.456,5.448c4.098,0,8.215-1.489,11.478-4.49 c6.876-6.341,7.31-17.059,0.959-23.928L392.236,256.85z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCat = definePiece('PieceHalloweenCat', {\r\n  path: <path d=\"M535.892,69.273c-1.147-7.46-7.924-12.77-15.396-12.135c-18.883,1.568-36.254,5.171-53.12,11.036 c-26.556,9.215-50.526,22.663-71.3,39.987l-0.308-0.086c-14.421-3.867-29.328-7.866-44.305-11.164 c-22.579-4.957-45.793-7.843-68.993-8.569c-21.208-0.665-43.206,0.343-67.381,3.097c-24.638,2.791-49.336,8.058-73.413,15.628 c-0.21,0.065-0.397,0.119-0.567,0.166c-1.97-1.857-3.953-3.192-5.603-4.301c-0.621-0.429-1.265-0.84-1.849-1.304 c-21.19-16.97-46.129-29.802-74.134-38.137c-13.444-4.004-26.71-6.356-40.545-7.206C11.8,55.825,5.42,60.755,4.011,67.791 c-0.182,0.913-0.383,1.801-0.574,2.681c-0.497,2.28-1.013,4.632-1.363,7.236c-3.068,22.953-2.728,46.419,0.99,69.745 c4.587,28.742,13.229,55.232,25.692,78.808c-6.198,14.209-10.097,30.103-11.889,48.472c-3.624,37.075,3.206,72.854,20.302,106.335 c13.562,26.546,33.085,49.106,58.047,67.047c22.906,16.461,44.463,24.021,70.319,31.83c25.86,7.812,52.794-18.394,103.458-18.053 c47.781,0.304,59.902,19.845,93.234,19.845c0,0,1.218-0.275,1.204-0.275c18.337-5.021,34.737-11.397,50.143-19.49 c27.872-14.626,51.054-34.909,68.896-60.294c19.695-28.012,31.298-59.897,34.504-94.77c2.525-27.56-1.115-54.252-10.889-79.539 l1.956-4.331c5.596-12.405,11.383-25.219,16.186-38.447c7.761-21.406,12.134-44.354,13.366-70.146 C538.166,102.325,538.497,86.233,535.892,69.273z M228.288,339.606c0,0-55.298,5.619-85.933-25.015 c-30.635-30.645-25.013-85.936-25.013-85.936s55.293-5.612,85.928,25.022C233.909,284.311,228.288,339.606,228.288,339.606z  M401.251,314.591c-30.635,30.634-85.93,25.015-85.93,25.015s-5.614-55.295,25.02-85.928 c30.631-30.635,85.926-25.022,85.926-25.022S431.891,283.957,401.251,314.591z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenTombstone = definePiece('PieceHalloweenTombstone', {\r\n  path: <g>\r\n   <path d=\"m310.57959,214.18901c18.11361,-19.31361 -3.7406,-43.37905 -25.98583,-38.09752l0,42.67408c9.2552,1.74895 18.77428,3.11653 25.98583,-4.57656z\"/>\r\n   <path d=\"m129.70544,175.71203l0,42.67408c1.4138,0.01734 2.82568,0.04045 4.23563,0.07705c40.18933,0.00193 36.10009,-50.48851 -4.23563,-42.75112z\"/>\r\n   <path d=\"m413.15147,392.28371l-16.74989,0l0,-215.12898c0,-40.68243 -13.72389,-78.15395 -36.78388,-108.06144l-22.93479,7.21154l9.8003,27.57684l0.81284,2.2748l-1.54285,1.56597l-23.05228,23.42789c-1.05361,1.07287 -2.77752,1.08443 -3.85232,0.03274c-1.02472,-1.01509 -1.07865,-2.65617 -0.13676,-3.7329l20.04555,-22.91938l-12.48344,-29.52418l-1.64687,-3.89277l4.24718,-2.15345l21.51906,-10.90592c-32.4115,-35.66478 -79.16711,-58.05447 -131.15032,-58.05447c-47.67246,0 -90.9398,18.83399 -122.78115,49.45994l25.07861,12.71458l2.53097,1.28282l0.31589,2.24205l7.99742,56.33826c0.2138,1.48892 -0.8244,2.86613 -2.31332,3.07993c-1.42151,0.20032 -2.74285,-0.74542 -3.04333,-2.12841l-11.27574,-52.83457l-30.02113,-9.43818c-27.17619,31.13831 -43.64679,71.86504 -43.64679,116.44023l0,215.12898l-16.75181,0c-10.63818,0 -19.2616,8.62342 -19.2616,19.2616l0,18.9226c0,10.63433 8.62342,19.2616 19.2616,19.2616l387.82079,0c10.63818,0 19.2616,-8.62727 19.2616,-19.2616l0,-18.9226c-0.00193,-10.63818 -8.62535,-19.26353 -19.26353,-19.26353zm-144.04211,-222.43298c5.59164,-0.28122 11.37783,-0.57207 17.23143,-0.57207c13.94155,0 31.1229,1.44847 40.31261,12.73577c0.00385,0.00385 0.0077,0.0077 0.01156,0.01156l0.0077,0.01541c0.00385,0.00578 0.01156,0.01156 0.01541,0.01734c0.0077,0.0077 0.01541,0.01541 0.01926,0.02504c0.00385,0.00578 0.0077,0.01156 0.01541,0.01926c6.75697,8.36531 8.55408,16.01602 5.34124,22.74025c-5.38362,11.27959 -23.59931,17.36819 -37.99736,17.36819c-3.28025,0 -9.09533,-0.89374 -9.09533,-0.89374s-4.54959,37.16719 2.2382,44.46541c1.52745,1.63724 3.37078,2.8199 5.51267,3.54221l-32.98549,0c10.84621,-4.50721 15.75406,-26.9778 15.75406,-49.26732c0,-22.61312 -4.91171,-45.40923 -15.76947,-49.79509c2.96629,-0.09246 6.11556,-0.2504 9.3881,-0.4122zm-59.43938,0.48154l34.88854,0c-3.75794,1.56019 -7.90881,5.69758 -11.09468,15.3149c-2.9085,8.77944 -3.1069,20.6677 -3.1069,33.48244c0,22.0006 3.46516,45.50553 14.04749,50.19381l-34.89624,0c3.74253,-1.55826 7.88955,-5.69373 11.05616,-15.3149c2.89117,-8.77173 3.13001,-20.66192 3.13001,-33.46896c0.00385,-22.00831 -3.48635,-45.51709 -14.02437,-50.20729zm-104.76,-0.05201c3.66741,-0.07705 7.46002,-0.23692 11.41443,-0.40257c5.73803,-0.23884 11.6629,-0.48732 17.50109,-0.48732c11.63979,0 20.4173,1.0305 27.62114,3.24558c11.07542,3.40545 17.20446,10.95407 16.81538,20.71393c-0.47769,12.00961 -10.52647,23.21986 -23.3701,26.07636c-0.59518,0.13098 -1.08443,0.55088 -1.29823,1.1191c-0.2138,0.56629 -0.13483,1.20578 0.22151,1.69887l21.18006,29.4298c6.29854,8.78714 12.74155,15.2263 22.73062,17.64748l-21.625,0l-34.1932,-47.22752c-0.35056,-0.48732 -0.92263,-0.76276 -1.5313,-0.74542c-1.7374,0.06742 -3.79646,0.13676 -5.89598,0.13676c-1.68154,0 -3.20898,-0.04238 -4.66516,-0.13483c-0.48924,-0.02889 -0.98619,0.14446 -1.35024,0.48539c-0.36212,0.34286 -0.56822,0.81862 -0.56822,1.31749c0,2.50016 -0.22921,5.6398 -0.46228,8.96435c-0.84558,11.75536 -1.89919,26.37876 4.88667,33.66735c1.52359,1.63531 3.36308,2.81605 5.50304,3.53643l-32.95275,0c10.89051,-4.50721 15.8157,-26.97973 15.8157,-49.27118c0,-22.57652 -4.91363,-45.33411 -15.77718,-49.77005z\"/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 50, y: 50},\r\n});\r\n\r\nconst PieceHalloweenPumpkin = definePiece('PieceHalloweenPumpkin', {\r\n  path: <path d=\"m468.74161,145.38332c-25.52721,-31.3253 -52.92613,-46.95841 -82.22343,-46.95841c-20.72406,0 -40.16348,8.29877 -58.36017,25.00115c-12.62923,-9.61583 -26.26865,-16.44316 -40.93732,-20.48009c-3.03246,-39.3801 -20.45722,-67.93597 -52.29333,-85.65997l-33.33805,23.54115c21.70947,14.12736 34.34823,33.82218 37.88389,59.08636c-21.72472,2.535 -41.93416,10.61267 -60.63213,24.23112c-18.68273,-17.16363 -38.64438,-25.72163 -59.85448,-25.72163c-29.81764,0 -56.60092,15.63311 -80.33839,46.95841c-25.77309,32.32024 -38.6482,70.49765 -38.6482,114.44265c0,11.10824 1.014,22.26984 3.01722,33.35139c7.58211,45.47172 28.81127,85.15297 63.6646,118.97324c31.32339,30.84689 60.38435,46.24556 87.16381,46.24556c0.6328,0 1.28465,-0.02287 1.93651,-0.06671c30.65438,-9.40998 63.19572,-14.48378 96.93403,-14.48378c28.17847,0 55.52974,3.54137 81.64019,10.18954l-0.14104,-0.18679l0.61564,0.30496c4.98994,1.27703 9.93032,2.67604 14.82877,4.17988c0.66329,0.04003 1.32658,0.0629 1.98797,0.0629c26.78518,0 55.56786,-15.39867 86.39569,-46.24556l0,-0.00191c33.84124,-33.82027 55.57167,-73.49962 65.16463,-118.97324c2.55406,-12.61017 3.79296,-25.00115 3.79296,-37.12911c0.00191,-42.46213 -12.76075,-79.34345 -38.25937,-110.66113zm-373.25996,61.40407l108.37772,37.1577c-9.0993,24.7305 -25.51387,37.10433 -49.26277,37.10433c-6.56812,0 -12.38717,-1.0159 -17.42666,-3.03056l0,0c-32.34883,-13.12289 -46.2284,-36.88323 -41.68828,-71.23146zm96.2574,231.91396c0.50509,-0.51081 1.26559,-1.27322 2.26244,-2.27578l0.75859,0.77193c-0.50509,0.49938 -1.50956,0.99303 -3.02103,1.50384zm184.91743,-70.48812l-249.34824,0l-18.17954,-50.80093l48.5099,32.62139l39.39535,-32.62139l53.07289,37.14054l55.32199,-39.37439l43.19022,37.12911l50.78568,-31.82467l-22.74825,47.73034zm0.00191,-90.19437c-5.56555,2.01275 -11.36364,3.03056 -17.42095,3.03056c-24.25781,0 -40.68953,-12.37383 -49.27421,-37.10433l108.3701,-37.1596c4.05218,34.34823 -9.8617,58.11048 -41.67494,71.23337z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenGhost = definePiece('PieceHalloweenGhost', {\r\n  path: <g>\r\n    <path d={\"m201.144531 256c-17.300781 0-36.574219 30.042969-36.574219 73.144531-.179687 13.222657.574219 26.441407 2.25 39.558594 20.023438-16.175781 48.621094-16.175781 68.644532 0 1.675781-13.117187 2.429687-26.335937 2.25-39.558594 0-43.101562-19.273438-73.144531-36.570313-73.144531zm0 0\"}/>\r\n    <path d={\"m201.144531 374.855469c-11.320312-.027344-22.007812 5.222656-28.902343 14.199219 6.390624 13.230468 16.449218 13.230468 28.902343 13.230468 12.449219 0 22.507813 0 28.898438-13.230468-6.894531-8.976563-17.582031-14.226563-28.898438-14.199219zm0 0\"}/>\r\n    <path d={\"m146.285156 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m9.390625 137.398438c-6.011719 5.988281-9.390625 14.125-9.390625 22.609374 0 8.488282 3.378906 16.621094 9.390625 22.613282l27.179687 27.234375v-22.691407c.042969-19.089843 2.753907-38.082031 8.046876-56.421874-12.015626-5.023438-25.871094-2.40625-35.226563 6.65625zm0 0\"}/>\r\n    <path d={\"m292.570312 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m434.707031 387.328125c-9.484375-16.925781-14.359375-36.042969-14.136719-55.441406v-66.40625c-2.863281-1.125-4.96875-3.617188-5.601562-6.632813-.632812-3.011718.296875-6.140625 2.464844-8.324218l67.886718-67.886719c12.472657-12.507813 12.472657-32.75 0-45.257813-12.667968-12.078125-32.589843-12.078125-45.257812 0l-67.882812 67.886719c-3.589844 3.464844-9.292969 3.414063-12.816407-.109375-3.527343-3.527344-3.578125-9.230469-.113281-12.816406l55.351562-55.351563c-20.773437-80.652343-93.511718-137.0117185-176.796874-136.988281h-2.832032c-78.738281 1.859375-147.5 53.765625-170.863281 128.976562-6.140625 18.785157-9.261719 38.425782-9.253906 58.1875v178.550782c.078125 14.484375 3.398437 28.769531 9.71875 41.800781 29.476562 61.511719 121.363281 104.484375 223.425781 104.484375 100.761719 0 178.148438-32.171875 215.863281-88.960938-28.007812 2.40625-54.90625-11.484374-69.15625-35.710937zm-343.277343-209.042969c0-33.882812 15.722656-59.429687 36.570312-59.429687 20.84375 0 36.570312 25.546875 36.570312 59.429687 0 33.882813-15.726562 59.429688-36.570312 59.429688-20.847656 0-36.570312-25.546875-36.570312-59.429688zm157.859374 210.960938c-.171874 1.1875-.578124 2.324218-1.199218 3.347656-9.296875 25.070312-26.128906 27.976562-46.945313 27.976562-20.820312 0-37.652343-2.90625-46.949219-27.976562-.621093-1.023438-1.027343-2.160156-1.199218-3.347656-5.195313-19.589844-7.457032-39.847656-6.710938-60.101563 0-51.265625 24.101563-91.429687 54.859375-91.429687 30.753907 0 54.855469 40.164062 54.855469 91.429687.75 20.253907-1.511719 40.511719-6.710938 60.101563zm24.996094-151.53125c-20.84375 0-36.570312-25.546875-36.570312-59.429688 0-33.882812 15.726562-59.429687 36.570312-59.429687 20.847656 0 36.570313 25.546875 36.570313 59.429687 0 33.882813-15.722657 59.429688-36.570313 59.429688zm0 0\"}/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n    'halloween-witch-hat': PieceHalloweenWitchHat,\r\n    'halloween-cauldron': PieceHalloweenCauldron,\r\n    'halloween-bat': PieceHalloweenBat,\r\n    'halloween-spider': PieceHalloweenSpider,\r\n    'halloween-cat': PieceHalloweenCat,\r\n    'halloween-tombstone': PieceHalloweenTombstone,\r\n    'halloween-pumpkin': PieceHalloweenPumpkin,\r\n    'halloween-ghost': PieceHalloweenGhost,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass BaseCellDefinitions extends PureComponent {\r\n  static defaultBorder = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`M0,0h${constants.cellSize}v${constants.cellSize}h-${constants.cellSize}z M${constants.borderWidth},${constants.borderWidth}v${constants.cellSize - constants.borderWidth * 2}h${constants.cellSize - constants.borderWidth * 2}v-${constants.cellSize - constants.borderWidth * 2}z`} />\r\n    </g>\r\n  );\r\n  static defaultBorderHex = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`\r\n        M ${(() => {\r\n          const center = {x: 0, y: 0};\r\n          return [0, 1, 2, 3, 4, 5]\r\n            .map(index => index / 6 * Math.PI * 2)\r\n            .map(angle => {\r\n              const radius = constants.cellSize * 1.5 / 2;\r\n              const x = center.x + Math.cos(angle) * radius;\r\n              const y = center.y + Math.sin(angle) * radius;\r\n              return `${x},${y}`;\r\n            })\r\n            .join('L');\r\n        })()} z \r\n        M ${[0, 1, 2, 3, 4, 5].reverse().map(index => index / 6 * Math.PI * 2).map(angle => `${Math.cos(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2},${Math.sin(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2}`).concat('L')} z \r\n      `} />\r\n    </g>\r\n  );\r\n\r\n\trender() {\r\n\t  const {name, paths} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`cell-${name}-border`} className={\"cell-border\"}>\r\n          {paths.border}\r\n        </g>\r\n        <g id={`cell-${name}-0`} className={\"cell-0\"}>\r\n          {paths.level0}\r\n        </g>\r\n        <g id={`cell-${name}-1`} className={\"cell-1\"}>\r\n          {paths.level1}\r\n        </g>\r\n        <g id={`cell-${name}-2`} className={\"cell-2\"}>\r\n          {paths.level2}\r\n        </g>\r\n        <g id={`cell-${name}-3`} className={\"cell-3\"}>\r\n          {paths.level3}\r\n        </g>\r\n        <g id={`cell-${name}-4`} className={\"cell-4\"}>\r\n          {paths.level4}\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBaseCellDefinitions.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  paths: PropTypes.shape({\r\n    border: PropTypes.node.isRequired,\r\n    level0: PropTypes.node.isRequired,\r\n    level1: PropTypes.node.isRequired,\r\n    level2: PropTypes.node.isRequired,\r\n    level3: PropTypes.node.isRequired,\r\n    level4: PropTypes.node.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst defineCellDefinitions = (className, name, paths) => {\r\n  class CellDefinitionsFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BaseCellDefinitions name={name} paths={paths} />\r\n      );\r\n    }\r\n  }\r\n  CellDefinitionsFor.displayName = className;\r\n\r\n  return CellDefinitionsFor;\r\n};\r\n\r\nconst OriginalCellDefinitions = defineCellDefinitions('OriginalCellDefinitions', 'original', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <rect\r\n      className={'border fill'}\r\n      width={constants.cellSize - constants.borderWidth * 2}\r\n      height={constants.cellSize - constants.borderWidth * 2}\r\n      transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n    />\r\n  ),\r\n  level1: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 2}\r\n        height={constants.cellSize - constants.borderWidth * 2}\r\n        transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level3: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level4: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 10}\r\n        height={constants.cellSize - constants.borderWidth * 10}\r\n        transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nconst HalloweenCellDefinitions = defineCellDefinitions('HalloweenCellDefinitions', 'halloween', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <path className={\"fill\"} transform={\"scale(0.21)\"} d={\"m475.484375 292.628906h18.285156c8.34375.027344 15.640625-5.609375 17.71875-13.691406 2.074219-8.082031-1.605469-16.539062-8.933593-20.53125.082031-.433594.132812-.875.148437-1.316406.09375-.339844.164063-.683594.210937-1.035156v-171.820313c6.503907-11.746094 9.664063-25.046875 9.140626-38.464844 0-27.902343-10.832032-45.7148435-18.285157-45.7148435-7.449219 0-18.285156 17.8125005-18.285156 45.7148435-.523437 13.417969 2.636719 26.71875 9.144531 38.464844v109.511719c-11.957031-32.042969-32.140625-60.375-58.515625-82.148438-4.039062-3.027344-9.769531-2.210937-12.800781 1.828125-3.027344 4.042969-2.210938 9.773438 1.828125 12.800781 49.691406 37.265626 67 117.863282 69.332031 129.828126h-27.273437c0-2.53125-.492188-62.117188-43.492188-72.867188-3.179687-.820312-6.550781.125-8.839843 2.476562-2.289063 2.355469-3.140626 5.753907-2.230469 8.90625.90625 3.15625 3.4375 5.578126 6.625 6.355469 29.121093 7.277344 29.652343 54.527344 29.652343 55.128907h-173.488281c2.828125-12.214844 22.457031-88.640626 77.449219-120.0625 4.253906-2.566407 5.679688-8.054688 3.21875-12.363282-2.464844-4.3125-7.917969-5.871094-12.285156-3.507812-33.832032 19.34375-55.425782 52.480468-68.574219 81.003906v-116.890625c6.492187-11.75 9.640625-25.050781 9.105469-38.464844 0-27.902343-10.832032-45.7148435-18.285156-45.7148435-7.449219 0-18.285157 17.8125005-18.285157 45.7148435-.523437 13.417969 2.640625 26.71875 9.144531 38.464844v120.339844c-15.261718-33.203125-38.578124-62.0625-67.832031-83.960938-4.109375-2.933593-9.820312-1.980469-12.753906 2.128907-2.933594 4.113281-1.980469 9.824218 2.128906 12.757812 55.167969 39.402344 75.054688 108.496094 78.171875 120.554688h-173.429687c0-.601563.53125-47.851563 29.648437-55.128907 4.867188-1.257812 7.804688-6.203125 6.585938-11.074219-1.222656-4.875-6.144532-7.851562-11.027344-6.664062-43 10.75-43.492188 70.335938-43.492188 72.867188h-27.429687c.714844-7.988282 9.4375-91.675782 60.34375-129.828126 2.613281-1.960937 3.980469-5.164062 3.589844-8.40625-.390625-3.242187-2.480469-6.03125-5.484375-7.316406-3.003906-1.28125-6.464844-.863281-9.078125 1.09375-22.324219 17.949219-39.382813 41.597656-49.371094 68.445313v-95.808594c6.503906-11.746094 9.667969-25.046875 9.144531-38.464844 0-27.902343-10.835937-45.7148435-18.289062-45.7148435-7.449219 0-18.2851565 17.8125005-18.2851565 45.7148435-.5234375 13.417969 2.6406245 26.71875 9.1445315 38.464844v171.820313c.054687.488281.152343.96875.292969 1.4375 0 .292968 0 .601562.109374.914062-7.320312 3.988281-11 12.433594-8.9375 20.507812 2.0625 8.078126 9.34375 13.722657 17.675782 13.714844h54.859375c20.199219 0 36.570312 16.371094 36.570312 36.570313s-16.371093 36.570312-36.570312 36.570312h-36.570313c-10.101562 0-18.289062 8.1875-18.289062 18.285157 0 10.101562 8.1875 18.285156 18.289062 18.285156h128c20.195313 0 36.570313 16.375 36.570313 36.574218 0 20.195313-16.375 36.570313-36.570313 36.570313h-118.859375c-10.097656 0-18.285156 8.1875-18.285156 18.285156 0 10.101563 8.1875 18.285157 18.285156 18.285157h448c10.101563 0 18.285157-8.183594 18.285157-18.285157 0-10.097656-8.183594-18.285156-18.285157-18.285156h-36.570312c-20.199219 0-36.570313-16.375-36.570313-36.570313 0-20.199218 16.371094-36.574218 36.570313-36.574218h36.570312c10.101563 0 18.285157-8.183594 18.285157-18.285156 0-10.097657-8.183594-18.285157-18.285157-18.285157h-18.285156c-20.199219 0-36.570313-16.371093-36.570313-36.570312s16.371094-36.570313 36.570313-36.570313zm-338.285156 0c0-5.050781 4.09375-9.144531 9.140625-9.144531h64c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625h-64c-5.046875 0-9.140625-4.09375-9.140625-9.140625zm27.429687 54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046875 4.09375-9.140625 9.144531-9.140625h228.570313c5.050781 0 9.140625 4.09375 9.140625 9.140625 0 5.050781-4.089844 9.144531-9.140625 9.144531zm27.425782 36.570313c0-5.046876 4.09375-9.140626 9.144531-9.140626h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531zm182.859374 36.574218c5.046876 0 9.140626 4.09375 9.140626 9.140625 0 5.050781-4.09375 9.144531-9.140626 9.144531h-118.859374c-5.046876 0-9.140626-4.09375-9.140626-9.144531 0-5.046875 4.09375-9.140625 9.140626-9.140625zm-64 64h-91.429687c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h91.429687c5.046876 0 9.140626 4.09375 9.140626 9.144531s-4.09375 9.144531-9.140626 9.144531zm91.425782 0h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.144531s-4.09375 9.144531-9.144531 9.144531zm0-91.429687h-109.710938c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046876 4.09375-9.140626 9.144531-9.140626h109.710938c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531zm0-91.429688h-82.285156c-5.046876 0-9.140626-4.09375-9.140626-9.140625 0-5.050781 4.09375-9.144531 9.140626-9.144531h82.285156c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625zm0 0\"}/>\r\n  ),\r\n  level1: (\r\n    <g className={\"fill\"} transform={\"translate(-1,6),scale(0.33,0.33)\"}>\r\n      <path d={\"m221.30057,128.34535c12.80287,-11.57301 -2.64389,-25.9934 -18.36703,-22.82862l0,25.57096c6.54166,1.048 13.26984,1.86747 18.36703,-2.74234z\"}/>\r\n      <path d={\"m93.457,105.28936l0,25.57096c0.99929,0.01039 1.99722,0.02424 2.99378,0.04617c28.4062,0.00115 25.51589,-30.25349 -2.99378,-25.61713z\"}/>\r\n      <path d={\"m293.79936,235.06243l-11.83898,0l0,-128.90859c0,-24.37754 -9.70018,-46.83105 -25.9992,-64.75208l-16.21053,4.32127l6.92695,16.52446l0.57452,1.36309l-1.0905,0.93835l-16.29357,14.03835c-0.7447,0.64288 -1.96318,0.64981 -2.72286,0.01962c-0.72428,-0.60826 -0.7624,-1.59162 -0.09666,-2.23681l14.16839,-13.73365l-8.82342,-17.69134l-1.16402,-2.33261l3.00195,-1.29038l15.20988,-6.53499c-22.90876,-21.37089 -55.95607,-34.78713 -92.6983,-34.78713c-33.69535,0 -64.27712,11.28562 -86.78289,29.63716l17.7258,7.61877l1.78892,0.76869l0.22327,1.34347l5.65265,33.75875c0.15112,0.89218 -0.58269,1.71743 -1.63508,1.84554c-1.00473,0.12004 -1.93867,-0.44667 -2.15106,-1.27537l-7.9698,-31.65929l-21.21922,-5.65551c-19.20839,18.65855 -30.84997,43.06264 -30.84997,69.77278l0,128.90859l-11.84034,0c-7.51917,0 -13.61428,5.16729 -13.61428,11.54185l0,11.33871c0,6.37225 6.09511,11.54185 13.61428,11.54185l274.11544,0c7.51917,0 13.61428,-5.16959 13.61428,-11.54185l0,-11.33871c-0.00136,-6.37456 -6.09648,-11.543 -13.61565,-11.543zm-101.81034,-133.28526c3.95223,-0.16851 8.04196,-0.34279 12.17934,-0.34279c9.85402,0 21.99796,0.86795 28.49333,7.63147c0.00272,0.00231 0.00545,0.00462 0.00817,0.00693l0.00545,0.00923c0.00272,0.00346 0.00817,0.00693 0.01089,0.01039c0.00545,0.00462 0.01089,0.00923 0.01361,0.015c0.00272,0.00346 0.00545,0.00693 0.01089,0.01154c4.77589,5.01262 6.0461,9.59705 3.77524,13.62631c-3.80519,6.75891 -16.68022,10.40728 -26.8569,10.40728c-2.31851,0 -6.42866,-0.53554 -6.42866,-0.53554s-3.21569,22.27115 1.58198,26.64436c1.07961,0.98106 2.3825,1.68973 3.89641,2.12255l-23.31446,0c7.6662,-2.70079 11.13512,-16.16551 11.13512,-29.52174c0,-13.55013 -3.47164,-27.20991 -11.14601,-29.83799c2.0966,-0.0554 4.32254,-0.15004 6.6356,-0.247zm-42.01232,0.28855l24.65955,0c-2.65615,0.93489 -5.59002,3.41408 -7.84183,9.17692c-2.05576,5.26077 -2.19598,12.3844 -2.19598,20.06319c0,13.1831 2.44921,27.26762 9.9289,30.0769l-24.665,0c2.64526,-0.93374 5.57641,-3.41177 7.8146,-9.17692c2.0435,-5.25616 2.21232,-12.38094 2.21232,-20.05512c0.00272,-13.18772 -2.46419,-27.27454 -9.91256,-30.08498zm-74.04537,-0.03116c2.59216,-0.04617 5.27281,-0.14196 8.06782,-0.24122c4.0557,-0.14312 8.24345,-0.29201 12.36994,-0.29201c8.22711,0 14.43114,0.61749 19.52288,1.9448c7.82821,2.0406 12.16028,6.56385 11.88527,12.4121c-0.33763,7.19634 -7.44021,13.9137 -16.51821,15.62535c-0.42068,0.07848 -0.76648,0.3301 -0.9176,0.67058c-0.15112,0.33933 -0.0953,0.72252 0.15656,1.01799l14.97027,17.63479c4.45187,5.26539 9.00585,9.12383 16.06622,10.57464l-15.28476,0l-24.16808,-28.29946c-0.24778,-0.29201 -0.65212,-0.45706 -1.08234,-0.44667c-1.22801,0.0404 -2.68338,0.08195 -4.16733,0.08195c-1.18853,0 -2.26814,-0.02539 -3.29738,-0.08079c-0.3458,-0.01731 -0.69705,0.08656 -0.95436,0.29085c-0.25595,0.20544 -0.40162,0.49053 -0.40162,0.78946c0,1.49813 -0.16201,3.37945 -0.32674,5.37158c-0.59767,7.04399 -1.34237,15.80656 3.45394,20.174c1.07689,0.9799 2.37705,1.68742 3.8896,2.11908l-23.29132,0c7.69752,-2.70079 11.17869,-16.16667 11.17869,-29.52405c0,-13.5282 -3.473,-27.16489 -11.15146,-29.82298z\"}/>\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <path className={\"fill\"} transform={\"translate(9,7),scale(0.3,0.3)\"} d={\"M245.928,84.493c-13.393-16.435-27.768-24.637-43.139-24.637c-10.873,0-21.072,4.354-30.619,13.117   c-6.626-5.045-13.782-8.627-21.478-10.745c-1.591-20.661-10.733-35.643-27.436-44.942l-17.491,12.351   c11.39,7.412,18.021,17.745,19.876,31c-11.398,1.33-22.001,5.568-31.811,12.713c-9.802-9.005-20.275-13.495-31.403-13.495   c-15.644,0-29.696,8.202-42.15,24.637C6.755,101.449,0,121.479,0,144.535c0,5.828,0.532,11.684,1.583,17.498   c3.978,23.857,15.116,44.676,33.402,62.42c16.434,16.184,31.681,24.263,45.731,24.263c0.332,0,0.674-0.012,1.016-0.035   c16.083-4.937,33.156-7.599,50.857-7.599c14.784,0,29.134,1.858,42.833,5.346l-0.074-0.098l0.323,0.16   c2.618,0.67,5.21,1.404,7.78,2.193c0.348,0.021,0.696,0.033,1.043,0.033c14.053,0,29.154-8.079,45.328-24.263v-0.001   c17.755-17.744,29.156-38.562,34.189-62.42c1.34-6.616,1.99-13.117,1.99-19.48C266.002,120.274,259.306,100.924,245.928,84.493z\"}/>\r\n  ),\r\n  level3: (\r\n    <path className={\"fill\"} transform={\"translate(18,10),scale(0.13,0.13)\"} d={\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954  c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673  c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939  c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954  c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689  c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1  c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715  c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z\"}/>\r\n  ),\r\n  level4: (\r\n    <path className={\"fill\"} transform={\"translate(15,0),scale(0.25)\"} d={\"M277.531,179.745c-0.045-10.481-9.676-33.631-92.951-35.979l-31.034-68.857l42.085,17.586 l-63.13-67.928c-8.62-6.047-37.77,80.794-49.648,117.583l0,0c-8.354,1.318-34.706,6.113-55.001,16.797 c-19.8,10.395-30.244,19.572-27.386,32.326c-2.076,14.357,3.17,56.896,135.987,62.381 C179.174,255.423,285.918,226.942,277.531,179.745z M144.93,182.741c-67.228,4.734-72.835-13.954-72.835-13.954l6.106-13.264 c0,0,18.403,12.415,56.083,11.763c37.68-0.659,53.318-17.423,53.318-17.423l9.927,12.077 C195.098,177.688,144.93,182.741,144.93,182.741z\"}/>\r\n  ),\r\n});\r\n\r\nclass CellDefinitions extends PureComponent {\r\n  static cellDefinitionsStyleMap = {\r\n    'original': OriginalCellDefinitions,\r\n    'halloween': HalloweenCellDefinitions,\r\n  };\r\n\r\n\trender() {\r\n  \treturn Object.values(this.constructor.cellDefinitionsStyleMap)\r\n    \t.map(CellDefinitionsStyle =>\r\n        <CellDefinitionsStyle key={CellDefinitionsStyle.displayName || CellDefinitionsStyle.name} />);\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl, gameType,\r\n      theme: {cells = 'original', pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translate = constants.translate(gameType, {x, y});\r\n    return (\r\n    \t<g transform={`translate(${translate.x},${translate.y})`}>\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`#cell-${cells}-${i}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`#cell-${cells}-${i}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n        <use\r\n          xlinkHref={`#cell-${cells}-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows, gameType,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  gameType={gameType}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces gameType={gameType} rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {gameType, rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(gameType.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            gameType={gameType}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {gameType, cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translateTo = constants.translate(gameType, position);\r\n    const translateFrom = constants.translate(gameType, previousPosition);\r\n    return (\r\n      <g transform={`translate(${translateTo.x},${translateTo.y})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${translateFrom.x} ${translateFrom.y}`}\r\n          to={`${translateTo.x} ${translateTo.y}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      gameType, cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl,\r\n    } = this.props;\r\n    return (\r\n      <Cell\r\n        gameType={gameType}\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        gameType={game.constructor}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {gameType, small, medium, player, applicableSettings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={applicableSettings}\r\n        allowControl={allowControl}\r\n        gameType={gameType}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    challengesInfo: client.challengesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotChallenges = challengesInfo => {\r\n    this.setState({challengesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, challengesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        challengesInfo={challengesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.Classic.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={applicableSettings}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {applicableSettings, user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize, reverse} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    let visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize);\r\n    if (reverse) {\r\n      visibleGames = visibleGames.reverse();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n              applicableSettings={applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n  reverse: PropTypes.bool.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n  reverse: true,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport class ChallengeCard extends Component {\r\n  selectChallenge = () => {\r\n    this.props.selectChallenge(this.props.challenge);\r\n  };\r\n\r\n  get userChallenge() {\r\n    const {user, challenge} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    return user.challenges[challenge.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, gamesById, challenge, currentChallengeId} = this.props;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const creator = usersById[challenge.userId];\r\n    const userIsCreator = !!user && challenge.userId === user.id;\r\n    const game = gamesById[challenge.meta.gameId];\r\n    const playerA = game ? usersById[game.userIds[0]] : null;\r\n    const playerB = game ? usersById[game.userIds[1]] : null;\r\n    const userInProgress = !!userChallenge && userChallenge.meta.started && !userChallenge.meta.won;\r\n    const userSolvedChallenge = !!userChallenge && userChallenge.meta.won;\r\n    const userMadeMistakes = !!userChallenge && !!userChallenge.meta.mistakes;\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/puzzle/${challenge.id}`}\r\n        onClick={this.selectChallenge}\r\n        style={{\r\n          ...(challenge.id === currentChallengeId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {utils.getChallengeTitle(challenge)}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[challenge.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[challenge.meta.difficulty],\r\n              }}\r\n              content={`${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[challenge.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userInProgress ? (\r\n              <Label\r\n                  icon={{name: 'play', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ? `Started (${userChallenge.meta.mistakes} mistakes)` : 'Started'}\r\n              />\r\n            ) : userSolvedChallenge ? (\r\n              <Label\r\n                  icon={{name: 'trophy', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ?`Solved with ${userChallenge.meta.mistakes} mistakes` : 'Perfect'}\r\n              />\r\n            ) : userMadeMistakes ? (\r\n              <Label\r\n                  icon={{name: 'exclamation', color: 'orange'}}\r\n                  content={`${userChallenge.meta.mistakes} mistakes`}\r\n              />\r\n            ) : null}\r\n            {user && challenge.isMyChallenge ? (\r\n              <Label\r\n                icon={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      challenge.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? challenge.meta.publishDatetime.fromNow() : (\r\n                      challenge.meta.public\r\n                        ? challenge.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={challenge.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            {challenge.usersStats && challenge.usersStats.attempted ? (\r\n              <Label\r\n                icon={'user'}\r\n                content={`${challenge.usersStats.averagePerfectScore !== null ? challenge.usersStats.averagePerfectScore : 'No perfect solve'} (${challenge.usersStats.perfect}/${challenge.usersStats.imperfect}/${challenge.usersStats.attempted})`}\r\n                title={`${challenge.usersStats.averagePerfectScore !== null ? `${challenge.usersStats.averagePerfectScore} average user score` : 'No perfect solve'} (${challenge.usersStats.perfect} perfect solves, out of ${challenge.usersStats.imperfect} solves, out of ${challenge.usersStats.attempted} attempts)`}\r\n              />\r\n            ) : null}\r\n            {game ? (\r\n              userSolvedChallenge || userIsCreator ? (\r\n                <Label\r\n                  icon={'play'}\r\n                  content={`${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                  title={`From game between ${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                />\r\n              ) : (\r\n                <Label icon={'play'} content={'Solve to see game'} />\r\n              )\r\n            ) : null}\r\n            <Board\r\n              game={Game.Classic.fromCompressedPositionNotation(challenge.startingPosition.position)}\r\n              medium\r\n              settings={applicableSettings}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n  challenge: PropTypes.object.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChallengeList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById},\r\n      challenges, selectChallenge, currentChallengeId, pageSize,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(challenges.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleChallenges = challenges\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visibleChallenges.map(challenge => (\r\n            <ChallengeCard\r\n              key={challenge.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              challenge={challenge}\r\n              selectChallenge={selectChallenge}\r\n              currentChallengeId={currentChallengeId}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  challenges: PropTypes.array.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nChallengeList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(ChallengeList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport ChallengeList, {ChallengeCard} from \"./ChallengeList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n            {otherUser.challengesStats && otherUser.challengesStats.attempted ? (\r\n              <Label\r\n                icon={'puzzle'}\r\n                content={`${otherUser.challengesStats.perfectStars}⭐ (${otherUser.challengesStats.perfect}/${otherUser.challengesStats.imperfect}/${otherUser.challengesStats.attempted})`}\r\n                title={`${otherUser.challengesStats.perfectStars} total perfect stars (${otherUser.challengesStats.perfect} perfect puzzles, out of ${otherUser.challengesStats.imperfect} solved, out of ${otherUser.challengesStats.attempted} attempted)`}\r\n              />\r\n            ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {byId: gamesById, myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      challengesInfo: {otherUnsolved, challenges, otherStarted, otherNotStarted, otherSolved},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <ChallengeCard\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              challenge={otherUnsolved[0]}\r\n              selectChallenge={this.props.selectLiveChallenge}\r\n              currentChallengeId={null}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournamentsById={tournamentsById}\r\n                games={items}\r\n                selectLiveGame={selectLiveGame}\r\n                applicableSettings={client.applicableSettings}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {challenges ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let challengesList = [\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!challengesList.length) {\r\n              challengesList = [\r\n                {key: 'puzzles', label: \"Puzzles\", items: challenges},\r\n              ];\r\n            }\r\n            return challengesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(this.state.game.constructor.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.constructor !== prevProps.game.constructor\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.client.applicableSettings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.client.applicableSettings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !!(!this.props.submit && !selectedGame && game.previous);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={displayGame === game ? (\r\n          this.props.submit ? this.props.game.chainCount : (\r\n            this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n          )\r\n        ) : 0}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={client.applicableSettings}\r\n        animated={client.applicableSettings.theme.animations}\r\n        showArrows={client.applicableSettings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  submitAndDisableConfirm = () => {\r\n    this.props.submit();\r\n    this.props.client.updateSettings({...this.props.user.settings, confirmSubmitMoves: false});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, applicableSettings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canAnyPlayerSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const previousGame = canAnyPlayerSubmit ? game.previous : game;\r\n    const isPlayersTurn = previousGame.nextPlayer === player;\r\n    const playerWon = previousGame.winner === player;\r\n    const finished = previousGame.finished;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={finished || player === Game.PLAYER_B}\r\n        color={finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard\r\n                  gameType={game.constructor}\r\n                  medium\r\n                  applicableSettings={applicableSettings}\r\n                  player={player}\r\n                  allowControl={allowControl}\r\n                />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    applicableSettings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          {applicableSettings.confirmSubmitMoves ? (\r\n                            <Modal\r\n                              size={'mini'}\r\n                              trigger={\r\n                                <Button\r\n                                  positive\r\n                                  className={'attention'}\r\n                                >\r\n                                  Submit...\r\n                                </Button>\r\n                              }\r\n                              header={'Submit move'}\r\n                              content={\r\n                                <Modal.Content>\r\n                                  Are you sure you want to submit these moves?\r\n                                  <br />\r\n                                  <Board\r\n                                    game={game}\r\n                                    medium\r\n                                    settings={applicableSettings}\r\n                                    animated\r\n                                    showArrows\r\n                                  />\r\n                                </Modal.Content>\r\n                              }\r\n                              actions={[\r\n                                {key: 'never-ask-again', content: 'Never ask again', onClick: this.submitAndDisableConfirm},\r\n                                {key: 'cancel', negative: true, content: 'Cancel'},\r\n                                {key: 'ok', positive: true, content: 'Submit', onClick: submit},\r\n                              ]}\r\n                            />\r\n                          ) : (\r\n                            <Button\r\n                              positive\r\n                              className={'attention'}\r\n                              onClick={submit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          )}\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? {\r\n            key: 'take-move-back', content: (\r\n              <Button negative content={'Take move back'} onClick={takeBack}/>\r\n            ),\r\n          } : null,\r\n          !finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={applicableSettings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  applicableSettings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canAnyPlayerSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayPlayer = withClient(PlayPlayer);\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, applicableSettings, selectedGame, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={applicableSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu, Button} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.Classic.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.Classic.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  switchToClassic = () => {\r\n    this.switchTo(Game.Classic);\r\n  };\r\n\r\n  switchToHex = () => {\r\n    this.switchTo(Game.Hex);\r\n  };\r\n\r\n  switchTo = gameType => {\r\n    this.setState({\r\n      selectedGame: null,\r\n      game: gameType.create(),\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Button onClick={this.switchToClassic} content={'Switch to Classic'} disabled={game.constructor === Game.Classic}/>\r\n          <Button onClick={this.switchToHex} content={'Switch to Hex'} disabled={game.constructor === Game.Hex}/>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themeCellsOptions = [\r\n    {value: 'original', label: 'Original'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n    {value: 'halloween-witch-hat', label: 'Halloween: Witch Hat'},\r\n    {value: 'halloween-cauldron', label: 'Halloween: Cauldron'},\r\n    {value: 'halloween-bat', label: 'Halloween: Bat'},\r\n    {value: 'halloween-spider', label: 'Halloween: Spider'},\r\n    {value: 'halloween-cat', label: 'Halloween: Cat'},\r\n    {value: 'halloween-tombstone', label: 'Halloween: Tombstone'},\r\n    {value: 'halloween-pumpkin', label: 'Halloween: Pumpkin'},\r\n    {value: 'halloween-ghost', label: 'Halloween: Ghost'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateConfirmSubmitMoves = (e, {checked}) => {\r\n    this.props.updateSettings({confirmSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeUseTopicalTheme = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {useTopicalTheme: checked}});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  updateThemeCells = (e, {value}) => {\r\n    this.props.updateSettings({theme: {cells: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, confirmSubmitMoves, enableNotifications, theme}, applicableSettingsName, applicableSettingsOverride} = this.props;\r\n    const {useTopicalTheme, cells = 'original', pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Confirm before submitting online moves'}\r\n                  name={'confirmSubmitMoves'}\r\n                  checked={confirmSubmitMoves}\r\n                  onChange={this.updateConfirmSubmitMoves}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Use topical theme when available'}\r\n                    name={'theme.useTopicalTheme'}\r\n                    checked={useTopicalTheme}\r\n                    onChange={this.updateThemeUseTopicalTheme}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  {applicableSettingsName ? (\r\n                    <Fragment>\r\n                      {applicableSettingsName}\r\n                      <br/>\r\n                      {this.themeDemoBoard(applicableSettingsOverride.theme)}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Cells:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                          </Grid.Row>\r\n                        {this.themeCellsOptions.map(option => (\r\n                          <Grid.Row key={`theme-cells-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.cells'}\r\n                                value={option.value}\r\n                                checked={cells === option.value}\r\n                                onChange={this.updateThemeCells}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({cells: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Colours:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  applicableThemeName: PropTypes.string,\r\n  applicableSettingsOverride: PropTypes.object,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.client.settings,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n    const {client} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: (\r\n          <SettingsContent\r\n            settings={settings}\r\n            updateSettings={this.updateSettings}\r\n            applicableSettingsName={client.applicableSettingsName}\r\n            applicableSettingsOverride={client.applicableSettingsOverride}\r\n          />\r\n        )}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n          reverse={false}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              (user && user.admin) ? {key: 'edit', content: 'Create Puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/create?position=${(selectedGame || gameGame).positionNotation}&gameId=${game ? game.id : ''}`, color: 'green', active: true,\r\n                title: 'Click to create a puzzle from this position', target: '_blank'} : null,\r\n              (user && user.admin) ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, client, user, usersInfo: {byId},\r\n      gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList\r\n                  user={user}\r\n                  usersById={byId}\r\n                  tournamentsById={tournamentsById}\r\n                  games={items}\r\n                  selectLiveGame={selectLiveGame}\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!client.applicableSettings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                  applicableSettings={client.applicableSettings}\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                      applicableSettings={client.applicableSettings}\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {client, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = client.applicableSettings;\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          gameType={Game.Classic}\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong>{\" and \"}\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.Classic.getPositionNotation(Game.Classic.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.Classic.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), urlError, position: Game.Classic.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.Classic.create(), urlError: false, position: Game.Classic.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.Classic.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.Classic.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.Classic.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.Classic.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.Classic.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    const positionNotation = Game.Classic.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition ? (\r\n              <div>\r\n                <Button\r\n                  content={'Use position'}\r\n                  primary\r\n                  onClick={this.usePosition}\r\n                  disabled={!!positionError}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.Classic.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass CreateChallenge extends Component {\r\n  state = {\r\n    editing: true,\r\n    challenge: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.initialChallenge) {\r\n      this.onCreateChallenge(this.fillGames(this.props.initialChallenge));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.challengesInfo.mine !== this.props.challengesInfo.mine) {\r\n      if (this.state.challenge && !this.state.challenge.id) {\r\n        const prevChallenges = this.getMatchingChallenges(prevProps.challengesInfo.mine);\r\n        const challenges = this.getMatchingChallenges(this.props.challengesInfo.mine);\r\n        if (prevChallenges.length === 0 && challenges.length === 1) {\r\n          const [challenge] = challenges;\r\n          this.props.history.push(`/puzzle/${challenge.id}/edit`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMatchingChallenges(challenges) {\r\n    const {challenge: newChallenge} = this.state;\r\n    return challenges.filter(challenge => (\r\n      challenge.isMyChallenge\r\n      && challenge.startingPosition.position === newChallenge.startingPosition.position\r\n      && challenge.options.type === newChallenge.options.type\r\n      && challenge.meta.source === newChallenge.meta.source\r\n      && challenge.meta.gameId === newChallenge.meta.gameId\r\n      && challenge.meta.public === newChallenge.meta.public\r\n    ));\r\n  }\r\n\r\n  fillGames(challengeStep) {\r\n    challengeStep = {...challengeStep};\r\n    if (!challengeStep.game && challengeStep.position) {\r\n      challengeStep.game = Game.Classic.fromCompressedPositionNotation(challengeStep.position);\r\n    }\r\n    if (challengeStep.startingPosition) {\r\n      challengeStep.startingPosition = this.fillGames(challengeStep.startingPosition);\r\n    } else if (challengeStep.playerResponses) {\r\n      challengeStep.playerResponses = challengeStep.playerResponses.map(nextStep => this.fillGames(nextStep));\r\n    } else if ('challengeResponse' in challengeStep) {\r\n      if (challengeStep.challengeResponse) {\r\n        challengeStep.challengeResponse = this.fillGames(challengeStep.challengeResponse);\r\n      }\r\n    } else {\r\n      throw new Error('Cannot find type of step');\r\n    }\r\n\r\n    return challengeStep;\r\n  }\r\n\r\n  onCreateChallenge = challenge => {\r\n    this.setState({\r\n      editing: false,\r\n      challenge,\r\n      currentStep: challenge.startingPosition,\r\n      tree: this.getTree(challenge.startingPosition),\r\n      game: challenge.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.challengeResponse && currentStep.challengeResponse.position === newGame.positionNotation) {\r\n        return currentStep.challengeResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['challenge', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['challengeResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicateChallenge(pathIndexes) {\r\n    const {challenge} = this.state;\r\n\r\n    const newChallenge = {\r\n      ...challenge,\r\n      startingPosition: {...challenge.startingPosition},\r\n    };\r\n    let newModifyingStep = newChallenge.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newChallenge, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        challengeResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.challengeResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.challengeResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.challenge.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.challengeResponse) {\r\n        return [treePath.concat(lastTreeStep.challengeResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editChallenge = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createChallenge(cleanedChallenge);\r\n  };\r\n\r\n  updateChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.updateChallenge(cleanedChallenge);\r\n  };\r\n\r\n  createOrUpdateChallenge = () => {\r\n    if (this.state.challenge.id) {\r\n      this.updateChallenge();\r\n    } else {\r\n      this.createChallenge();\r\n    }\r\n  };\r\n\r\n  discardChallenge = () => {\r\n    if (this.state.challenge.id) {\r\n      this.props.history.push(`/puzzle/${this.state.challenge.id}`);\r\n    } else {\r\n      this.setState({\r\n        editing: true,\r\n        challenge: null,\r\n        currentStep: null,\r\n        tree: null,\r\n        game: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client, gamesInfo: {byId: gamesById}} = this.props;\r\n    const {editing, challenge, game, tree, currentStep} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editing && (!challenge || challenge.isMyChallenge)) {\r\n      return (\r\n        <ChallengeForm initialChallenge={challenge} onCreateChallenge={this.onCreateChallenge} gamesById={gamesById} />\r\n      )\r\n    }\r\n\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getChallengeTitle(challenge)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editChallenge}>Edit</Button>\r\n            <Button positive onClick={this.createOrUpdateChallenge}>{challenge.id ? 'Update' : 'Create'}</Button>\r\n            <Button negative onClick={this.discardChallenge}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[challenge.options.initialPlayer]: 'Player', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Puzzle'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === challenge} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCreateChallenge.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChallengeForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    challenge: this.props.initialChallenge || {\r\n      isMyChallenge: true,\r\n      options: {\r\n        initialPlayer: Game.PLAYER_A,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        gameId: null,\r\n        game: null,\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: Game.Classic.create().positionNotation,\r\n        game: Game.Classic.create(),\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n      gameId: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (!this.props.initialChallenge) {\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n      }\r\n    }\r\n    const gameId = params.get('gameId');\r\n    if (gameId) {\r\n      this.setValue(null, {name: 'meta.gameId', value: gameId});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gamesById !== this.props.gamesById) {\r\n      this.onValueSet('meta.gameId');\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const challenge = {\r\n        ...state.challenge,\r\n      };\r\n      let newChallengeToChange = challenge;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newChallengeToChange = newChallengeToChange[part] || {};\r\n      }\r\n      newChallengeToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {challenge};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.challenge.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.Classic.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.Classic.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          challenge: {\r\n            ...state.challenge,\r\n            options: {\r\n              ...state.challenge.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.challenge.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    } else if (name === 'options.type') {\r\n      this.setState(state => {\r\n        switch (state.challenge.options.type) {\r\n          case 'mate':\r\n            return _.merge({}, {challenge: state.challenge}, {\r\n              challenge: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          case 'avoidMate':\r\n            return _.merge({}, {challenge: state.challenge}, {\r\n              challenge: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          default:\r\n            return null;\r\n        }\r\n      });\r\n    } else if (name === 'meta.gameId') {\r\n      this.setState(state => {\r\n        const game = this.props.gamesById[state.challenge.meta.gameId];\r\n        return _.merge({}, {challenge: state.challenge}, {\r\n          error: {\r\n            gameId: !game && state.challenge.meta.gameId ? 'There is no game with such an ID' : null,\r\n          },\r\n          challenge: {\r\n            meta: {\r\n              game: game ? Game.Classic.deserialize(game.game) : null,\r\n            },\r\n          },\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const {challenge, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreateChallenge(challenge);\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {client, initialChallenge} = this.props;\r\n    const {editingPosition, challenge, error} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          initialPositionNotation={challenge.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a challenge</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createChallenge}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={challenge.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {challenge.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={challenge.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n                {key: 'avoidMate', value: 'avoidMate', text: 'Avoid Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={challenge.options.type}\r\n            />\r\n            {challenge.options.type === 'mate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={challenge.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : challenge.options.type === 'avoidMate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Avoid Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={challenge.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : \"Unknown challenge type\"}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={challenge.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'meta.gameId'}\r\n                control={Input}\r\n                label={'From game'}\r\n                placeholder={'Game ID'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.gameId || ''}\r\n                error={error.gameId}\r\n              />\r\n            </Form.Group>\r\n            {challenge.meta.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={challenge.meta.game}\r\n              />\r\n            ) : null}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={challenge.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.publishDatetime ? challenge.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialChallenge ? 'Update' : 'Create'} />\r\n          </Form>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeForm.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n  onCreateChallenge: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeForm = withClient(ChallengeForm);\r\n\r\nexport default withRouter(withClient(CreateChallenge));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Modal} from \"semantic-ui-react\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass EditChallenge extends Component {\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.history.push('/puzzle');\r\n  };\r\n\r\n  render() {\r\n    const challenge = this.challenge;\r\n    if (!challenge || !challenge.isMyChallenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was deleted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CreateChallenge initialChallenge={challenge} />\r\n    );\r\n  }\r\n}\r\n\r\nEditChallenge.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(EditChallenge));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Menu, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\nimport ChallengeList from \"./ChallengeList\";\r\nimport {Link, NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport EditChallenge from \"./EditChallenge\";\r\nimport * as utils from \"../utils\";\r\nimport {GameCard} from \"./GameList\";\r\n\r\nclass Challenges extends Component {\r\n  render() {\r\n    const {user, challengesInfo: {otherStarted, otherNotStarted, otherSolved, myPublic, myPrivate}} = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            {(user && user.admin) ? (\r\n              <Segment>\r\n                <Link to={`${this.props.match.path}/create`}><Button content={'Create Puzzle'} /></Link>\r\n              </Segment>\r\n            ) : null}\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n              {key: 'my-public', label: \"My Public Puzzles\", items: myPublic},\r\n              {key: 'my-private', label: \"My Private Puzzles\", items: myPrivate},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/create`}>\r\n            <CreateChallenge />\r\n          </Route>\r\n        ) : null}\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/:id/edit`}>\r\n            <EditChallenge />\r\n          </Route>\r\n        ) : null}\r\n        <Route exact path={`${this.props.match.path}/:id`}>\r\n          <ChallengePlayer\r\n            selectLiveGame={this.props.selectLiveGame}\r\n            selectLiveChallenge={this.props.selectLiveChallenge}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  liveChallenge: PropTypes.object,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nclass ChallengePlayer extends Component {\r\n  state = {\r\n    challengeId: this.challenge ? this.challenge.id : null,\r\n    game: this.getResumedChallengeGame(),\r\n    submittedGame: null,\r\n    path: this.challenge ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  get userChallenge() {\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.challenges[challenge.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: challenge.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge) {\r\n      this.props.selectLiveChallenge(challenge);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge && prevState.challengeId !== challenge.id) {\r\n      this.props.selectLiveChallenge(challenge);\r\n      this.setState({\r\n        challengeId: challenge.id,\r\n        game: this.getResumedChallengeGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!challenge && this.state.challengeId) {\r\n      this.setState({\r\n          challengeId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (challenge && this.props.user && this.state.submittedGame) {\r\n      this.updateChallenge(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updateChallenge(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedChallengeGame() {\r\n    const userChallenge = this.userChallenge;\r\n    if (!userChallenge) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.Classic.fromCompressedPositionNotation(userChallenge.startingPosition.position);\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    while (userChallengeStep) {\r\n      const lastPlayerResponse = userChallengeStep.playerResponses[userChallengeStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.challengeResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.challengeResponse.moves);\r\n      userChallengeStep = lastPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updateChallenge(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const challenge = this.challenge;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userChallengeStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userChallengeStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitChallengeMove(challenge, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.challengeResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userChallengeStep = validPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userChallengeStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  close = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  shareChallenge = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const challenge = this.challenge;\r\n      navigator.share({\r\n        title: `Thyra Online - Solve puzzle ${utils.getChallengeTitle(challenge)}`,\r\n        text: `Solve Santorini puzzle`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo: {byId: tournamentsById},\r\n      location, selectLiveGame,\r\n    } = this.props;\r\n    const userIsCreator = !challenge.id || (!!user && challenge.userId === user.id);\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={utils.getChallengeTitle(challenge)} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareChallenge, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to challenge'},\r\n              (challenge.isMyChallenge ? {key: 'edit', content: 'Edit puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/${challenge.id}/edit`, color: 'green', active: true,\r\n                title: 'Click to edit the puzzle'} : null),\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getChallengeTitle(challenge)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              {challenge.meta.source ? <Header as={'h4'}>{challenge.meta.source}</Header> : null}\r\n              {challenge.meta.gameId ? (\r\n                <Header as={'h4'}>\r\n                  {won || userIsCreator ? (\r\n                    <Fragment>\r\n                      From{\" \"}\r\n                      <GameCard\r\n                        user={null}\r\n                        usersById={usersById}\r\n                        tournamentsById={tournamentsById}\r\n                        game={gamesById[challenge.meta.gameId]}\r\n                        selectLiveGame={selectLiveGame}\r\n                        terse\r\n                        live\r\n                        applicableSettings={client.applicableSettings}\r\n                      />\r\n                    </Fragment>\r\n                  ) : \"Solve puzzle to see source game\"}\r\n                </Header>\r\n              ) : null}\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          allowControl={[challenge.options.initialPlayer]}\r\n          names={{[challenge.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Puzzle'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nChallengePlayer = withRouter(withClient(ChallengePlayer));\r\n\r\nexport default withRouter(withClient(Challenges));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Challenges from \"./components/Challenges\";\nimport * as utils from \"./utils\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    liveChallenge: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/game';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/tournament`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLiveChallenge = liveChallenge => {\n    let challengeUrl;\n    if (liveChallenge) {\n      challengeUrl = `/puzzle/${liveChallenge.id}`;\n    } else {\n      challengeUrl = `/puzzle`;\n    }\n    if (challengeUrl !== this.props.location.pathname) {\n      this.props.history.push(challengeUrl);\n    }\n    if (this.state.liveChallenge === liveChallenge) {\n      return;\n    }\n    this.setState({liveChallenge});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, liveChallenge} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          {menuItem: {icon: 'puzzle', content: liveChallenge ? utils.getChallengeTitle(liveChallenge) : 'Puzzles'},\n          path: 'puzzle',\n          navigate: liveChallenge ? `puzzle/${liveChallenge.id}` : 'puzzle',\n          render: () => (\n            <Tab.Pane>\n              <Challenges\n                challenge={liveChallenge}\n                selectLiveGame={this.selectLiveGame}\n                selectLiveChallenge={this.selectLiveChallenge}\n              />\n            </Tab.Pane>\n          )},\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}