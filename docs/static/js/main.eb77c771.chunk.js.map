{"version":3,"sources":["utils.js","client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/ChallengeList.js","components/Lobby.js","components/Play.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreateChallenge.js","components/EditChallenge.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["copyToClipboard","text","textArea","document","createElement","body","appendChild","value","select","execCommand","removeChild","topicalThemes","from","moment","until","name","override","theme","cells","pieces","scheme","getApplicableSettingsAndNextUpdateDate","settings","on","_getTopicalThemeOverr","arguments","length","undefined","matchingTopicalTheme","find","topicalTheme","isSameOrBefore","isSameOrAfter","nextUpdatedDate","nextTopicalTheme","getTopicalThemeOverrideAndNextUpdateDate","useTopicalTheme","_","merge","applicableSettings","getChallengeTitle","challenge","options","type","concat","typeOptions","mateIn","Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","getElementById","newScriptEl","id","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","token","setSettings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","gotChallenges","challengesInfo","challenges","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotGame","game","filter","oldGame","client","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","meta","publishDatetime","err","return","prepareChallenges","onChallenges","gotPersonalChallenges","personalChallenges","other","getItem","password","removeItem","localSettings","parse","e","updateApplicableSettingsTimeout","emit","setInterval","autoSubmitMoves","confirmSubmitMoves","enableNotifications","rotateOpponent","animations","arrows","numbers","_this2","constructor","getDefaultSettings","_utils$getApplicableS","utils","applicableSettingsName","applicableSettingsOverride","clearTimeout","millisecondsUntilUpdate","diff","setTimeout","socket","process","available","callbacks","_i","_arr","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this3","myIndex","findIndex","slice","toConsumableArray","byId","fromPairs","online","includes","offline","readyToPlayMe","challengedUser","_this4","live","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this5","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this6","otherChallenges","userId","public","private","isAfter","otherSolved","won","otherUnsolved","otherStarted","otherNotStarted","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","lastMovesInHistory","indexOf","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","row","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","_ref10","_this9","getAvailableMoves","lhs","rhs","_this10","playerCells","playerCell","areCellsNeighbours","_this11","_this12","getAvailableMovesMatrix","_this13","_this14","maximumLevel","_this15","isMoveAvailable","updates","_len","newCells","Array","_key","_newCells","update","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref11","_ref12","levelStr","notations","_ref13","_ref14","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref15","_ref17","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","GameClassic","abs","Classic","GameHex","Hex","GAME_TYPES","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","translate","gameType","point","getTranslate","getTranslateClassic","getTranslateHex","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","PieceHalloweenWitchHat","PieceHalloweenCauldron","PieceHalloweenBat","PieceHalloweenSpider","PieceHalloweenCat","PieceHalloweenTombstone","PieceHalloweenPumpkin","PieceHalloweenGhost","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","halloween-witch-hat","halloween-cauldron","halloween-bat","halloween-spider","halloween-cat","halloween-tombstone","halloween-pumpkin","halloween-ghost","PieceDefinitions","values","Definitions","BaseCellDefinitions","paths","border","level0","level1","level2","level3","level4","defaultBorder","width","height","defaultBorderHex","center","PI","angle","cos","sin","reverse","defineCellDefinitions","CellDefinitionsFor","_PureComponent2","Cell_BaseCellDefinitions","OriginalCellDefinitions","HalloweenCellDefinitions","CellDefinitions","cellDefinitionsStyleMap","CellDefinitionsStyle","original","halloween","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","levelAnimate","current","beginElement","allowControl","_this$props2$theme","_this$props2$theme$ce","_this$props2$theme$pi","_this$props2$theme$ro","_this$state","isPlayerAOpponent","isPlayerBOpponent","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","translateTo","translateFrom","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","GameList","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDatetime","TournamentList","visibleTournaments","TournamentList_TournamentCard","ChallengeCard","selectChallenge","currentChallengeId","userChallenge","1","2","3","difficulty","maxDifficulty","title","mistakes","isMyChallenge","fromNow","toNow","startingPosition","get","ChallengeList","visibleChallenges","ChallengeList_ChallengeCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$challeng","selectLiveChallenge","render","components_GameList","challengesList","components_ChallengeList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","canAnyPlayerSubmit","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","Play_PlayHistory","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","submitAndDisableConfirm","updateSettings","isPlayerControlled","previousGame","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","PlayHistory","lastVisibleGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","href","navigator","catch","alert","switchToClassic","switchTo","switchToHex","open","active","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themeCellsOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateConfirmSubmitMoves","updateEnableNotifications","updateThemeUseTopicalTheme","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","updateThemeCells","_this$props$settings","_theme$cells","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","admin","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","_Game$Classic","_Game$Classic2","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","0","4","b","EditPositionBoard","updatePosition","newCell","newPosition","CreateChallenge","editing","currentStep","tree","onCreateChallenge","getTree","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicateChalle","duplicateChallenge","newChallenge","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","challengeResponse","deleteCurrentStep","_this$duplicateChalle2","removeStep","editChallenge","createChallenge","cleanedChallenge","updateChallenge","createOrUpdateChallenge","discardChallenge","initialChallenge","fillGames","challengeStep","response","treePathStep","oldStep","isArray","getNextTree","nextTree","getDifficultyStars","source","rowIndex","columnIndex","CreateChallenge_ChallengeForm","ChallengeForm","editingPosition","convertedValue","valueConversion","newChallengeToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this4$state","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","EditChallenge","dismissUrlChallengeError","components_CreateChallenge","Challenges","_this$props$challenge","components_EditChallenge","Challenges_ChallengePlayer","ChallengePlayer","challengeId","getResumedChallengeGame","submittedGame","wrongMove","askServer","shareChallenge","resultingGame","userChallengeStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","shift","invalidPlayerPositions","v","validPlayerResponse","submitChallengeMove","_ret","success","App","liveGame","liveTournament","liveChallenge","gameUrl","tournamentUrl","challengeUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"6iBAGaA,EAAkB,SAAAC,GAC7B,IAAMC,EAAWC,SAASC,cAAc,YAGxCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,MAAQN,EACjBC,EAASM,SACTL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,IAGfS,EAAgB,CAC3B,CACEC,KAAMC,IAAO,uBACbC,MAAOD,IAAO,uBACdE,KAAM,YACNC,SAAU,CACRC,MAAO,CACLC,MAAO,YACPC,OAAQ,kBACRC,OAAQ,gBA4BHC,EAAyC,SAACC,EAAUC,GAAO,IAAAC,EAtBvB,WAAmB,IAAlBD,EAAkBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAbZ,MAC/Ce,EAAuBjB,EAAckB,KAAK,SAAAC,GAAY,OAC1DA,EAAalB,KAAKmB,eAAeR,IAAOO,EAAahB,MAAMkB,cAAcT,KAE3E,GAAIK,EACF,MAAO,CACLZ,SAAUY,EAAqBZ,SAC/BiB,gBAAiBL,EAAqBd,MACtCC,KAAMa,EAAqBb,MAI/B,IAAMmB,EAAmBvB,EAAckB,KAAK,SAAAC,GAAY,OACtDA,EAAalB,KAAKoB,cAAcT,KAElC,OAAIW,EACK,CAAClB,SAAU,KAAMiB,gBAAiBC,EAAiBtB,KAAMG,KAAM,MAGjE,CAACC,SAAU,KAAMiB,gBAAiB,KAAMlB,KAAM,MAIXoB,CAAyCZ,GAA5EP,EAD+DQ,EAC/DR,SAAUiB,EADqDT,EACrDS,gBAAiBlB,EADoCS,EACpCT,KAKlC,OAJIO,EAASL,MAAMmB,iBAAmBpB,IACpCM,EAAWe,IAAEC,MAAM,GAAIhB,EAAUN,IAG5B,CAACuB,mBAAoBjB,EAAUW,kBAAiBjB,WAAUD,SAGtDyB,EAAoB,SAAAC,GAC/B,OAAQA,EAAUC,QAAQC,MACxB,IAAK,OACH,sBAAAC,OAAuBH,EAAUC,QAAQG,YAAYC,QACvD,IAAK,YACH,uBAAAF,OAAwBH,EAAUC,QAAQG,YAAYC,QACxD,QACE,MAAO,sBC7DPC,aAqBJ,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAFdG,uBAAyB,KAEXH,KAyFdI,eAAiB,WACf,IAAKC,OAAOC,GAAGC,YAKb,OAJAC,cAAcT,EAAKI,wBACnBJ,EAAKI,uBAAyB,KAC9BJ,EAAKU,kBACLC,QAAQC,IAAI,qBAGd,IAAMC,EAAc1D,SAAS2D,eAAe,oBACtCC,EAAc5D,SAASC,cAAc,UAC3C2D,EAAYC,GAAKH,EAAYG,GAC7BD,EAAYpB,KAAOkB,EAAYlB,KAC/BoB,EAAYE,IAAMJ,EAAYI,IAC9BJ,EAAYK,SACZ/D,SAASgE,KAAKC,OAAOL,GACrBJ,QAAQU,KAAK,0CAxGDpB,KA+IdqB,OAAS,WACPhB,OAAOiB,SAASD,QAAO,IAhJXrB,KAmJduB,cAAgB,WACdxB,EAAKyB,UACLzB,EAAK0B,WAAY,EACjB1B,EAAK2B,UAAUC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cAtJjCzB,KAyJd6B,iBAAmB,WACjB9B,EAAK0B,WAAY,EACjB1B,EAAK+B,cAAe,EACpB/B,EAAKgC,aAAaJ,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cA5JpCzB,KA+JdgC,QAAU,SAAAC,GACJA,IACFlC,EAAKgB,GAAKkB,EAAKlB,GACfhB,EAAKmC,SAAWD,EAAKnE,KACrBiC,EAAKoC,MAAQF,EAAKE,MAClBpC,EAAKqC,YAAYH,EAAK5D,UACtBgE,aAAaC,QAAQ,UAAWvC,EAAKgB,IACrCsB,aAAaC,QAAQ,YAAavC,EAAKmC,UACvCG,aAAaC,QAAQ,aAAcvC,EAAKoC,OACxCE,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUzC,EAAK1B,YAE5D0B,EAAKkC,KAAOA,EACZlC,EAAK0C,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAASK,KACrClC,EAAK2C,SAAS3C,EAAK4C,UAAUC,OAC7B7C,EAAK8C,cAAc9C,EAAK+C,eAAeC,aA7K3B/C,KAgMd0C,SAAW,SAAAE,IACTA,EAAQxD,IAAE4D,QAAQJ,EAAO,CAAC,SAAAX,GAAI,OAAIA,EAAKgB,wBAA0B,EAAI,GAAG,QAAS,YAAa,CAAC,MAAO,OAAQ,UACxGC,QAAQ,SAACjB,EAAMkB,GACnBlB,EAAKmB,KAAOD,EAAQ,IAEtBpD,EAAK4C,UAAY5C,EAAKsD,aAAaT,GACnC7C,EAAKuD,QAAQ3B,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK4C,cAtM/B3C,KAqOduD,SAAW,SAAAC,GACTA,EAAQpE,IAAEqE,OAAOD,EAAO,CAAC,gBAAiB,MAAO,CAAC,OAAQ,SAC1DzD,EAAK2D,UAAY3D,EAAK4D,aAAaH,GACnCzD,EAAK6D,QAAQjC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK2D,cAxO/B1D,KA2Od6D,QAAU,SAAAC,GACR,IAAMN,EAAQzD,EAAK2D,UAAUF,MAAMO,OAAO,SAAAC,GAAO,OAAIA,EAAQjD,KAAO+C,EAAK/C,KAAIpB,OAAO,CAACmE,IACrFG,EAAOV,SAASC,IA7OJxD,KAwRdkE,eAAiB,SAAAC,GACfA,EAAc/E,IAAEqE,OAAOU,EAAa,CAAC,gBAAiB,cAAe,kBAAmB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,SACxHpE,EAAKqE,gBAAkBrE,EAAKsE,mBAAmBF,GAC/CpE,EAAKuE,cAAc3C,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAKqE,oBA3RrCpE,KA+Td6C,cAAgB,SAAAE,GAAc,IAAAwB,GAAA,EAAAC,GAAA,EAAAC,OAAA/F,EAAA,IAC5B,QAAAgG,EAAAC,EAAwB5B,EAAxB6B,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAoC,KAAzB/E,EAAyBkF,EAAApH,MAClCkC,EAAUwF,KAAKC,gBAAkBrH,IAAO4B,EAAUwF,KAAKC,kBAF7B,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAI5B1B,EAAa3D,IAAEqE,OAAOV,EAAY,CAAC,gBAAiB,cAAe,kBAAmB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,SACtHhD,EAAK+C,eAAiB/C,EAAKqF,kBAAkBrC,GAC7ChD,EAAKsF,aAAa1D,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK+C,mBArUpC9C,KAwUdsF,sBAAwB,SAAAC,GACtBxF,EAAK8C,cAAc0C,EAAmB5F,OAAOI,EAAK+C,eAAe0C,SAxUjExF,KAAKe,GAAKsB,aAAaoD,QAAQ,YAAc,KAC7CzF,KAAKkC,SAAWG,aAAaoD,QAAQ,cAAgB,KACrD,IAAMC,EAAWrD,aAAaoD,QAAQ,kBAAoB,KAC1DpD,aAAasD,WAAW,iBACxB3F,KAAKmC,MAAQE,aAAaoD,QAAQ,eAAiBC,EACnD,IACIrH,EADEuH,EAAgBvD,aAAaoD,QAAQ,kBAAoB,OAE/D,IACEpH,EAAWkE,KAAKsD,MAAMD,GACtB,MAAOE,GACPzH,EAAW,KAEb2B,KAAK+F,gCAAkC,KACvC/F,KAAKoC,YAAY/D,GACZgC,OAAOC,KACVD,OAAOC,GAAK,iBAAO,CACjBhC,GAAI,kBAAMoC,QAAQU,KAAK,8BACvB4E,KAAM,kBAAMtF,QAAQU,KAAK,8BACzBb,aAAa,IAEfF,OAAOC,GAAGC,aAAc,EACxBP,KAAKG,uBAAyB8F,YAAYjG,KAAKI,eAAgB,MAGjEJ,KAAK8B,cAAe,EAEpB9B,KAAK0B,UAAY,GACjB1B,KAAK+B,aAAe,GACpB/B,KAAKyC,OAAS,GACdzC,KAAKsD,QAAU,GACftD,KAAK4D,QAAU,GACf5D,KAAKsE,cAAgB,GACrBtE,KAAKqF,aAAe,GAEpBrF,KAAKS,mFAtDL,MAAO,CACLyF,iBAAiB,EACjBC,oBAAoB,EACpBC,qBAAqB,EACrBpI,MAAO,CACLmB,iBAAiB,EACjBlB,MAAO,WACPC,OAAQ,OACRC,OAAQ,GACRkI,gBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,QAAS,iEA6CHnI,GAAU,IAAAoI,EAAAzG,KAElBA,KAAK3B,SADHA,EACce,IAAEC,MAAMW,KAAK0G,YAAYC,qBAAsBtI,GAE/C2B,KAAK0G,YAAYC,qBAJf,IAAAC,EAM0CC,EAA6C7G,KAAK3B,UAAzGiB,EANasH,EAMbtH,mBAAoBN,EANP4H,EAMO5H,gBAAiBjB,EANxB6I,EAMwB7I,SAAUD,EANlC8I,EAMkC9I,KAQtD,GAPAkC,KAAKV,mBAAqBA,EAC1BU,KAAK8G,uBAAyBhJ,EAC9BkC,KAAK+G,2BAA6BhJ,EAC9BiC,KAAK+F,kCACPiB,aAAahH,KAAK+F,iCAClB/F,KAAK+F,gCAAkC,MAErC/G,EAAiB,CACnB,IAAMiI,EAA0BjI,EAAgBkI,KAAKtJ,OACrDoC,KAAK+F,gCAAkCoB,WAAW,WAChDV,EAAKrE,YAAYqE,EAAKpI,UACtBoI,EAAKhE,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAAS6E,EAAKxE,SACzCgF,yCAKLjH,KAAKoH,OAAS/G,OAAOC,GAAG+G,6BACxBrH,KAAKsH,WAAatH,KAAKoH,OAAO7G,YAC9BP,KAAKyB,WAAY,EACjBzB,KAAKoH,OAAO9I,GAAG,UAAW0B,KAAKuB,eAC/BvB,KAAKoH,OAAO9I,GAAG,aAAc0B,KAAK6B,kBAClC7B,KAAKoH,OAAO9I,GAAG,SAAU0B,KAAKqB,QAE9BrB,KAAKiC,KAAO,KACZjC,KAAKoH,OAAO9I,GAAG,OAAQ0B,KAAKgC,SAE5BhC,KAAK2C,UAAY3C,KAAKqD,aAAa,IACnCrD,KAAKoH,OAAO9I,GAAG,QAAS0B,KAAK0C,UAE7B1C,KAAK0D,UAAY1D,KAAK2D,aAAa,IACnC3D,KAAKoH,OAAO9I,GAAG,QAAS0B,KAAKuD,UAC7BvD,KAAKoH,OAAO9I,GAAG,OAAQ0B,KAAK6D,SAE5B7D,KAAKoE,gBAAkBpE,KAAKqE,mBAAmB,IAC/CrE,KAAKoH,OAAO9I,GAAG,cAAe0B,KAAKkE,gBAEnClE,KAAK8C,eAAiB9C,KAAKoF,kBAAkB,IAC7CpF,KAAKoH,OAAO9I,GAAG,aAAc0B,KAAK6C,eAClC7C,KAAKoH,OAAO9I,GAAG,sBAAuB0B,KAAKsF,uBAE3CtF,KAAKwB,4CAqBG+F,GACR,QAAAC,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,gBAAiB,gBAAlGD,EAAAC,EAAAhJ,OAAA+I,IAAmH,CAA9G,IAAM1J,EAAI2J,EAAAD,GACP5F,EAAW2F,EAAUzJ,GACvB8D,GACF5B,KAAKlC,GAAM4J,KAAK9F,wCAKV2F,GACV,QAAAI,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,gBAAjFD,EAAAC,EAAAnJ,OAAAkJ,IAAkG,CAA7F,IAAM7J,EAAI8J,EAAAD,GACP/F,EAAW2F,EAAUzJ,GACvB8D,GACFxC,IAAEyI,KAAK7H,KAAKlC,GAAO8D,sCAMvB5B,KAAKoH,OAAOpB,KAAK,cAAe,CAC9B8B,WAtJa,GAuJb/G,GAAIf,KAAKe,GACTjD,KAAMkC,KAAKkC,SACXC,MAAOnC,KAAKmC,MACZ9D,SAAU2B,KAAK3B,yCAIbP,EAAM4H,EAAUqC,GACpB/H,KAAKoH,OAAOpB,KAAK,SAAU,CAAC8B,WA/Jb,GA+JyBhK,OAAM4H,WAAUqC,gDAIxD/H,KAAKoH,OAAOpB,KAAK,kDAoCJlI,GACbkC,KAAKoH,OAAOpB,KAAK,kBAAmBlI,0CAGvB4H,GACb1F,KAAKoH,OAAOpB,KAAK,kBAAmBN,0CAGvBrH,GACb2B,KAAKoH,OAAOpB,KAAK,kBAAmB3H,6CAGpB2J,GAChBhI,KAAKoH,OAAOpB,KAAK,uBAAwBgC,wCAY9BpF,GAAO,IACdqF,EADcC,EAAAlI,KAElB,GAAIA,KAAKiC,KAAM,CACb,IAAMkG,EAAUvF,EAAMwF,UAAU,SAAAnG,GAAI,OAAIA,EAAKlB,KAAOmH,EAAKjG,KAAKlB,KAC1DoH,GAAW,GACbF,EAAarF,EAAMyF,MAAM,EAAGF,GAASxI,OAAOiD,EAAMyF,MAAMF,EAAU,IAClEvF,EAAK,CAAIA,EAAMuF,IAAVxI,OAAAM,OAAAqI,EAAA,EAAArI,CAAuBgI,KAE5BA,EAAarF,OAGfqF,EAAarF,EAEf,IAAM2F,EAAOnJ,IAAEoJ,UAAU5F,EAAMjB,IAAI,SAAAM,GAAI,MAAI,CAACA,EAAKlB,GAAIkB,MAC/CwG,EAAS7F,EAAMmB,OAAO,SAAA9B,GAAI,OAAIA,EAAKwG,SACnCT,EAAcS,EAAO1E,OAAO,SAAA9B,GAAI,MAAI,EAAC,GAAMiG,EAAKjG,MAAOiG,EAAKjG,KAAKlB,IAAW2H,SAASzG,EAAK+F,eAChG,MAAO,CACLpF,QACA2F,OACA/C,MAAOyC,EACPQ,SACAE,QAAS/F,EAAMmB,OAAO,SAAA9B,GAAI,OAAKA,EAAKwG,SACpCT,cACAY,cAAeZ,EAAYjE,OAAO,SAAA9B,GAAI,OAAIiG,EAAKjG,MAAQiG,EAAKjG,KAAKlB,KAAOkB,EAAK+F,cAC7Ea,eAAgB7I,KAAKiC,MAAQsG,EAAKvI,KAAKiC,KAAK+F,cAAwB,2CAe3DxE,GAAO,IAAAsF,EAAA9I,KACZ+I,EAAOvF,EAAMO,OAAO,SAAAD,GAAI,OAAKA,EAAKkF,WAClCA,EAAWxF,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAKkF,WAC3C,MAAO,CACLxF,QACA+E,KAAMnJ,IAAEoJ,UAAUhF,EAAM7B,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MAC9CiF,OACAE,OAAQjJ,KAAKiC,KAAO8G,EAAKhF,OAAO,SAAAD,GAAI,OAAIA,EAAKoF,QAAQR,SAASI,EAAK7G,KAAKlB,MAAO,GAC/EoI,UAAWnJ,KAAKiC,KAAO8G,EAAKhF,OAAO,SAAAD,GAAI,OAAKA,EAAKoF,QAAQR,SAASI,EAAK7G,KAAKlB,MAAOgI,EACnFC,WACAI,WAAYpJ,KAAKiC,KAAO+G,EAASjF,OAAO,SAAAD,GAAI,OAAIA,EAAKoF,QAAQR,SAASI,EAAK7G,KAAKlB,MAAO,GACvFsI,cAAerJ,KAAKiC,KAAO+G,EAASjF,OAAO,SAAAD,GAAI,OAAKA,EAAKoF,QAAQR,SAASI,EAAK7G,KAAKlB,MAAOgI,EAC3FO,KAAMtJ,KAAKiC,KAAOuB,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAKoF,QAAQR,SAASI,EAAK7G,KAAKlB,MAAO,2CAInE+C,EAAMyF,GACnBvJ,KAAKoH,OAAOpB,KAAK,oBAAqB,CAACjF,GAAI+C,EAAK/C,GAAIwI,mDAGrCC,GACfxJ,KAAKoH,OAAOpB,KAAK,oBAAqBwD,0CAGzBC,GACbzJ,KAAKoH,OAAOpB,KAAK,kBAAmByD,EAAW1I,4CAGjC0I,GACdzJ,KAAKoH,OAAOpB,KAAK,mBAAoByD,EAAW1I,4CAGlC0I,GACdzJ,KAAKoH,OAAOpB,KAAK,mBAAoByD,EAAW1I,4CAGlC0I,GACdzJ,KAAKoH,OAAOpB,KAAK,mBAAoByD,EAAW1I,+CAS/BoD,GAAa,IAAAuF,EAAA1J,KACxB2J,EAASxF,EAAYJ,OAAO,SAAA0F,GAAU,OAAKA,EAAWG,UACtDb,EAAO5E,EAAYJ,OAAO,SAAA0F,GAAU,OAAIA,EAAWG,UAAYH,EAAWT,WAC1Ea,EAAgBF,EAAOhK,OAAOoJ,GAC9BC,EAAW7E,EAAYJ,OAAO,SAAA0F,GAAU,OAAIA,EAAWT,WAC7D,MAAO,CACL7E,cACAoE,KAAMnJ,IAAEoJ,UAAUrE,EAAYxC,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MACpD6F,SAAQZ,OAAMc,gBAAeb,WAC7Bc,SAAU9J,KAAKiC,KAAO0H,EAAO5F,OAAO,SAAA0F,GAAU,OAAIA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO,GAC/FkI,OAAQjJ,KAAKiC,KAAO8G,EAAKhF,OAAO,SAAA0F,GAAU,OAAIA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO,GAC3FgJ,gBAAiB/J,KAAKiC,KAAO4H,EAAc9F,OAAO,SAAA0F,GAAU,OAAIA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO,GAC7GqI,WAAYpJ,KAAKiC,KAAO+G,EAASjF,OAAO,SAAA0F,GAAU,OAAIA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO,GACnGiJ,YAAahK,KAAKiC,KAAO8G,EAAKhF,OAAO,SAAA0F,GAAU,OAAKA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAOgI,EACjGI,UAAWnJ,KAAKiC,KAAO0H,EAAO5F,OAAO,SAAA0F,GAAU,OAAKA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO4I,EACjGM,mBAAoBjK,KAAKiC,KAAO4H,EAAc9F,OAAO,SAAA0F,GAAU,OAAKA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO4I,EACjHN,cAAerJ,KAAKiC,KAAO+G,EAASjF,OAAO,SAAA0F,GAAU,OAAKA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAOiI,EACvGM,KAAMtJ,KAAKiC,KAAOkC,EAAYJ,OAAO,SAAA0F,GAAU,OAAIA,EAAWP,QAAQR,SAASgB,EAAKzH,KAAKlB,MAAO,4CAIpFvB,GACdQ,KAAKoH,OAAOpB,KAAK,mBAAoBxG,2CAGvBA,GACdQ,KAAKoH,OAAOpB,KAAK,mBAAoBxG,+CAGnBA,EAAW0K,GAC7BlK,KAAKoH,OAAOpB,KAAK,yBAA0B,CAACjF,GAAIvB,EAAUuB,GAAImJ,mDAgB9CnH,GAAY,IAAAoH,EAAAnK,KACtBoK,EAAkBpK,KAAKiC,KAAOc,EAAWgB,OAAO,SAAAvE,GAAS,OAAIA,EAAU6K,SAAWF,EAAKlI,KAAKlB,KAAMgC,EACxG,MAAO,CACLA,aACAuH,OAAQvH,EAAWgB,OAAO,SAAAvE,GAAS,OAAIA,EAAUwF,KAAKsF,QAAU9K,EAAUwF,KAAKC,gBAAgBnG,mBAC/FyL,QAASxH,EAAWgB,OAAO,SAAAvE,GAAS,OAAKA,EAAUwF,KAAKsF,QAAU9K,EAAUwF,KAAKC,gBAAgBuF,YACjGjC,KAAMnJ,IAAEoJ,UAAUzF,EAAWpB,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MACnDwF,KAAMtJ,KAAKiC,KAAOc,EAAWgB,OAAO,SAAAvE,GAAS,OAAIA,EAAU6K,SAAWF,EAAKlI,KAAKlB,KAAM,GACtFyE,MAAO4E,EACPK,YAAazK,KAAKiC,KAAOmI,EAAgBrG,OAAO,SAAAvE,GAAS,OAAI2K,EAAKlI,KAAKc,WAAWvD,EAAUuB,KAAOoJ,EAAKlI,KAAKc,WAAWvD,EAAUuB,IAAIiE,KAAK0F,MAAO,GAClJC,cAAe3K,KAAKiC,KAAOmI,EAAgBrG,OAAO,SAAAvE,GAAS,OAAK2K,EAAKlI,KAAKc,WAAWvD,EAAUuB,MAAQoJ,EAAKlI,KAAKc,WAAWvD,EAAUuB,IAAIiE,KAAK0F,MAAON,EACtJQ,aAAc5K,KAAKiC,KAAOmI,EAAgBrG,OAAO,SAAAvE,GAAS,OAAI2K,EAAKlI,KAAKc,WAAWvD,EAAUuB,KAAOoJ,EAAKlI,KAAKc,WAAWvD,EAAUuB,IAAIiE,KAAK4E,UAAYO,EAAKlI,KAAKc,WAAWvD,EAAUuB,IAAIiE,KAAK0F,MAAO,GACvMG,gBAAiB7K,KAAKiC,KAAOmI,EAAgBrG,OAAO,SAAAvE,GAAS,OAAK2K,EAAKlI,KAAKc,WAAWvD,EAAUuB,MAAQoJ,EAAKlI,KAAKc,WAAWvD,EAAUuB,IAAIiE,KAAK4E,UAAWQ,YAKrJnG,EAAS,IAAInE,EAC1BO,OAAO4D,OAASA,EAEDnE,iDCjXTgL,uLACSZ,GAAM,IACVa,EAAS/K,KAAKgL,MAAdD,MACP,SAAApL,OAAUoL,EAAME,IAAIC,SAAS,KAAOH,EAAME,IAAI5C,MAAM,GAAI,GAAK0C,EAAME,KAAnEtL,OAAyEuK,EAAI,IAAAvK,OAAOuK,GAAS,sEAGrD,IAAAnK,EAAAC,KAAAmL,EACOnL,KAAKgL,MAA7CI,EADiCD,EACjCC,MAAOC,EAD0BF,EAC1BE,aAAcN,EADYI,EACZJ,MAAOzJ,EADK6J,EACL7J,SAC/BgK,EAAY,KACZC,EAAc,KACdC,EAAWT,EAAME,IAwCrB,MAAO,CAACQ,cAtCcL,EACnBzJ,IAAI,SAAC+J,EAAMC,GAAP,MAAyB,CAACD,EAAMC,KACpC5H,OAAO,SAAA6H,GAAA,OAAA3L,OAAA4L,EAAA,EAAA5L,CAAA2L,EAAA,QACPjK,IAAI,SAAAmK,EAAwB3I,GAAU,IAAA4I,EAAA9L,OAAA4L,EAAA,EAAA5L,CAAA6L,EAAA,GAAhCJ,EAAgCK,EAAA,GAA1BJ,EAA0BI,EAAA,GACrC,IAAKL,EACH,OAAO,KAGT,IAAMM,EAAKjM,EAAKkM,aAAaP,EAAKxB,MAC9ByB,IAAkBN,IACpBC,EAAYU,GAEd,IAAME,OAA6BxN,IAAlBgN,EAAKQ,SAAyBnM,EAAKkM,aAAaP,EAAKQ,UAAYF,EAC9E1K,EAAS6K,SAASC,WAAWF,KAC/BX,EAAcpI,EACdqI,EAAWQ,GAGb,IAAMK,EACqB,kBAAlBX,EAAKW,SACR,CAACC,QAASZ,EAAKW,UACfX,EAAKW,SAEX,OAAOpM,OAAAsM,EAAA,EAAAtM,CAAA,CACL+L,MACGN,EAFL,CAGEW,SACEG,EAAAC,EAAAtP,cAACuP,EAAA,EAAKC,KAAN1M,OAAA2M,OAAA,CACEC,IAAKnB,EAAKxB,KACV4C,GAAIC,IACJf,GAAIE,GACAG,EAJN,CAKEW,KAAMtB,EAAKsB,MAAQX,EAASW,YAKnCjJ,OAAO,SAAAkJ,GAAY,OAAIA,IACH3B,YAAWC,cAAaC,6CAGxC,IAAA0B,EACiDlN,KAAKgL,MAAtDmC,EADAD,EACAC,IAAKC,EADLF,EACKE,KAAMrC,EADXmC,EACWnC,MAAOsC,EADlBH,EACkBG,iBAAkBC,EADpCJ,EACoCI,UADpCC,EAEmDvN,KAAKwN,0CAAxD/B,EAFA8B,EAEA9B,cAAeH,EAFfiC,EAEejC,UAAWC,EAF1BgC,EAE0BhC,YAAaC,EAFvC+B,EAEuC/B,SAE9C,OACEgB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACiB,OAAdnC,EACCkB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAUC,OAAK,EAAChQ,KAAMoN,EAAME,IAAKe,GAAIV,KAErC,KACJkB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOxD,KAAMsB,GACXgB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD3N,OAAA2M,OAAA,CACEQ,KAAMA,EACNC,iBAAkBA,GACdF,EAHN,CAIE/B,MAAOK,EACPF,YAAaA,EACb+B,UAAWA,cAvEOO,aA6F9B/C,EAAgBgD,aAAe,CAC7BT,kBAAkB,EAClBhC,aAAc,GAGD0C,sBAAWjD,8CCzGpBkD,oJAAyBC,QAEzBC,aAoSJ,SAAAA,EAAYC,EAAgBC,EAAQC,EAAUC,EAAUC,GAAY,IAAAC,EAAAxO,KAClE,GADkEC,OAAAC,EAAA,EAAAD,CAAAD,KAAAkO,IAC7DC,IAAmBC,EACtB,MAAM,IAAIH,MAAM,8DAElBjO,KAAKqO,SAAWA,EAChBrO,KAAKyO,SAAWzO,KAAKqO,SAAWrO,KAAKqO,SAASI,QAAU,IACrD1K,OAAO,SAAAD,GAAI,OAAKA,EAAK4K,UACrB/O,OAAO,CAACK,OACXA,KAAK2O,kBAAoB3O,KAAKyO,QAAQzO,KAAKyO,QAAQhQ,OAAS,GAC5DuB,KAAK4O,aAAe5O,KAAKqO,SAAWrO,KAAKqO,SAASO,YAAc,IAAIjP,OAAOK,MAC3EA,KAAKuO,WAAaA,EAClBvO,KAAK6O,UAAY7O,KAAKqO,SAAYE,EAAavO,KAAKqO,SAASQ,UAAY,EAAI7O,KAAKqO,SAASQ,UAAa,EACxG7O,KAAK8O,WAAa9O,KAAKqO,SAAWrO,KAAKqO,SAASS,WAAa,EAAI,EACjE9O,KAAKsO,SAAWA,IAAuBF,EAAOW,eAAiB,CAACC,OAAQZ,EAAOW,gBAAkBT,GACjGtO,KAAKuJ,MAAQvJ,KAAKqO,SAAWrO,KAAKqO,SAAS9E,MAAM5J,OAAO,CAACK,KAAKsO,WAAa,GAC3EtO,KAAKiP,mBAAqBjP,KAAK4O,YAC5BvG,MAAMrI,KAAK4O,YAAYM,QAAQlP,KAAK2O,mBAAqB,GACzDhN,IAAI,SAAAmC,GAAI,OAAIA,EAAKwK,WACpBtO,KAAKkK,KAAOlK,KAAK2O,kBACb3O,KAAK2O,kBAAkBzE,KAAKvK,OAAO,CAACK,KAAKiP,qBACzC,GAEJjP,KAAKmO,eAAiBA,EAEtB,IAAMgB,EACJ,CAAC,aAAc,WAAY,uBAAwB,UAAW,kBAC7DpL,OAAO,SAAA8I,GAAG,YAAoBnO,IAAhB0P,EAAOvB,KACxB,GAAIsC,EAAkB1Q,OACpB,MAAM,IAAIwP,MAAJ,kCAAAtO,OAA4CwP,EAAkBC,KAAK,QA5BT,IA8B3DC,EAAuEjB,EAAvEiB,WAAYC,EAA2DlB,EAA3DkB,SAAUC,EAAiDnB,EAAjDmB,qBAAsBb,EAA2BN,EAA3BM,QAASK,EAAkBX,EAAlBW,eAC5D/O,KAAKwP,WAAanB,EAAWA,EAASgB,WAAanB,EAAKuB,SACxDzP,KAAKqP,WAAaA,EAClBrP,KAAK0P,aAAerB,EAAWA,EAASiB,SAAW,KACnDtP,KAAKsP,SAAWA,EAChBtP,KAAKuP,qBAAuBA,EAC5BvP,KAAK0O,QAAUA,EACf1O,KAAK2P,kBAAoB3P,KAAKqO,SAC9BrO,KAAK+O,eAAiBA,EACtB/O,KAAK4P,aAAeb,EAChB/O,KAAK0G,YAAYmJ,uBAAuBd,GACvCT,EACCtO,KAAK0G,YAAYoJ,cAAcxB,EAASyB,GAAGzB,EAAS0B,GACpD,GACNhQ,KAAKiQ,aAAL,GAAAtQ,OAAuBK,KAAKqO,SAAWrO,KAAKqO,SAAS4B,aAAe,IAApEtQ,OAAyEK,KAAK4P,cAC9E5P,KAAKkQ,uBAAyBlQ,KAAKiQ,aAChCE,MAAM,QACNpM,OAAO,SAAAqM,GAAI,OAAIA,IACfzO,IAAI,SAAAyO,GAAI,OAAI5B,EAAK9H,YAAY2J,0BAA0BD,KACvDhB,KAAK,IACRpP,KAAKsQ,iBAAmBtQ,KAAK0G,YAAY6J,oBAAoBvQ,KAAKmO,gBAElEnO,KAAKwQ,OAASxQ,KAAKyQ,YACfzQ,KAAKwQ,OACPxQ,KAAKgJ,UAAW,EACNhJ,KAAK0G,YAAYgK,iBAAiB1Q,KAAKuP,sBAIjDvP,KAAKgJ,UAAW,GAHhBhJ,KAAKgJ,UAAW,EAChBhJ,KAAKwQ,OAASxQ,KAAK0G,YAAYiK,aAAa3Q,KAAKqP,aAK/CrP,KAAKgJ,WACPhJ,KAAKuP,qBAAuBvP,KAAK0G,YAAYkK,8EAvEtCzC,EAAgBC,EAAQE,GACjC,OAAO,IAAItO,KAAK0G,YAAYyH,EAAgBC,EAAQpO,KAAMsO,GAAU,sCAG3DH,EAAgBC,EAAQE,GACjC,OAAO,IAAItO,KAAK0G,YAAYyH,EAAgBC,EAAQpO,KAAMsO,GAAU,sCAhOpE,OAAO,IAAItO,KAFYA,KAAK6Q,2BACb7Q,KAAK8Q,mBACoB,KAAM,MAAM,qCAGrCvH,GACf,IAAIzF,EAAO9D,KAAK+Q,SAGhB,OAFAjN,EAAOA,EAAKkN,UAAUzH,8CAKE4E,GAAgB,IAAApO,EAAAC,KACxC,GAA8B,IAA1BmO,EAAe1P,OACjB,MAAM,IAAIwP,MAAJ,2BAAAtO,OAAqCwO,EAAe1P,SAE5D,GAAI0P,EAAevP,KAAK,SAAAqS,GAAG,OAAyB,IAArBA,EAAIhT,MAAMQ,SACvC,MAAM,IAAIwP,MAAJ,2DAER,GAAIE,EAAevP,KAAK,SAACqS,EAAKlB,GAAN,OAAYkB,EAAIlB,IAAMA,IAC5C,MAAM,IAAI9B,MAAJ,6BAER,GAAIE,EAAevP,KAAK,SAAAqS,GAAG,OAAIA,EAAIhT,MAAMW,KAAK,SAACsS,EAAMlB,GAAP,OAAakB,EAAKlB,IAAMA,GAAKkB,EAAKnB,IAAMkB,EAAIlB,MACxF,MAAM,IAAI9B,MAAJ,qCAMR,GAAIjO,KAAKmR,SAAShD,EAJe,SAAA+C,GAAI,OAClCA,EAAKE,SAAWrR,EAAKsR,QAAQ3I,SAASwI,EAAKE,SACxCF,EAAKI,SAAWvR,EAAKwR,QAAQ7I,SAASwI,EAAKI,UAG/C,MAAM,IAAIrD,MAAJ,2CAER,GAAIjO,KAAKmR,SAAShD,EAAgB,SAAA+C,GAAI,OAAK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGxI,SAASwI,EAAKM,SACvE,MAAM,IAAIvD,MAAJ,iCAER,IAMIG,EANEqD,EAAezR,KAAK0R,UAAUvD,EAAgB,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK0P,WAAUhR,OACrFkT,EAAe3R,KAAK0R,UAAUvD,EAAgB,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK6R,WAAUnT,OAC3F,GAAIgT,EAAe,GAAKE,EAAe,EACrC,MAAM,IAAI1D,MAAJ,wDAAAtO,OACoD8R,EADpD,sBAAA9R,OACqFgS,IAI7F,GAAiB,IADAE,KAAKC,IAALC,MAAAF,KAAI5R,OAAAqI,EAAA,EAAArI,CAAQb,IAAE4S,QAAQ7D,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAM0D,IAAI,SAAAuP,GAAI,OAAIA,EAAKM,aAE1F,GAAqB,IAAjBG,EACF,GAAqB,IAAjBF,EACFrD,EAAS,CACPiB,WAAYrP,KAAKyP,SACjBH,SAAUtP,KAAKiS,6BACf1C,qBAAsBvP,KAAKkS,6BAC3BxD,SAAS,EACTK,eAAgB,WAEb,GAAqB,IAAjB0C,EACTrD,EAAS,CACPiB,WAAYrP,KAAKyP,SACjBH,SAAUtP,KAAKmS,8BACf5C,qBAAsBvP,KAAKoS,kCAAkCjE,GAC7DO,SAAS,EACTK,eAAgB,UAEb,CACL,IAAMsD,EAAqBrS,KAAKmR,SAAShD,EACvC,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK0P,UAAYyB,EAAKI,SAAWvR,EAAKuS,eAC1DC,EAAsBvS,KAAKmR,SAAShD,EACxC,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK0P,UAAYyB,EAAKI,SAAWvR,EAAKyS,gBAChE,IAAKH,IAAuBE,EAC1B,MAAM,IAAItE,MAAJ,2CAERG,EAAS,CACPiB,WAAYrP,KAAK4R,SACjBtC,SAAUtP,KAAKiS,6BACf1C,qBAAsBvP,KAAKoS,kCAAkCjE,GAC7DO,SAAS,EACTK,eAAgB,UAGf,CACL,GAAqB,IAAjB0C,EACF,MAAM,IAAIxD,MAAJ,4EAER,GAAqB,IAAjB0D,EACFvD,EAAS,CACPiB,WAAYrP,KAAK4R,SACjBtC,SAAUtP,KAAKmS,8BACf5C,qBAAsBvP,KAAKoS,kCAAkCjE,GAC7DO,SAAS,EACTK,eAAgB,UAEb,CACL,IAAM0D,EAAqBzS,KAAKmR,SAAShD,EACvC,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK6R,UAAYV,EAAKI,SAAWvR,EAAKuS,eAC1DI,EAAsB1S,KAAKmR,SAAShD,EACxC,SAAA+C,GAAI,OAAIA,EAAKE,SAAWrR,EAAK6R,UAAYV,EAAKI,SAAWvR,EAAKyS,gBAChE,IAAKC,IAAuBC,EAC1B,MAAM,IAAIzE,MAAJ,2CAERG,EAAS,CACPiB,WAAYrP,KAAKyP,SACjBH,SAAUtP,KAAK2S,gCACfpD,qBAAsBvP,KAAK4S,8BAA8BzE,EAAgBnO,KAAKyP,UAC9Ef,SAAS,EACTK,eAAgB,WAIjB,CACL,GAAqB,IAAjB0C,GAAuC,IAAjBE,EACxB,MAAM,IAAI1D,MAAJ,sFAGR,GAAIjO,KAAKmR,SAAShD,EAAgB,SAAA+C,GAAI,OAAmB,IAAfA,EAAKM,OAAeN,EAAKE,SACjE,MAAM,IAAInD,MAAJ,qCAGR,GADmBjO,KAAK0R,UAAUvD,EAAgB,SAAA+C,GAAI,OAAmB,IAAfA,EAAKM,OAAeN,EAAKE,SACpE3S,OAAS,EACtB,MAAM,IAAIwP,MAAJ,6BAING,EAFiBhP,IAAEyT,IAAIzT,IAAE4S,QAAQ7D,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAM0D,IAAI,SAAAuP,GAAI,OAAIA,EAAKM,YACvE,IAAM,EACZ,CACPnC,WAAYrP,KAAKyP,SACjBH,SAAUtP,KAAK2S,gCACfpD,qBAAsBvP,KAAK4S,8BAA8BzE,EAAgBnO,KAAKyP,UAC9Ef,SAAS,EACTK,eAAgB,MAGT,CACPM,WAAYrP,KAAK4R,SACjBtC,SAAUtP,KAAK2S,gCACfpD,qBAAsBvP,KAAK4S,8BAA8BzE,EAAgBnO,KAAK4R,UAC9ElD,SAAS,EACTK,eAAgB,MAItB,OAAO,IAAI/O,KAAKmO,EAAgBC,EAAQ,KAAM,MAAM,4CAG9B6B,GAAc,IAAAxJ,EAAAzG,KAC9BuJ,EAAQ0G,EACXE,MAAM,IACNxO,IAAI,SAAAyO,GAAI,OAAI3J,EAAKqM,sBAAsB1C,KAC1C,GAAI7G,EAAMxF,OAAO,SAAAgP,GAAI,OAAKA,IAAMtU,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKgT,UAAUzJ,GAAO,GAC7B,MAAOzD,GACP,OAAO9F,KAAKgT,UAAUzJ,GAAO,uDAIC2G,GAAwB,IAAAhI,EAAAlI,KAClDuJ,EAAQ2G,EACXC,MAAM,IACNxO,IAAI,SAAAyO,GAAI,OAAIlI,EAAK+K,4BAA4B7C,KAChD,GAAI7G,EAAMxF,OAAO,SAAAgP,GAAI,OAAKA,IAAMtU,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKgT,UAAUzJ,GAAO,GAC7B,MAAOzD,GACP,OAAO9F,KAAKgT,UAAUzJ,GAAO,gDAIN4E,GAAgB,IAAArF,EAAA9I,KACzC,OAAOZ,IAAE4S,QAAQ7D,EAAexM,IAC9B,SAAAsP,GAAG,OAAIA,EAAIhT,MAAM0D,IACf,SAAAuP,GAAI,OAAIpI,EAAKoK,8BAA8BhC,EAAKM,OAAON,EAAKE,aAC7DhC,KAAK,iDAGkB+D,GAAU,IAAAzJ,EAAA1J,KAC9BmO,EAAiBnO,KAAKoT,KAAKzR,IAAI,SAAAoO,GAAC,MAAK,CACzCA,IAAG9R,MAAOyL,EAAK2J,QAAQ1R,IAAI,SAAAqO,GAAC,OAAA/P,OAAAsM,EAAA,EAAAtM,CAAA,CAC1B+P,IAAGD,KAAMrG,EAAK4J,0BAA0BH,EAAa,EAAJpD,EAAQC,UAG7D,OAAOhQ,KAAKuT,aAAapF,0DAGWgF,GAAU,IAAAhJ,EAAAnK,KACxCmO,EAAiBnO,KAAKoT,KAAKzR,IAAI,SAAAoO,GAAC,MAAK,CACzCA,IAAG9R,MAAOkM,EAAKkJ,QAAQ1R,IAAI,SAAAqO,GAAC,OAAA/P,OAAAsM,EAAA,EAAAtM,CAAA,CAC1B+P,IAAGD,KAAM5F,EAAKqJ,gCAAgCL,EAAa,EAAJpD,EAAQC,UAGnE,OAAOhQ,KAAKuT,aAAapF,6DAGcgF,GACvC,IAEE,OADAnT,KAAKyT,+BAA+BN,IAC7B,EACP,MAAMrN,GACN,OAAO,wCAISqI,GAClB,IAAIsD,EAAe,EAAGE,EAAe,EADHpN,GAAA,EAAAC,GAAA,EAAAC,OAAA/F,EAAA,IAElC,QAAAgG,EAAAC,EAAgB3E,KAAKoT,KAArBxO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2B,KAAhByL,EAAgBtL,EAAApH,MAAAoW,GAAA,EAAAC,GAAA,EAAAC,OAAAlV,EAAA,IACzB,QAAAmV,EAAAC,EAAgB9T,KAAKqT,QAArBzO,OAAAC,cAAA6O,GAAAG,EAAAC,EAAAhP,QAAAC,MAAA2O,GAAA,EAA8B,KACtBxC,EAAO/C,EADe0F,EAAAvW,OACGW,MAAM+R,GACjCkB,EAAKE,SAAWpR,KAAKyP,UACvByB,EAAKI,OAAStR,KAAKuR,QAAQE,EAAe,GAC1CA,GAAgB,GACPP,EAAKE,SAAWpR,KAAK4R,WAC9BV,EAAKI,OAAStR,KAAKuR,QAAQI,EAAe,GAC1CA,GAAgB,IARK,MAAAzM,GAAAyO,GAAA,EAAAC,EAAA1O,EAAA,YAAAwO,GAAA,MAAAI,EAAA3O,QAAA2O,EAAA3O,SAAA,WAAAwO,EAAA,MAAAC,KAFO,MAAA1O,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAclC,OAAOzE,KAAK+T,mBAAmB5F,wDAsF/B,MAAO,CACL5E,MAAOvJ,KAAKuJ,6CA0BF,IAAAyK,EAAAC,EAAArI,EAAAsI,EAAAC,EAAAC,EAENC,GAAQH,EAAA,GAAAjU,OAAAqU,EAAA,EAAArU,CAAAiU,EACXhG,EAAKuB,UADMuE,EAAA,GAAA/T,OAAAqU,EAAA,EAAArU,CAAA+T,EACO,EAAI,KADX/T,OAAAqU,EAAA,EAAArU,CAAA+T,EACiB,EAAIO,IAAMC,QAAQ,MADnCvU,OAAAqU,EAAA,EAAArU,CAAA+T,EAC0C,EAAIO,IAAME,SAAS,MAD7DxU,OAAAqU,EAAA,EAAArU,CAAA+T,EACoE,EAAIO,IAAMG,MAAM,MADpFV,IAAA/T,OAAAqU,EAAA,EAAArU,CAAAiU,EAEXhG,EAAK0D,UAFMqC,EAAA,GAAAhU,OAAAqU,EAAA,EAAArU,CAAAgU,EAEO,EAAI,KAFXhU,OAAAqU,EAAA,EAAArU,CAAAgU,EAEiB,EAAIM,IAAMC,QAAQ,MAFnCvU,OAAAqU,EAAA,EAAArU,CAAAgU,EAE0C,EAAIM,IAAME,SAAS,MAF7DxU,OAAAqU,EAAA,EAAArU,CAAAgU,EAEoE,EAAIM,IAAMG,MAAM,MAFpFT,IAAAhU,OAAAqU,EAAA,EAAArU,CAAAiU,EAGX,MAHWtI,EAAA,GAAA3L,OAAAqU,EAAA,EAAArU,CAAA2L,EAGF,EAAI,KAHF3L,OAAAqU,EAAA,EAAArU,CAAA2L,EAGQ,EAAI2I,IAAMC,QAAQ,MAH1BvU,OAAAqU,EAAA,EAAArU,CAAA2L,EAGiC,EAAI2I,IAAME,SAAS,MAHpDxU,OAAAqU,EAAA,EAAArU,CAAA2L,EAG2D,EAAI2I,IAAMG,MAAM,MAH3EzU,OAAAqU,EAAA,EAAArU,CAAA2L,EAGkF,EAAI2I,IAAMI,OAAO,MAHnG/I,IAAAsI,GAMRU,EAAgB5U,KAAKmO,eACxBxM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MACb0D,IAAI,SAAAuP,GAAI,OAAImD,EAASnD,EAAKE,QAAQF,EAAKM,SACvCpC,KAAK,MACPA,KAAK,MAIFyF,GAHaV,EAAA,GAAAlU,OAAAqU,EAAA,EAAArU,CAAAkU,EAChBjG,EAAKuB,SAAW,KADAxP,OAAAqU,EAAA,EAAArU,CAAAkU,EACMjG,EAAK0D,SAAW,KADtBuC,GAGsBnU,KAAKqP,YAIxCyF,GAHSV,EAAA,GAAAnU,OAAAqU,EAAA,EAAArU,CAAAmU,EACZlG,EAAKuB,SAAW,KADJxP,OAAAqU,EAAA,EAAArU,CAAAmU,EACUlG,EAAK0D,SAAW,KAD1B3R,OAAAqU,EAAA,EAAArU,CAAAmU,EACgC,KAAO,KADvCA,GAGkBpU,KAAKwQ,QACtC,MACE,GAAA7Q,OAAGkV,EAAH,SAAAlV,OAA6BmV,EAA7B,MACEF,EAAczE,MAAM,MAAMxO,IAAI,SAAAsP,GAAG,UAAAtR,OAAQ4U,IAAMQ,MAAM9D,GAApB,OAA6B7B,KAAK,MACnE,gEAI2B,IAAPY,EAAOgF,EAAPhF,EAAGD,EAAIiF,EAAJjF,EAC3B,GAAI8B,KAAKoD,MAAMjF,KAAOA,GAAK6B,KAAKoD,MAAMlF,KAAOA,EAC3C,MAAM,IAAI/B,EAAJ,gBAAArO,OAAqC4C,KAAKC,UAAU,CAACwN,IAAGD,MAAxD,oBAER,QAAqCrR,IAAjCsB,KAAKuP,qBAAqBQ,SAAwDrR,IAApCsB,KAAKuP,qBAAqBQ,GAAGC,GAC7E,MAAM,IAAIhC,EAAJ,gBAAArO,OAAqC4C,KAAKC,UAAU,CAACwN,IAAGD,MAAxD,mEAQc,IAAPC,EAAOlE,EAAPkE,EAAGD,EAAIjE,EAAJiE,EAClB,OAAO/P,KAAKuP,qBAAqBQ,GAAGC,oCAW7BkF,GACP,OAAOlV,KAAK0G,YAAYyK,SAASnR,KAAKmO,eAAgB+G,qCAG9CA,GACR,OAAOlV,KAAK0G,YAAYgL,UAAU1R,KAAKmO,eAAgB+G,uCAqBvD,GAAIlV,KAAK+O,eACP,OAAO/O,KAAK0G,YAAYiK,aAAa3Q,KAAK+O,gBAG5C,IAAMoG,EAAcnV,KAAKmR,SAAS,SAAAD,GAAI,OAAIA,EAAKE,QAAyB,IAAfF,EAAKM,QAC9D,OAAI2D,EACKA,EAAY/D,QAGhBpR,KAAK0O,SAAW1O,KAAK0G,YAAY0O,aAAapV,KAAKmO,eAAgBnO,KAAKqP,YACpErP,KAAKqP,WAGP,8CAwDQgG,EAAkBC,EAAaC,GAC9C,GAAIvV,KAAKgJ,SACP,MAAM,IAAIgF,EAAiB,iCAE7B,GAAIhO,KAAKsP,WAAa+F,EACpB,MAAM,IAAIrH,EAAJ,oCAAArO,OAAyD0V,EAAzD,4BAAA1V,OAAoGK,KAAKsP,SAAzG,MAMR,GAJAtP,KAAKwV,yBAAyBF,GAC1BC,GACFvV,KAAKwV,yBAAyBD,IAE3BvV,KAAKuP,qBAAqB+F,EAAYvF,GAAGuF,EAAYtF,GACxD,MAAM,IAAI/B,MAAJ,QAAAtO,OAAkB4C,KAAKC,UAAU8S,GAAjC,qEAIHlE,GACL,OAAOpR,KAAKyV,WAAWzV,KAAKmO,eAAgB,CAC1CkB,WAAYrP,KAAKqP,WACjBC,SAAUtP,KAAKsP,SACfC,qBAAsBvP,KAAKuP,qBAC3Bb,SAAS,EACTK,eAAgBqC,GACf,CAACpC,OAAQoC,sCAkBJ7H,GACR,IAAIzF,EAAO9D,KADI0V,GAAA,EAAAC,GAAA,EAAAC,OAAAlX,EAAA,IAEf,QAAAmX,EAAAC,EAAmBvM,EAAnB3E,OAAAC,cAAA6Q,GAAAG,EAAAC,EAAAhR,QAAAC,MAAA2Q,GAAA,EAA0B,KAAf3C,EAAe8C,EAAAvY,MACxBwG,EAAOA,EAAKiS,SAAShD,IAHR,MAAA7N,GAAAyQ,GAAA,EAAAC,EAAA1Q,EAAA,YAAAwQ,GAAA,MAAAI,EAAA3Q,QAAA2Q,EAAA3Q,SAAA,WAAAwQ,EAAA,MAAAC,GAMf,OAAO9R,mCAGAwR,GAAa,IAAAU,EACpB,GAAIV,EAAYtG,OACd,OAAOhP,KAAKgP,OAAOsG,EAAYtG,QAEjC,IAQMiH,GAReD,EAAA,GAAA/V,OAAAqU,EAAA,EAAArU,CAAA+V,EAClBhW,KAAK0G,YAAYuL,6BAA+BjS,KAAKkW,kBADnCjW,OAAAqU,EAAA,EAAArU,CAAA+V,EAElBhW,KAAK0G,YAAYyL,8BAAgCnS,KAAKmW,mBAFpClW,OAAAqU,EAAA,EAAArU,CAAA+V,EAGlBhW,KAAK0G,YAAYiM,gCAAkC3S,KAAKoW,oBAHtCnW,OAAAqU,EAAA,EAAArU,CAAA+V,EAIlBhW,KAAK0G,YAAY2P,4BAA8BrW,KAAKsW,iBAJlCrW,OAAAqU,EAAA,EAAArU,CAAA+V,EAKlBhW,KAAK0G,YAAY6P,6BAA+BvW,KAAKwW,kBALnCvW,OAAAqU,EAAA,EAAArU,CAAA+V,EAMlBhW,KAAK0G,YAAY+P,8BAAgCzW,KAAK0W,mBANpCV,GAQkBhW,KAAKsP,UAC5C,IAAK2G,EACH,MAAM,IAAIjI,EAAJ,4CAAArO,OAAgEK,KAAKsP,SAArE,MAER,OAAO2G,EAAeU,KAAK3W,KAApBiW,CAA0BX,kCAIjC,IAAKtV,KAAK0O,QACR,MAAM,IAAIT,MAAM,eAGlB,OAAOjO,KAAKqO,gDAIZ,IAAKrO,KAAK2P,gBACR,MAAM,IAAI1B,MAAM,yBAGlB,OAAOjO,KAAKqO,qDAGW,IAAP2B,EAAOjE,EAAPiE,EAAGD,EAAIhE,EAAJgE,EACnB/P,KAAK4W,iBAAiB5W,KAAK0G,YAAYuL,6BAA8B,CAACjC,IAAGD,MAEzE,IAAM5B,EAAiBnO,KAAK0G,YAAYmQ,YAAY7W,KAAKmO,eAAgB,CACvE6B,IAAGD,IACHqB,OAAQpR,KAAKqP,WACbiC,OAAQtR,KAAK0G,YAAY4L,eAE3B,OAAOtS,KAAKyV,WAAWtH,EAAgB,CACrCkB,WAAYrP,KAAKqP,WACjBC,SAAUtP,KAAK0G,YAAYyL,8BAC3B5C,qBAAsBvP,KAAK0G,YAAY0L,kCAAkCjE,GACzEO,SAAS,EACTK,eAAgB,MACf,CAACiB,IAAGD,mDAGiB,IAAPC,EAAO8G,EAAP9G,EAAGD,EAAI+G,EAAJ/G,EACpB/P,KAAK4W,iBAAiB5W,KAAK0G,YAAYyL,8BAA+B,CAACnC,IAAGD,MAE1E,IAAM5B,EAAiBnO,KAAK0G,YAAYmQ,YAAY7W,KAAKmO,eAAgB,CACvE6B,IAAGD,IACHqB,OAAQpR,KAAKqP,WACbiC,OAAQtR,KAAK0G,YAAY8L,gBAErBnD,EAAarP,KAAK0G,YAAYiK,aAAa3Q,KAAKqP,YACtD,OAAOrP,KAAK+W,WAAW5I,EAAgB,CACrCkB,WAAYA,EACZC,SAAUD,IAAerP,KAAK0G,YAAY+I,SACtCzP,KAAK0G,YAAYiM,gCACjB3S,KAAK0G,YAAYuL,6BACrB1C,qBAAsBF,IAAerP,KAAK0G,YAAY+I,SAClDzP,KAAK0G,YAAYkM,8BAA8BzE,EAAgBkB,GAC/DrP,KAAK0G,YAAY0L,kCAAkCjE,GACvDO,SAAS,EACTK,eAAgB,MACf,CAACiB,IAAGD,oDAGkB,IAAPC,EAAOgH,EAAPhH,EAAGD,EAAIiH,EAAJjH,EACrB/P,KAAK4W,iBAAiB5W,KAAK0G,YAAYiM,gCAAiC,CAAC3C,IAAGD,MAE5E,IAAMmB,EAAOlR,KAAKmO,eAAe4B,GAAG9R,MAAM+R,GAC1C,OAAOhQ,KAAKyV,WAAWzV,KAAKmO,eAAgB,CAC1CkB,WAAYrP,KAAKqP,WACjBC,SAAU4B,EAAKI,SAAWtR,KAAK0G,YAAY4L,aACvCtS,KAAK0G,YAAY2P,4BACjBrW,KAAK0G,YAAY6P,6BACrBhH,qBAAsBvP,KAAK0G,YAAYuQ,+BAA+BjX,KAAKmO,eAAgB,CAAC6B,IAAGD,MAC/FrB,SAAS,EACTK,eAAgB,MACf,CAACiB,IAAGD,yCAGE/D,EAAIsF,GAAQ,IAAA4F,EAAAC,EAAAnX,KACfoX,EAAWpX,KAAKmR,SAAS,SAAAD,GAAI,OAAIA,EAAKE,SAAW+F,EAAK9H,YAAc6B,EAAKI,SAAWA,IACpF+F,EAASrX,KAAKmO,eAAenC,EAAG+D,GAAG9R,MAAM+N,EAAGgE,GAC5C7B,GAAiB+I,EAAAlX,KAAK0G,aAAYmQ,YAAjB9E,MAAAmF,EAAA,CAA6BlX,KAAKmO,gBAAlCxO,OAAqD,CAC1E,CAACqQ,EAAGoH,EAASpH,EAAGD,EAAGqH,EAASrH,EAAGqB,OAAQ,KAAME,OAAQ,MACrD,CAACtB,EAAGqH,EAAOrH,EAAGD,EAAGsH,EAAOtH,EAAGqB,OAAQgG,EAAShG,OAAQE,OAAQ8F,EAAS9F,WAEvE,OAAOtR,KAAKyV,WAAWtH,EAAgB,CACrCkB,WAAYrP,KAAKqP,WACjBC,SAAUtP,KAAK0G,YAAY+P,8BAC3BlH,qBAAsBvP,KAAK0G,YAAY4Q,iCAAiCnJ,EAAgBnC,GACxF0C,SAAS,EACTK,eAAgB,MACf,CAACiB,EAAGhE,EAAGgE,EAAGD,EAAG/D,EAAG+D,+CAGG,IAAPC,EAAOuH,EAAPvH,EAAGD,EAAIwH,EAAJxH,EAGlB,OAFA/P,KAAK4W,iBAAiB5W,KAAK0G,YAAY2P,4BAA6B,CAACrG,IAAGD,MAEjE/P,KAAKwX,WAAW,CAACxH,IAAGD,KAAI/P,KAAK0G,YAAY4L,0DAGzB,IAAPtC,EAAOyH,EAAPzH,EAAGD,EAAI0H,EAAJ1H,EAGnB,OAFA/P,KAAK4W,iBAAiB5W,KAAK0G,YAAY6P,6BAA8B,CAACvG,IAAGD,MAElE/P,KAAKwX,WAAW,CAACxH,IAAGD,KAAI/P,KAAK0G,YAAY8L,4DAGxB,IAAPxC,EAAO0H,EAAP1H,EAAGD,EAAI2H,EAAJ3H,EACpB/P,KAAK4W,iBAAiB5W,KAAK0G,YAAY+P,8BAA+B,CAACzG,IAAGD,MAE1E,IAAM5B,EAAiBnO,KAAK0G,YAAYmQ,YAAY7W,KAAKmO,eAAgB,CACvE6B,IAAGD,IAAGyB,MAAOxR,KAAKmO,eAAe4B,GAAG9R,MAAM+R,GAAGwB,MAAQ,IAEjDnC,EAAarP,KAAK0G,YAAYiK,aAAa3Q,KAAKqP,YACtD,OAAOrP,KAAK+W,WAAW5I,EAAgB,CACrCkB,WAAYA,EACZC,SAAUtP,KAAK0G,YAAYiM,gCAC3BpD,qBAAsBvP,KAAK0G,YAAYkM,8BAA8BzE,EAAgBkB,GACrFX,SAAS,EACTK,eAAgB,MACf,CAACiB,IAAGD,kDA3WgBR,GACvB,OAAOnQ,IAAE4S,QAAQzC,EACd5N,IAAI,SAACsP,EAAKlB,GAAN,OAAYkB,EACdtP,IAAI,SAAC2F,EAAW0I,GAAZ,OAAkB1I,EAAY,CAAC0I,IAAGD,KAAK,UAC7ChM,OAAO,SAAAgP,GAAI,OAAIA,2CASQ,IAARxJ,EAAQoO,EAARpO,MAClB,OAAOvJ,KAAKgT,UAAUzJ,sDAGU,IAAAqO,EAAA5X,KAChC,OAAOA,KAAKoT,KAAKzR,IAAI,SAAAoO,GAAC,MAAK,CACzBA,IAAG9R,MAAO2Z,EAAKvE,QAAQ1R,IAAI,SAAAqO,GAAC,MAAK,CAC/BA,IAAGD,IAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,sDAM1C,MAAQ,CACNjC,WAAYrP,KAAKyP,SACjBH,SAAUtP,KAAKiS,6BACf1C,qBAAsBvP,KAAKkS,6BAC3BxD,SAAS,EACTK,eAAgB,+CAyCIQ,GACtB,OAAOvP,KAAK6X,kBAAkBtI,GAAsB9Q,OAAS,mCAO/C0P,EAAgB+G,GAC9B,OAAO/G,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAMW,KAAKsW,KAAYtW,KAAK,SAAAsS,GAAI,OAAIA,sCAG1D/C,EAAgB+G,GAC/B,OAAO9V,IAAE4S,QAAQ7D,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAM8F,OAAOmR,iDAWpC4C,EAAKC,GAC7B,MAAM,IAAI9J,MAAM,6EAGEE,EAAgBiD,GAAQ,IAAA4G,EAAAhY,KACpCiY,EAAcjY,KAAK0R,UAAUvD,EAAgB,SAAA+C,GAAI,OAAIA,EAAKE,SAAWA,GAAyB,IAAfF,EAAKM,QAC1F,QAAKyG,EAAYxZ,QAGUuB,KAAK0R,UAAUvD,EAAgB,SAAA+C,GAAI,OAC7C,IAAfA,EAAKM,OACFyG,EAAYrZ,KAAK,SAAAsZ,GAAU,OAAIF,EAAKG,mBAAmBjH,EAAMgH,OAGxCzZ,OAAS,uDAoBD,IAAA2Z,EAAApY,KAClC,OAAOA,KAAKoT,KAAKzR,IAAI,kBAAMyW,EAAK/E,QAAQ1R,IAAI,kBAAM,oDAGvB,IAAA0W,EAAArY,KAC3B,OAAOA,KAAKoT,KAAKzR,IAAI,kBAAM0W,EAAKhF,QAAQ1R,IAAI,kBAAM,gEAGXwM,GACvC,OAAOnO,KAAKsY,wBAAwBnK,EAAgB,SAAA+C,GAAI,OAAKA,EAAKE,+DAG/BjD,EAAgBiD,GAAQ,IAAAmH,EAAAvY,KAC3D,OAAOA,KAAKsY,wBAAwBnK,EAAgB,SAAA+C,GAClD,OAAIA,EAAKE,SAAWA,GAIbmH,EAAK7H,iBAAiB6H,EAAKtB,+BAA+B9I,EAAgB+C,6DAI/C/C,EAAgBmH,GAAa,IAAAkD,EAAAxY,KAC3DoX,EAAWjJ,EAAemH,EAAYvF,GAAG9R,MAAMqX,EAAYtF,GAC3DyI,EAAerB,EAAS5F,MAAQ,EACtC,OAAOxR,KAAKsY,wBAAwBnK,EAAgB,SAAA+C,GAAI,OACtDsH,EAAKL,mBAAmBjH,EAAMoE,KAC1BpE,EAAKE,QACNF,EAAKM,OAAS,GACdN,EAAKM,OAASiH,GACbD,EAAK9H,iBAAiB8H,EAAKlB,iCAAiCkB,EAAK3B,YAAL9E,MAAAyG,EAAI,CAAarK,GAAbxO,OAAgC,CAClG,CAACqQ,EAAGoH,EAASpH,EAAGD,EAAGqH,EAASrH,EAAGqB,OAAQ,KAAME,OAAQ,MACrD,CAACtB,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGqB,OAAQgG,EAAShG,OAAQE,OAAQ8F,EAAS9F,WAC/DJ,+DAIgC/C,EAAgBmH,GAAa,IAAAoD,EAAA1Y,KAC7DoX,EAAWjJ,EAAemH,EAAYvF,GAAG9R,MAAMqX,EAAYtF,GACjE,OAAOhQ,KAAKsY,wBAAwBnK,EAAgB,SAAA+C,GAAI,OACtDwH,EAAKP,mBAAmBjH,EAAMoE,KAC1BpE,EAAKE,QACNF,EAAKM,MAAQ,IACXkH,EAAKtD,aAAasD,EAAK7B,YAAL9E,MAAA2G,EAAI,CAAavK,GAAbxO,OAAgC,CACzD,CAACqQ,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGyB,MAAON,EAAKM,MAAQ,MACzCkH,EAAK/H,aAAayG,EAAShG,2DAIJjD,EAAgBwK,GAC7C,OAAOxK,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAM0D,IAAIgX,yCA6B9BxK,GAA6B,IAC9C,IAAMyK,EAAU,GAD8BC,EAAAra,UAAAC,OAAVqa,EAAU,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVF,EAAUE,EAAA,GAAAxa,UAAAwa,GAE9C,QAAAxR,EAAA,EAAAyR,EAAqBH,EAArBtR,EAAAyR,EAAAxa,OAAA+I,IAA+B,CAA1B,IAAM0R,EAAMD,EAAAzR,GACfoR,EAAQM,EAAOnJ,GAAK6I,EAAQM,EAAOnJ,IAAM,GACzC6I,EAAQM,EAAOnJ,GAAGmJ,EAAOlJ,GAAKkJ,EAEhC,OAAO/K,EAAexM,IAAI,SAAAsP,GAAG,OAAK2H,EAAQ3H,EAAIlB,GAAb9P,OAAAsM,EAAA,EAAAtM,CAAA,GAC5BgR,EAD4B,CAE/BhT,MAAOgT,EAAIhT,MAAM0D,IAAI,SAAAuP,GAAI,OAAK0H,EAAQ1H,EAAKnB,GAAGmB,EAAKlB,GAAtB/P,OAAAsM,EAAA,EAAAtM,CAAA,GACxBiR,EACA0H,EAAQ1H,EAAKnB,GAAGmB,EAAKlB,IAF8BkB,MAFPD,aA9jBjD/C,EACGuB,SAAW,WADdvB,EAEG0D,SAAW,WAFd1D,EAGGmD,QAAU,CAHbnD,EAIGuB,SAJHvB,EAKG0D,UALH1D,EAOGyC,iCAPHzC,EAQIuB,SARJvB,EAQoB0D,wBARpB1D,EASI0D,SATJ1D,EASoBuB,aATpBvB,EAYGoE,aAAe,eAZlBpE,EAaGsE,cAAgB,gBAbnBtE,EAcGqD,QAAU,CAdbrD,EAcmBoE,aAdnBpE,EAcsCsE,eAdtCtE,EAgBG+D,6BAA+B,qBAhBlC/D,EAiBGiE,8BAAgC,sBAjBnCjE,EAkBGyE,gCAAkC,wBAlBrCzE,EAmBGmI,4BAA8B,oBAnBjCnI,EAoBGqI,6BAA+B,qBApBlCrI,EAqBGuI,8BAAgC,sBArBnCvI,EAuBGiL,yBAA2B,CAvB9BjL,EAuBoC+D,6BAvBpC/D,EAuBuEyE,iCAvBvEzE,EAwBGkL,wBAA0B,CAxB7BlL,EAwBmC+D,6BAxBnC/D,EAwBsEiE,+BAxBtEjE,EAyBGmL,uBAAyB,CAzB5BnL,EAyBkCmI,4BAzBlCnI,EAyBoEqI,8BAzBpErI,EA0BGoL,+CA1BHpL,EA0BuCmL,yBA1BvCnL,EA0BoEuI,gCA1BpEvI,EA4BGkF,KAAO2F,MAAMpb,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA5BpD+K,EA6BGmF,QAAU0F,MAAMpb,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA7BvD+K,EA8BG4B,cA9BH5B,EA8BwBkF,KAAKzR,IAAI,SAAAoO,GAAC,OA9BlC7B,EA8B2CmF,QAAQ1R,IAAI,SAAAqO,GAAC,SAAArQ,OACvD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKqQ,IAD6BrQ,OACxB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKoQ,QA/B1D7B,EAgCG2B,2CAhCH3B,EAiCIuB,SAAW,oBAjCfvB,EAkCI0D,SAAW,SAlCf1D,EAoCG4E,qCACF1T,IAAEoJ,UAAUpJ,IAAE4S,QArCf9D,EAqC4BkF,KAAKzR,IAAI,SAAAoO,GAAC,OArCtC7B,EAqC+CmF,QAAQ1R,IAAI,SAAAqO,GAAC,MAC5D,IAAArQ,OAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKqQ,IAA9BrQ,OAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKoQ,IAAM,CAACC,IAAGD,aACzEwJ,GAAM,CAAC,CAACvK,OAvCNd,EAuCmBuB,WACrB+J,GAAM,CAAC,CAACxK,OAxCNd,EAwCmB0D,aAxCnB1D,EA0CGmC,0BAA4BjR,IAAEoJ,UAAUvI,OAAOwZ,KA1ClDvL,EA0C4D4E,uBAAuB4G,OAAO/X,IAAI,SAACrE,EAAO6F,GAAR,MAChG,CAAC7F,EAAOqc,OAAOC,aAAazW,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,QA3CpD+K,EA4CG+E,4BAA8B7T,IAAEoJ,UAAUvI,OAAOwZ,KA5CpDvL,EA4C8D4E,uBAAuB4G,OAAO/X,IAAI,SAACrE,EAAO6F,GAAR,MAClG,CAACwW,OAAOC,aAAazW,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,IA7C7C+K,EA6CsE4E,sBAAsBxV,OA7C5F4Q,EA+CG2L,kBAAoBza,IAAEoJ,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG7G,IACrD,SAAA6P,GAAK,MAAI,CAACA,EAAOpS,IAAEoJ,UAAU,CAAC,KAhD5B0F,EAgDuCuB,SAhDvCvB,EAgDsD0D,UAAUjQ,IAChE,SAAAyP,GAAM,MAAI,CAACA,EAAD,GAAAzR,OAAY6R,EAAZ,KAAA7R,OAAqByR,WAjD/BlD,EAkDGoF,0BAA4BlU,IAAEoJ,UAAUpJ,IAAE4S,QAAQ/R,OAAO6Z,QAlD5D5L,EAkDyE2L,mBAAmBlY,IAC9F,SAAAoY,GAAA,IAAAC,EAAA/Z,OAAA4L,EAAA,EAAA5L,CAAA8Z,EAAA,GAAEE,EAAFD,EAAA,GAAYE,EAAZF,EAAA,UAA2B/Z,OAAO6Z,QAAQI,GAAWvY,IACnD,SAAAwY,GAAA,IAAAC,EAAAna,OAAA4L,EAAA,EAAA5L,CAAAka,EAAA,GAAEE,EAAFD,EAAA,SAA2B,CAA3BA,EAAA,GAAsC,CAAC5I,MAAO8I,SAASL,GAAW7I,OAAsB,SAAdiJ,EAAuB,KAAOA,UApDxGnM,EAqDGqM,kCAAoCnb,IAAEoJ,UAAUpJ,IAAE4S,QAAQ/R,OAAO6Z,QArDpE5L,EAqDiF2L,mBAAmBlY,IACtG,SAAA6Y,GAAA,IAAIN,EAAJja,OAAA4L,EAAA,EAAA5L,CAAAua,EAAA,aAAmBva,OAAO6Z,QAAQI,GAAWvY,IAC3C,SAAA8Y,GAAA,OAAAxa,OAAA4L,EAAA,EAAA5L,CAAAwa,EAAA,WAA8B9Y,IAAI,SAACwR,EAAUhQ,GAAX,MAAqB,CAACgQ,EAAUwG,OAAOC,aAAa,GAAKzW,OAvD3F+K,EAwDGgF,8BAAgC9T,IAAEoJ,UAAUvI,OAAO6Z,QAxDtD5L,EAwDmE2L,mBAAmBlY,IACxF,SAAA+Y,GAAA,IAAAC,EAAA1a,OAAA4L,EAAA,EAAA5L,CAAAya,EAAA,GAAET,EAAFU,EAAA,GAAYT,EAAZS,EAAA,SAA2B,CAACV,EAAU7a,IAAEoJ,UAAUvI,OAAO6Z,QAAQI,GAAWvY,IAC1E,SAAAiZ,GAAA,IAAAC,EAAA5a,OAAA4L,EAAA,EAAA5L,CAAA2a,EAAA,GAAEP,EAAFQ,EAAA,GAAa1H,EAAb0H,EAAA,SAA2B,CAACR,EA1D5BnM,EA0D4CqM,kCAAkCpH,WA1D9EjF,EA2DGsF,gCAAkCpU,IAAEoJ,UAAUvI,OAAO6Z,QA3DxD5L,EA2DqEqM,mCAAmC5Y,IAC1G,SAAAmZ,GAAA,IAAAC,EAAA9a,OAAA4L,EAAA,EAAA5L,CAAA6a,EAAA,GAAE3H,EAAF4H,EAAA,SAAoC,CAApCA,EAAA,GA5DE7M,EA4D4DoF,0BAA0BH,WA0pBtF6H,kMACsBlD,EAAKC,GAC7B,OACElG,KAAKoJ,IAAInD,EAAI9H,EAAI+H,EAAI/H,IAAM,GACxB6B,KAAKoJ,IAAInD,EAAI/H,EAAIgI,EAAIhI,IAAM,SAJV7B,GAQ1BA,EAAKgN,QAAUF,MAETG,kMACsBrD,EAAKC,GAC7B,OACElG,KAAKoJ,IAAInD,EAAI9H,EAAI+H,EAAI/H,IAAM,GACxB6B,KAAKoJ,IAAInD,EAAI/H,EAAIgI,EAAIhI,IAAM,IAK5B+H,EAAI9H,IAAM+H,EAAI/H,IAEP8H,EAAI9H,EAAI,IAAM,EAChB+H,EAAIhI,GAAK+H,EAAI/H,EAEbgI,EAAIhI,GAAK+H,EAAI/H,WAdJ7B,GAkBtBA,EAAKkN,IAAMD,EAEXjN,EAAKmN,WAAa,CAACnN,EAAKgN,QAAShN,EAAKkN,KAMvBlN,iCC1vBToN,2LACK,IAAAvb,EAAAC,KAAAmL,EAIHnL,KAAKgL,MAFPsC,EAFKnC,EAELmC,UAAWiO,EAFNpQ,EAEMoQ,UAAWC,EAFjBrQ,EAEiBqQ,SAAUC,EAF3BtQ,EAE2BsQ,gBAAiBC,EAF5CvQ,EAE4CuQ,eAAgBC,EAF5DxQ,EAE4DwQ,MAAOC,EAFnEzQ,EAEmEyQ,OAAQ7F,EAF3E5K,EAE2E4K,SAAU8F,EAFrF1Q,EAEqF0Q,SAAUC,EAF/F3Q,EAE+F2Q,SACpGzd,EAHK8M,EAGL9M,SAAU8P,EAHLhD,EAGKgD,eAHL4N,EAK4B1d,EAA5BL,MAAQG,EALR4d,EAKQ5d,OAAQqI,EALhBuV,EAKgBvV,QAkBvB,OAhBA8G,EAAY0O,IAAW,QAAS,aAAc,CAC5CC,cAAeN,EACfO,eAAgBN,EAChBO,WAAYpG,IAAawF,GAAaC,GACtCY,aAAcP,EACdC,WACAO,sBAAkC,KAAXle,EACvBme,qBAAiC,WAAXne,EACtBoe,qBAAiC,WAAXpe,EACtBqe,oBAAgC,UAAXre,EACrBse,kBAAmB,CAAC,UAAW,SAAU,eAAe/T,SAASlC,GACjEkW,iBAA8B,YAAZlW,EAClBmW,gBAA6B,WAAZnW,EACjBoW,qBAAkC,gBAAZpW,GACrB8G,GAGDd,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAWA,EAAWuP,QAAShB,GACjC1N,EAAexM,IAAI,SAAAsP,GAAG,OACrBzE,EAAAC,EAAAtP,cAAA,OAAK0P,IAAG,OAAAlN,OAASsR,EAAIlB,GAAKzC,UAAW,OAClC2D,EAAIhT,MAAM0D,IAAI,SAAAuP,GAAI,OACjB1E,EAAAC,EAAAtP,cAAC2f,EAAD,CACEjQ,IAAG,GAAAlN,OAAKuR,EAAKlB,EAAV,KAAArQ,OAAeuR,EAAKnB,GACvBmB,KAAMA,EACNqK,UAAWA,GAAcC,GAAYE,EAAexK,GACpD5J,UAAWmU,EAAgBvK,GAC3BsK,SAAUE,EAAexK,GACzB7S,SAAUA,EACV0X,SAAUhW,EAAKiL,MAAM+K,SACrBgH,KAAMhd,EAAKiL,MAAM+R,oBArCClP,cAgElCyN,EAAoBxN,aAAe,CACjCR,UAAW,GACXqO,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVkB,UAAU,OAGNC,6MACJlH,SAAW,WACLtP,EAAKuE,MAAM1D,WAAab,EAAKuE,MAAM+K,SACrCtP,EAAKuE,MAAM+K,SAAStP,EAAKuE,MAAMkG,MACtBzK,EAAKuE,MAAMwQ,UAAY/U,EAAKuE,MAAM+R,MAC3CtW,EAAKuE,MAAM+R,gFAIN,IAAA7P,EACoFlN,KAAKgL,MAA3FkG,EADEhE,EACFgE,KAAMqK,EADJrO,EACIqO,UAAWjU,EADf4F,EACe5F,UAAWkU,EAD1BtO,EAC0BsO,SAA6BhV,EADvD0G,EACoC7O,SAAWL,MAAQwI,QAAWuP,EADlE7I,EACkE6I,SAAUgH,EAD5E7P,EAC4E6P,KAC7EG,EACJ,CAAC,UAAW,SAAU,eAAexU,SAASlC,IAC3C0K,EAAKM,MAAQ,GACbN,EAAKM,MAAO,EACbN,EAAKM,MAAQ,KACjB,OACEhF,EAAAC,EAAAtP,cAAA,OACE0P,IAAG,OAAAlN,OAASuR,EAAKlB,EAAd,KAAArQ,OAAmBuR,EAAKnB,GAC3BzC,UAAW0O,IAAW,OAAD,SAAArc,OAAkBuR,EAAKM,OAAS,CAAClK,YAAWkU,aACjEqB,SAAW9G,GAAYzO,GAAeyV,GAAQvB,IAAcD,EAAYvb,KAAK+V,SAAW,MAExFvJ,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,QAAS,YAClCxP,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,QAAS,YAClCxP,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,QAAS,YACjC9K,EAAKE,OACJ5E,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,SAAD,UAAArc,OAAqBuR,EAAKE,UACjD8L,GAEc,IAAfhM,EAAKM,MACPhF,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,QAAS,aAClCkB,aA/BUrP,aAkD5BoP,EAAcnP,aAAe,CAC3ByN,WAAW,EACXjU,WAAW,EACXkU,UAAU,GAGGF,QC/HF6B,GAAY,SAACC,EAAUC,GAClC,OAAOC,GAAaF,EAAbE,CAAuBD,IAGnBC,GAAe,SAAAF,GAC1B,GAAIA,IAAalP,EAAKgN,QACpB,OAAOqC,GACF,GAAIH,IAAalP,EAAKkN,IAC3B,OAAOoC,GAGT,MAAM,IAAIvP,MAAJ,8BAAAtO,OAAwCyd,EAAWA,EAAS1W,YAAY5I,KAAOsf,EAA/E,OAGKG,GAAsB,SAAAF,GACjC,MAAQ,CACNrN,EArBoB,IAqBjBqN,EAAMrN,EACTD,EAtBoB,IAsBjBsN,EAAMtN,IAIAyN,GAAkB,SAAAH,GAC7B,MAAQ,CACNrN,EA5BoB,IA4BjBqN,EAAMrN,EACTD,EA7BoB,KA6BhBsN,EAAMtN,GAAKsN,EAAMrN,EAAI,IAAM,EAAI,KAAQ,QC3BzCyN,oLACI,IACCjM,EAASxR,KAAKgL,MAAdwG,MACP,OAAKA,EAIJhF,EAAAC,EAAAtP,cAAA,KAAGugB,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA0Cge,GAA1C,MACTnR,EAAAC,EAAAtP,cAAA,QACEygB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAApe,OAAKge,GAAL,QAChBnM,IARG,YAJ0BwM,iBAsBjCC,oLACI,IACAzM,EAASxR,KAAKgL,MAAdwG,MACN,OAAKA,EAIJhF,EAAAC,EAAAtP,cAAA,KAAGugB,UAAS,oBACTlR,EAAAC,EAAAtP,cAAA,UAAQ+gB,EAAGP,GAA2BQ,KAAM,OAAQC,OAAQ,OAAQC,YAAa,IACjF7R,EAAAC,EAAAtP,cAAA,QACEygB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAApe,OAAKge,GAAL,QAChBnM,IATG,YAJsBwM,iBAuB7BM,oLACI,IACA9M,EAASxR,KAAKgL,MAAdwG,MACN,OAAKA,EAIJhF,EAAAC,EAAAtP,cAAA,KAAGugB,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAAyCge,GAAzC,MACTnR,EAAAC,EAAAtP,cAAA,QACEygB,iBAAkB,UAClBC,WAAY,SACZO,OAAQ,OACRC,YAAaV,EACbY,WAAY,SACZT,MAAO,CAACC,SAAQ,GAAApe,OAAKge,GAAL,QAChBnM,IAXG,YAJuBwM,iBAyB9BQ,oLAOI,IAAArT,EACenL,KAAKgL,MAApBwG,EADArG,EACAqG,MAAO9R,EADPyL,EACOzL,KACP+e,EAAYze,KAAK0G,YAAYgY,aAAahf,GAChD,OAAK+e,EAIJjS,EAAAC,EAAAtP,cAACshB,EAAD,CAAWjN,MAAOA,IAHX,YAXiBwM,iBAAvBQ,GACEE,aAAe,CACnBC,cAAelB,GACfmB,OAAUX,GACVY,QAAWP,IAqBAE,UC/FTM,oLACI,IAAA3T,EACkCnL,KAAKgL,MAAvClN,EADAqN,EACArN,KAAMoM,EADNiB,EACMjB,KAAM6U,EADZ5T,EACY4T,WAAYC,EADxB7T,EACwB6T,OAC/B,OACExS,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGjB,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,SAAwB4f,UAAW,cAAA/d,OAC3Bge,GAD2B,KAAAhe,OACDge,GADC,cAAAhe,OFJpB,GEIoB,KAAAA,OFJpB,GEIoB,kBAAAA,QAGzBof,EAAW/O,EAAI,EAAIgP,EAAOhP,EAHD,KAAArQ,QAGOof,EAAWhP,EAAI,EAAIiP,EAAOjP,EAHjC,MAIvCX,KAAK,MAAOlF,GACbsC,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACH0O,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAS,UAAAtf,OAAY7B,EAAZ,SAAyBugB,YFZjB,GEY0DD,OAAQ,SACxF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAS,UAAAtf,OAAY7B,EAAZ,SAAyBqgB,KAAM,WAE/C3R,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACH0O,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAS,UAAAtf,OAAY7B,EAAZ,SAAyBugB,YFhBjB,GEgB0DD,OAAQ,SACxF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAS,UAAAtf,OAAY7B,EAAZ,SAAyBqgB,KAAM,mBAhBrBH,iBA8B5BkB,oLAII,IAAAhS,EACyBlN,KAAKgL,MAA9BlN,EADAoP,EACApP,KAAMqhB,EADNjS,EACMiS,OAAQC,EADdlS,EACckS,QACrB,OACE5S,EAAAC,EAAAtP,cAAA,OACG8hB,UAAS,UAAAtf,OAAY7B,EAAZ,KAAA6B,OAAoBwf,GAC7BzB,UAAW0B,EAAUpf,KAAK0G,YAAY2Y,qBAAkB3gB,WATxCsf,iBAAlBkB,GACEG,qCACS1B,eAA0BA,QAmB3C,IAAM2B,GAAc,SAAChS,EAAD1B,GAA0D,IAA7C1B,EAA6C0B,EAA7C1B,KAAM6U,EAAuCnT,EAAvCmT,WAAuCQ,EAAA3T,EAA3BoT,cAA2B,IAAAO,EAAlB,CAACvP,EAAG,EAAGD,EAAG,GAAQwP,EACtEC,EADsE,SAAAC,GAAA,SAAAD,IAAA,OAAAvf,OAAAC,EAAA,EAAAD,CAAAD,KAAAwf,GAAAvf,OAAAyf,EAAA,EAAAzf,CAAAD,KAAAC,OAAA0f,EAAA,EAAA1f,CAAAuf,GAAAzN,MAAA/R,KAAAxB,YAAA,OAAAyB,OAAA2f,EAAA,EAAA3f,CAAAuf,EAAAC,GAAAxf,OAAA4f,EAAA,EAAA5f,CAAAuf,EAAA,EAAA3S,IAAA,SAAAvP,MAAA,WAGxE,OACEkP,EAAAC,EAAAtP,cAAC2iB,GAAD,CACEhiB,KAAMwP,EACNpD,KAAMA,EACN6U,WAAYA,EACZC,OAAQA,QAR4DQ,EAAA,CAC3CxB,iBAYjCwB,EAAmBO,YAAnB,GAAApgB,OAAoC2N,EAApC,cAb4E,IAetE0S,EAfsE,SAAAC,GAAA,SAAAD,IAAA,OAAA/f,OAAAC,EAAA,EAAAD,CAAAD,KAAAggB,GAAA/f,OAAAyf,EAAA,EAAAzf,CAAAD,KAAAC,OAAA0f,EAAA,EAAA1f,CAAA+f,GAAAjO,MAAA/R,KAAAxB,YAAA,OAAAyB,OAAA2f,EAAA,EAAA3f,CAAA+f,EAAAC,GAAAhgB,OAAA4f,EAAA,EAAA5f,CAAA+f,EAAA,EAAAnT,IAAA,SAAAvP,MAAA,WAkBjE,IAAA4iB,EACmBlgB,KAAKgL,MAAxBmU,EADAe,EACAf,OAAQC,EADRc,EACQd,QACf,OACE5S,EAAAC,EAAAtP,cAACgjB,GAAD,CACEriB,KAAMwP,EACN6R,OAAQA,EACRC,QAASA,QAxB2DY,EAAA,CAerDhC,iBAgBvB,OAhBMgC,EACGI,WAAaZ,EAatBQ,EAASD,YAAczS,EAEhB0S,GAGHK,GAAYf,GAAY,YAAa,CACzCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,kWACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,KACxBiP,OAAQ,CAAChP,EAAG,EAAGD,GAAI,MAGfwQ,GAAYjB,GAAY,YAAa,CACzCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,qTACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpByQ,GAAclB,GAAY,cAAe,CAC7CpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,0EACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB0Q,GAAmBnB,GAAY,mBAAoB,CACvDpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,o0BACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB2Q,GAAWpB,GAAY,WAAY,CACvCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,glBACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB4Q,GAAcrB,GAAY,cAAe,CAC7CpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,saACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB6Q,GAAWtB,GAAY,WAAY,CACvCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,02BACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB8Q,GAAWvB,GAAY,WAAY,CACvCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,+UACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpB+Q,GAAYxB,GAAY,YAAa,CACzCpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,qQACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBgR,GAAyBzB,GAAY,yBAA0B,CACnEpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,4rBACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBiR,GAAyB1B,GAAY,yBAA0B,CACnEpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,2pCACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBkR,GAAoB3B,GAAY,oBAAqB,CACzDpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,2gDACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,KACxBiP,OAAQ,CAAChP,EAAG,EAAGD,EAAG,OAGdmR,GAAuB5B,GAAY,uBAAwB,CAC/DpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,+wDACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBoR,GAAoB7B,GAAY,oBAAqB,CACzDpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,4kDACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBqR,GAA0B9B,GAAY,0BAA2B,CACrEpV,KAAMsC,EAAAC,EAAAtP,cAAA,SACLqP,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,gJACR9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,2IACR9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,2/FAETvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,KACxBiP,OAAQ,CAAChP,EAAG,GAAID,EAAG,MAGfsR,GAAwB/B,GAAY,wBAAyB,CACjEpV,KAAMsC,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAE,83DACdvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBuR,GAAsBhC,GAAY,sBAAuB,CAC7DpV,KAAMsC,EAAAC,EAAAtP,cAAA,SACJqP,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,6RACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,2PACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,uMACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,mRACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,uMACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,oxDAEXvB,WAAY,CAAC/O,EAAG,IAAKD,EAAG,OAGpBwR,oLAqBI,IAAAC,EAC0BxhB,KAAKgL,MAA/B8S,EADA0D,EACA1D,MAAOqB,EADPqC,EACOrC,OAAQC,EADfoC,EACepC,QACfqC,EAAazhB,KAAK0G,YAAYgb,cAAc5D,GACnD,OACEtR,EAAAC,EAAAtP,cAACskB,EAAD,CAAYtC,OAAQA,EAAQC,QAASA,WAzBtBpB,iBAAduD,GACEG,cAAgB,CACpBC,KAAQtB,GACRuB,KAAQrB,GACRsB,OAAUrB,GACVsB,YAAerB,GACfsB,IAAOrB,GACPsB,OAAUrB,GACVsB,IAAOrB,GACPsB,IAAOrB,GACP5e,KAAQ6e,GACRqB,sBAAuBpB,GACvBqB,qBAAsBpB,GACtBqB,gBAAiBpB,GACjBqB,mBAAoBpB,GACpBqB,gBAAiBpB,GACjBqB,sBAAuBpB,GACvBqB,oBAAqBpB,GACrBqB,kBAAmBpB,QAkBjBqB,oLAEH,OAAO1iB,OAAO2iB,OAAOrB,GAAMG,eACxB/f,IAAI,SAAA8f,GAAU,OAAIjV,EAAAC,EAAAtP,cAACskB,EAAWrB,WAAZ,CAAuBvT,IAAK4U,EAAW1B,aAAe0B,EAAW3jB,gBAH1DkgB,iBAM/BuD,GAAMsB,YAAcF,GAELpB,UChOTuB,oLAoCI,IAAA3X,EACenL,KAAKgL,MAApBlN,EADAqN,EACArN,KAAMilB,EADN5X,EACM4X,MACb,OACEvW,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGjB,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,WAAyBwP,UAAW,eACtCyV,EAAMC,QAETxW,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBwP,UAAW,UACjCyV,EAAME,QAETzW,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBwP,UAAW,UACjCyV,EAAMG,QAET1W,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBwP,UAAW,UACjCyV,EAAMI,QAET3W,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBwP,UAAW,UACjCyV,EAAMK,QAET5W,EAAAC,EAAAtP,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoBwP,UAAW,UACjCyV,EAAMM,gBAxDiBrF,iBAA5B8E,GACGQ,cACL9W,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEghB,KAAM,cACNoF,MHXgB,IGYhBC,OHZgB,MGclBhX,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,SAAUgT,EAAC,QAAA3gB,OHdV,IGcU,KAAAA,OHdV,IGcU,MAAAA,OHdV,IGcU,OAAAA,OHZP,EGYO,KAAAA,OHZP,EGYO,KAAAA,OAAiIge,GAAjI,KAAAhe,OAAmLge,GAAnL,MAAAhe,OAAsOge,GAAtO,QAR5BmF,GAWGW,iBACLjX,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEghB,KAAM,cACNoF,MHrBgB,IGsBhBC,OHtBgB,MGwBlBhX,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,SAAUgT,EAAC,eAAA3gB,OACrB,WACH,IAAM+jB,EAAa,EAAbA,EAAmB,EACzB,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpB/hB,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAI0O,KAAK8R,GAAK,IACnChiB,IAAI,SAAAiiB,GACH,IACM5T,EAAI0T,EADK/F,GACM9L,KAAKgS,IAAID,GACxB7T,EAAI2T,EAFK/F,GAEM9L,KAAKiS,IAAIF,GAC9B,SAAAjkB,OAAUqQ,EAAV,KAAArQ,OAAeoQ,KAEhBX,KAAK,KAVL,GADqB,mBAAAzP,OAatB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGokB,UAAUpiB,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAI0O,KAAK8R,GAAK,IAAGhiB,IAAI,SAAAiiB,GAAK,SAAAjkB,OAAO,GAAAkS,KAAKgS,IAAID,GAA4D,IAAM,EAAlF,KAAAjkB,OAAuF,GAAAkS,KAAKiS,IAAIF,GAA4D,IAAM,KAAKjkB,OAAO,KAbpO,kBAyDlC,IAAMqkB,GAAwB,SAAC1W,EAAWxP,EAAMilB,GAAU,IAClDkB,EADkD,SAAAC,GAAA,SAAAD,IAAA,OAAAhkB,OAAAC,EAAA,EAAAD,CAAAD,KAAAikB,GAAAhkB,OAAAyf,EAAA,EAAAzf,CAAAD,KAAAC,OAAA0f,EAAA,EAAA1f,CAAAgkB,GAAAlS,MAAA/R,KAAAxB,YAAA,OAAAyB,OAAA2f,EAAA,EAAA3f,CAAAgkB,EAAAC,GAAAjkB,OAAA4f,EAAA,EAAA5f,CAAAgkB,EAAA,EAAApX,IAAA,SAAAvP,MAAA,WAGpD,OACEkP,EAAAC,EAAAtP,cAACgnB,GAAD,CAAqBrmB,KAAMA,EAAMilB,MAAOA,QAJUkB,EAAA,CACvBjG,iBASjC,OAFAiG,EAAmBlE,YAAczS,EAE1B2W,GAGHG,GAA0BJ,GAAsB,0BAA2B,WAAY,CAC3FhB,OAAQF,GAAoBQ,cAC5BL,OACEzW,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,cACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OHnGY,EGmGZ,KAAAA,OHnGY,EGmGZ,OAGbujB,OACE1W,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,SACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OH5GU,EG4GV,KAAAA,OH5GU,EG4GV,OAEX6M,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,OACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,QAIfwF,OACE3W,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,SACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,OAEXnR,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,OACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,QAIfyF,OACE5W,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,SACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,OAEXnR,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,OACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,QAIf0F,OACE7W,EAAAC,EAAAtP,cAAA,SACEqP,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,SACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,OAEXnR,EAAAC,EAAAtP,cAAA,QACEmQ,UAAW,OACXiW,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA/d,OAAege,GAAf,KAAAhe,OAA4Cge,GAA5C,UAMX0G,GAA2BL,GAAsB,2BAA4B,YAAa,CAC9FhB,OAAQF,GAAoBQ,cAC5BL,OACEzW,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,OAAQoQ,UAAW,cAAe4C,EAAG,kiKAExD4C,OACE1W,EAAAC,EAAAtP,cAAA,KAAGmQ,UAAW,OAAQoQ,UAAW,oCAC/BlR,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,+IACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,wIACT9T,EAAAC,EAAAtP,cAAA,QAAMmjB,EAAG,g+FAGb6C,OACE3W,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,OAAQoQ,UAAW,gCAAiC4C,EAAG,s3BAE1E8C,OACE5W,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,OAAQoQ,UAAW,oCAAqC4C,EAAG,s0BAE9E+C,OACE7W,EAAAC,EAAAtP,cAAA,QAAMmQ,UAAW,OAAQoQ,UAAW,8BAA+B4C,EAAG,khBAIpEgE,oLAOH,OAAOrkB,OAAO2iB,OAAO5iB,KAAK0G,YAAY6d,yBACnC5iB,IAAI,SAAA6iB,GAAoB,OACtBhY,EAAAC,EAAAtP,cAACqnB,EAAD,CAAsB3X,IAAK2X,EAAqBzE,aAAeyE,EAAqB1mB,gBAT9DkgB,iBAAxBsG,GACGC,wBAA0B,CAC/BE,SAAYL,GACZM,UAAaL,QAUXM,8MAGLC,MAAQ,CACNC,cAAe9kB,EAAKiL,MAAMwG,MAC1BsT,aAAc/kB,EAAKiL,MAAMwG,SAG3BuT,cAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpjB,IAAI,SAAAqjB,GAAC,OAAIC,IAAMC,gGAU3BC,EAAWC,EAAWC,GAAU,IAAA5e,EAAAzG,KAC7CA,KAAKgL,MAAMgS,UAAYhd,KAAK4kB,MAAME,eAAiB9kB,KAAK4kB,MAAMC,eAChE1d,WAAW,WACTV,EAAKse,cACFhhB,OAAO,SAACuhB,EAAcN,GAAf,OACLve,EAAKme,MAAMC,eAAiBG,GAAKA,GAAKve,EAAKme,MAAME,cAC9Cre,EAAKme,MAAME,cAAgBE,GAAKA,GAAKve,EAAKme,MAAMC,gBAErD9gB,OAAO,SAAAuhB,GAAY,OAAIA,EAAaC,UACpC5jB,IAAI,SAAA2jB,GAAY,OAAIA,EAAaC,QAAQC,kBAC3C,oCAIC,IAAAtd,EAAAlI,KAAAkN,EAIFlN,KAAKgL,MAFRgF,EAFK9C,EAEL8C,EAAGD,EAFE7C,EAEF6C,EAAGzI,EAFD4F,EAEC5F,UAAWkU,EAFZtO,EAEYsO,SAAUhK,EAFtBtE,EAEsBsE,MAAOJ,EAF7BlE,EAE6BkE,OAAQyL,EAFrC3P,EAEqC2P,QAASG,EAF9C9P,EAE8C8P,SAAUyI,EAFxDvY,EAEwDuY,aAAcrI,EAFtElQ,EAEsEkQ,SAFtEsI,EAAAxY,EAGJlP,MAHI2nB,EAAAD,EAGIznB,aAHJ,IAAA0nB,EAGY,WAHZA,EAAAC,EAAAF,EAGwBxnB,cAHxB,IAAA0nB,EAGiC,OAHjCA,EAAAC,EAAAH,EAGyCrf,sBAHzC,IAAAwf,KAGgErf,EAHhEkf,EAGgElf,QAHhEsf,EAK+B9lB,KAAK4kB,MAApCC,EALAiB,EAKAjB,cAAeC,EALfgB,EAKehB,aAChBiB,GAAqBN,EAAa/c,SAASwF,EAAKuB,WAAagW,EAAa/c,SAASwF,EAAK0D,UACxFoU,GAAqBD,EACpB5I,EAAYQ,GAAoBP,EAAU,CAACpN,IAAGD,MACpD,OACCvD,EAAAC,EAAAtP,cAAA,KAAGugB,UAAS,aAAA/d,OAAewd,EAAUnN,EAAzB,KAAArQ,OAA8Bwd,EAAUpN,EAAxC,MACTvD,EAAAC,EAAAtP,cAAA,KAAGmQ,UAAW,iBACX0P,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGrb,IAAI,SAAAqjB,GAAC,OAChCxY,EAAAC,EAAAtP,cAAA,OAAK0P,IAAKmY,EAAG/F,UAAS,SAAAtf,OAAW1B,EAAX,KAAA0B,OAAoBqlB,GAAKiB,QAASjB,GAAKxT,EAAQ,EAAI,GACvEhF,EAAAC,EAAAtP,cAAA,WACE+oB,IAAKhe,EAAK6c,cAAcC,GACxBmB,cAAe,UACfC,cAAe,MACf1mB,KAAM,YACN/B,KAAMknB,EAAgBG,EAAI,EAAI,EAC9BhZ,GAAI8Y,EAAeE,EAAI,EAAI,EAC3BqB,IAAK,OACLC,YAAa,EACbnI,KAAM,cAGL,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpa,OAAO,SAAAihB,GAAC,OAAIA,GAAKxT,IAAO7P,IAAI,SAAAqjB,GAAC,OAClDxY,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,CAAUZ,IAAKmY,GACbxY,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAS,SAAAtf,OAAW1B,EAAX,KAAA0B,OAAoBqlB,KACjC5T,IAAWlD,EAAKuB,SAAWjD,EAAAC,EAAAtP,cAACopB,GAAD,CAAOzI,MAAO5f,EAAQihB,OAAQ,QAASC,QAAS/Y,GAAkB0f,IAAwB,KACrH3U,IAAWlD,EAAK0D,SAAWpF,EAAAC,EAAAtP,cAACopB,GAAD,CAAOzI,MAAO5f,EAAQihB,OAAQ,QAASC,QAAS/Y,GAAkB2f,IAAwB,QAGzHxf,EAAUgG,EAAAC,EAAAtP,cAACqpB,GAAD,CAAgBhV,MAAOA,EAAO9R,KAAM8G,IAAc,MAE/DgG,EAAAC,EAAAtP,cAAA,OACE8hB,UAAS,SAAAtf,OAAW1B,EAAX,WACTqP,UAAW0O,IAAW,CAAC1U,YAAWkU,aAClCqB,QAASA,wDA5Dc7R,EAAO4Z,GACpC,OAAI5Z,EAAMgS,UAAYhS,EAAMwG,QAAUoT,EAAMpT,MACnC,CAACqT,cAAeD,EAAME,aAAcA,aAAc9Z,EAAMwG,OAG1D,YAfQwM,iBAAb2G,GACG9B,YAAcyB,GA0FvBK,GAAK7W,aAAe,CAClBkP,UAAU,GAGG2H,UC3ST8B,4LAQK,IAAAvP,EAC6FlX,KAAK0G,YAAlGggB,EADAxP,EACAwP,gBAAiBC,EADjBzP,EACiByP,YAAaC,EAD9B1P,EAC8B0P,aAAcC,EAD5C3P,EAC4C2P,iBAAkBC,EAD9D5P,EAC8D4P,aAAcC,EAD5E7P,EAC4E6P,cAEnF,OACEva,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAA,QACE4D,GAAI,kBACJuf,EAAG,qOACH5C,UAAW,cAAA/d,OACIge,GADJ,KAAAhe,OAC8Bge,GAD9B,cAAAhe,OJfO,GIiBmBinB,EAF1B,KAAAjnB,OJfO,GIiB8DinB,EAFrE,kBAAAjnB,QAGK+mB,EAAgB1W,EAAI,EAAI2W,EAAY3W,EAHzC,KAAArQ,QAG+C+mB,EAAgB3W,EAAI,EAAI4W,EAAY5W,EAHnF,MAITX,KAAK,OAET5C,EAAAC,EAAAtP,cAAA,QACE4D,GAAI,mBACJuf,EAAG,yjBACH5C,UAAW,cAAA/d,OACIge,GADJ,KAAAhe,OAC8Bge,GAD9B,cAAAhe,OJxBO,GI0BmBonB,EAF1B,KAAApnB,OJxBO,GI0B+DonB,EAFtE,gCAAApnB,QAIKknB,EAAiB7W,EAAI,EAAI8W,EAAa9W,EAJ3C,KAAArQ,QAIiDknB,EAAiB9W,EAAI,EAAI+W,EAAa/W,EAJvF,MAKTX,KAAK,OAET5C,EAAAC,EAAAtP,cAAA,KAAG4D,GAAI,oBACLyL,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,mBAAoBZ,YJlCd,GIkCuDD,OAAQ,SACrF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,mBAAoBd,KAAM,WAE5C3R,EAAAC,EAAAtP,cAAA,KAAG4D,GAAI,oBACLyL,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,mBAAoBZ,YJtCd,GIsCuDD,OAAQ,SACrF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,mBAAoBd,KAAM,WAE5C3R,EAAAC,EAAAtP,cAAA,KAAG4D,GAAI,qBACLyL,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,oBAAqBZ,YJ1Cf,GI0CwDD,OAAQ,SACtF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,oBAAqBd,KAAM,WAE7C3R,EAAAC,EAAAtP,cAAA,KAAG4D,GAAI,qBACLyL,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,oBAAqBZ,YJ9Cf,GI8CwDD,OAAQ,SACtF5R,EAAAC,EAAAtP,cAAA,OAAK8hB,UAAW,oBAAqBd,KAAM,mBA9CvBH,kBAAxByI,GACGC,gBAAkB,CAAC1W,EAAG,OAAQD,EAAG,QADpC0W,GAEGE,YAAc,CAAC3W,GAAI,GAAID,GAAI,IAF9B0W,GAGGG,aAAe,IAHlBH,GAIGI,iBAAmB,CAAC7W,EAAG,OAAQD,EAAG,QAJrC0W,GAKGK,aAAe,CAAC9W,EAAG,GAAID,GAAI,IAL9B0W,GAMGM,cAAgB,UA+CnBC,oLAgBK,IAAAC,EACyBjnB,KAAK0G,YAA9BwgB,EADAD,EACAC,QAASC,EADTF,EACSE,aADThc,EAEiCnL,KAAKgL,MAAtCrN,EAFAwN,EAEAxN,KAAMqO,EAFNb,EAEMa,GAAImT,EAFVhU,EAEUgU,OAAQzf,EAFlByL,EAEkBzL,KAAMic,EAFxBxQ,EAEwBwQ,MACzBzU,EAAO,CAAC8I,EAAGhE,EAAGgE,EAAIrS,EAAKqS,EAAGD,EAAG/D,EAAG+D,EAAIpS,EAAKoS,GACzCqX,EAAWpnB,KAAK0G,YAAY2gB,YAAjB,GAAA1nB,OAAgCuH,EAAK8I,EAArC,KAAArQ,OAA0CuH,EAAK6I,IAC1DuX,EAAgBzV,KAAK0V,KAAK1V,KAAKoJ,IAAI/T,EAAK8I,GAAK6B,KAAKoJ,IAAI/T,EAAK6I,IAEjE,OACEvD,EAAAC,EAAAtP,cAAA,OACE8hB,UAAS,UAAAtf,OAAYD,EAAZ,KAAAC,OAAoBwf,GAC7BzB,UAAW,cAAA/d,OJjFK,IIkFoBhC,EAAKqS,EAD9B,KAAArQ,OJjFK,IIkFmDhC,EAAKoS,EAD7D,eAAApQ,OAECynB,EAFD,KAAAznB,OAEage,GAFb,KAAAhe,OAEuCge,GAFvC,kBAAAhe,OAGIunB,EAHJ,KAAAvnB,OAGege,GAAyB2J,EAHxC,MAAA3nB,OAAAM,OAAAqI,EAAA,EAAArI,CAIL0b,EAAQ,cAAAhc,OACGge,GADH,KAAAhe,OAC6Bge,GAD7B,cAAAhe,OAEDwnB,EAFC,kBAAAxnB,QAGG,GAHH,KAAAA,QAG8B,GAH9B,MAIR,KACJoE,OAAO,SAAA2Z,GAAS,OAAIA,IAAWtO,KAAK,cAnC1B4O,iBAAdgJ,GACG5G,WAAaqG,GADhBO,GAEGE,QAAUvJ,GAFbqJ,GAGGG,aAAe,IAHlBH,GAKGK,YAAc,CACnBG,MAAO,EACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,IACTC,OAAQ,IACRC,QAAS,IACTC,OAAQ,GACRC,OAAQ,IAoCZf,GAAMlZ,aAAe,CACnB6N,OAAO,GAGMqL,UCnGTgB,oLACK,IAAAjoB,EAAAC,KAAAmL,EAIHnL,KAAKgL,MAFPsC,EAFKnC,EAELmC,UAAWiO,EAFNpQ,EAEMoQ,UAAWC,EAFjBrQ,EAEiBqQ,SAAUC,EAF3BtQ,EAE2BsQ,gBAAiBC,EAF5CvQ,EAE4CuQ,eAAgBC,EAF5DxQ,EAE4DwQ,MAAOC,EAFnEzQ,EAEmEyQ,OAAQ7F,EAF3E5K,EAE2E4K,SAAU8F,EAFrF1Q,EAEqF0Q,SAAUC,EAF/F3Q,EAE+F2Q,SACpG2J,EAHKta,EAGLsa,aAAcpnB,EAHT8M,EAGS9M,SAAU8P,EAHnBhD,EAGmBgD,eAAgB8Z,EAHnC9c,EAGmC8c,eAAgBjL,EAHnD7R,EAGmD6R,SAAUkL,EAH7D/c,EAG6D+c,WAAYpkB,EAHzEqH,EAGyErH,KAAMyC,EAH/E4E,EAG+E5E,OAAQ6W,EAHvFjS,EAGuFiS,SAEvFpf,EAASK,EAATL,MAEPsP,EAAY0O,IAAW,QAAS,YAAV,eAAArc,OAAsC3B,EAAMG,QAAU,WAAa,CACvF8d,cAAeN,EACfO,eAAgBN,EAChBO,WAAYpG,IAAawF,GAAaC,GACtCY,aAAcP,EACdC,YACCxO,GACH,IAAM6a,EAAWha,EAAe1P,OAC1B2pB,EAAavW,KAAKC,IAALC,MAAAF,KAAI5R,OAAAqI,EAAA,EAAArI,CAAQkO,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAMQ,YAAY,EAE/E,OACE+N,EAAAC,EAAAtP,cAAA,OACEmQ,UAAWA,EACX+a,QAAO,OAAA1oB,OL9BS,IK8BqByoB,EAA9B,KAAAzoB,OL9BS,IK8ByDwoB,GACzErK,MAAO,CAACwK,iBAAkBF,EAAaG,cAAeJ,GACtDK,oBAAqB,gBACrB3L,QAAShB,GAETrP,EAAAC,EAAAtP,cAAA,KAAGsrB,WAAU,QACVta,EAAexM,IAAI,SAAAsP,GAAG,OACrBzE,EAAAC,EAAAtP,cAAA,KAAGsrB,WAAA,OAAA9oB,OAAiBsR,EAAIlB,GAAKlD,IAAG,OAAAlN,OAASsR,EAAIlB,IAC1CkB,EAAIhT,MAAM0D,IAAI,SAAAuP,GAAI,OACjB1E,EAAAC,EAAAtP,cAACurB,GAAD,CACE7b,IAAG,GAAAlN,OAAKuR,EAAKlB,EAAV,KAAArQ,OAAeuR,EAAKnB,GACvBqN,SAAUA,EACVlM,KAAMA,EACNqK,UAAWA,GAAcC,GAAYE,EAAexK,GACpD5J,UAAWmU,EAAgBvK,GAC3BsK,SAAUE,EAAexK,GACzBuU,aAAcA,EACdpnB,SAAUA,EACV0X,SAAUhW,EAAKiL,MAAM+K,SACrBgH,KAAMhd,EAAKiL,MAAM+R,KACjB/e,MAAOA,EACPgf,SAAUA,UAMnBA,EACCxQ,EAAAC,EAAAtP,cAACwrB,GAAD,CAAgBvL,SAAUA,EAAUjP,eAAgBA,EAAgBnQ,MAAOA,EAAOynB,aAAcA,IAC9F,KACHyC,EACC3hB,EACEA,EAAO5E,IAAI,SAACinB,EAAOzlB,GAAR,OACTqJ,EAAAC,EAAAtP,cAAC0rB,GAAD5oB,OAAA2M,OAAA,CAAOC,IAAK1J,GAAWylB,MAGzBpc,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC2rB,GAAD,CAAuBhlB,KAAMA,EAAMmkB,eAAgBA,KAIrD,aA9DqBjK,iBA2FjCgK,GAAmBla,aAAe,CAChCR,UAAW,GACXqO,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACV2J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCoL,UAAU,EACVkL,YAAY,OAGRa,oLAEF,OACEvc,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAW0O,IAAW,QAAS,aAAc8B,MAAO,CAACkL,QAAS,SACjExc,EAAAC,EAAAtP,cAAA,YACEqP,EAAAC,EAAAtP,cAAC8rB,GAAKpG,YAAN,MACArW,EAAAC,EAAAtP,cAACopB,GAAM1D,YAAP,MACArW,EAAAC,EAAAtP,cAAC0rB,GAAMzI,WAAP,gBARgCpC,iBAe5CgK,GAAmBnF,YAAckG,OAE3BG,4LACa,IACRjB,EAAkBjoB,KAAKgL,MAAvBid,eADQkB,EAEmBnpB,KAAKopB,qBAAhChY,EAFQ+X,EAER/X,OAAQiY,EAFAF,EAEAE,gBACTC,EAAoBD,EACvBzqB,KAAK,SAAAkF,GAAI,OAAIoK,EAAKmL,uBAAuB3Q,SAAS5E,EAAK4L,gBACpD6Z,EAAoBF,EACvBzqB,KAAK,SAAAkF,GAAI,OAAIA,EAAK4L,eAAiBxB,EAAKuI,gCAN5B+S,EAQO,CACpBzW,KAAMuW,EAAoB,CACxB3rB,KAAM2rB,EAAkBjb,SAASC,SACjCtC,GAAIsd,EAAkBhb,UACpB,KACJmb,MAAOF,EAAoB,CACzB5rB,KAAM4rB,EAAkBlb,SAASC,SACjCtC,GAAIud,EAAkBjb,UACrB,MAREyE,EARQyW,EAQRzW,KAAM0W,EARED,EAQFC,MAwBb,OAbIxB,IACElV,IACFA,EAAKpV,KAAOsqB,EAAeyB,mBAAmBJ,EAAkBjb,SAASF,eAAgB4E,EAAKpV,MAC9FoV,EAAK/G,GAAKic,EAAeyB,mBAAmBJ,EAAkBnb,eAAgB4E,EAAK/G,IACnF+G,EAAKrT,KAAO,QAEV+pB,IACFA,EAAM9rB,KAAOsqB,EAAeyB,mBAAmBH,EAAkBlb,SAASF,eAAgBsb,EAAM9rB,MAChG8rB,EAAMzd,GAAKic,EAAeyB,mBAAmBH,EAAkBpb,eAAgBsb,EAAMzd,IACrFyd,EAAM/pB,KAAO,UAIV,CAAC0R,SAAQ2B,OAAM0W,sDAStB,IANmB,IACZ3lB,EAAQ9D,KAAKgL,MAAblH,KAEDulB,EAAkB,CAACvlB,GACnBsN,EAAStN,EAAK0L,WAChBma,EAAgB7lB,EACb6lB,EAActb,WACnBsb,EAAgBA,EAActb,UACZmB,aAAe4B,GAGjCiY,EAAgB3hB,KAAKiiB,GAGvB,MAAO,CAACvY,SAAQiY,oDAKhB,IADerpB,KAAKgL,MAAblH,KAEL,OAAO,KAHF,IAAA8lB,EAMuB5pB,KAAK6pB,iBAA5BzY,EANAwY,EAMAxY,OAAQ2B,EANR6W,EAMQ7W,KAAM0W,EANdG,EAMcH,MACrB,IAAK1W,IAAS0W,EACZ,OAAO,KAET,IAAMtK,EAAS/N,IAAWlD,EAAKuB,SAAW,QAAU,QAEhDqa,EAAY,KAAMC,EAAa,KAQnC,OAPIhX,IACF+W,EAAYtd,EAAAC,EAAAtP,cAAC0rB,GAAD,CAAOhc,IAAK,OAAQlP,KAAMoV,EAAKpV,KAAMqO,GAAI+G,EAAK/G,GAAImT,OAAQA,EAAQzf,KAAM,UAElF+pB,IACFM,EAAavd,EAAAC,EAAAtP,cAAC0rB,GAAD,CAAOhc,IAAK,QAASlP,KAAM8rB,EAAM9rB,KAAMqO,GAAIyd,EAAMzd,GAAImT,OAAQA,EAAQzf,KAAM,WAGnF,CAACoqB,EAAWC,UAzEa/L,iBAiH9BgM,IA/BqChM,iMAgChC,IAAAkC,EACiDlgB,KAAKgL,MAAtDoS,EADA8C,EACA9C,SAAUjP,EADV+R,EACU/R,eAAgBnQ,EAD1BkiB,EAC0BliB,MAAOynB,EADjCvF,EACiCuF,aAElCvnB,EAASkB,IAAEqE,OAAO2Z,EAAS1L,UAAUvD,EAAgB,SAAA+C,GAAI,OAAIA,EAAKE,SAAS,CAAC,SAAU,WAE5F,OACE5E,EAAAC,EAAAtP,cAAA,KAAGsrB,WAAU,SAAU3K,MAAO,CAACmM,cAAe,SAC3C/rB,EAAOyD,IAAI,SAAAuP,GAAI,OACd1E,EAAAC,EAAAtP,cAAC+sB,GAAD,CACErd,IAAG,GAAAlN,OAAKuR,EAAKE,OAAV,KAAAzR,OAAoBuR,EAAKI,QAC5B8L,SAAUA,EACVlM,KAAMA,EACNlT,MAAOA,EACPynB,aAAcA,cAdGzH,kBA6BvBmM,8MACJvF,MAAQ,CACNwF,iBAAkB,CAACpa,EAAGvJ,EAAKuE,MAAMkG,KAAKlB,EAAGD,EAAGtJ,EAAKuE,MAAMkG,KAAKnB,GAC5Dsa,SAAU,CAACra,EAAGvJ,EAAKuE,MAAMkG,KAAKlB,EAAGD,EAAGtJ,EAAKuE,MAAMkG,KAAKnB,MAGtDua,iBAAmBrF,IAAMC,8FAUNC,EAAWC,EAAWC,GAAU,IAAAnd,EAAAlI,KAC7CA,KAAK4kB,MAAMyF,WAAajF,EAAUiF,UACpCljB,WAAW,WACLe,EAAKoiB,iBAAiB/E,SACxBrd,EAAKoiB,iBAAiB/E,QAAQC,gBAE/B,oCAIE,IAAAhE,EACuCxhB,KAAKgL,MAA5CoS,EADAoE,EACApE,SAAUlM,EADVsQ,EACUtQ,KAAMlT,EADhBwjB,EACgBxjB,MAAOynB,EADvBjE,EACuBiE,aADvBK,EAE8B9lB,KAAK4kB,MAAnCwF,EAFAtE,EAEAsE,iBAAkBC,EAFlBvE,EAEkBuE,SACpBtE,GAAqBN,EAAa/c,SAASwF,EAAKuB,WAAagW,EAAa/c,SAASwF,EAAK0D,UACxFoU,GAAqBD,EACpBwE,EAAc5M,GAAoBP,EAAUiN,GAC5CG,EAAgB7M,GAAoBP,EAAUgN,GACpD,OACE5d,EAAAC,EAAAtP,cAAA,KAAGugB,UAAS,aAAA/d,OAAe4qB,EAAYva,EAA3B,KAAArQ,OAAgC4qB,EAAYxa,EAA5C,MACVvD,EAAAC,EAAAtP,cAACopB,GAAD,CACEzI,MAAO9f,EAAME,QAAU,OACvBihB,OAAQjO,EAAKE,SAAWlD,EAAKuB,SAAW,QAAU,QAClD2P,QAASphB,EAAMqI,iBAAmB6K,EAAKE,SAAWlD,EAAKuB,SAAWsW,EAAoBC,KAExFxZ,EAAAC,EAAAtP,cAAA,oBACE+oB,IAAKlmB,KAAKsqB,iBACVnE,cAAe,YACfC,cAAe,MACf1mB,KAAM,YACN/B,KAAI,GAAAgC,OAAK6qB,EAAcxa,EAAnB,KAAArQ,OAAwB6qB,EAAcza,GAC1C/D,GAAE,GAAArM,OAAK4qB,EAAYva,EAAjB,KAAArQ,OAAsB4qB,EAAYxa,GACpCsW,IAAK,OACLC,YAAa,EACbnI,KAAM,+DAzCkBnT,EAAO4Z,GACrC,OAAI5Z,EAAMkG,KAAKlB,IAAM4U,EAAMyF,SAASra,GAAKhF,EAAMkG,KAAKnB,IAAM6U,EAAMyF,SAASta,EAChE,CAACqa,iBAAkBxF,EAAMyF,SAAUA,SAAU,CAACra,EAAGhF,EAAMkG,KAAKlB,EAAGD,EAAG/E,EAAMkG,KAAKnB,IAG/E,YAbiBiO,iBA+DtByM,8MACJ1U,SAAW,WACLjN,EAAKkC,MAAM1D,WAAawB,EAAKkC,MAAM+K,SACrCjN,EAAKkC,MAAM+K,SAASjN,EAAKkC,MAAMkG,MACtBpI,EAAKkC,MAAMwQ,UAAY1S,EAAKkC,MAAM+R,MAC3CjU,EAAKkC,MAAM+R,gFAIN,IAAA2N,EAGH1qB,KAAKgL,MADPoS,EAFKsN,EAELtN,SAAUlM,EAFLwZ,EAEKxZ,KAAMqK,EAFXmP,EAEWnP,UAAWjU,EAFtBojB,EAEsBpjB,UAAWkU,EAFjCkP,EAEiClP,SAAqBxd,EAFtD0sB,EAE2CrsB,SAAWL,MAAQ+X,EAF9D2U,EAE8D3U,SAAUgH,EAFxE2N,EAEwE3N,KAAMC,EAF9E0N,EAE8E1N,SAAUyI,EAFxFiF,EAEwFjF,aAE/F,OACEjZ,EAAAC,EAAAtP,cAAC8rB,GAAD,CACE7L,SAAUA,EACVpN,EAAGkB,EAAKlB,EACRD,EAAGmB,EAAKnB,EACRzI,UAAWA,EACXkU,SAAUA,EACVhK,MAAON,EAAKM,MACZJ,OAAQF,EAAKE,OACbqU,aAAcA,EACdzI,SAAUA,EACVhf,MAAOA,EACP6e,SAAW9G,GAAYzO,GAAeyV,GAAQvB,IAAcD,EAAYvb,KAAK+V,SAAW,cAzBrEiI,iBA4C3ByM,GAAa3c,aAAe,CAC1ByN,WAAW,EACXjU,WAAW,EACXkU,UAAU,EACVwB,UAAU,EACVyI,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,WAGtBoW,ICjYAA,GDiYAA,GE3XT2C,mMACK,IAAAxf,EAC4BnL,KAAKgL,MADjC4f,EAAAzf,EACF0f,gBADE,IAAAD,EACS,MADTA,EACmB5f,EADnB/K,OAAA6qB,EAAA,EAAA7qB,CAAAkL,EAAA,cAOD4f,EAJY,CAChBC,KAAQ1P,EACR2P,IAAOjD,IAEkB6C,GAC3B,OAAOre,EAAAC,EAAAtP,cAAC4tB,EAAa/f,UATK6C,cAoC9B8c,GAAgB7c,aAAe,CAC7BR,UAAW,GACXqO,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACV2J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCoL,UAAU,EACVkL,YAAY,GAGCyC,UChDTO,8MACJnV,SAAW,SAAC7E,GAAS,IAAA/F,EAC8BpL,EAAKiL,MAAxCmD,EADKhD,EACZrH,KAAOqK,eAAiB8Z,EADZ9c,EACY8c,eAC3BA,IACF/W,EAAO+W,EAAe3S,YAAYnH,EAAgB+C,IAEpDnR,EAAKiL,MAAM+K,SAAShW,EAAKiL,MAAMlH,KAAKiS,SAAS,CAAC/F,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,QAGnEgN,KAAO,WACLhd,EAAKiL,MAAM+K,SAAShW,EAAKiL,MAAMlH,KAAK4K,QAAU3O,EAAKiL,MAAMlH,KAAKiZ,OAAShd,EAAKiL,MAAMlH,KAAKqnB,mBAGzFtP,SAAW,WACT9b,EAAKiL,MAAM6Q,SAAS9b,EAAKiL,MAAMlH,SAGjC2X,gBAAkB,SAAAvK,GAAQ,IAAAhE,EACyBnN,EAAKiL,MAAxCmD,EADUjB,EACjBpJ,KAAOqK,eAAiB8Z,EADP/a,EACO+a,eAI/B,OAHIA,IACF/W,EAAO+W,EAAe3S,YAAYnH,EAAgB+C,IAE7CnR,EAAKiL,MAAMlH,KAAK6U,gBAAgBzH,MAGzCwK,eAAiB,SAAAxK,GAAQ,IAAAgP,EAC0BngB,EAAKiL,MAAxCmD,EADS+R,EAChBpc,KAAOqK,eAAiB8Z,EADR/H,EACQ+H,eAI/B,GAHIA,IACF/W,EAAO+W,EAAe3S,YAAYnH,EAAgB+C,SAEnBxS,IAA7BqB,EAAKiL,MAAMogB,eAA4D,OAA7BrrB,EAAKiL,MAAMogB,eACvD,IAAKrrB,EAAKiL,MAAMlH,KAAK4K,QACnB,OAAO,OAGT,GAAI3O,EAAKiL,MAAMlH,KAAKgL,YAAc/O,EAAKiL,MAAMogB,cAC3C,OAAO,EAGX,IAAM9c,EAAWvO,EAAKiL,MAAMlH,KAAKwK,SACjC,QAAKA,IAGEA,EAAS0B,IAAMkB,EAAKlB,GAAK1B,EAASyB,IAAMmB,EAAKnB,oFAIpD,QAAS/P,KAAKgL,MAAMlH,KAAKqN,SAASnR,KAAK0b,iDAGhC,IAAA8F,EACoExhB,KAAKgL,MAAzElH,EADA0d,EACA1d,KAAMmkB,EADNzG,EACMyG,eAAgBxC,EADtBjE,EACsBiE,aAAc5J,EADpC2F,EACoC3F,SAAU9F,EAD9CyL,EAC8CzL,SAAUiH,EADxDwE,EACwDxE,SAC3D7O,EAAiBrK,EAAKqK,eAK1B,OAJI8Z,IACF9Z,EAAiB8Z,EAAe9Z,IAIhC3B,EAAAC,EAAAtP,cAACkuB,GAADprB,OAAA2M,OAAA,GACM5M,KAAKgL,MADX,CAEEyQ,gBAAiBuB,EAAWhd,KAAKyb,gBAAkB,kBAAM,GACzDC,eAAgBsB,EAAWhd,KAAK0b,eAAiB,kBAAM,GACvDH,UAAWkK,EAAa/c,SAAS5E,EAAKuL,YACtCmM,WAAUwB,GAAWhd,KAAKsrB,iBAC1BzP,SAAUA,EAAW7b,KAAK6b,SAAW,KACrC9F,SAAUA,EAAW/V,KAAK+V,SAAW,KACrCgH,KAAMhH,EAAW/V,KAAK+c,KAAO,KAC7B5O,eAAgBA,EAChB8Z,eAAgBA,EAChBnkB,KAAMA,EACNsZ,SAAUtZ,EAAK4C,YACfsW,SAAUA,YAvEEgB,iBA4FpBkN,GAAMpd,aAAe,CACnBR,UAAW,GACXqO,OAAO,EACPC,QAAQ,EACRE,UAAU,EACV2J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCoL,UAAU,OAGNuO,8MACJ3G,MAAQ,CACN4G,UAAW,EACXC,qBAAqB,KA4FtBC,kBAAoB,SAAAC,GAClBllB,EAAKmlB,SAASD,EAAQ,WACpB,GAAIllB,EAAKuE,MAAM6gB,SAAU,KAAAC,EACkBrlB,EAAKme,MAAvC4G,EADgBM,EAChBN,UAAWC,EADKK,EACLL,oBACZxD,EAAiBxhB,EAAKC,YAAYqlB,kBAAjB,GAAApsB,OAAsC6rB,EAAtC,KAAA7rB,OAAmD8rB,IAC1EhlB,EAAKuE,MAAM6gB,SAAS,CAACL,YAAWC,sBAAqBxD,yBAK5D+D,uBAAyB,WACvBvlB,EAAKilB,kBAAkB,SAAA9G,GAAK,MAAK,CAC/B4G,WAAY5G,EAAM4G,UAAY,GAAK,QAIvCS,gBAAkB,WAChBxlB,EAAKilB,kBAAkB,SAAA9G,GAAK,MAAK,CAC/B4G,WAAY5G,EAAM4G,UAAY,GAAK,QAIvCU,iBAAmB,WACjBzlB,EAAKilB,kBAAkB,SAAA9G,GAAK,MAAK,CAC/B6G,qBAAsB7G,EAAM6G,0BAIhCU,eAAiB,WACf1lB,EAAKilB,kBAAkB,SAAA9G,GAAK,MAAK,CAC/B4G,WAAY5G,EAAM4G,UAAY,GAAK,EACnCC,qBAAsB7G,EAAM6G,0BAIhCW,MAAQ,WACN3lB,EAAKilB,kBAAkB,SAAA9G,GAAK,MAAK,CAC/B4G,UAAW,EACXC,qBAAqB,8EAIhB,IAAA3F,EACkC9lB,KAAK4kB,MAAvC4G,EADA1F,EACA0F,UAAWC,EADX3F,EACW2F,oBAElB,OACEjf,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM2f,KAAM,UAAWC,MAAO,CAC5B,CAACzf,IAAK,2BAA4BG,KAAM,OAAQ6P,QAAS7c,KAAKgsB,wBAC9D,CAACnf,IAAK,mBAAoBG,KAAM,OAAQ6P,QAAS7c,KAAKisB,iBACtD,CAACpf,IAAK,kBAAmBG,KAAM,8BAA+B6P,QAAS7c,KAAKksB,kBAC5E,CAACrf,IAAK,gBAAiBG,KAAM,4BAA6B6P,QAAS7c,KAAKmsB,gBACxE,CAACtf,IAAK,OAAQG,KAAM,OAAQ6P,QAAS7c,KAAKosB,MAAOG,UAAWf,IAAcC,4DA/H7Ce,GAAQ,IAAAtkB,EAAAlI,KACnCysB,EAA0B,SAAAte,GAC9B,OAAOjG,EAAKukB,wBAAwBte,EAAgBqe,IAEtDC,EAAwBnX,YAAc,SAACnH,EAAgBmH,GACrD,OAAOpN,EAAKwkB,4BAA4Bve,EAAgBmH,EAAakX,IAGvE,IAAMG,EAAUH,EAAOI,UAAYJ,EAAOK,MAAQL,EAAOM,MACnDC,EAAgBP,EAAOI,YAAcD,EAAU,CACnDC,UAAWJ,EAAOI,UAClBC,OAAQL,EAAOK,MACfC,OAAQN,EAAOM,OACbN,EAKJ,OAJAC,EAAwB/C,mBAAqB,SAACvb,EAAgBmH,GAC5D,OAAOpN,EAAKwkB,4BAA4Bve,EAAgBmH,EAAayX,IAGhEN,kDAGsBte,EAAgBqe,GAAQ,IAAA1jB,EAAA9I,KAAAgtB,EACjBhtB,KAAKitB,wBAAwB9e,EAAgBqe,GAA5EU,EADgDF,EAChDE,YAAaC,EADmCH,EACnCG,eACZC,EAAQhuB,IAAEiuB,MAAMF,GAGtB,OAFc/tB,IAAEiuB,MAAMH,GAETvrB,IAAI,SAAA2rB,GAAI,MAAK,CACxBvd,EAAGud,EACHrvB,MAAOmvB,EAAMzrB,IAAI,SAAA4rB,GAAQ,IAAAC,EACJ1kB,EAAK2kB,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAAnFkB,EADkBF,EAClBE,KAAMC,EADYH,EACZG,KACX,OAAO1tB,OAAAsM,EAAA,EAAAtM,CAAA,GACJkO,EAAewf,GAAM1vB,MAAMyvB,GAD9B,CAEE1d,EAAGud,EAAMxd,EAAGud,6DAMenf,EAAgBmH,EAAakX,GAAQ,IAAAoB,EAClC5tB,KAAKitB,wBAAwB9e,EAAgBqe,GAA5EU,EADiEU,EACjEV,YAAaC,EADoDS,EACpDT,eACRI,EAAiBjY,EAApBtF,EAAYsd,EAAQhY,EAAXvF,EAFsD8d,EAGjD7tB,KAAKytB,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAE1F,MAAO,CAACxc,EAL8D6d,EAG/DH,KAEU3d,EALqD8d,EAGzDF,sDAKgBxf,EAAgBqe,GAC7C,IAGIU,EAAaC,EAHXhF,EAAWha,EAAe1P,OAC1B2pB,EAAcvW,KAAKC,IAALC,MAAAF,KAAI5R,OAAAqI,EAAA,EAAArI,CAAQkO,EAAexM,IAAI,SAAAsP,GAAG,OAAIA,EAAIhT,MAAMQ,YAAY,EAQhF,OAPoB+tB,EAAbI,WAGJO,EAAgChF,EAAhB+E,EAA0B9E,IAE1C+E,EAAgC/E,EAAhB8E,EAA6B/E,GAEzC,CAAC+E,cAAaC,gEAG+CX,GAAQ,IAExEkB,EAAMC,EAFcJ,EAAoD3hB,EAApD2hB,KAAMD,EAA8C1hB,EAA9C0hB,KAAQH,EAAsCnY,EAAtCmY,eAAgBD,EAAsBlY,EAAtBkY,YActD,OAbkCV,EAA3BI,WAGJc,EAAeJ,EAATK,EAAeJ,IAErBG,EAAeH,EAATI,EAAeL,GALUd,EAAhBK,QAQhBa,EAAOP,EAAiB,EAAIO,GARIlB,EAATM,QAWvBa,EAAOT,EAAc,EAAIS,GAEpB,CAACD,OAAMC,eA5FgB3P,iBAA5BuN,GAOGQ,kBAAoB,CACzB+B,UAAW,KAEXC,UAVExC,GAUcyC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAOC,OAAO,IACnFmB,UAXE1C,GAWcyC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IACnFoB,UAZE3C,GAYcyC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IAClFqB,SAbE5C,GAaayC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IAClFsB,SAdE7C,GAcayC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IACjFuB,SAfE9C,GAeayC,4BAA4B,CAACpB,WAAW,EAAOC,OAAO,EAAOC,OAAO,IACnFwB,SAhBE/C,GAgBayC,4BAA4B,CAACpB,WAAW,EAAMC,OAAO,EAAOC,OAAO,KAgJvE5B,UCvQTqD,8MAkCJ3J,MAAQ,CACNzW,eAAgBpO,EAAK2G,YAAY8nB,sBAGnC/S,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGT+S,QAAU,WACR1uB,EAAK6rB,SAAS,SAAAhH,GAAK,MAAK,CACtBzW,eAAgByW,EAAMzW,iBAAmBpO,EAAK2G,YAAY8nB,mBACtDzuB,EAAK2G,YAAYgoB,2BACjB3uB,EAAK2G,YAAY8nB,yBAGzBG,kBAAoB5uB,EAAKiL,MAAM3M,SAASL,MAAMsI,WAAaL,YAAYlG,EAAK0uB,QAAS,KAAQ,uFAE1EtJ,EAAWC,EAAWC,GACnCrlB,KAAKgL,MAAM3M,SAASL,MAAMsI,aAAe6e,EAAU9mB,SAASL,MAAMsI,aAChEtG,KAAKgL,MAAM3M,SAASL,MAAMsI,WACvBtG,KAAK2uB,oBACR3uB,KAAK2uB,kBAAoB1oB,YAAYjG,KAAKyuB,QAAS,MAGjDzuB,KAAK2uB,oBACPnuB,cAAcR,KAAK2uB,mBACnB3uB,KAAK2uB,kBAAoB,sDAO3B3uB,KAAK2uB,oBACPnuB,cAAcR,KAAK2uB,mBACnB3uB,KAAK2uB,kBAAoB,uCAIpB,IAAAxjB,EAC2BnL,KAAKgL,MAAhC2Q,EADAxQ,EACAwQ,MAAOC,EADPzQ,EACOyQ,OAAQvd,EADf8M,EACe9M,SACf8P,EAAkBnO,KAAK4kB,MAAvBzW,eAEP,OACE3B,EAAAC,EAAAtP,cAACkuB,GAAD,CACEjO,SAAUlP,EAAKgN,QACfS,MAAOA,EACPC,OAAQA,EACR6J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCzD,eAAgBA,EAChBqN,UAAU,EACVC,gBAAiBzb,KAAKyb,gBACtBC,eAAgB1b,KAAK0b,eACrBnV,OAAQlI,EAASL,MAAMuI,OAASvG,KAAK0G,YAAYH,YAAS7H,EAC1DL,SAAUA,EACV2e,SAAU3e,EAASL,MAAMsI,WACzB4hB,WAAY7pB,EAASL,MAAMuI,gBA9FNsH,aAAvB0gB,GACGC,mBAAqB,CAC1B,CACEze,EAAG,EACH9R,MAAO,CACL,CAAC+R,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,aAAcd,MAAO,GACtE,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,aAAcd,MAAO,MAXxE+c,GAeGG,2BAA6B,CAClC,CACE3e,EAAG,EACH9R,MAAO,CACL,CAAC+R,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,aAAcd,MAAO,GACtE,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACxB,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,aAAcd,MAAO,MAzBxE+c,GA6BGhoB,OAAS,CACd,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIoP,OAAQ,QAASzf,KAAM,SAC9D,CAAC/B,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIoP,OAAQ,QAASzf,KAAM,SA4ElE6uB,GAAezgB,aAAe,CAC5BR,UAAW,GACXqO,OAAO,EACPC,QAAQ,GAGK2S,aC/GArD,qFCFT0D,8MAoBJnT,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,2EAGA,IAAAvQ,EACqEnL,KAAKgL,MAA1EoS,EADAjS,EACAiS,SAAUzB,EADVxQ,EACUwQ,MAAOC,EADjBzQ,EACiByQ,OAAQxK,EADzBjG,EACyBiG,OAAQ9R,EADjC6L,EACiC7L,mBAAoBmmB,EADrDta,EACqDsa,aAE5D,OACEjZ,EAAAC,EAAAtP,cAACkuB,GAAD,CACE1P,MAAOA,EACPC,OAAQA,EACRzN,eAAgBnO,KAAK0G,YAAYmoB,QAAQzd,GACzCoK,UAAU,EACVC,gBAAiBzb,KAAKyb,gBACtBC,eAAgB1b,KAAK0b,eACrBrd,SAAUiB,EACVmmB,aAAcA,EACdrI,SAAUA,WAzCcvP,aAA1B+gB,GACGC,8BACJ3gB,EAAKuB,SAAW,CACf,CACEM,EAAG,EACH9R,MAAO,CACL,CAAC+R,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,aAAcd,MAAO,sBAI3EtD,EAAK0D,SAAW,CACf,CACE7B,EAAG,EACH9R,MAAO,CACL,CAAC+R,EAAG,EAAGD,EAAG,EAAGqB,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,aAAcd,MAAO,WA0ChFod,GAAkB9gB,aAAe,CAC/B6N,OAAO,EACPC,QAAQ,GAGKgT,uCC/DTE,8MAWJlK,MAAQ,CACNnjB,UAAWwC,EAAOxC,UAClB6F,UAAWrD,EAAOqD,UAClBxF,aAAcmC,EAAOnC,aACrBG,KAAMgC,EAAOhC,KACbC,SAAU+B,EAAOhC,KAAOgC,EAAOhC,KAAKnE,KAAO,KAC3C6E,UAAWsB,EAAOtB,UAClBe,UAAWO,EAAOP,UAClBU,gBAAiBH,EAAOG,gBACxBtB,eAAgBmB,EAAOnB,kBAyBzBisB,kBAAoB,SAAAttB,GAClB1B,EAAK6rB,SAAS,CAACnqB,YAAWK,aAAcmC,EAAOnC,aAAcwF,UAAWrD,EAAOqD,eAGjFtF,QAAU,SAAAC,GACRlC,EAAK6rB,SAAS,CAAC3pB,YAGjBS,SAAW,SAAAC,GACT5C,EAAK6rB,SAAS,CAACjpB,iBAGjBY,SAAW,SAAAG,GACT3D,EAAK6rB,SAAS,CAACloB,iBAGjBQ,eAAiB,SAAAE,GACfrE,EAAK6rB,SAAS,CAACxnB,uBAGjBvB,cAAgB,SAAAC,GACd/C,EAAK6rB,SAAS,CAAC9oB,uGA1CfmB,EAAO+qB,UAAU,CACfttB,UAAW1B,KAAK+uB,kBAChBhtB,aAAc/B,KAAK+uB,kBACnBtsB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACde,cAAetE,KAAKkE,eACpBmB,aAAcrF,KAAK6C,+DAKrBoB,EAAOgrB,YAAY,CACjBxsB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACde,cAAetE,KAAKkE,eACpBmB,aAAcrF,KAAK6C,iDA4Bd,IAAAijB,EACmG9lB,KAAK4kB,MAAxGnjB,EADAqkB,EACArkB,UAAWK,EADXgkB,EACWhkB,aAAcwF,EADzBwe,EACyBxe,UAAWrF,EADpC6jB,EACoC7jB,KAAMU,EAD1CmjB,EAC0CnjB,UAAWe,EADrDoiB,EACqDpiB,UAAWU,EADhE0hB,EACgE1hB,gBAAiBtB,EADjFgjB,EACiFhjB,eAClFosB,EAAelvB,KAAK0G,YAAYwoB,aACtC,OACE1iB,EAAAC,EAAAtP,cAAC+xB,EAADjvB,OAAA2M,OAAA,GACM5M,KAAKgL,MADX,CAEEvJ,UAAWA,EACXK,aAAcA,EACdwF,UAAWA,EACXrD,OAAQA,EACRhC,KAAMA,EACNU,UAAWA,EACXe,UAAWA,EACXU,gBAAiBA,EACjBtB,eAAgBA,4CAhFF+K,GAAW,IACvBshB,EADuB,SAAA1oB,GAAA,SAAA0oB,IAAA,OAAAlvB,OAAAC,EAAA,EAAAD,CAAAD,KAAAmvB,GAAAlvB,OAAAyf,EAAA,EAAAzf,CAAAD,KAAAC,OAAA0f,EAAA,EAAA1f,CAAAkvB,GAAApd,MAAA/R,KAAAxB,YAAA,OAAAyB,OAAA2f,EAAA,EAAA3f,CAAAkvB,EAAA1oB,GAAA0oB,EAAA,CACWnvB,MAIxC,OAJMmvB,EACGD,aAAerhB,EAGjBshB,SARiBthB,aAAtBihB,GACGI,aAAe,KAwFjB,IAAME,GAAa,SAAAvhB,GACxB,OAAOihB,GAAcO,aAAaxhB,yBCvF9ByhB,8MACJpJ,IAAMjB,IAAMC,+FAGVllB,KAAKuvB,kDAIDvvB,KAAKkmB,IAAIX,SACXiK,KAAUtW,OAAOlZ,KAAKkmB,IAAIX,oDAIXJ,GACbA,EAAUsK,OAASzvB,KAAKgL,OAC1BhL,KAAKuvB,8CAIA,IAAAG,EAAAvkB,EACkCnL,KAAKgL,MAAvCykB,EADAtkB,EACAskB,KAAME,EADNxkB,EACMwkB,QAAStD,EADflhB,EACekhB,KAAMuD,EADrBzkB,EACqBykB,UAC5B,OACEpjB,EAAAC,EAAAtP,cAAA,OACE+oB,IAAKlmB,KAAKkmB,IACV5Y,UAAW0O,IAAW,CAAC,KAAM,OAAQ,QAAS,UAAW,UAApC0T,EAAA,CAA+CC,UAAWA,GAA1D1vB,OAAAqU,EAAA,EAAArU,CAAAyvB,EAAoEC,IAAYA,GAAhF1vB,OAAAqU,EAAA,EAAArU,CAAAyvB,EAA0FrD,IAASA,GAAnGpsB,OAAAqU,EAAA,EAAArU,CAAAyvB,EAAyG,aAAcE,GAAvHF,IACrBG,uBAAsBJ,WAzBL5hB,aAsCzByhB,GAAWxhB,aAAe,CACxB8hB,WAAW,GAGEN,UCrCFQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAjwB,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA8vB,GAAA,QAAAjX,EAAAra,UAAAC,OAAAwxB,EAAA,IAAAlX,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiX,EAAAjX,GAAAxa,UAAAwa,GAAA,OAAAjZ,EAAAE,OAAAyf,EAAA,EAAAzf,CAAAD,MAAAgwB,EAAA/vB,OAAA0f,EAAA,EAAA1f,CAAA6vB,IAAAI,KAAAne,MAAAie,EAAA,CAAAhwB,MAAAL,OAAAswB,MACEE,eAAiB,WACfpwB,EAAKiL,MAAMmlB,eAAepwB,EAAKiL,MAAMlH,OAFzC/D,EAAA,OAAAE,OAAA2f,EAAA,EAAA3f,CAAA6vB,EAAAC,GAAA9vB,OAAA4f,EAAA,EAAA5f,CAAA6vB,EAAA,EAAAjjB,IAAA,SAAAvP,MAAA,WAKW,IAAA6N,EAC0FnL,KAAKgL,MAA/F/I,EADAkJ,EACAlJ,KAAM3C,EADN6L,EACM7L,mBAAoB8wB,EAD1BjlB,EAC0BilB,UAAWC,EADrCllB,EACqCklB,gBAAiBvsB,EADtDqH,EACsDrH,KAAMwsB,EAD5DnlB,EAC4DmlB,MAAOvnB,EADnEoC,EACmEpC,KAAMwnB,EADzEplB,EACyEolB,cAE1E9mB,EAAa4mB,EAAgBvsB,EAAK0sB,cAElCC,EAAWviB,EAAKgN,QAAQwV,YAAY5sB,EAAKA,MACzC6sB,EAAUP,EAAUtsB,EAAKoF,QAAQ,IACjC0nB,EAAUR,EAAUtsB,EAAKoF,QAAQ,IACjC2nB,EAAiBJ,EAASphB,aAAenB,EAAKuB,SAAWkhB,EAAUC,EACnEE,EAAgBD,IAAmBF,EACnCI,EAAgBF,IAAmBD,EACnCI,IAAgB/uB,GAAO0uB,EAAQ5vB,KAAOkB,EAAKlB,GAC3CkwB,IAAgBhvB,GAAO2uB,EAAQ7vB,KAAOkB,EAAKlB,GAC3CmwB,EAAaptB,EAAKkF,SAAYlF,EAAK0M,SAAWtC,EAAKuB,SAAWkhB,EAAUC,EAAW,KACnFO,EAAWH,GAAiBC,EAC5BG,EAAYJ,GAAiBF,GAAmBG,GAAiBF,EACjEM,GAAef,IAAUa,GAAYF,EACrCK,GAAehB,IAAUa,GAAYH,EAE3C,OACExkB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAD,CACEzkB,GAAIC,IACJf,GAAE,SAAArM,OAAWmE,EAAK/C,IAClB8b,QAAS7c,KAAKmwB,eACdrS,MAAK7d,OAAAsM,EAAA,EAAAtM,CAAA,GACEqwB,EAAa,CAAC/M,MAAO,QAAb,GACTzf,EAAK/C,KAAOwvB,EAAgB,CAACiB,gBAAiB,cAAgB,IAEpElkB,UAAW0O,IAAW,CAACyV,UAAW1oB,GAAQqoB,KAE1C5kB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKG,QAAN,KACIpB,EAOE,KANF9jB,EAAAC,EAAAtP,cAACw0B,GAAD,CACErkB,UAAW,8BACXxJ,KAAM2sB,EACN9U,OAAK,EACLtd,SAAUiB,IAGdkN,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKK,OAAN,KACKP,GAAeC,EAAwB,KAAT,OAChCD,EACC7kB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAOZ,IAAeP,GAAWS,EAAW,aAAU1yB,GAC1DwyB,IAAeP,EAAUnkB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,WAAc,KACnDgzB,EAAgBtkB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,gBAAmB,KAC/C6yB,EAAQ7yB,KACT0O,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,QAAStD,KAAM,OAAQuD,WAAS,EAACH,KAAMkB,EAAQ5vB,MAEpE,KACHswB,GAAeC,EAAc,OAAS,KACtCA,EACC9kB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAOZ,IAAeN,GAAWQ,EAAW,aAAU1yB,GAC1DwyB,IAAeN,EAAUpkB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,WAAc,KACnDizB,EAAgBvkB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,cAAeg0B,MAAO,UAAa,KAC/DlB,EAAQ9yB,KACT0O,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,QAAStD,KAAM,OAAQuD,WAAS,EAACH,KAAMmB,EAAQ7vB,MAEpE,MAEJuvB,EAaA7mB,EAAa+C,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,YAAgB,KAZ1CR,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKU,KAAN,KACGd,EAAW3kB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,OAAQg0B,MAAO,SAAUxlB,QAAS,YAAgB,KACjF,IACCxI,EAAKkF,SAAgF,KAArEwD,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,SAAUg0B,MAAO,SAAUxlB,QAAS,SACzE,IACDE,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAO,QAAA3M,OAAUmE,EAAKiP,MAAQ/F,KAAM,SAC1C,IACDR,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAS1O,IAAOkG,EAAKouB,aAAepuB,EAAKquB,eAAex0B,OAAQqP,KAAM,aAC5E,IACAvD,EAAa+C,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAS7C,EAAW3L,KAAMkP,KAAM,YAAgB,YA1EnF8iB,EAAA,CAA8BjiB,aAiG9BiiB,GAAShiB,aAAe,CACtBwiB,OAAO,EACPvnB,MAAM,OAGFqpB,8MACJxN,MAAQ,CACNyN,WAAY,KAGdC,aAAe,SAACxsB,EAAD8F,GAAqB,IAAhBymB,EAAgBzmB,EAAhBymB,WAClB5rB,EAAKmlB,SAAS,CAACyG,wFAGR,IAAAnlB,EAC8HlN,KAAKgL,MAAnI1L,EADA4N,EACA5N,mBAAoB2C,EADpBiL,EACoBjL,KAAMmuB,EAD1BljB,EAC0BkjB,UAAWC,EADrCnjB,EACqCmjB,gBAAiB7sB,EADtD0J,EACsD1J,MAAO8sB,EAD7DpjB,EAC6DojB,MAAOvnB,EADpEmE,EACoEnE,KAAMonB,EAD1EjjB,EAC0EijB,eAAgBI,EAD1FrjB,EAC0FqjB,cAAegC,EADzGrlB,EACyGqlB,SAAUxO,EADnH7W,EACmH6W,QAC1H,IAAK9jB,OAAO2iB,OAAOwN,GAAW3xB,OAC5B,OAAO,KAHF,IAKF4zB,EAAcryB,KAAK4kB,MAAnByN,WAECG,EAAa3gB,KAAK4gB,KAAKjvB,EAAM/E,OAAS8zB,GACxCF,EAAaG,IACfH,EAAaG,GAEf,IAAIE,EAAelvB,EAChB6E,OAAOmqB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GAKtF,OAJIxO,IACF2O,EAAeA,EAAa3O,WAI5BvX,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKoB,MAAN,CAAY7U,MAAO,CAAC8U,UAAW,QAASC,UAAW,OAAQC,SAAWxC,EAAoB,aAAZ5xB,IAC3Eg0B,EAAa/wB,IAAI,SAAAmC,GAAI,OACpB0I,EAAAC,EAAAtP,cAAC41B,GAAD,CACElmB,IAAK/I,EAAK/C,GACVkB,KAAMA,EACNmuB,UAAWA,EACXC,gBAAiBA,EACjBvsB,KAAMA,EACNqsB,eAAgBA,EAChBG,MAAOA,EACPvnB,KAAMA,EACNwnB,cAAeA,EACfjxB,mBAAoBA,OAIzBkzB,EAAa,EACZhmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACg2B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAActyB,KAAKsyB,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAxDWxlB,aA4EvBukB,GAAStkB,aAAe,CACtBwiB,OAAO,EACPvnB,MAAM,EACNwpB,SAAU,GACVxO,SAAS,GAGIqO,oBC3HAhD,iNAlEbxK,MAAQ,CACN9mB,KAAM,GACNw1B,UAAW,OAGbC,iBAAmB,WAAM,IAChBtvB,EAAUlE,EAAKiL,MAAf/G,OADgB6hB,EAEG/lB,EAAK6kB,MAAxB9mB,EAFgBgoB,EAEhBhoB,KAAMw1B,EAFUxN,EAEVwN,UACbrvB,EAAOsvB,iBAAiB,CAACz1B,OAAMw1B,UAAWhZ,SAASgZ,EAAW,SAGhEE,QAAU,WACRzzB,EAAK6rB,SAAS,CAAC9tB,KAAM,GAAIw1B,UAAW,OAGtCG,SAAW,SAAC3tB,EAAD8F,GAAsB,IAAjB9N,EAAiB8N,EAAjB9N,KAAMR,EAAWsO,EAAXtO,MACpByC,EAAK6rB,SAAL3rB,OAAAqU,EAAA,EAAArU,CAAA,GAAgBnC,EAAOR,6EAIvB,OACEkP,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACErH,KAAM,OACNsH,QAASnnB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQ9B,MAAO,SAAU9kB,KAAM,UAAWV,QAAS,sBAC5DunB,OAAQ,oBACRvnB,QACEE,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAD,KACEvnB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEl2B,KAAM,OACNm2B,QAASC,KACTC,MAAO,OACPC,YAAa,kBACbvI,SAAU7rB,KAAKyzB,SACfY,UAAQ,EACRC,aAAct0B,KAAK4kB,MAAM9mB,OAE3B0O,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEl2B,KAAM,YACNm2B,QAASC,KACTC,MAAK,GAAAx0B,OAAKK,KAAK4kB,MAAM0O,UAAhB,yCACLc,YAAa,0CACbvI,SAAU7rB,KAAKyzB,SACf/zB,KAAM,QACN60B,IAAK,EACLziB,IAAK,EACLwiB,aAAct0B,KAAK4kB,MAAM0O,UACzBe,UAAQ,MAKhBG,QAAS,CACP,CAAC3nB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,SAAU4nB,UAAU,EAAMnoB,QAAS,oBAAqBuQ,QAAS7c,KAAKuzB,iBAAkBhH,UAAWvsB,KAAK4kB,MAAM9mB,OAEtH01B,QAASxzB,KAAKwzB,iBAzDS3lB,cCAzB6mB,8MACJC,qBAAuB,WACrB50B,EAAKiL,MAAM2pB,qBAAqB50B,EAAKiL,MAAMvB,qFAGpC,IAAA0B,EAC2DnL,KAAKgL,MAAhE/I,EADAkJ,EACAlJ,KAAMmuB,EADNjlB,EACMilB,UAAWwE,EADjBzpB,EACiBypB,oBAAqBnrB,EADtC0B,EACsC1B,WAAY6mB,EADlDnlB,EACkDmlB,MAEnDuE,IAAiB5yB,GAAOwH,EAAWP,QAAQR,SAASzG,EAAKlB,IACzD+zB,IAAiB7yB,GAAOwH,EAAWsrB,gBAAkB9yB,EAAKlB,GAC1Di0B,IAAavrB,EAAWT,UAAWS,EAAWwrB,eAAiBhzB,EAAKlB,GACpEm0B,EAAU9E,EAAU3mB,EAAWsrB,eAE/BI,EACJ3oB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACEvlB,QAAS7C,EAAWG,QAAWH,EAAWT,SAAW,WAAtB,SAAArJ,OAA4C8J,EAAW2rB,MAAvD,KAAAz1B,OAAgE8J,EAAW4rB,QAAY,UACtHroB,KAAM,CACJlP,KAAM2L,EAAWG,QAAWH,EAAWT,SAAW,SAAW,OAAU,YACvEmW,OAAQ1V,EAAWG,QAAU,aAAUlL,KAK7C,OACE8N,EAAAC,EAAAtP,cAACo0B,GAAA,EAAD,CACEzkB,GAAIC,IACJf,GAAE,eAAArM,OAAiB8J,EAAW1I,IAE9B+c,MAAK7d,OAAAsM,EAAA,EAAAtM,CAAA,GACEqwB,EAAa,CAAC/M,MAAO,QAAb,GACT9Z,EAAW1I,KAAO6zB,EAAsB,CAACpD,gBAAiB,cAAgB,KAGhFhlB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKG,QAAN,KACEllB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKK,OAAN,KACEplB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAS7C,EAAW3L,OAD7B,MAEE0O,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAOgD,EAAiB,aAAUp2B,EAAW4N,QAAS4oB,EAAQp3B,OACpEwyB,EAAQ6E,EAAc,MAEvB7E,EAkBE,KAjBF9jB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKU,KAAN,KACG4C,EAAiBroB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,OAAQg0B,MAAO,SAAUxlB,QAAS,kBAAsB,KAC7F,IACA0oB,EAAaxoB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,SAAUg0B,MAAO,UAAWxlB,QAAS,QACrE7C,EAAWT,SACTwD,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,SAAUV,QAAS8jB,EAAU3mB,EAAWwrB,cAAgB7E,EAAU3mB,EAAWwrB,cAAcn3B,KAAO2L,EAAWwrB,eACxH,KAEL,IACAxrB,EAAWG,UAAYH,EAAWT,SAAWwD,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,SAAUg0B,MAAO,SAAUxlB,QAAS,SAAa,KAClH,IACA6oB,EACA,IACD3oB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAO,GAAA3M,OAAK8J,EAAWP,QAAQzK,OAAxB,YAA0CuO,KAAM,UAC7D,IACDR,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAS1O,IAAO6L,EAAWyoB,aAAezoB,EAAW0oB,eAAiB1oB,EAAW6rB,iBAAiB33B,OAAQqP,KAAM,uBAvDxGa,aAyE7B6mB,GAAe5mB,aAAe,CAC5BwiB,OAAO,OAGHiF,8MACJ3Q,MAAQ,CACNyN,WAAY,KAGdC,aAAe,SAACxsB,EAAD8F,GAAqB,IAAhBymB,EAAgBzmB,EAAhBymB,WAClB5rB,EAAKmlB,SAAS,CAACyG,wFAGR,IAAAnlB,EAC4FlN,KAAKgL,MAAjG/I,EADAiL,EACAjL,KAAMmuB,EADNljB,EACMkjB,UAAWjsB,EADjB+I,EACiB/I,YAAamsB,EAD9BpjB,EAC8BojB,MAAOqE,EADrCznB,EACqCynB,qBAAsBC,EAD3D1nB,EAC2D0nB,oBAAqBrC,EADhFrlB,EACgFqlB,SACvF,IAAKtyB,OAAO2iB,OAAOwN,GAAW3xB,OAC5B,OAAO,KAHF,IAKF4zB,EAAcryB,KAAK4kB,MAAnByN,WAECG,EAAa3gB,KAAK4gB,KAAKtuB,EAAY1F,OAAS8zB,GAC9CF,EAAaG,IACfH,EAAaG,GAEf,IAAMgD,EAAqBrxB,EACxBkE,OAAOmqB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFxO,UAEH,OACEvX,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKoB,MAAN,CAAY7U,MAAO,CAAC8U,UAAW,QAASC,UAAW,OAAQC,SAAWxC,EAAoB,aAAZ5xB,IAC3E82B,EAAmB7zB,IAAI,SAAA8H,GAAU,OAChC+C,EAAAC,EAAAtP,cAACs4B,GAAD,CACE5oB,IAAKpD,EAAW1I,GAChBkB,KAAMA,EACNmuB,UAAWA,EACX3mB,WAAYA,EACZmrB,oBAAqBA,EACrBD,qBAAsBA,EACtBrE,MAAOA,OAIZkC,EAAa,EACZhmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACg2B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAActyB,KAAKsyB,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAnDiBxlB,aAmE7B0nB,GAAeznB,aAAe,CAC5BwiB,OAAO,EACPiC,SAAU,IAGGgD,UCjJFG,GAAb,SAAA3F,GAAA,SAAA2F,IAAA,IAAA1F,EAAAjwB,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA01B,GAAA,QAAA7c,EAAAra,UAAAC,OAAAwxB,EAAA,IAAAlX,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiX,EAAAjX,GAAAxa,UAAAwa,GAAA,OAAAjZ,EAAAE,OAAAyf,EAAA,EAAAzf,CAAAD,MAAAgwB,EAAA/vB,OAAA0f,EAAA,EAAA1f,CAAAy1B,IAAAxF,KAAAne,MAAAie,EAAA,CAAAhwB,MAAAL,OAAAswB,MACE0F,gBAAkB,WAChB51B,EAAKiL,MAAM2qB,gBAAgB51B,EAAKiL,MAAMxL,YAF1CO,EAAA,OAAAE,OAAA2f,EAAA,EAAA3f,CAAAy1B,EAAA3F,GAAA9vB,OAAA4f,EAAA,EAAA5f,CAAAy1B,EAAA,EAAA7oB,IAAA,SAAAvP,MAAA,WAgBW,IAAA6N,EACsEnL,KAAKgL,MAA3E/I,EADAkJ,EACAlJ,KAAM3C,EADN6L,EACM7L,mBAAoB8wB,EAD1BjlB,EAC0BilB,UAAW5wB,EADrC2L,EACqC3L,UAAWo2B,EADhDzqB,EACgDyqB,mBACjDC,EAAgB71B,KAAK61B,cAErBX,EAAU9E,EAAU5wB,EAAU6K,QACpC,OACEmC,EAAAC,EAAAtP,cAACo0B,GAAA,EAAD,CACEzkB,GAAIC,IACJf,GAAE,WAAArM,OAAaH,EAAUuB,IACzB8b,QAAS7c,KAAK21B,gBACd7X,MAAK7d,OAAAsM,EAAA,EAAAtM,CAAA,GACCT,EAAUuB,KAAO60B,EAAqB,CAACpE,gBAAiB,cAAgB,KAG9EhlB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKG,QAAN,KACEllB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKK,OAAN,KACG/qB,EAAwBrH,IAE3BgN,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKU,KAAN,KACEzlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACE7kB,KAAM,CACJlP,KAAM,CAACg4B,EAAG,gBAAiBC,EAAG,cAAeC,EAAG,iBAAiBx2B,EAAUwF,KAAKixB,YAChFnE,MAAO,CAACgE,EAAG,QAASC,EAAG,SAAUC,EAAG,OAAOx2B,EAAUwF,KAAKixB,aAE5D3pB,QAAO,GAAA3M,OAAKH,EAAUwF,KAAKixB,WAApB,KAAAt2B,OAAkCH,EAAUwF,KAAKkxB,eACxDC,MAAO,CAACL,EAAG,OAAQC,EAAG,SAAUC,EAAG,QAAQx2B,EAAUwF,KAAKixB,cAE5DzpB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,OAAQV,QAAO,MAAA3M,OAAQu1B,EAAQp3B,QAC3C+3B,GAAiBA,EAAc7wB,KAAK4E,UAAYisB,EAAc7wB,KAAK0F,IAClE8B,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,OAAQg0B,MAAO,SAAUxlB,QAAS,YACpD,KACHupB,GAAiBA,EAAc7wB,KAAK0F,IACnC8B,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,SAAUg0B,MAAO,SAAUxlB,QAAS,WACtD,KACHupB,GAAiBA,EAAc7wB,KAAKoxB,SACnC5pB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,CAAClP,KAAM,cAAeg0B,MAAO,OAAQxlB,QAAO,GAAA3M,OAAKk2B,EAAc7wB,KAAKoxB,SAAxB,eACvD,KACHn0B,GAAQzC,EAAU62B,cACjB7pB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACE7kB,KACExN,EAAUwF,KAAKsF,QAAU9K,EAAUwF,KAAKC,gBAAgBnG,iBACpD,CAAChB,KAAM,QAASg0B,MAAO,SACvBtyB,EAAUwF,KAAKsF,OACX,CAACxM,KAAM,QAASg0B,MAAO,UAAY,CAACh0B,KAAM,IAAKg0B,MAAO,OAEhExlB,QACE9M,EAAUwF,KAAKsF,QAAU9K,EAAUwF,KAAKC,gBAAgBnG,iBACpDU,EAAUwF,KAAKC,gBAAgBqxB,UAC/B92B,EAAUwF,KAAKsF,OACX9K,EAAUwF,KAAKC,gBAAgBsxB,QAAU,YAIrD/pB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACE7kB,KAAM,WACNV,QAAS9M,EAAUwF,KAAKC,gBAAgBqxB,YAG5C9pB,EAAAC,EAAAtP,cAACw0B,GAAD,CACE7tB,KAAMoK,EAAKgN,QAAQzH,+BAA+BjU,EAAUg3B,iBAAiBnM,UAC7EzO,QAAM,EACNvd,SAAUiB,SA7ExB,CAAAuN,IAAA,gBAAA4pB,IAAA,WAKsB,IAAAvpB,EACQlN,KAAKgL,MAAxB/I,EADWiL,EACXjL,KAAMzC,EADK0N,EACL1N,UACb,OAAKyC,GAGAzC,GAGEyC,EAAKc,WAAWvD,EAAUuB,KALxB,SARb20B,EAAA,CAAmC7nB,aA+F7B6oB,8MACJ9R,MAAQ,CACNyN,WAAY,KAGdC,aAAe,SAACxsB,EAAD8F,GAAqB,IAAhBymB,EAAgBzmB,EAAhBymB,WAClB5rB,EAAKmlB,SAAS,CAACyG,wFAGR,IAAAnS,EACyGlgB,KAAKgL,MAA9G/G,EADAic,EACAjc,OAAQhC,EADRie,EACQje,KAAwBmuB,EADhClQ,EACcvd,UAAY4F,KAAkBxF,EAD5Cmd,EAC4Cnd,WAAY4yB,EADxDzV,EACwDyV,gBAAiBC,EADzE1V,EACyE0V,mBAAoBrD,EAD7FrS,EAC6FqS,SACpG,IAAKtyB,OAAO2iB,OAAOwN,GAAW3xB,OAC5B,OAAO,KAHF,IAKF4zB,EAAcryB,KAAK4kB,MAAnByN,WAECG,EAAa3gB,KAAK4gB,KAAK1vB,EAAWtE,OAAS8zB,GAC7CF,EAAaG,IACfH,EAAaG,GAEf,IAAMmE,EAAoB5zB,EACvBsF,OAAOmqB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFxO,UAEH,OACEvX,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKoB,MAAN,CAAY7U,MAAO,CAAC8U,UAAW,QAASC,UAAW,SAChD8D,EAAkBh1B,IAAI,SAAAnC,GAAS,OAC9BgN,EAAAC,EAAAtP,cAACy5B,GAAD,CACE/pB,IAAKrN,EAAUuB,GACfkB,KAAMA,EACNmuB,UAAWA,EACX5wB,UAAWA,EACXm2B,gBAAiBA,EACjBC,mBAAoBA,EACpBt2B,mBAAoB2E,EAAO3E,wBAIhCkzB,EAAa,EACZhmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACg2B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAActyB,KAAKsyB,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAnDgBxlB,aAkE5B6oB,GAAc5oB,aAAe,CAC3BykB,SAAU,IAGGnD,UAAWsH,ICnKpBG,oLACK,IAAA1rB,EAC6EnL,KAAKgL,MAAlF/G,EADAkH,EACAlH,OAAQhC,EADRkJ,EACQlJ,KAAMW,EADduI,EACcvI,MAAOiG,EADrBsC,EACqBtC,eAAgBiuB,EADrC3rB,EACqC2rB,iBAAkBC,EADvD5rB,EACuD4rB,mBAC9D,OACEvqB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKoB,MAAN,CAAY7U,MAAO,CAAC8U,UAAW,QAASC,UAAW,SAChDjwB,EAAMjB,IAAI,SAAAq1B,GAAS,OAClBxqB,EAAAC,EAAAtP,cAAC85B,GAAD,CACEpqB,IAAKmqB,EAAUj2B,GACfkD,OAAQA,EACRhC,KAAMA,EACN+0B,UAAWA,EACXnuB,eAAgBA,EAChBiuB,iBAAkBA,EAClBC,mBAAoBA,cAbTlpB,aA8BjBqpB,8MACJC,kBAAoB,WAClBp3B,EAAKiL,MAAM/G,OAAOkzB,mBAAmBp3B,EAAKiL,MAAM/I,KAAK+F,gBAGvDovB,cAAgB,WACdr3B,EAAKiL,MAAM/G,OAAOkzB,kBAAkBp3B,EAAKiL,MAAM/I,KAAK+F,cAAgBjI,EAAKiL,MAAMgsB,UAAUj2B,IAAahB,EAAKiL,MAAMgsB,UAAUj2B,6EAGpH,IASHs2B,EAAkBC,EAAqBC,EAAgBC,EAAmBC,EATvEvqB,EAIHlN,KAAKgL,MAFP/G,EAFKiJ,EAELjJ,OAAQhC,EAFHiL,EAEGjL,KAAM+0B,EAFT9pB,EAES8pB,UAFTU,EAAAxqB,EAGLvK,UAAYkG,EAHP6uB,EAGO7uB,eAA8BiuB,EAHrCY,EAGuB1vB,YAAgD+uB,EAHvEW,EAGuD9uB,cAE9D,OAAK3E,GAAWhC,GAAS+0B,EAAUvuB,QAK/BxG,EAAKlB,KAAOi2B,EAAUj2B,IACxBy2B,EAAoBx3B,KAAKm3B,kBACrBl1B,EAAK+F,aACPqvB,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAM75B,KAAM,gBAErC25B,EADE5uB,EACa,eAAAlJ,OAAkBkJ,EAAe/K,KAAjC,OAEG,4BAGpBu5B,EAAmB,SACnBE,EAAiB,CAACz5B,KAAM,QACpBi5B,GAAsBA,EAAmBt4B,OACT,IAA9Bs4B,EAAmBt4B,QACrBg5B,EAAe,GAAA93B,OAAMo3B,EAAmB,GAAGj5B,KAA5B,uBACfw5B,GAAsB,IAEtBG,EAAe,GAAA93B,OAAMo3B,EAAmBt4B,OAAzB,8BACf64B,GAAsB,GAItBG,EAFOX,GAAoBA,EAAiBr4B,OACd,IAA5Bq4B,EAAiBr4B,OACJ,QAAAkB,OAAWm3B,EAAiB,GAAGh5B,MAE/B,GAAA6B,OAAMm3B,EAAiBr4B,OAAvB,wBAGC,UAItB+4B,EAAoBx3B,KAAKo3B,cACrBvuB,GAAkBA,EAAe9H,KAAOi2B,EAAUj2B,IACpDs2B,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAM75B,KAAM,gBACvC25B,EAAe,eAAA93B,OAAkBq3B,EAAUl5B,KAA5B,SAEfu5B,EAAmB,SACnBE,EAAiB,CAACz5B,KAAM,QACpBk5B,EAAUhvB,cAAgB/F,EAAKlB,IACjC02B,EAAe,GAAA93B,OAAMq3B,EAAUl5B,KAAhB,uBACfw5B,GAAsB,GAEtBG,GADmC,IAA1BT,EAAUhvB,YACJ,GAAArI,OAAMq3B,EAAUl5B,KAAhB,qBAEA,aAAA6B,OAAgBq3B,EAAUl5B,QAM7C0O,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtmB,UAAW0O,IAAW,CAACyV,UAAW6F,IAClCxF,MAAOuF,EACPxa,QAAS2a,GAEThrB,EAAAC,EAAAtP,cAAC40B,GAAA,EAASwF,GACTE,IA9DI,YAfqB5pB,aA0FlCqpB,GAAsB9H,GAAW8H,iBAE3BU,oLACK,IAAA1X,EAC2BlgB,KAAKgL,MAAhC/G,EADAic,EACAjc,OAAQhC,EADRie,EACQje,KAAM+0B,EADd9W,EACc8W,UAErB,OACExqB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAD,KACE/kB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKG,QAAN,KACEllB,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,QAAStD,KAAM,OAAQoD,KAAMuH,EAAUj2B,KAC5DyL,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKK,OAAN,KACGoF,EAAUl5B,KACV,IACAmG,GAAUhC,GAAQA,EAAKlB,KAAOi2B,EAAUj2B,GACvCyL,EAAAC,EAAAtP,cAAC06B,GAAD,CAAU5zB,OAAQA,EAAQhC,KAAMA,EAAM0xB,QAASnnB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WACpF,MAENE,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKU,KAAN,KACGhwB,GAAQ+0B,EAAUj2B,KAAOkB,EAAKlB,GAAKyL,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,KAAOrlB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,OAAQg0B,MAAO,UAAlC,MAA0D,KAC7F,IACA7vB,GAAQ+0B,EAAUj2B,KAAOkB,EAAKlB,GAAKyL,EAAAC,EAAAtP,cAAC06B,GAAD,CAAU5zB,OAAQA,EAAQhC,KAAMA,EAAM0xB,QAASnnB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,KAAKN,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,OAAQg0B,MAAO7vB,EAAK61B,YAAc,QAAU,QAAU71B,EAAK61B,YAAc,GAAK,iBAA6B,KACzN,IACAd,EAAUhvB,YAAcwE,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,KAAOrlB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAM4F,SAAO,EAAC75B,KAAM,eAAgBg0B,MAAO,UAAlD,SAA6E,KACrG,IACAkF,EAAUvuB,OAAS+D,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,KAAOrlB,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,SAAUg0B,MAAO,UAApC,UAAgE,KACnF,IACDtlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACEsE,MAAK,GAAAx2B,OAAKq3B,EAAU/zB,wBAA0B,iBAAmB,GAA5D,QAAAtD,OAAqEq3B,EAAUe,SAA/E,YAAAp4B,OAAkGq3B,EAAU1D,WACjHxB,MAAO,CAACgE,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASgB,EAAU5zB,OAEtDoJ,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CACEj0B,KAAMk5B,EAAU/zB,wBAA0B,WAAa,eACvD6uB,MAAOkF,EAAU/zB,wBAA0B,cAAWvE,IAEvD,IAAKs4B,EAAUgB,OAEjB,IACDxrB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO7kB,KAAM,SAAUV,QAAO,IAAA3M,OAAMq3B,EAAUe,SAAhB,KAAAp4B,OAA4Bq3B,EAAU1D,aACnE,IACA0D,EAAUiB,mBACTzrB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACE7kB,KAAM,CAAClP,KAAM,UAAWg0B,MAAO,UAC/BxlB,QAAS0qB,EAAUiB,mBACnB9B,MAAK,OAAAx2B,OAASq3B,EAAUiB,mBAAnB,KAAAt4B,OAAyCq3B,EAAUkB,gBAAnD,0BAEH,KACLj4B,OAAO2iB,OAAOoU,EAAUj0B,YAAc,IAAItE,OACzC+N,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CACE7kB,KAAM,SACNV,QAAO,GAAA3M,OAAKM,OAAO2iB,OAAOoU,EAAUj0B,YAAYgB,OAAO,SAAA8xB,GAAa,OAAIA,EAAc7wB,KAAK0F,MAAQmrB,EAAc7wB,KAAKoxB,WAAU33B,OAAzH,KAAAkB,OAAmIM,OAAO2iB,OAAOoU,EAAUj0B,YAAYgB,OAAO,SAAA8xB,GAAa,OAAIA,EAAc7wB,KAAK0F,MAAKjM,OAAvN,KAAAkB,OAAiOM,OAAO2iB,OAAOoU,EAAUj0B,YAAYtE,QAC5Q03B,MAAK,GAAAx2B,OAAKM,OAAO2iB,OAAOoU,EAAUj0B,YAAYgB,OAAO,SAAA8xB,GAAa,OAAIA,EAAc7wB,KAAK0F,MAAQmrB,EAAc7wB,KAAKoxB,WAAU33B,OAAzH,6BAAAkB,OAA2JM,OAAO2iB,OAAOoU,EAAUj0B,YAAYgB,OAAO,SAAA8xB,GAAa,OAAIA,EAAc7wB,KAAK0F,MAAKjM,OAA/O,oBAAAkB,OAAwQM,OAAO2iB,OAAOoU,EAAUj0B,YAAYtE,OAA5S,gBAEL,OAGPwF,GAAUhC,GAAQ+0B,EAAUvuB,OAAS+D,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKG,QAAN,CAAcyG,OAAK,GACvD3rB,EAAAC,EAAAtP,cAAA,OAAKmQ,UAAU,kBACbd,EAAAC,EAAAtP,cAACi7B,GAAD,CAAqBpB,UAAWA,MAElB,aAzDHnpB,aAyEjBwqB,8MACJzT,MAAQ,CACN3iB,KAAMwE,EAAKuE,MAAM/I,KACjBC,SAAUuE,EAAKuE,MAAM/I,KAAKnE,KAC1B4H,SAAU,MAcZ4yB,eAAiB,SAAA1sB,GAAuB,IAAZtO,EAAYsO,EAArB2sB,OAASj7B,MAC1BmJ,EAAKmlB,SAAS,CAAC1pB,SAAU5E,OAG3Bk7B,eAAiB,SAAAxjB,GAAuB,IAAZ1X,EAAY0X,EAArBujB,OAASj7B,MAC1BmJ,EAAKmlB,SAAS,CAAClmB,SAAUpI,OAG3Bm7B,eAAiB,WACfhyB,EAAKuE,MAAM/G,OAAOq0B,eAAe7xB,EAAKme,MAAM1iB,aAG9Cw2B,eAAiB,WACfjyB,EAAKuE,MAAM/G,OAAOu0B,eAAe/xB,EAAKme,MAAMlf,UAC5Ce,EAAKmlB,SAAS,CAAClmB,SAAU,8EAGlB,IAAAogB,EACsB9lB,KAAK4kB,MAA3B1iB,EADA4jB,EACA5jB,SAAUwD,EADVogB,EACUpgB,SADV8b,EAEiBxhB,KAAKgL,MAAtB/I,EAFAuf,EAEAvf,KAAM0xB,EAFNnS,EAEMmS,QAEb,OACEnnB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEC,QAASA,EACTtH,KAAM,QACNwH,OAAQ,YACRvnB,QACEE,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC+2B,GAAA,EAAD,CAAOC,MAAO,OAAQ72B,MAAO4E,EAAU2pB,SAAU7rB,KAAKs4B,eAAgBK,OAAQ,CAACrsB,QAAS,SAAUuQ,QAAS7c,KAAKy4B,kBAChHjsB,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAAC+2B,GAAA,EAAD,CAAOC,MAAO,CAAC7nB,QAASrK,EAAK61B,YAAc,kBAAoB,iBAAkBhG,MAAO7vB,EAAK61B,YAAc,QAAU,OAAQx6B,MAAOoI,EAAUmmB,SAAU7rB,KAAKw4B,eAAgBG,OAAQ,CAACrsB,QAAS,SAAUwlB,MAAO7vB,EAAK61B,iBAAcp5B,EAAY,QAASme,QAAS7c,KAAK04B,mBAG1QlE,QAAS,CACP,CAAC3nB,IAAK,SAAU+rB,UAAU,EAAMtsB,QAAS,gEA7CjBtB,EAAO4Z,GACrC,OAAI5Z,EAAM/I,OAAS2iB,EAAM3iB,KAChB,CACLA,KAAM+I,EAAM/I,KACZC,SAAU8I,EAAM/I,KAAO+I,EAAM/I,KAAKnE,KAAO,MAItC,YAfY+P,aAiEVgrB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA7wB,EAAAjI,OAAAC,EAAA,EAAAD,CAAAD,KAAA64B,GAAA,QAAAG,EAAAx6B,UAAAC,OAAAwxB,EAAA,IAAAlX,MAAAigB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAhJ,EAAAgJ,GAAAz6B,UAAAy6B,GAAA,OAAA/wB,EAAAjI,OAAAyf,EAAA,EAAAzf,CAAAD,MAAA+4B,EAAA94B,OAAA0f,EAAA,EAAA1f,CAAA44B,IAAA3I,KAAAne,MAAAgnB,EAAA,CAAA/4B,MAAAL,OAAAswB,MACErL,MAAQ,CACN1iB,SAAU,GACVwD,SAAU,GACVqC,YAAY,GAJhBG,EAOEowB,eAAiB,SAAAxsB,GAAuB,IAAZxO,EAAYwO,EAArBysB,OAASj7B,MAC1B4K,EAAK0jB,SAAS,CAAC1pB,SAAU5E,KAR7B4K,EAWEswB,eAAiB,SAAAzsB,GAAuB,IAAZzO,EAAYyO,EAArBwsB,OAASj7B,MAC1B4K,EAAK0jB,SAAS,CAAClmB,SAAUpI,KAZ7B4K,EAeEgxB,iBAAmB,SAAApiB,GAAyB,IAAdqiB,EAAcriB,EAAvByhB,OAASY,QAC5BjxB,EAAK0jB,SAAS,CAAC7jB,WAAYoxB,KAhB/BjxB,EAmBEkxB,MAAQ,WACNlxB,EAAK8C,MAAM/G,OAAOm1B,MAAMlxB,EAAK0c,MAAM1iB,SAAUgG,EAAK0c,MAAMlf,SAAUwC,EAAKH,YACvEG,EAAK0jB,SAAS,CAAC1pB,SAAU,GAAIwD,SAAU,MArB3CwC,EAAA,OAAAjI,OAAA2f,EAAA,EAAA3f,CAAA44B,EAAAC,GAAA74B,OAAA4f,EAAA,EAAA5f,CAAA44B,EAAA,EAAAhsB,IAAA,SAAAvP,MAAA,WAwBW,IAAA+7B,EACkCr5B,KAAK4kB,MAAvC1iB,EADAm3B,EACAn3B,SAAUwD,EADV2zB,EACU3zB,SAAUqC,EADpBsxB,EACoBtxB,WAE3B,OACEyE,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACExN,IAAKlmB,KAAKs5B,MACV3F,QAASnnB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,IAAKE,KAAM,UAAWV,QAAS,SAAUitB,MAAO,SACpElN,KAAM,QACNwH,OAAQ,SACRvnB,QACEE,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC+2B,GAAA,EAAD,CAAOC,MAAO,OAAQ72B,MAAO4E,EAAU2pB,SAAU7rB,KAAKs4B,iBACtD9rB,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAAC+2B,GAAA,EAAD,CAAOC,MAAO,WAAY72B,MAAOoI,EAAUmmB,SAAU7rB,KAAKw4B,iBAC1DhsB,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,cACPgF,QAASpxB,EACT8jB,SAAU7rB,KAAKk5B,oBAIrB1E,QAAS,CACP,CAAC3nB,IAAK,SAAU+rB,UAAU,EAAMtsB,QAAS,UACzC,CAACO,IAAK,QAAS4nB,UAAU,EAAMnoB,QAAS,SAAUuQ,QAAS7c,KAAKo5B,cAhD1EP,EAAA,CAA2BhrB,aA2Dd4rB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA7wB,EAAA7I,OAAAC,EAAA,EAAAD,CAAAD,KAAAy5B,GAAA,QAAAG,EAAAp7B,UAAAC,OAAAwxB,EAAA,IAAAlX,MAAA6gB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA5J,EAAA4J,GAAAr7B,UAAAq7B,GAAA,OAAA/wB,EAAA7I,OAAAyf,EAAA,EAAAzf,CAAAD,MAAA25B,EAAA15B,OAAA0f,EAAA,EAAA1f,CAAAw5B,IAAAvJ,KAAAne,MAAA4nB,EAAA,CAAA35B,MAAAL,OAAAswB,MACE6J,OAAS,WACPhxB,EAAKkC,MAAM/G,OAAO61B,UAFtBhxB,EAAA,OAAA7I,OAAA2f,EAAA,EAAA3f,CAAAw5B,EAAAC,GAAAz5B,OAAA4f,EAAA,EAAA5f,CAAAw5B,EAAA,EAAA5sB,IAAA,SAAAvP,MAAA,WAMI,OACEkP,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,IAAKE,KAAM,UAAWV,QAAS,UAAWuQ,QAAS7c,KAAK85B,aAPzEL,EAAA,CAA4B5rB,aAwJbuhB,iNAvIb+H,kBAAoB,WAClBztB,EAAKsB,MAAM/G,OAAOkzB,mBAAmBztB,EAAKsB,MAAM/I,KAAK+F,sFAG9C,IAAAmC,EAAAnK,KAAA0qB,EAOH1qB,KAAKgL,MALP/G,EAFKymB,EAELzmB,OAAQhC,EAFHyoB,EAEGzoB,KAFH83B,EAAArP,EAGL/nB,UAAkBytB,EAHb2J,EAGOxxB,KAAiB3F,EAHxBm3B,EAGwBn3B,MAAO6F,EAH/BsxB,EAG+BtxB,OAAQE,EAHvCoxB,EAGuCpxB,QAASE,EAHhDkxB,EAGgDlxB,eAAgBb,EAHhE+xB,EAGgE/xB,YAAaY,EAH7EmxB,EAG6EnxB,cAH7EoxB,EAAAtP,EAILhnB,UAAYuF,EAJP+wB,EAIO/wB,OAAQE,EAJf6wB,EAIe7wB,UAAWC,EAJ1B4wB,EAI0B5wB,WAAYC,EAJtC2wB,EAIsC3wB,cAAgB8mB,EAJtDzF,EAIsDyF,eAAgBwE,EAJtEjK,EAIsEiK,qBAJtEsF,EAAAvP,EAKL5nB,eAAiB6H,EALZsvB,EAKYtvB,cAAe5H,EAL3Bk3B,EAK2Bl3B,WAAY6H,EALvCqvB,EAKuCrvB,aAAcC,EALrDovB,EAKqDpvB,gBAAiBJ,EALtEwvB,EAKsExvB,YAC3ErG,EANKsmB,EAMLtmB,gBAEWisB,EAAmBjsB,EAAzBmE,KAEP,OAAKtG,EAKHuK,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACo0B,GAAA,EAAKoB,MAAN,CAAYM,UAAQ,GACjBhxB,EACCuK,EAAAC,EAAAtP,cAAC85B,GAAD,CACEhzB,OAAQA,EACR+yB,UAAW/0B,EACXA,KAAMA,EACN4G,eAAgBA,EAChBiuB,iBAAkB9uB,EAClB+uB,mBAAoBnuB,IAEpB,KACH+B,EAAclM,OACb+N,EAAAC,EAAAtP,cAACy5B,GAAD,CACE30B,KAAMA,EACNmuB,UAAWA,EACX5wB,UAAWmL,EAAc,GACzBgrB,gBAAiB31B,KAAKgL,MAAMkvB,oBAC5BtE,mBAAoB,KACpBt2B,mBAAoB2E,EAAO3E,qBAE3B,MAENkN,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,UAAWsnB,MAAO,gBAAiB7H,MAAOrjB,EAAQ6oB,MAAO,SAC/D,CAACjlB,IAAK,aAAcsnB,MAAO,mBAAoB7H,MAAOnjB,EAAW2oB,MAAO,SACxE,CAACjlB,IAAK,UAAWsnB,MAAO,gBAAiB7H,MAAOljB,GAChD,CAACyD,IAAK,aAAcsnB,MAAO,mBAAoB7H,MAAOjjB,IACtDtF,OAAO,SAAAiT,GAAA,OAAAA,EAAEsV,MAAiB7tB,SAAQkD,IAAI,SAAA4V,GAAA,IAAE1K,EAAF0K,EAAE1K,IAAKsnB,EAAP5c,EAAO4c,MAAO7H,EAAd/U,EAAc+U,MAAOwF,EAArBva,EAAqBua,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACi9B,GAAD,CACEn4B,KAAMA,EACNmuB,UAAWA,EACXC,gBAAiBA,EACjB7sB,MAAO8oB,EACP6D,eAAgBA,EAChB7wB,mBAAoB2E,EAAO3E,4BAKlCyD,EAAcyJ,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACbtnB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAQ,WACnC,IAAIivB,EAAiB,CACnB,CAACxtB,IAAK,gBAAiBsnB,MAAO,kBAAmB7H,MAAO1hB,EAAcknB,MAAO,SAC7E,CAACjlB,IAAK,oBAAqBsnB,MAAO,cAAe7H,MAAOzhB,GACxD,CAACgC,IAAK,eAAgBsnB,MAAO,iBAAkB7H,MAAO7hB,IACtD1G,OAAO,SAAA0T,GAAA,OAAAA,EAAE6U,MAAiB7tB,SAM5B,OALK47B,EAAe57B,SAClB47B,EAAiB,CACf,CAACxtB,IAAK,UAAWsnB,MAAO,UAAW7H,MAAOvpB,KAGvCs3B,EAX4B,GAYhC14B,IAAI,SAAA+V,GAAA,IAAE7K,EAAF6K,EAAE7K,IAAKsnB,EAAPzc,EAAOyc,MAAO7H,EAAd5U,EAAc4U,MAAOwF,EAArBpa,EAAqBoa,MAArB,MACL,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC5G3tB,EAAAC,EAAAtP,cAACm9B,GAAD,CAAe3E,gBAAiBxrB,EAAKa,MAAMkvB,oBAAqBn3B,WAAYupB,WAIxE,KACd9f,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACo9B,GAAD,MACA/tB,EAAAC,EAAAtP,cAAA,WAAKqP,EAAAC,EAAAtP,cAAA,WACLqP,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,UAAWsnB,MAAO,kCAAmC7H,MAAOloB,EAAgB2F,gBAAiB+nB,MAAO,SAC1G,CAACjlB,IAAK,aAAcsnB,MAAO,uCAAwC7H,MAAOloB,EAAgB6F,mBAAoB6nB,MAAO,SACrH,CAACjlB,IAAK,UAAWsnB,MAAO,sBAAuB7H,MAAOloB,EAAgBgF,YACtE,CAACyD,IAAK,aAAcsnB,MAAO,yBAA0B7H,MAAOloB,EAAgBiF,gBAC5EtF,OAAO,SAAA4T,GAAA,OAAAA,EAAE2U,MAAiB7tB,SAAQkD,IAAI,SAAAoY,GAAA,IAAElN,EAAFkN,EAAElN,IAAKsnB,EAAPpa,EAAOoa,MAAO7H,EAAdvS,EAAcuS,MAAOwF,EAArB/X,EAAqB+X,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACq9B,GAAD,CACEv4B,KAAMA,EACNmuB,UAAWA,EACXjsB,YAAamoB,EACbqI,qBAAsBA,WAK9BnoB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,SAAUsnB,MAAO,eAAgB7H,MAAO7jB,EAAQqpB,MAAO,SAC7D,CAACjlB,IAAK,UAAWsnB,MAAO,gBAAiB7H,MAAO3jB,GAChD,CAACkE,IAAK,MAAOsnB,MAAO,YAAa7H,MAAO1pB,IACxCmB,OAAO,SAAAiW,GAAA,OAAAA,EAAEsS,MAAiB7tB,SAAQkD,IAAI,SAAAwY,GAAA,IAAEtN,EAAFsN,EAAEtN,IAAKsnB,EAAPha,EAAOga,MAAO7H,EAAdnS,EAAcmS,MAAOwF,EAArB3X,EAAqB2X,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACs9B,GAAD,CACEx2B,OAAQA,EACRrB,MAAO0pB,EACPrqB,KAAMA,EACN4G,eAAgBA,EAChBiuB,iBAAkB9uB,EAClB+uB,mBAAoBnuB,YAlGvB4D,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,uCAhBO7sB,cClUd8sB,8MAUJ/V,MAAQ,CACNgW,aAAc,KACd92B,KAAM/D,EAAKiL,MAAMlH,KACjBmkB,eAAgB,QAGlB4S,gBAAkB5V,IAAMC,cAExBnP,SAAW,SAAAjS,GACL/D,EAAKiL,MAAM8vB,OACb/6B,EAAK6rB,SAAS,CAAC9nB,SAEf/D,EAAKiL,MAAM+K,SAASjS,GAElB/D,EAAKiL,MAAM+vB,yBACbh7B,EAAKiL,MAAM+vB,wBAAwBj3B,MAIvCqnB,aAAe,WACbprB,EAAKgW,SAAShW,EAAK6kB,MAAM9gB,KAAKqnB,mBAGhCpO,KAAO,WACLhd,EAAKgW,SAAShW,EAAK6kB,MAAM9gB,KAAKiZ,WAGhCie,QAAU,WACRj7B,EAAKgW,SAAShW,EAAK6kB,MAAM9gB,KAAK4C,YAAYqK,aAG5CkqB,WAAa,SAAAn3B,GACX,IAAM82B,EAAe92B,IAAS/D,EAAK6kB,MAAM9gB,KAAO,KAAOA,EACvD/D,EAAK6rB,SAAS,CAACgP,iBACX76B,EAAKiL,MAAMkwB,sBACbn7B,EAAKiL,MAAMkwB,qBAAqBN,MAIpCO,mBAAqB,SAAAr3B,GACnB/D,EAAKk7B,WAAWn3B,MAGlBs3B,uBAAyB,WACvBr7B,EAAKk7B,WAAWl7B,EAAK6kB,MAAMgW,aAAazP,mBAG1CkQ,eAAiB,WACft7B,EAAKk7B,WAAWl7B,EAAK6kB,MAAMgW,aAAa7d,WAG1Cue,aAAe,WACbv7B,EAAKk7B,WAAW,SAGlBH,OAAS,WACP,IAAMvxB,EAAQxJ,EAAKw7B,mBACfhyB,EAAM9K,QACRsB,EAAKiL,MAAM8vB,OAAOvxB,EAAOxJ,EAAK6kB,MAAM9gB,SAoBxC03B,cAAgB,WACdz7B,EAAKiL,MAAM8vB,OAAO,aAwBpBW,sBAAwB,WACjB17B,EAAKiL,MAAM/G,OAAO3E,mBAAmB4G,gBAGxCnG,EAAKiL,MAAM0wB,eAAXz7B,OAAAsM,EAAA,EAAAtM,CAAA,GAA8BF,EAAKiL,MAAM/I,KAAK5D,SAA9C,CAAwD6H,iBAAiB,KAFzEnG,EAAK86B,gBAAgBtV,QAAQoW,gBAMjCC,kBAAoB,WAClB77B,EAAKiL,MAAM0wB,eAAXz7B,OAAAsM,EAAA,EAAAtM,CAAA,GAA8BF,EAAKiL,MAAM/I,KAAK5D,SAA9C,CAAwD6H,iBAAiB,KACrEnG,EAAK87B,aACP97B,EAAK+6B,YAmBTgB,uBAAyB,SAAAlwB,GAAsB,IAApBqc,EAAoBrc,EAApBqc,eACzBloB,EAAK6rB,SAAS,CAAC3D,sGAxEE,IACJ8T,EAAa/7B,KAAKgL,MAAxBlH,KAED2K,EADoBzO,KAAK4kB,MAAxB9gB,KACmB8K,YACpBotB,EAAiBvtB,EAAQrG,UAC7B,SAAAtE,GAAI,OAAIA,EAAKoM,yBAA2B6rB,EAAU7rB,yBACpD,OAAI8rB,EAAiB,GACnBt7B,QAAQu7B,MAAM,uCACP,IAEUxtB,EAAQpG,MAAM2zB,EAAiB,GACzBr6B,IAAI,SAAAmC,GAAI,OAAIA,EAAKwK,sDASzB6W,EAAWC,GACxBplB,KAAKgL,MAAMlH,OAASqhB,EAAUrhB,SAE7B9D,KAAKgL,MAAMlH,OACRqhB,EAAUrhB,MACX9D,KAAKgL,MAAMlH,KAAK4C,cAAgBye,EAAUrhB,KAAK4C,aAC/C1G,KAAKgL,MAAMlH,KAAKoM,yBAA2BiV,EAAUrhB,KAAKoM,wBAC1DlQ,KAAKgL,MAAMlH,KAAKwM,mBAAqB6U,EAAUrhB,KAAKwM,oBAGvDtQ,KAAKi7B,WAAW,MAChBj7B,KAAK4rB,SAAS,CAAC9nB,KAAM9D,KAAKgL,MAAMlH,KAAMo4B,WAAW,MAGjDl8B,KAAKgL,MAAM/G,OAAO3E,mBAAmB4G,kBAClClG,KAAK67B,UAAU1W,EAAWC,IAAcplB,KAAK67B,aAChD77B,KAAK86B,6CAoBuC,IAAxC9vB,EAAwCxM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCwB,KAAKgL,MAAO4Z,EAAoBpmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZwB,KAAK4kB,MAClCkW,EAAU9vB,EAAV8vB,OACAF,EAAsBhW,EAAtBgW,aAAc92B,EAAQ8gB,EAAR9gB,KACrB,QACIg3B,IACEF,GACD92B,IAASkH,EAAMlH,QACb9D,KAAKu7B,mBAAmB98B,SAE3BqF,EAAKkF,UACFlF,EAAKuL,aAAerE,EAAMlH,KAAKuL,6CAS/B,IAAAlE,EAGHnL,KAAKgL,MADP/G,EAFKkH,EAELlH,OAAQhC,EAFHkJ,EAEGlJ,KAAMk6B,EAFThxB,EAESgxB,MAAO1W,EAFhBta,EAEgBsa,aAAc2W,EAF9BjxB,EAE8BixB,UAAWC,EAFzClxB,EAEyCkxB,SAA4BjM,EAFrEjlB,EAEmDxI,UAAY4F,KAF/Dud,EAIsC9lB,KAAK4kB,MAA3CgW,EAJA9U,EAIA8U,aAAc92B,EAJdgiB,EAIchiB,KAAMmkB,EAJpBnC,EAIoBmC,eACrBqU,EAAc1B,GAAgB92B,EAC9BqtB,EAAW1L,EAAahnB,OAAS,EACjCo9B,EAAY77B,KAAK67B,YACjBU,IAAmBH,GAAYA,EAAUG,iBACzCvW,EAAoBP,EAAa/c,SAASwF,EAAKuB,UAC/Cf,GAAWksB,IAAiB56B,KAAKgL,MAAM8vB,OAASh3B,EAAKgL,WAAa9O,KAAKgL,MAAMlH,KAAKgL,WAAahL,EAAK4K,SACpG8tB,IAAkBx8B,KAAKgL,MAAM8vB,QAAWF,IAAgB92B,EAAKuK,UAE9DouB,EACJjwB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGjB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACu/B,GAAD,CACEtrB,OAAQ4U,EAAoB9X,EAAKuB,SAAWvB,EAAK0D,SACjD+qB,WAAYP,EAAYhM,EAAUgM,EAAUlzB,QAAQ8c,EAAoB,EAAI,IAAM,KAClF6V,UAAWA,EACXe,mBAAoBf,EACpBntB,QAASA,EACT8tB,YAAaA,EACb1B,OAAQ96B,KAAKgL,MAAM8vB,OAAS96B,KAAK86B,OAAS,KAC1C/d,KAAM/c,KAAKgL,MAAM8vB,OAAS96B,KAAKmrB,aAAenrB,KAAK+c,KACnD8f,SAAU78B,KAAKmrB,aACfsQ,sBAAuBz7B,KAAKy7B,sBAC5B33B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3B68B,MAAOA,EACP1W,aAAcA,KAGlBjZ,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACu/B,GAAD,CACEtrB,OAAQ4U,EAAoB9X,EAAK0D,SAAW1D,EAAKuB,SACjDktB,WAAYP,EAAYhM,EAAUgM,EAAUlzB,QAAQ8c,EAAoB,EAAI,IAAM,KAClF6V,WAAW,EACXe,mBAAoBf,EACpBntB,QAASA,EACT8tB,YAAaA,EACb1B,OAAQ96B,KAAKgL,MAAM8vB,OAAS96B,KAAK86B,OAAS,KAC1C/d,KAAM/c,KAAKgL,MAAM8vB,OAAS96B,KAAKmrB,aAAenrB,KAAK+c,KACnD8f,SAAU78B,KAAKmrB,aACfsQ,sBAAuBz7B,KAAKy7B,sBAC5B33B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3B68B,MAAOA,EACP1W,aAAcA,KAGlBjZ,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC2/B,GAAD,CAAgBh5B,KAAMA,EAAM82B,aAAcA,EAAcK,WAAYj7B,KAAKi7B,cAE3EzuB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC4/B,GAAD,CAAqBlR,SAAU7rB,KAAK87B,0BAErCO,GAGAW,EACHxwB,EAAAC,EAAAtP,cAACw0B,GAAD,CACE7tB,KAAMw4B,EACNrU,eAAgBA,EAChBlS,SAAU6kB,EAAe56B,KAAKm7B,mBAAqBn7B,KAAK+V,SACxDqV,cAAekR,IAAgBx4B,EAC7B9D,KAAKgL,MAAM8vB,OAAS96B,KAAKgL,MAAMlH,KAAKgL,WAClC9O,KAAKgL,MAAMlH,KAAK4K,QAAU1O,KAAKgL,MAAMlH,KAAKuK,SAASS,WAAa9O,KAAKgL,MAAMlH,KAAKgL,WAEhF,EACJ2W,aAAc6W,IAAgBx4B,EAAO2hB,OAAe/mB,EACpDL,SAAU4F,EAAO3E,mBACjB0d,SAAU/Y,EAAO3E,mBAAmBtB,MAAMsI,WAC1C4hB,WAAYjkB,EAAO3E,mBAAmBtB,MAAMuI,SAIhD,OACEiG,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,CAAShW,MAAO,CAACmf,UAAW,WAC1BzwB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,EAACiK,QAAS,QAASD,UAAW,UAC1CzwB,EAAAC,EAAAtP,cAACggC,GAAA,EAAD,CAAYrwB,GAAIkmB,KAAKE,IAAKkK,SAAU,KAClC5wB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,KAAcZ,GACdjwB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,KAAcL,IAEhBxwB,EAAAC,EAAAtP,cAACggC,GAAA,EAAD,CAAYrwB,GAAIwwB,WAAUC,SAAU,KAClC/wB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaG,WAAW,EAAOP,UAAW,UACvCD,IAGLxwB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaG,WAAW,EAAOP,UAAW,UACvCR,OAMVz8B,KAAKgL,MAAM8vB,QAAU3J,EACpB3kB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAU9K,MAAX,CAAiB+K,OAAQ,MAAOrR,KAAM,QACpC7f,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MACTkP,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEC,QAASnnB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAACrM,WAAYqO,GAAgB56B,KAAKgL,MAAMlH,KAAKkF,UAAWuzB,EAAmB,QAAU,UAC9G1I,OAAQ0I,EAAmB,SAAW,UACtCjwB,QAAO,4BAAA3M,OAA8B48B,EAAmB,QAAU,UAA3D,KAAA58B,OAAwE48B,EAAmB,qCAAuC,IACzI/H,QAAS,CAAC,CAAC3nB,IAAK,SAAUP,QAASiwB,EAAmB,QAAU,SAAU3D,UAAU,EAAM/b,QAAS7c,KAAKw7B,eAAgB,CAAE3uB,IAAK,WAAYP,QAAS,WAAYqxB,UAAU,EAAMtK,WAAW,QAG/L7mB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKgL,MAAM8vB,OAAS96B,KAAKmrB,aAAenrB,KAAK+c,KAAMwP,UAAW7d,GAAxF,YAGpB,KACF1O,KAAKgL,MAAM8vB,OAOT,KANFtuB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAU9K,MAAX,CAAiB+K,OAAQ,MAAOrR,KAAM,SACpC7f,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKmrB,aAAcoB,UAAWiQ,GAAxD,sBAClBhwB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKg7B,QAASzO,WAAYqO,IAAiB92B,EAAKuK,UAA1E,gBAIxB7B,EAAAC,EAAAtP,cAACygC,GAAD,CACE95B,KAAMA,EACN82B,aAAcA,EACdK,WAAYj7B,KAAKi7B,WACjBh5B,KAAMA,EACN3C,mBAAoB2E,EAAO3E,qBAE5Bs7B,EACCpuB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,CAASmJ,UAAW,UAClBzwB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,2BACAN,EAAAC,EAAAtP,cAACsgC,GAAA,EAAU9K,MAAX,CAAiB+K,OAAQ,QAASrR,KAAM,SACrCuO,EAAa5xB,SACZwD,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAW3L,MAAO,QAASx0B,MAAO6+B,EAAMvB,EAAapqB,QAAS2jB,MAAO,SAErE3nB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAO6+B,EAAMvB,EAAavrB,YAAa8kB,MAAOn0B,KAAK0G,YAAYm3B,gBAAgBjD,EAAatrB,YAEzG9C,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOs9B,EAAa/rB,UAAWslB,MAAO,SACjD3nB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKq7B,eAAgB9O,UAAWqO,EAAalsB,SAAvE,WAEpBlC,EAAAC,EAAAtP,cAACsgC,GAAA,EAAU9K,MAAX,CAAiB+K,OAAQ,MAAOrR,KAAM,SACpC7f,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKo7B,uBAAwB7O,UAAWqO,EAAavsB,UAA/E,sBAClB7B,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CAAWngC,MAAOkP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKs7B,cAA/B,sBAGpB,KACJ9uB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACExN,IAAKlmB,KAAK66B,gBACVhH,OAAQ,oBACRvnB,QAAS,0DACTkoB,QAAS,CACP,CAAC3nB,IAAK,MAAOP,QAAS,cAAeuQ,QAAS7c,KAAK47B,kBAAmBkC,SAAS,GAC/E,CAACjxB,IAAK,KAAMP,QAAS,4BAA6B+mB,WAAW,cA5StDxlB,aAAb8sB,GACGkD,sCACJ3vB,EAAK+D,6BAA+B,iCACpC/D,EAAKiE,8BAAgC,iCACrCjE,EAAKyE,gCAAkC,kCACvCzE,EAAKmI,4BAA8B,8BACnCnI,EAAKqI,6BAA+B,8BACpCrI,EAAKuI,8BAAgC,aAiU1CkkB,GAAK7sB,aAAe,CAClBquB,OAAK4B,GAAA,GAAA99B,OAAAqU,EAAA,EAAArU,CAAA89B,GACF7vB,EAAKuB,SAAW,YADdxP,OAAAqU,EAAA,EAAArU,CAAA89B,GAEF7vB,EAAK0D,SAAW,YAFdmsB,IAILtY,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,WAGrC+oB,GAAOvL,GAAWuL,QAEZqD,8MAUJC,wBAA0B,WACxBx3B,EAAKuE,MAAM8vB,SACXr0B,EAAKuE,MAAM/G,OAAOi6B,eAAlBj+B,OAAAsM,EAAA,EAAAtM,CAAA,GAAqCwG,EAAKuE,MAAM/I,KAAK5D,SAArD,CAA+D8H,oBAAoB,8EAG5E,IAAA+G,EAIHlN,KAAKgL,MAFPlH,EAFKoJ,EAELpJ,KAAMsN,EAFDlE,EAECkE,OAAQqU,EAFTvY,EAESuY,aAAc0W,EAFvBjvB,EAEuBivB,MAAO78B,EAF9B4N,EAE8B5N,mBAAoBm8B,EAFlDvuB,EAEkDuuB,sBAAuBkB,EAFzEzvB,EAEyEyvB,WAC9Ed,EAHK3uB,EAGL2uB,UAAWe,EAHN1vB,EAGM0vB,mBAAoBluB,EAH1BxB,EAG0BwB,QAAS8tB,EAHnCtvB,EAGmCsvB,YAAa1B,EAHhD5tB,EAGgD4tB,OAAQ/d,EAHxD7P,EAGwD6P,KAAM8f,EAH9D3vB,EAG8D2vB,SAE/DsB,EAAqB1Y,EAAa/c,SAAS0I,GAC3CgtB,EAAexB,EAAqB94B,EAAKuK,SAAWvK,EACpDu6B,EAAgBD,EAAa/uB,aAAe+B,EAC5CktB,EAAYF,EAAa5tB,SAAWY,EACpCpI,EAAWo1B,EAAap1B,SAE9B,OACEwD,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CACE6xB,WAAS,EACTjxB,UAAW0O,IAAW,CAACyV,WAAYzoB,GAAYm1B,GAAsBE,IAAkBxC,IACvFxP,KAAM,UACNsR,SAAU30B,GAAYoI,IAAWlD,EAAK0D,SACtCkgB,MAAO9oB,EAAYs1B,EAAY,QAAU,WAAS5/B,EAClD4tB,MAAO,CACL,CAACzf,IAAK,OACJG,KAAMhE,EAAYs1B,EAAY,SAAW,cAAkBD,EAAgB,OAAS,YACpF/xB,QACEE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACqhC,GAAD,CACEphB,SAAUtZ,EAAK4C,YACfkV,QAAM,EACNtc,mBAAoBA,EACpB8R,OAAQA,EACRqU,aAAcA,IAEf0W,EAAM/qB,KAGb,CAACvE,IAAK,eAAgBP,QACpBtD,EACKs1B,EAAY,MAAQ,OAErBzC,EAEIv8B,EAAmB4G,gBACf,kBAEAsG,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGnO,EAAmB6G,mBAClBqG,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACErH,KAAM,OACNsH,QACEnnB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEa,UAAQ,EACRnnB,UAAW,aAFb,aAOFumB,OAAQ,cACRvnB,QACEE,EAAAC,EAAAtP,cAACu2B,GAAA,EAAMhC,QAAP,oDAEEllB,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAACw0B,GAAD,CACE7tB,KAAMA,EACN8X,QAAM,EACNvd,SAAUiB,EACV0d,UAAQ,EACRkL,YAAU,KAIhBsM,QAAS,CACP,CAAC3nB,IAAK,kBAAmBP,QAAS,kBAAmBuQ,QAAS7c,KAAKi+B,yBACnE,CAACpxB,IAAK,SAAU+rB,UAAU,EAAMtsB,QAAS,UACzC,CAACO,IAAK,KAAM4nB,UAAU,EAAMnoB,QAAS,SAAUuQ,QAASie,MAI5DtuB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEa,UAAQ,EACRnnB,UAAW,YACXuP,QAASie,GAHX,UAQDqD,GAAsBzvB,EACrBlC,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACG,OAAOjB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAACtsB,QAAS,OAAQigB,UAAW7d,EAASmO,QAASE,KAEvE,MAIVshB,EAEIF,GAAsBzvB,EAElBlC,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGzN,KAAK0G,YAAYm3B,gBAAgBO,EAAa9uB,UAC9C,OAAO9C,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAACtsB,QAAS,OAAQigB,UAAW7d,EAASmO,QAASE,KAGzE/c,KAAK0G,YAAYm3B,gBAAgBO,EAAa9uB,UATzC,eAAA3P,OAWMw8B,EAAMjuB,EAAKyC,aAAaS,MAIpD1C,IAAW8tB,GAAgB6B,EAIxB,KAJwC,CAC1CxxB,IAAK,iBAAkBP,QACrBE,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAACtsB,QAAS,iBAAkBuQ,QAASggB,MAGxD7zB,GAAY8xB,GAAUrV,EAAa/c,SAAS0I,GAAU,CACrDvE,IAAK,cAAeP,QAClBE,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,oBACPsK,QAAM,EACNtF,QAAS75B,EAAmB4G,gBAC5B2lB,SAAU4P,KAGZ,KACJzyB,GAAY2zB,GAAcA,EAAWl0B,OAAS,CAC5CoE,IAAK,YAAaP,QAChBE,EAAAC,EAAAtP,cAACi7B,GAAD,CAAqBpB,UAAW2F,KAEhC,MACJ54B,OAAO,SAAA26B,GAAI,OAAIA,aA7IA7wB,aAAnBmwB,GACGH,sCACJ3vB,EAAK+D,6BAA+B,iCACpC/D,EAAKiE,8BAAgC,iCACrCjE,EAAKyE,gCAAkC,kCACvCzE,EAAKmI,4BAA8B,8BACnCnI,EAAKqI,6BAA+B,8BACpCrI,EAAKuI,8BAAgC,aA8J1CunB,GAAa5O,GAAW4O,QAElBW,8MACJ/Z,MAAQ,CACNyN,WAAY,KAGdC,aAAe,SAACxsB,EAADkP,GAAqB,IAAhBqd,EAAgBrd,EAAhBqd,WAClBnqB,EAAK0jB,SAAS,CAACyG,wFAGR,IAAAnS,EAC8ElgB,KAAKgL,MAAnFlH,EADAoc,EACApc,KAAMxE,EADN4gB,EACM5gB,mBAAoBs7B,EAD1B1a,EAC0B0a,aAAcK,EADxC/a,EACwC+a,WAAY1I,EADpDrS,EACoDqS,SAAU3iB,EAD9DsQ,EAC8DtQ,aAC9DyiB,EAAcryB,KAAK4kB,MAAnByN,WAEDG,EAAa3gB,KAAK4gB,MAAM3uB,EAAK2K,QAAQhQ,OAAS,GAAK8zB,GACnDG,EAAezyB,OAAAqI,EAAA,EAAArI,CAAI6D,EAAK2K,SAC3BpG,MAAM,GAAKmqB,EAAaH,GAAcE,EAAU,GAAKC,EAAaH,GAAcE,EAAWA,GAC3FxO,UACG6a,EAAkBlM,EAAaA,EAAaj0B,OAAS,GAE3D,OACE+N,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC2/B,GAAD,CAAgBh5B,KAAMA,EAAM82B,aAAcA,EAAcK,WAAYA,KAEtEzuB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACGR,EAAa/wB,IAAI,SAAAy8B,GAAY,OAC5B5xB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,CAAUZ,IAAKuxB,EAAatvB,YACzBsvB,EAAavvB,UAAY,IAAM,EAC9BrC,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAAS8xB,EAAavvB,UAAY,IACvC,KACJrC,EAAAC,EAAAtP,cAACw0B,GAAD,CACE7tB,KAAMs6B,EACNziB,OAAK,EACLE,SAAUof,EACVnf,SAAUsiB,IAAiBxD,EAC3Bv8B,SAAUiB,IAEXsQ,EACCpD,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,SACXsM,EAAanvB,mBAAmBtN,IAAI,SAAAmK,GAAA,IAAEkE,EAAFlE,EAAEkE,EAAGD,EAALjE,EAAKiE,EAAL,OAAAjE,EAAQkD,OACzC,IAD2D,GAAArP,OAClD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKqQ,IADwBrQ,OACnBoQ,EAAI,KAAKX,KAAK,MAE1D,QAGPwvB,GAAoBA,EAAgB/vB,UAAY,IAAM,EACrDrC,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASsyB,EAAgB/vB,UAAY,IAC1C,MAENrC,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACg2B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAActyB,KAAKsyB,aACnBc,UAAQ,EACRC,WAAS,cAxDGxlB,aA2E1B8wB,GAAY7wB,aAAe,CACzBykB,SAAU,GACV3iB,cAAc,OAGVivB,8MA4CJC,gBAAkB,WACXh2B,EAAKi2B,sBAGVj2B,EAAKkC,MAAMiwB,WAAWnyB,EAAKkC,MAAMlH,SASnCk7B,aAAe,WACb,GAAKl2B,EAAKm2B,kBAAV,CAGA,IAAMC,EAAoBp2B,EAAKkC,MAAMlH,KAAK2K,QAAQS,QAAQpG,EAAKkC,MAAM4vB,cAAgB9xB,EAAKkC,MAAMlH,MAChGgF,EAAKkC,MAAMiwB,WAAWnyB,EAAKkC,MAAMlH,KAAK2K,QAAQywB,EAAoB,QAGpEC,aAAe,WAAM,IACZC,EAA+Bt2B,EAAKu2B,YAApCD,4BACPt2B,EAAKkC,MAAMiwB,WAAWnyB,EAAKkC,MAAMlH,KAAK2K,QAAQ2wB,OAShDE,iBAAmB,WACZx2B,EAAKy2B,uBAGVz2B,EAAKkC,MAAMiwB,YAAYnyB,EAAKkC,MAAM4vB,cAAgB9xB,EAAKkC,MAAMlH,MAAM6K,sBAGrE6wB,0BAA4B,WAC1B12B,EAAKkC,MAAMiwB,WAAWnyB,EAAKkC,MAAM4vB,aAAajsB,sBAShD8wB,cAAgB,WACT32B,EAAK42B,oBAGV52B,EAAKkC,MAAMiwB,WAAWnyB,EAAKkC,MAAMlH,KAAK2K,QAAQ,iGA5FX,IAAVkxB,EAAU5zB,EAAV4zB,QACzB,GAAIA,EAAQC,MAAO,KAAAC,EACSF,EAAQC,MAA3BE,EADUD,EACVC,MAAOC,EADGF,EACHE,SACVD,IAAUE,KAAKC,MAAQF,EACzB//B,KAAK8+B,kBACIgB,IAAUE,KAAKE,KACxBlgC,KAAK8+B,kBACIgB,IAAUE,KAAKC,MAASF,EAExBD,IAAUE,KAAKG,OAAUJ,EAEzBD,IAAUE,KAAKG,OAASJ,EACjC//B,KAAKy/B,gBACIK,IAAUE,KAAKE,MACxBlgC,KAAKy/B,gBAJLz/B,KAAKs/B,mBAFLt/B,KAAKg/B,6DAyBU,IAAAoB,EACwBpgC,KAAKq/B,YAEhD,OAHmBe,EACZlB,oBADYkB,EACOC,wDAYV,IAAAC,EAC2BtgC,KAAKq/B,YAAzCH,EADSoB,EACTpB,kBAAmBmB,EADVC,EACUD,cAE1B,OAAOnB,GAAqB,GAAKA,IAAsBmB,gDAgBnC,IACbnB,EAAqBl/B,KAAKq/B,YAA1BH,kBAEP,OAAOA,GAAqB,GAA2B,IAAtBA,6CAiBjC,OAA6B,IAFDl/B,KAAKq/B,YAA1BH,mDAYA,IAAA1d,EACsBxhB,KAAKgL,MAA3BlH,EADA0d,EACA1d,KAAM82B,EADNpZ,EACMoZ,aADN2F,EAEkDvgC,KAAKq/B,YAAvDH,EAFAqB,EAEArB,kBAAmBE,EAFnBmB,EAEmBnB,4BAE1B,OACE5yB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM2f,KAAM,UAAWC,MAAK,CAC1B,CAACzf,IAAK,UAAWG,KAAM,gBAAiB6P,QAAS7c,KAAK8+B,gBAAiBvS,UAAWvsB,KAAK++B,uBAD7Dp/B,OAAAM,OAAAqI,EAAA,EAAArI,CAEtBi/B,GAAqB,EAAI,CAC3B,CAACryB,IAAK,WAAYG,KAAM,WAAY6P,QAAS7c,KAAKg/B,aAAczS,UAAWvsB,KAAKi/B,mBAChF,CAACpyB,IAAK,YAAaP,QAAS4yB,GAAqB,EAArB,GAAAv/B,QAA6Bi7B,GAAgB92B,GAAM+K,UAAnD,KAAAlP,OAAgEmE,EAAK+K,WAAc+rB,EAAa/rB,UAAW0d,SAAUzoB,EAAKkF,UACtJ,CAAC6D,IAAK,OAAQG,KAAM,UAAW6P,QAAS7c,KAAKs/B,iBAAkB/S,UAAWvsB,KAAKu/B,wBAC7E,CACF,CAAC1yB,IAAK,eAAgBP,QAAO,aAAA3M,OAAey/B,EAAf,KAAAz/B,OAA8CmE,EAAK+K,WAAagO,QAAS7c,KAAKm/B,gBAPnF,CAS1B,CAACtyB,IAAK,QAASG,KAAM,eAAgB6P,QAAS7c,KAAKy/B,cAAelT,UAAWvsB,KAAK0/B,qBATxDz/B,OAAAqI,EAAA,EAAArI,CAUtBi/B,GAAqB,EAAI,GAAK,CAChC,CAACryB,IAAK,WAAYP,QAAO,aAAA3M,OAAei7B,EAAa/rB,UAA5B,KAAAlP,OAAyCy/B,GAA+B7S,UAAU,GAC3G,CAAC1f,IAAK,OAAQG,KAAM,UAAW6P,QAAS7c,KAAKw/B,0BAA2BjT,SAAUqO,EAAa/rB,WAAa,4CAxFlH,IALgB,IAAA6b,EACa1qB,KAAKgL,MAA3BlH,EADS4mB,EACT5mB,KAAM82B,EADGlQ,EACHkQ,aACPsE,EAAoBp7B,EAAK2K,QAAQS,QAAQ0rB,GAAgB92B,GAC3Ds7B,EAA8BF,EAC9BsB,EAAW5F,GACyB,IAAjCwE,GAAsCoB,GAC3CA,EAAWA,EAAS7xB,kBACpBywB,EAA8Bt7B,EAAK2K,QAAQS,QAAQsxB,GAIrD,MAAO,CAACtB,oBAAmBmB,cAFLv8B,EAAK2K,QAAQhQ,OAAS,EAEF2gC,sCAnCjBvxB,aAAvBgxB,GACGplB,KAAO,CACZ,OAAQ,QAAS,aAAc,cAAe,OAAQ,OAgI1DolB,GAAiBc,aAAQd,GAAeplB,KAAvBkmB,CAA6Bd,IAE/BlE,UCvmBAvL,iNAtHbxK,mBACEgW,aAAc,KACdqB,OAAO,GACJl8B,EAAK2G,YAAY+5B,oCA4BtBC,wBAA0B,WACxB3gC,EAAK6rB,SAAS,CAACqQ,MAAO,UAGxBlmB,SAAW,SAAAilB,GACTj7B,EAAK6rB,SAAS,CAAC9nB,KAAMk3B,OAGvB2F,MAAQ,WACN,IAAM11B,EAAM5K,OAAOiB,SAASs/B,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAM78B,EAAO/D,EAAK6kB,MAAM9gB,KACxB+8B,UAAUF,MAAM,CACdxK,MAAK,6BAAAx2B,OAA+BmE,EAAK+K,UAApC,UACL7R,KAAI,uCAAA2C,OAAyCmE,EAAK+K,UAA9C,UACJ5D,QACC61B,MAAM,WACPj6B,EAAsBoE,GACtB81B,MAAM,mCAGRl6B,EAAsBoE,GACtB81B,MAAM,+BAIV7F,qBAAuB,SAAAN,GACrB76B,EAAK6rB,SAAS,CAACgP,oBAGjBoG,gBAAkB,WAChBjhC,EAAKkhC,SAAS/yB,EAAKgN,YAGrBgmB,YAAc,WACZnhC,EAAKkhC,SAAS/yB,EAAKkN,QAGrB6lB,SAAW,SAAA7jB,GACTrd,EAAK6rB,SAAS,CACZgP,aAAc,KACd92B,KAAMsZ,EAASrM,SACfkrB,OAAO,6EAIF,IAAAnW,EAC6B9lB,KAAK4kB,MAAlC9gB,EADAgiB,EACAhiB,KAAMm4B,EADNnW,EACMmW,MAAOrB,EADb9U,EACa8U,aACb34B,EAAQjC,KAAKgL,MAAb/I,KAEP,OACEuK,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,KAAMlF,EACN5P,KAAM,OACNmH,QAASxzB,KAAK0gC,wBACd7M,OAAQ,iCACRvnB,QAAO,GAAA3M,OAAKs8B,EAAL,+CACPzH,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAEjDjoB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAMixB,UAAQ,EAACtR,KAAM,UAAWC,MAAO,CACrC,CAACzf,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBwlB,MAAO,QAASsP,QAAQ,EAAMt0B,GAAI,IACzF8zB,KAAI,aAAAjhC,QAAgBi7B,GAAgB92B,GAAMoM,wBAC1CimB,MAAO0K,UAAUF,MAAQ,iCAAmC,kCAIpEn0B,EAAAC,EAAAtP,cAACkkC,GAAD,CACEp/B,KAAMA,EACN6B,KAAMA,EACNiS,SAAU/V,KAAK+V,SACfmlB,qBAAsBl7B,KAAKk7B,sBAE3B1uB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQ/W,QAAS7c,KAAKghC,gBAAiB10B,QAAS,oBAAqBigB,SAAUzoB,EAAK4C,cAAgBwH,EAAKgN,UACzG1O,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQ/W,QAAS7c,KAAKkhC,YAAa50B,QAAS,gBAAiBigB,SAAUzoB,EAAK4C,cAAgBwH,EAAKkN,mEApGvG,IACMiP,EADS,IAAIiX,gBAAgBjhC,OAAOiB,SAASigC,QAC3B9K,IAAI,YAC5B,GAAIpM,EAAU,CACZ,IAAIvmB,EAAMm4B,EACV,IAKIA,GAJFn4B,EAAOoK,EAAKgN,QAAQsmB,2BAA2BnX,IAIrC,KAFA,6BAIV,MAAOvkB,GACPhC,EAAO,KACPm4B,EAAQ,sCAEV,OAAKn4B,EAGE,CAACA,OAAMm4B,OAAO,GAFZ,CAACn4B,KAAMoK,EAAKgN,QAAQnK,SAAUkrB,SAIvC,MAAO,CAACn4B,KAAMoK,EAAKgN,QAAQnK,SAAUkrB,OAAO,UA5B5BpuB,uBCDhB4zB,8MACJC,mBAAqB,CACnB,CAACpkC,MAAO,GAAI62B,MAAO,WACnB,CAAC72B,MAAO,SAAU62B,MAAO,UACzB,CAAC72B,MAAO,SAAU62B,MAAO,UACzB,CAAC72B,MAAO,QAAS62B,MAAO,SACxB,CAAC72B,MAAO,YAAa62B,MAAO,gBAE9BwN,kBAAoB,CAClB,CAACrkC,MAAO,WAAY62B,MAAO,YAC3B,CAAC72B,MAAO,YAAa62B,MAAO,gBAE9ByN,mBAAqB,CACnB,CAACtkC,MAAO,OAAQ62B,MAAO,QACvB,CAAC72B,MAAO,OAAQ62B,MAAO,QACvB,CAAC72B,MAAO,SAAU62B,MAAO,UACzB,CAAC72B,MAAO,cAAe62B,MAAO,QAC9B,CAAC72B,MAAO,MAAO62B,MAAO,OACtB,CAAC72B,MAAO,SAAU62B,MAAO,UACzB,CAAC72B,MAAO,MAAO62B,MAAO,OACtB,CAAC72B,MAAO,MAAO62B,MAAO,OACtB,CAAC72B,MAAO,OAAQ62B,MAAO,QACvB,CAAC72B,MAAO,sBAAuB62B,MAAO,wBACtC,CAAC72B,MAAO,qBAAsB62B,MAAO,uBACrC,CAAC72B,MAAO,gBAAiB62B,MAAO,kBAChC,CAAC72B,MAAO,mBAAoB62B,MAAO,qBACnC,CAAC72B,MAAO,gBAAiB62B,MAAO,kBAChC,CAAC72B,MAAO,sBAAuB62B,MAAO,wBACtC,CAAC72B,MAAO,oBAAqB62B,MAAO,sBACpC,CAAC72B,MAAO,kBAAmB62B,MAAO,uBAEpC0N,oBAAsB,CACpB,CAACvkC,MAAO,GAAI62B,MAAO,QACnB,CAAC72B,MAAO,UAAW62B,MAAO,WAC1B,CAAC72B,MAAO,SAAU62B,MAAO,UACzB,CAAC72B,MAAO,cAAe62B,MAAO,kBAGhC2N,eAAiB,SAAAC,GAAa,IACV/jC,EAAU+B,EAAKiL,MAA1B3M,SAAWL,MAClB,OACEwO,EAAAC,EAAAtP,cAAC6kC,GAAD,CAAgBpmB,QAAM,EAACvd,SAAU,CAACL,MAAMiC,OAAAsM,EAAA,EAAAtM,CAAA,GAAKjC,EAAN,CAAasI,YAAY,GAAUy7B,SAI9EE,qBAAuB,SAACn8B,EAAD8F,GAAkB,IAAbutB,EAAavtB,EAAbutB,QAC1Bp5B,EAAKiL,MAAMkzB,eAAe,CAACh4B,gBAAiBizB,OAG9C+I,yBAA2B,SAACp8B,EAADkP,GAAkB,IAAbmkB,EAAankB,EAAbmkB,QAC9Bp5B,EAAKiL,MAAMkzB,eAAe,CAAC/3B,mBAAoBgzB,OAGjDgJ,0BAA4B,SAACr8B,EAADgG,GAAkB,IAAbqtB,EAAartB,EAAbqtB,QAC/Bp5B,EAAKiL,MAAMkzB,eAAe,CAAC93B,oBAAqB+yB,OAGlDiJ,2BAA6B,SAACt8B,EAADiG,GAAkB,IAAbotB,EAAaptB,EAAbotB,QAChCp5B,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACmB,gBAAiBg6B,QAGtDkJ,0BAA4B,SAACv8B,EAADgR,GAAkB,IAAbqiB,EAAariB,EAAbqiB,QAC/Bp5B,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACqI,eAAgB8yB,QAGrDmJ,iBAAmB,SAACx8B,EAADkR,GAAkB,IAAbmiB,EAAaniB,EAAbmiB,QACtBp5B,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACsI,WAAY6yB,QAGjDoJ,aAAe,SAACz8B,EAADyR,GAAkB,IAAb4hB,EAAa5hB,EAAb4hB,QAClBp5B,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACuI,OAAQ4yB,QAG7CqJ,mBAAqB,SAAC18B,EAAD2R,GAAgB,IAAXna,EAAWma,EAAXna,MACxByC,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACwI,QAASlJ,QAG9CmlC,kBAAoB,SAAC38B,EAAD4R,GAAgB,IAAXpa,EAAWoa,EAAXpa,MACvByC,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACG,OAAQb,QAG7ColC,kBAAoB,SAAC58B,EAAD6R,GAAgB,IAAXra,EAAWqa,EAAXra,MACvByC,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACE,OAAQZ,QAG7CqlC,iBAAmB,SAAC78B,EAADiU,GAAgB,IAAXzc,EAAWyc,EAAXzc,MACtByC,EAAKiL,MAAMkzB,eAAe,CAAClgC,MAAO,CAACC,MAAOX,8EAGnC,IAAAmJ,EAAAzG,KAAAmL,EACmInL,KAAKgL,MADxI43B,EAAAz3B,EACA9M,SAAW6H,EADX08B,EACW18B,gBAAiBC,EAD5By8B,EAC4Bz8B,mBAAoBC,EADhDw8B,EACgDx8B,oBAAqBpI,EADrE4kC,EACqE5kC,MAAQ8I,EAD7EqE,EAC6ErE,uBAAwBC,EADrGoE,EACqGpE,2BACrG5H,EAA6GnB,EAA7GmB,gBAFA0jC,EAE6G7kC,EAA5FC,aAFjB,IAAA4kC,EAEyB,WAFzBA,EAAAC,EAE6G9kC,EAAxEE,cAFrC,IAAA4kC,EAE8C,OAF9CA,EAEsD3kC,EAAuDH,EAAvDG,OAAQkI,EAA+CrI,EAA/CqI,eAAgBC,EAA+BtI,EAA/BsI,WAAYC,EAAmBvI,EAAnBuI,OAAQC,EAAWxI,EAAXwI,QAEzG,OACEgG,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,EAAM2P,UAAU,GAAQ33B,MAAO,CACnD,CAACiB,SAAU,UAAW8tB,OAAQ,kBAC5B3tB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAD,KACEvnB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,2BACPr2B,KAAM,kBACNq7B,QAASjzB,EACT2lB,SAAUplB,EAAKw7B,wBAGnBz1B,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,yCACPr2B,KAAM,qBACNq7B,QAAShzB,EACT0lB,SAAUplB,EAAKy7B,4BAGnB11B,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,uBACPr2B,KAAM,sBACNq7B,QAAS/yB,EACTylB,SAAUplB,EAAK07B,iCAMzB,CAAC91B,SAAU,QAAS8tB,OAAQ,kBAC1B3tB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMuL,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/Cx2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,UACrBx2B,EAAKq7B,eAAe,CAACx7B,WAAYtI,EAAMsI,eAG5CkG,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,mCACPr2B,KAAM,wBACNq7B,QAASh6B,EACT0sB,SAAUplB,EAAK27B,8BAGnB51B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCn2B,EACC0F,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACG3G,EACD0F,EAAAC,EAAAtP,cAAA,WACCsJ,EAAKq7B,eAAe/6B,EAA2B/I,QAEhD,OAGRwO,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,EAAM2P,UAAU,GAAQ33B,MAAO,CACnD,CAACiB,SAAU,SAAU8tB,OAAQ,kBAC3B3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KACAluB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMuL,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/Cx2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,kBACPr2B,KAAM,uBACNq7B,QAAS9yB,EACTwlB,SAAUplB,EAAK47B,6BAGnB71B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAACz7B,gBAAgB,MAG1CmG,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,YACPr2B,KAAM,mBACNq7B,QAAS7yB,EACTulB,SAAUplB,EAAK67B,oBAGnB91B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAACx7B,YAAY,MAGtCkG,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACErF,MAAO,SACPr2B,KAAM,eACNq7B,QAAS5yB,EACTslB,SAAUplB,EAAK87B,gBAGnB/1B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAACv7B,QAAQ,MAGlCiG,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,UACtBzwB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,KAAYxnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,cAGfrG,EAAKm7B,mBAAmBjgC,IAAI,SAAAshC,GAAM,OACjCz2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,CAAUrmB,IAAG,gBAAAlN,OAAkBsjC,EAAO3lC,QACpCkP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACE0J,OAAK,EACL/O,MAAO8O,EAAO9O,MACdr2B,KAAM,eACNR,MAAO2lC,EAAO3lC,MACd67B,QAASj7B,IAAW+kC,EAAO3lC,MAC3BuuB,SAAUplB,EAAKi8B,qBAGnBl2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAAC5jC,OAAQ+kC,EAAO3lC,gBAO/C,CAAC+O,SAAU,QAAS8tB,OAAQ,kBAC1B3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KACEluB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMuL,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC/Cx2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,UACtBzwB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,KAAYxnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,aAGfrG,EAAKk7B,kBAAkBhgC,IAAI,SAAAshC,GAAM,OAChCz2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,CAAUrmB,IAAG,eAAAlN,OAAiBsjC,EAAO3lC,QACnCkP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACE0J,OAAK,EACL/O,MAAO8O,EAAO9O,MACdr2B,KAAM,cACNR,MAAO2lC,EAAO3lC,MACd67B,QAASl7B,IAAUglC,EAAO3lC,MAC1BuuB,SAAUplB,EAAKk8B,oBAGnBn2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAAC7jC,MAAOglC,EAAO3lC,YAI1CkP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,UACtBzwB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,KAAYxnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,eAGfrG,EAAKi7B,mBAAmB//B,IAAI,SAAAshC,GAAM,OACjCz2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,CAAUrmB,IAAG,gBAAAlN,OAAkBsjC,EAAO3lC,QACpCkP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACE0J,OAAK,EACL/O,MAAO8O,EAAO9O,MACdr2B,KAAM,eACNR,MAAO2lC,EAAO3lC,MACd67B,QAASh7B,IAAW8kC,EAAO3lC,MAC3BuuB,SAAUplB,EAAKg8B,qBAGnBj2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAAC3jC,OAAQ8kC,EAAO3lC,gBAOjD,CAAC+O,SAAU,mBAAoB8tB,OAAQ,kBACrC3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KACEluB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMuL,WAAS,EAACrB,QAAS,QAAS8F,cAAe,UAC9Cv8B,EAAKo7B,oBAAoBlgC,IAAI,SAAAshC,GAAM,OAClCz2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,CAAUrmB,IAAG,iBAAAlN,OAAmBsjC,EAAO3lC,QACrCkP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa9Z,MAAO,GAClB/W,EAAAC,EAAAtP,cAACq8B,GAAA,EAAD,CACE0J,OAAK,EACL/O,MAAO8O,EAAO9O,MACdr2B,KAAM,gBACNR,MAAO2lC,EAAO3lC,MACd67B,QAAS3yB,IAAYy8B,EAAO3lC,MAC5BuuB,SAAUplB,EAAK+7B,sBAGnBh2B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAa1N,QAAS,QAASsN,UAAW,SACvCx2B,EAAKq7B,eAAe,CAACt7B,QAASy8B,EAAO3lC,kCA/RtCuQ,aAwXfuhB,iNAhEbxK,MAAQ,CACN3iB,KAAM,KACN5D,SAAUyB,EAAO6G,wBAcnBu3B,eAAiB,SAAAhlB,GACfhR,EAAK0jB,SAAS,SAAAhH,GAAK,MAAK,CACtBvmB,SAAS4B,OAAAsM,EAAA,EAAAtM,CAAA,GACJ2kB,EAAMvmB,SACN6a,EAFG,CAGNlb,MAAMiC,OAAAsM,EAAA,EAAAtM,CAAA,GACD2kB,EAAMvmB,SAASL,MACfkb,EAAOlb,eAMlBmlC,KAAO,WACLj7B,EAAK8C,MAAM/G,OAAOi6B,eAAeh2B,EAAK0c,MAAMvmB,mFAGrC,IACAA,EAAY2B,KAAK4kB,MAAjBvmB,SACA4F,EAAUjE,KAAKgL,MAAf/G,OAEP,OACEuI,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEC,QAASnnB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,IAAKE,KAAM,MAAOV,QAAS,aAC/C+f,KAAM,QACNwH,OAAQ,WACRW,QAAS,CACP,CAAC3nB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,OAAQP,QAAS,OAAQmoB,UAAU,EAAM5X,QAAS7c,KAAKmjC,OAE/D72B,QAAS,CAAC82B,WAAW,EAAM92B,QACzBE,EAAAC,EAAAtP,cAACkmC,GAAD,CACEhlC,SAAUA,EACV6/B,eAAgBl+B,KAAKk+B,eACrBp3B,uBAAwB7C,EAAO6C,uBAC/BC,2BAA4B9C,EAAO8C,mFA9CbiE,EAAO4Z,GACrC,OAAI5Z,EAAM/I,MAAQ+I,EAAM/I,OAAS2iB,EAAM3iB,KAC9B,CACLA,KAAM+I,EAAM/I,KACZ5D,SAAU2M,EAAM/G,OAAO5F,UAIpB,UAdYwP,cC/SjBy1B,oLACK,IAEHC,EAAeC,EAFZr4B,EACgBnL,KAAKgL,MAArBlH,EADAqH,EACArH,KAAMsN,EADNjG,EACMiG,OAETtN,EACEA,EAAK2/B,eAAe1iC,KAAOqQ,EAAOrQ,IACpCwiC,EAAgBz/B,EAAK2/B,eACrBD,EAAuB1/B,EAAK4/B,uBACnB5/B,EAAK6/B,eAAe5iC,KAAOqQ,EAAOrQ,IAC3CwiC,EAAgBz/B,EAAK6/B,eACrBH,EAAuB1/B,EAAK8/B,wBAE5BL,EAAgB,KAChBC,EAAuB,OAGzBD,EAAgB,KAChBC,EAAuB,MAEzB,IAAMK,EAAW//B,GAAQA,EAAKmxB,eAAiB7jB,EAAOrQ,GACtD,OACEyL,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGo2B,EAAWr3B,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,SAAUg0B,MAAO,UAAc,KAAM,IAC7DtlB,EAAAC,EAAAtP,cAAA,QAAM2gB,MAAO+lB,EAAW,CAAC/R,MAAO,gBAAapzB,GAC1C0S,EAAOtT,KACPylC,IAAkBz/B,EAAK0sB,aACtBhkB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACG,IADH,IACS+1B,EACLh3B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGo2B,EAAQ,IAAAlkC,OAAO4jC,EAAcO,WAAcP,EAAcQ,WACzD,IAAIv3B,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,+BAAiC,IACjD0lC,GAGHh3B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACG81B,EAAcvL,MACd,IAFH,IAESuL,EAAcO,UAFvB,IAEmCP,EAAcQ,YAVrD,KAcE,MAENv3B,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,QAAStD,KAAM,OAAQoD,KAAMre,EAAOrQ,aA1ClC8M,aAqDzBm2B,8MACJpf,MAAQ,CACNgW,aAAc,QAGhBqJ,aAAeC,aAAe,CAC5B,SAAAl5B,GAAK,OAAIA,EAAMD,MAAMo5B,OAAOpjC,IAC5B,SAAAiK,GAAK,OAAIA,EAAMtH,UAAU6E,OACxB,SAAC67B,EAAQC,GAAT,OAAuBA,EAAUD,OAMpCE,oBAAsBJ,aAAe,CACnC,SAAAl5B,GAAK,OAAIA,EAAM/I,MACf,SAAA+I,GAAK,OAAIA,EAAMrI,WACf,kBAAM5C,EAAK+D,OACV,SAAC7B,EAAD2J,EAA0B9H,GAAS,IAArBssB,EAAqBxkB,EAA3BrD,KACHooB,EAAUP,EAAUtsB,EAAKoF,QAAQ,IACjC0nB,EAAUR,EAAUtsB,EAAKoF,QAAQ,IACjC8nB,IAAgB/uB,GAAO0uB,EAAQ5vB,KAAOkB,EAAKlB,GAC3CkwB,IAAgBhvB,GAAO2uB,EAAQ7vB,KAAOkB,EAAKlB,GAIjD,MAAO,CACL4vB,UAASC,UACTI,gBAAeC,gBACfsT,WANiBvT,EAAgB9iB,EAAKuB,SAAWwhB,EAAgB/iB,EAAK0D,SAAW,KAMrEolB,UALIhG,EAAgBJ,EAAUK,EAAgBN,EAAU,UAaxE6T,iBAAmBN,aAAe,CAChC,kBAAMnkC,EAAK+D,OACV,SAAAA,GAAI,OAAIA,EAAOoK,EAAKgN,QAAQwV,YAAY5sB,EAAKA,MAAQ,SAMxD2gC,oBAAsB,WACpB1kC,EAAKiL,MAAMmlB,eAAe,SAG5B2K,OAAS,SAAAvxB,GACPxJ,EAAKiL,MAAM/G,OAAOygC,eAAe3kC,EAAK+D,KAAMyF,MAiB9Co7B,MAAQ,WACN5kC,EAAKiL,MAAMmlB,eAAe,SAG5BuL,eAAiB,SAAAr9B,GACf0B,EAAKiL,MAAM/G,OAAOi6B,eAAe7/B,MAGnCumC,UAAY,SAAA9+B,GACV,IAAMmF,EAAM5K,OAAOiB,SAASs/B,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAM78B,EAAO/D,EAAK+D,KADC+gC,EAEQ9kC,EAAK+kC,YAAzBnU,EAFYkU,EAEZlU,QAASC,EAFGiU,EAEHjU,QAChBiQ,UAAUF,MAAM,CACdxK,MAAK,kBAAAx2B,OAAoBmE,EAAKkF,SAAW,SAAW,OAA/C,KAAArJ,OAAyDgxB,EAAQ7yB,KAAjE,QAAA6B,OAA4EixB,EAAQ9yB,MACzFd,KAAI,GAAA2C,OAAKmE,EAAKkF,SAAU,kBAAmB,aAAvC,4BAAArJ,OAA8EgxB,EAAQ7yB,KAAtF,SAAA6B,OAAkGixB,EAAQ9yB,MAC9GmN,QACC61B,MAAM,WACPj6B,EAAsBoE,GACtB81B,MAAM,mCAGRl6B,EAAsBoE,GACtB81B,MAAM,4BAERj7B,EAAEi/B,oBAGJ3N,cAAgB,WAAM,IACbJ,EAAaj3B,EAAK+kC,YAAlB9N,UACHA,GACFj3B,EAAKiL,MAAM/G,OAAOkzB,kBAAkBH,EAAUj2B,OAIlDikC,kBAAoB,WAClBjlC,EAAKiL,MAAM/G,OAAOkzB,mBAAkB,MAGtC+D,qBAAuB,SAAAN,GACrB76B,EAAK6rB,SAAS,CAACgP,oBAGjBqK,iBAAmB,WACjBp+B,GAAuB9G,EAAK6kB,MAAMgW,cAAgB76B,EAAK6kB,MAAM9gB,MAAMwM,kBACnEywB,MAAM,yHA1DN,IAAMj9B,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKgL,MAAMmlB,eAAersB,gDAK5B,IAAMA,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKgL,MAAMmlB,eAAersB,oCAoDrB,IAAAkR,EAAA9H,EAKHlN,KAAKgL,MAHP1J,EAFK4L,EAEL5L,SAAU2C,EAFLiJ,EAEKjJ,OAAQhC,EAFbiL,EAEajL,KAAM6B,EAFnBoJ,EAEmBpJ,KAAMqsB,EAFzBjjB,EAEyBijB,eAFzBuH,EAAAxqB,EAGLvK,UAAYkG,EAHP6uB,EAGO7uB,eAAsBunB,EAH7BsH,EAGuBnvB,KAHvB28B,EAAAh4B,EAGyCxJ,UAAuByhC,EAHhED,EAGqD/7B,UAAmCi8B,EAHxFF,EAGgFj8B,OAC7DonB,EAJnBnjB,EAIL9I,gBAAkBmE,KAEbqyB,EAAgB56B,KAAK4kB,MAArBgW,aACAnK,EAAYzwB,KAAZywB,SAEP,IAAKA,EACH,OACEjkB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,MAAM,EACN9U,KAAM,OACNmH,QAASxzB,KAAKykC,oBACd5Q,OAAQ,sBACRvnB,QAAS,wGACTkoB,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAPnD,uBAXG,IAAA4Q,EAyByErlC,KAAK8kC,YAA9E9N,EAzBAqO,EAyBArO,UAAWrG,EAzBX0U,EAyBW1U,QAASC,EAzBpByU,EAyBoBzU,QAASI,EAzB7BqU,EAyB6BrU,cAAeC,EAzB5CoU,EAyB4CpU,cAAesT,EAzB3Dc,EAyB2Dd,WAClE,IAAK5T,IAAYC,EACf,OAAO,KAGT,IAAM0U,EACJ94B,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACi7B,GAAD,CAAqBpB,UAAW/0B,IAChCuK,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAACi9B,GAAD,CACEn4B,KAAMA,EACNkuB,eAAgBA,EAChB3sB,MAAO4hC,EAAYzlC,OAAOwlC,GAC1B/U,UAAWA,EACXC,gBAAiBA,EACjBC,OAAK,EACLvnB,MAAI,EACJwnB,cAAezsB,EAAOA,EAAK/C,GAAK,KAChCgjB,SAAS,EACTzkB,mBAAoB2E,EAAO3E,sBAI3BmK,EAAa3F,EAAOusB,EAAgBvsB,EAAK0sB,cAAgB,KAE/D,OACEhkB,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACooC,GAAD,MACA/4B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM6xB,WAAS,EAAClS,KAAM,UAAWsR,UAAQ,EAACrR,MAAO,CAC/C,CAACzf,IAAK,QAASP,QAAS,QAASU,KAAM,IAAK6P,QAAS7c,KAAK2kC,MAAO7S,MAAO,MAAOsP,QAAQ,GACvF,CAACv0B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAAS6P,QAAS7c,KAAK4kC,UAAW93B,GAAIC,IAChFf,GAAI1K,EAAS6K,SAAU2lB,MAAO,QAASsP,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,6BAC9D,CAAC9zB,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,UAAWF,GAAIC,IAC3Df,GAAE,qBAAArM,QAAwBi7B,GAAgBnK,GAAUvgB,wBAA0B4hB,MAAO,QAASsP,QAAQ,EACtGjL,MAAO,uCAAwCoC,OAAQ,UACxDt2B,GAAQA,EAAKujC,MAAS,CAAC34B,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,OAAQF,GAAIC,IAC/Ef,GAAE,2BAAArM,QAA8Bi7B,GAAgBnK,GAAUngB,kBAAoBwhB,MAAO,QAASsP,QAAQ,EACtGjL,MAAO,8CAA+CoC,OAAQ,UAAY,KAC3Et2B,GAAQA,EAAKujC,MAAS,CAAC34B,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBwlB,MAAO,QAASsP,QAAQ,EAClHjL,MAAO,0CAA2CtZ,QAAS7c,KAAKilC,kBAAoB,MACtFlhC,OAAO,SAAA26B,GAAI,OAAIA,OAEnBlyB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM6xB,WAAS,EAAClS,KAAM,UAAWC,MAAO,CACtC,CAACzf,IAAK,WAAYP,QAChBE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGujB,EAAgBxkB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,QAAS9kB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAAtP,cAACsoC,GAAD,CAAkB3hC,KAAMA,EAAMsN,OAAQuf,KAEvCmB,MAAOd,EAAgB,aAAUtyB,GACpC,CAACmO,IAAK,WAAYP,QAChBE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGwjB,EAAgBzkB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,QAAS9kB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAAtP,cAACsoC,GAAD,CAAkB3hC,KAAMA,EAAMsN,OAAQwf,KAEvCkB,MAAOb,EAAgB,aAAUvyB,GACpC+K,EAAa,CAACoD,IAAK,aAAcP,QAC/BE,EAAAC,EAAAtP,cAACuoC,EAAA,EAAD,CAAS15B,GAAE,eAAArM,OAAiB8J,EAAW1I,KACrCyL,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,YADd,IAC6B2L,EAAW3L,MAEvCgP,GAAI,QAAU,MACjB/I,OAAO,SAAA26B,GAAI,OAAIA,QAGrBlyB,EAAAC,EAAAtP,cAACggC,GAAA,EAAD,CAAYrwB,GAAIwwB,WAAUC,SAAU,KACjC+H,GAEH94B,EAAAC,EAAAtP,cAACkkC,GAAD,CACEp/B,KAAMA,EACN+0B,UAAWA,EACX0E,eAAgB17B,KAAK07B,eACrB53B,KAAM2sB,EACN2L,UAAWt4B,EACXq4B,OAAKnnB,EAAA,GAAA/U,OAAAqU,EAAA,EAAArU,CAAA+U,EAAI9G,EAAKuB,SAAWkhB,EAAQ7yB,MAA5BmC,OAAAqU,EAAA,EAAArU,CAAA+U,EAAmC9G,EAAK0D,SAAWgf,EAAQ9yB,MAA3DkX,GACLyQ,aAAc,CAAC8e,GAAYxgC,OAAO,SAAAqN,GAAM,OAAIA,IAC5C0pB,OAAQ96B,KAAK86B,OACb1D,cAAep3B,KAAKo3B,cACpB4N,kBAAmBhlC,KAAKglC,kBACxBn8B,eAAgBA,EAChBqyB,qBAAsBl7B,KAAKk7B,sBAE3B1uB,EAAAC,EAAAtP,cAACggC,GAAA,EAAD,CAAYrwB,GAAIkmB,KAAKE,IAAKkK,SAAU,KACjCkI,kCAvNT,OAAOtlC,KAAKikC,aAAajkC,KAAKgL,2CAuB9B,OAAOhL,KAAKskC,oBAAoBtkC,KAAKgL,wCAQrC,OAAOhL,KAAKwkC,iBAAiBxkC,KAAKgL,cA1CP6C,aAsP/Bm2B,GAAmBj2B,YAAWqhB,GAAW4U,SAEnC2B,8MACJnB,iBAAmBN,aAAe,CAChC,SAAAl5B,GAAK,OAAIA,EAAMlH,OACd,SAAAA,GAAI,OAAIA,EAAOoK,EAAKgN,QAAQwV,YAAY5sB,EAAKA,MAAQ,+EAM/C,IAAAoc,EAKHlgB,KAAKgL,MAHPmlB,EAFKjQ,EAELiQ,eAAgBrsB,EAFXoc,EAEWpc,KAAMG,EAFjBic,EAEiBjc,OAAQhC,EAFzBie,EAEyBje,KAAkBsG,EAF3C2X,EAE+Bvd,UAAY4F,KAF3Cq9B,EAAA1lB,EAGLxc,UAAYF,EAHPoiC,EAGOpiC,MAAOyF,EAHd28B,EAGc38B,OAAQE,EAHtBy8B,EAGsBz8B,UAAWC,EAHjCw8B,EAGiCx8B,WAAYC,EAH7Cu8B,EAG6Cv8B,cAC1BgnB,EAJnBnQ,EAIL9b,gBAAkBmE,KAEpB,IAAKtI,OAAO2iB,OAAOra,GAAM9J,OACvB,OAAO,KAET,IAAMgyB,EAAWzwB,KAAKywB,SACtB,OACEjkB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAMlK,KAAKgL,MAAMD,MAAMb,MAClCsC,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,UAAWsnB,MAAO,gBAAiB7H,MAAOrjB,EAAQ6oB,MAAO,SAC/D,CAACjlB,IAAK,aAAcsnB,MAAO,mBAAoB7H,MAAOnjB,EAAW2oB,MAAO,SACxE,CAACjlB,IAAK,UAAWsnB,MAAO,gBAAiB7H,MAAOljB,GAChD,CAACyD,IAAK,aAAcsnB,MAAO,mBAAoB7H,MAAOjjB,GACtD,CAACwD,IAAK,MAAOsnB,MAAO,YAAa7H,MAAO9oB,IACxCO,OAAO,SAAA+H,GAAA,OAAAA,EAAEwgB,MAAiB7tB,SAAQkD,IAAI,SAAAoK,GAAA,IAAEc,EAAFd,EAAEc,IAAKsnB,EAAPpoB,EAAOooB,MAAO7H,EAAdvgB,EAAcugB,MAAOwF,EAArB/lB,EAAqB+lB,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACi9B,GAAD,CACEn4B,KAAMA,EACNmuB,UAAW7nB,EACX8nB,gBAAiBA,EACjB7sB,MAAO8oB,EACP6D,eAAgBA,EAChB7wB,mBAAoB2E,EAAO3E,6BAMrCkN,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOxD,KAAI,GAAAvK,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,SACTsC,EAAAC,EAAAtP,cAAC0oC,GAAD,CAAkB/hC,KAAMA,EAAM2sB,SAAUA,EAAUN,eAAgBA,uCAtCxE,OAAOnwB,KAAKwkC,iBAAiBxkC,KAAKgL,cANb6C,aA8DVE,eAAWqhB,GAAWuW,6CCxXtBG,GAAA,CACbC,cCqBoB,+NApBd1lC,OAAO2lC,cAAmD,WAAnC3lC,OAAO2lC,aAAaC,2CACvC5lC,OAAO2lC,aAAaE,gRAKvBjiC,EAAO3E,mBAAmB8G,qFAGzBpG,KAAKkmC,2BACX,GAAI7lC,OAAO2lC,cAAmD,YAAnC3lC,OAAO2lC,aAAaC,WAC7C,IACEhmC,OAAAkmC,GAAA,EAAAlmC,CAAI+lC,aAAJjtB,MAAAqtB,UAAA/9B,MAAA6nB,KAAAmW,IACA,MAAOvgC,GACPpF,QAAQu7B,MAAM,8BAA+Bn2B,mICD/CwgC,sNACJC,mBAAqBrC,aAAe,CAClC,SAAAl5B,GAAK,OAAIA,EAAMD,MAAMo5B,OAAOpjC,IAC5B,SAAAiK,GAAK,OAAIA,EAAM5G,gBAAgBmE,OAC9B,SAACioB,EAAcH,GAAf,OAAmCA,EAAgBG,OAMtDgW,0BAA4B,WAC1BzmC,EAAKiL,MAAM2pB,qBAAqB,SAiBlCgQ,MAAQ,WACN5kC,EAAKiL,MAAM2pB,qBAAqB,SAGlC8R,gBAAkB,SAAA3gC,GAChB,IAAMmF,EAAM5K,OAAOiB,SAASs/B,KAC5B,GAAIC,UAAUF,MAAO,KACZl3B,EADYxJ,OAAAymC,GAAA,EAAAzmC,CAAAF,GACZ0J,WACPo3B,UAAUF,MAAM,CACdxK,MAAK,kBAAAx2B,OAAoB8J,EAAWG,QAAWH,EAAWT,SAAW,OAAS,OAAU,SAAnF,gBAAArJ,OAA0G8J,EAAW3L,MAC1Hd,KAAI,GAAA2C,OAAK8J,EAAWG,QAAWH,EAAWT,SAAW,cAAgB,aAAgB,SAAjF,0BAAArJ,OAAkH8J,EAAW3L,MACjImN,QACC61B,MAAM,WACPj6B,EAAsBoE,GACtB81B,MAAM,mCAGRl6B,EAAsBoE,GACtB81B,MAAM,4BAERj7B,EAAEi/B,oBAGJ4B,oBAAsB,WAAM,IACnBl9B,EADmBxJ,OAAAymC,GAAA,EAAAzmC,CAAAF,GACnB0J,WACP1J,EAAKiL,MAAM27B,oBAAoBl9B,MAGjCm9B,gBAAkB,WAAM,IACfn9B,EADexJ,OAAAymC,GAAA,EAAAzmC,CAAAF,GACf0J,WACP1J,EAAKiL,MAAM47B,gBAAgBn9B,MAG7Bo9B,gBAAkB,WAAM,IACfp9B,EADexJ,OAAAymC,GAAA,EAAAzmC,CAAAF,GACf0J,WACP1J,EAAKiL,MAAM67B,gBAAgBp9B,uFAjDT,IACXA,EAAczJ,KAAdyJ,WACHA,GACFzJ,KAAKgL,MAAM2pB,qBAAqBlrB,gDAIf,IACZA,EAAczJ,KAAdyJ,WACHA,GACFzJ,KAAKgL,MAAM2pB,qBAAqBlrB,oCA0C3B,IAAA0B,EAIHnL,KAAKgL,MAFP1J,EAFK6J,EAEL7J,SAAU2C,EAFLkH,EAEKlH,OAAQhC,EAFbkJ,EAEalJ,KAAMkuB,EAFnBhlB,EAEmBglB,eACNC,EAHbjlB,EAGLxI,UAAY4F,KAAoC87B,EAH3Cl5B,EAGyBzH,UAAY6E,KAE/B8nB,EALNllB,EAGuD/G,gBAEvDmE,KACAkB,EAAczJ,KAAdyJ,WAEP,IAAKA,EACH,OACE+C,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,MAAM,EACN9U,KAAM,OACNmH,QAASxzB,KAAKwmC,0BACd3S,OAAQ,4BACRvnB,QAAS,oHACTkoB,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAPnD,6BAcJ,IAAMqS,EAAU1nC,IAAE4D,QAAQyG,EAAWP,QAAQvH,IAAI,SAAAolC,GAAW,OAAI3W,EAAU2W,KAAe,CACvF,SAAA9kC,GAAI,OAAIwH,EAAWu9B,UAAYv9B,EAAWu9B,UAAU/kC,EAAKlB,IAAIkmC,OAAS,GACtE,SAAAhlC,GAAI,OAAIwH,EAAWu9B,UAAYv9B,EAAWu9B,UAAU/kC,EAAKlB,IAAImmC,aAAalP,MAAQ,GAClF,MACC,CAAC,OAAQ,OAAQ,SACdnD,IAAiB5yB,GAAOwH,EAAWP,QAAQR,SAASzG,EAAKlB,IACzD+zB,IAAiB7yB,GAAOwH,EAAWsrB,gBAAkB9yB,EAAKlB,GAEhE,OACEyL,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM6xB,WAAS,EAAClS,KAAM,UAAWsR,UAAQ,EAACrR,MAAO,CAC/C,CAACzf,IAAK,QAASP,QAAS,QAASU,KAAM,IAAK6P,QAAS7c,KAAK2kC,MAAO7S,MAAO,MAAOsP,QAAQ,GACvF,CAACv0B,IAAK,QAASP,QAAS,mBAAoBU,KAAM,QAAS6P,QAAS7c,KAAKymC,gBAAiB35B,GAAIC,IAC5Ff,GAAI1K,EAAS6K,SAAU2lB,MAAO,QAASsP,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,wCAIpEn0B,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAU9K,MAAX,CAAiB+K,OAAQ,QAASrR,KAAM,QACtC7f,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CACEngC,MAAOmM,EAAWG,QAAWH,EAAWT,SAAW,WAAtB,GAAArJ,OAAsC8J,EAAW2rB,MAAjD,KAAAz1B,OAA0D8J,EAAW4rB,QAAY,UAC9GlB,MAAO1qB,EAAWG,QAAWH,EAAWT,SAAW,SAAW,SAAY,WAE5EwD,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CACEngC,MAAOmM,EAAWP,QAAQzK,OAC1B01B,MAAO,UAET3nB,EAAAC,EAAAtP,cAACsgC,GAAA,EAAD,CACEngC,MAAOmM,EAAW6pB,UAClBa,MAAO,6BAGX3nB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMkK,QAAS,SACb1wB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,QAAQzwB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAK2kC,OAA/B,UAChCn4B,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,KACE7wB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEa,UAAQ,EACRznB,MAAI,EACJ6P,QAAS7c,KAAKymC,gBACd3oB,MAAO,CAACyF,MAAO,QACfzW,GAAIC,IACJf,GAAI1K,EAAS6K,SACbgqB,MAAO0K,UAAUF,MAAQ,iCAAmC,mCAE5Dn0B,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,UATd,wBAcJ2L,EAAWG,QAyCT,KAxCF4C,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMkK,QAAS,SACb1wB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,QACtBzwB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACErH,SAAU9iB,EAAWG,QACrBkU,MAAO,CAACyF,MAAO,QACfuO,MAAO+C,EAAiB,SAAW,QACnChY,QAAS7c,KAAK2mC,qBAEbl9B,EAAWG,QAAU,KAAO4C,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM+2B,EAAiB,YAAc,SACvEA,EAAiB,gBAChBprB,EAAWG,QACTH,EAAWT,SAAW,sBAAwB,qBAC5C,wBAIVwD,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,KACE7wB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACErH,UAAWuI,GAAkBgS,EAAQroC,OAAS,GAAKgL,EAAWG,QAC9D6qB,UAAQ,EACRznB,MAAI,EACJ6P,QAAS7c,KAAK4mC,gBACd9oB,MAAO,CAACyF,MAAO,QACfuO,MAAOgV,EAAQroC,QAAU,GAAKq2B,EAAiB,QAAsB,UAEpErrB,EAAWT,SAAY,KACtBwD,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAMgpC,EAAQroC,QAAU,EAAKq2B,EAAiB,OAAS,YAAe,SAE7ErrB,EAAWG,QACVH,EAAWT,SAAW,WAAa,UAEnC89B,EAAQroC,QAAU,EAChBq2B,EAAiB,mBAAqB,kCACpC,kCAOhBtoB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACGrqB,EAAWG,QACV4C,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,EAAM2P,UAAU,GAAQ33B,MAAO,CACnD,CAACiB,SAAU,WAAY8tB,OAAQ,kBAC7B3tB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClC96B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMvV,OAAP,KACEplB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,KACGzpB,EAAWT,SAAWwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,UAAyC,KAChE/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,aACA/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,aACA/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,mBACA/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,uBACC99B,EAAWG,UAAYH,EAAWT,SAAWwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,aAA4C,KACzF99B,EAAWT,SAAWwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,yBAAwD,OAGnF/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMK,KAAP,KACGV,EAAQnlC,IAAI,SAAAyP,GACX,IAAMq2B,EAAQh+B,EAAWu9B,UAAU51B,EAAOrQ,IAC1C,OACEyL,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,CAAWrmB,IAAKuE,EAAOrQ,IACpB0I,EAAWT,SACVwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMrkC,MAAQ,EACzBoJ,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CACEj0B,KAAM,CAACg4B,EAAG,SAAUC,EAAG,cAAeC,EAAG,eAAeyR,EAAMrkC,MAC9D0uB,MAAO,CAACgE,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASyR,EAAMrkC,QAElD,MACF,KACJoJ,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMrkC,MACnBoJ,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KACEnY,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,OAAQtD,KAAM,OAAQoD,KAAMre,EAAOrQ,KACvDqQ,EAAOtT,MAEV0O,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMR,SAAWQ,EAAMC,YAAcD,EAAMR,OAA3C,GAAAtnC,OAAuD8nC,EAAMC,YAA7D,MAAA/nC,OAA6E8nC,EAAMR,OAAnF,MACbz6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMP,aAAaS,eAAeC,QAAQ,IACtDn+B,EAAWG,UAAYH,EAAWT,SACjCwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMI,oBAAsB,yBACvCJ,EAAMlX,cACJ/jB,EAAAC,EAAAtP,cAAC41B,GAAD,CACE9wB,KAAM,KACNmuB,UAAWA,EACXC,gBAAiBA,EACjBvsB,KAAMugC,EAAUoD,EAAMlX,eACtBJ,eAAgBA,EAChBG,OAAK,EACLvnB,MAAI,EACJzJ,mBAAoB2E,EAAO3E,qBAE3B,YAEJ,KACHmK,EAAWT,SACVwD,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAa8iB,EAAMK,gBAAkB,EAAxB,IAAAnoC,OAAgC8nC,EAAMK,iBAAoBL,EAAMK,iBAC3E,YAOhB,CAACz7B,SAAU,QAAS8tB,OAAQ,kBAC1B3tB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClC96B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMvV,OAAP,KACEplB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,KACE1mB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACAv7B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACAv7B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,eAGH99B,EAAWu+B,SAASrmC,IAAI,SAACyzB,EAAO6S,GAAR,OACvBz7B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,CAAUZ,IAAKo7B,GACbz7B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMvV,OAAP,KACEplB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,KACE1mB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAAmB,YAAf3S,EAAM11B,KAAqB,cAAgB,KAA1E,SAAsF01B,EAAMA,SAGhG5oB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMK,KAAP,KACGpS,EAAM8S,SAASvmC,IAAI,SAAAiK,EAA4Cu8B,GAAc,IAAAC,EAAAnoC,OAAA4L,EAAA,EAAA5L,CAAA2L,EAAxD1C,QAAwD,GAA9Cm/B,EAA8CD,EAAA,GAAnCE,EAAmCF,EAAA,GAAvBhE,EAAuBx4B,EAAvBw4B,OAC/CtgC,EAAOugC,EAAUD,GACjBmE,EAAazkC,GAAQA,EAAKkF,UAAYlF,EAAKmxB,eAAiBoT,EAC5DG,EAAa1kC,GAAQA,EAAKkF,UAAYlF,EAAKmxB,eAAiBqT,EAClE,OACE97B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,CAAWrmB,IAAKs7B,GACd37B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,CAAYrX,UAAW0O,IAAW,kBAAmB,WAAY,CAACysB,eAAgBF,EAAYG,eAAgBF,KAC3GH,EACC77B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,OAAQtD,KAAM,OAAQoD,KAAM4Y,IAChDjY,EAAUiY,GAAWvqC,MAEtB,0BAEN0O,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,CAAYrX,UAAW0O,IAAW,kBAAmB,WAAY,CAACysB,eAAgBF,EAAYG,eAAgBF,KAC3G1kC,GAAQA,EAAKkF,SAAYlF,EAAKmxB,eAAiBoT,EAAY,IAAM,IAAO,KAE3E77B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,CAAYrX,UAAW0O,IAAW,kBAAmB,WAAY,CAACysB,eAAgBF,EAAYG,eAAgBF,KAC3GF,EACC97B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,OAAQtD,KAAM,OAAQoD,KAAM6Y,IAChDlY,EAAUkY,GAAWxqC,MAEtB,0BAEN0O,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,CAAYrX,UAAW0O,IAAW,kBAAmB,WAAY,CAACysB,eAAgBF,EAAYG,eAAgBF,KAC3G1kC,GAAQA,EAAKkF,SAAYlF,EAAKmxB,eAAiBqT,EAAY,IAAM,IAAO,KAE3E97B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KACG0jB,GAAaC,EACZxkC,EACE0I,EAAAC,EAAAtP,cAAC41B,GAAD,CACE9wB,KAAM,KACNmuB,UAAWA,EACXC,gBAAiBA,EACjBvsB,KAAMA,EACNqsB,eAAgBA,EAChBG,OAAK,EACLvnB,MAAI,EACJzJ,mBAAoB2E,EAAO3E,qBAE3B,kBACF,mBAYxBkN,EAAAC,EAAAtP,cAACgqC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClC96B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMvV,OAAP,KACEplB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,KACE1mB,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,aACA/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMI,WAAP,iBAGJ/6B,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMK,KAAP,KACGV,EAAQnlC,IAAI,SAAAyP,GAAM,OACjB5E,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMjU,IAAP,CAAWrmB,IAAKuE,EAAOrQ,IACrByL,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KACEnY,EAAAC,EAAAtP,cAAC60B,GAAD,CAAYrC,QAAS,OAAQtD,KAAM,OAAQoD,KAAMre,EAAOrQ,KACvDqQ,EAAOtT,MAEV0O,EAAAC,EAAAtP,cAACgqC,GAAA,EAAMxiB,KAAP,KAAavT,EAAO4mB,aAO/BlD,IAAmBrrB,EAAWG,QAC7B4C,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMkK,QAAS,SACb1wB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,CAAaJ,UAAW,SAExBzwB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKqK,OAAN,KACE7wB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACErH,KAAM,OACNsH,QACEnnB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACErH,UAAWuI,EACX8D,UAAQ,EACR5rB,MAAI,EACJ8Q,MAAO,CAACyF,MAAO,SAEf/W,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,SACX,oBAGL+1B,OAAQ,mBACRvnB,QAAS,iDACTkoB,QAAS,CACP,CAAC3nB,IAAK,MAAOP,QAAS,QAASuQ,QAAS7c,KAAK6mC,gBAAiBjO,UAAU,GACxE,CAAC/rB,IAAK,KAAMP,QAAS,sBAAuB+mB,WAAW,SAM/D,yCAvWR,OAAOrzB,KAAKumC,mBAAmBvmC,KAAKgL,cAPH6C,cAmYrCy4B,GAAyBv4B,YAAWqhB,GAAWkX,SAEzCqC,oLACK,IAAAz7B,EAIHlN,KAAKgL,MAFPmlB,EAFKjjB,EAELijB,eAAgBwE,EAFXznB,EAEWynB,qBAAsBgS,EAFjCz5B,EAEiCy5B,oBAAqBC,EAFtD15B,EAEsD05B,gBAAiBC,EAFvE35B,EAEuE25B,gBAAiBp9B,EAFxFyD,EAEwFzD,WAAYxH,EAFpGiL,EAEoGjL,KACvFmuB,EAHbljB,EAGLvK,UAAY4F,KAAkBnE,EAHzB8I,EAGyB9I,gBAEhC,OAAKnE,OAAO2iB,OAAOwN,GAAW3xB,OAI5B+N,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAMlK,KAAKgL,MAAMD,MAAMb,MAClCsC,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACo9B,GAAD,MACA/tB,EAAAC,EAAAtP,cAAA,WAAKqP,EAAAC,EAAAtP,cAAA,WACLqP,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,UAAWsnB,MAAO,kCAAmC7H,MAAOloB,EAAgB2F,gBAAiB+nB,MAAO,SAC1G,CAACjlB,IAAK,aAAcsnB,MAAO,uCAAwC7H,MAAOloB,EAAgB6F,mBAAoB6nB,MAAO,SACrH,CAACjlB,IAAK,UAAWsnB,MAAO,sBAAuB7H,MAAOloB,EAAgBgF,YACtE,CAACyD,IAAK,aAAcsnB,MAAO,yBAA0B7H,MAAOloB,EAAgBiF,gBAC5EtF,OAAO,SAAAiR,GAAA,OAAAA,EAAEsX,MAAiB7tB,SAAQkD,IAAI,SAAAmK,GAAA,IAAEe,EAAFf,EAAEe,IAAKsnB,EAAProB,EAAOqoB,MAAO7H,EAAdxgB,EAAcwgB,MAAOwF,EAArBhmB,EAAqBgmB,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACq9B,GAAD,CACEv4B,KAAMA,EACNmuB,UAAWA,EACXjsB,YAAamoB,EACbqI,qBAAsBA,YAMhCnoB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOxD,KAAI,GAAAvK,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,SACTsC,EAAAC,EAAAtP,cAACyrC,GAAD,CACEn/B,WAAYA,EACZ0mB,eAAgBA,EAChBwE,qBAAsBA,EACtBgS,oBAAqBA,EACrBC,gBAAiBA,EACjBC,gBAAiBA,MAhChB,YAPkBh5B,aA8DhBE,eAAWqhB,GAAWuZ,KC5c/BE,8MACJjkB,MAAQ,CACNzW,eAAgBpO,EAAKiL,MAAMmD,eAC3B5H,OAAQ,KACRuiC,iBAAkB,KAClBC,cAAe,KACfC,kBAAmB,KACnBt+B,KAAK,KASP+Q,gBAAkB,SAAAvK,GAAQ,IAAA/F,EACIpL,EAAKiL,MAA1Bi+B,EADiB99B,EACjB89B,QAASC,EADQ/9B,EACR+9B,SAChB,IAAKD,IAAYC,EACf,OAAO,EAHe,IAAApjB,EAK2B/lB,EAAK6kB,MAAjDkkB,EALiBhjB,EAKjBgjB,iBAAkBE,EALDljB,EAKCkjB,kBACzB,OANwBljB,EAKoBpb,MAIxCu+B,IAAYC,EACPnpC,EAAKopC,yBAAyBj4B,EAAM43B,GAClCI,IAAaD,EACflpC,EAAKqpC,2BAA2Bl4B,EAAM83B,GACpCC,GAAWC,EACfJ,GAAqBE,EAEfF,EACF/oC,EAAKopC,yBAAyBj4B,EAAM43B,KAClCE,GACFjpC,EAAKqpC,2BAA2Bl4B,EAAM83B,GAJtCjpC,EAAKopC,yBAAyBj4B,EAAM43B,QAFxC,MAgDT/yB,SAAW,SAAA7E,GAAQ,IAAAmoB,EACkCt5B,EAAK6kB,MAAjDkkB,EADUzP,EACVyP,iBAAkBE,EADR3P,EACQ2P,kBACzB,IAFiB3P,EAC2B3uB,IAC5C,CAFiB,IAAAwC,EAKWnN,EAAKiL,MAA1Bi+B,EALU/7B,EAKV+7B,QAASC,EALCh8B,EAKDg8B,SACZD,IAAYC,EACdnpC,EAAKspC,eAAen4B,EAAM43B,GACjBI,IAAaD,EACtBlpC,EAAKupC,iBAAiBp4B,EAAM83B,GACnBC,GAAWC,IACfJ,GAAqBE,EAEfF,GACT/oC,EAAKspC,eAAen4B,EAAM43B,GACP,IAAf53B,EAAKM,QACPzR,EAAK6rB,SAAS,CAACmd,cAAeD,IAC9B/oC,EAAKupC,iBAAiBp4B,EAAM83B,KAErBA,IACTjpC,EAAKupC,iBAAiBp4B,EAAM83B,GAC5BjpC,EAAK6rB,SAAS,CAACmd,cAAe,QAT9BhpC,EAAKspC,eAAen4B,EAAM43B,QA6DhCptB,eAAiB,SAAAxK,GACf,IAAKnR,EAAKiL,MAAMi+B,UAAYlpC,EAAKiL,MAAMk+B,SACrC,OAAO,EAFc,IAAAK,EAI4BxpC,EAAK6kB,MAAjDkkB,EAJgBS,EAIhBT,iBAAkBE,EAJFO,EAIEP,kBACzB,GALuBO,EAIqB7+B,IAE1C,OAAO,EANc,IAAAwV,EAQKngB,EAAKiL,MAA1Bi+B,EARgB/oB,EAQhB+oB,QAASC,EAROhpB,EAQPgpB,SAChB,OAAID,IAAYC,EACc,OAArBJ,GAA6BA,EAAiB94B,IAAMkB,EAAKlB,GAAK84B,EAAiB/4B,IAAMmB,EAAKnB,EACxFm5B,IAAaD,EACO,OAAtBD,GAA8BA,EAAkBh5B,IAAMkB,EAAKlB,GAAKg5B,EAAkBj5B,IAAMmB,EAAKnB,EAC3Fk5B,GAAWC,EAChBJ,EACKA,EAAiB94B,IAAMkB,EAAKlB,GAAK84B,EAAiB/4B,IAAMmB,EAAKnB,IAC3Di5B,IACFA,EAAkBh5B,IAAMkB,EAAKlB,GAAKg5B,EAAkBj5B,IAAMmB,EAAKnB,QAJnE,KAWTgN,KAAO,WAAM,IAAAyE,EACiBzhB,EAAKiL,MAA1Bi+B,EADIznB,EACJynB,QAASC,EADL1nB,EACK0nB,SADLM,EAEuDzpC,EAAK6kB,MAAhEkkB,EAFIU,EAEJV,iBAAkBC,EAFdS,EAEcT,cAAeC,EAF7BQ,EAE6BR,kBAF7BQ,EAEgD9+B,MAIvDu+B,IAAYC,EACdnpC,EAAK6rB,SAAS,CAACkd,iBAAkB,OACxBI,IAAaD,EACtBlpC,EAAK6rB,SAAS,CAACod,kBAAmB,OACzBC,GAAWC,IAChBJ,EACF/oC,EAAK6rB,SAAS,CAACkd,iBAAkB,OACxBE,GACTjpC,EAAK0pC,mBAAmBV,EAAeC,QAK7C5c,MAAQ,WAAM,IACLje,EAAkBpO,EAAKiL,MAAvBmD,eACPpO,EAAK6rB,SAAS,CACZzd,iBAAgB5H,OAAQ,KAAMmE,KAAK,EAAOo+B,iBAAkB,KAAMC,cAAe,KAAMC,kBAAmB,0FA1L3F7jB,EAAWC,EAAWC,GACnCF,EAAUhX,iBAAmBnO,KAAKgL,MAAMmD,gBAC1CnO,KAAKosB,yDA8BgBlb,EAAM43B,GAC7B,OAAKA,EAG0B,IAA3BA,EAAiBt3B,QAG0E,IAA3FK,KAAKC,IAAID,KAAKoJ,IAAI/J,EAAKlB,EAAI84B,EAAiB94B,GAAI6B,KAAKoJ,IAAI/J,EAAKnB,EAAI+4B,EAAiB/4B,QAGlFmB,EAAKM,MAAQs3B,EAAiBt3B,MAAS,KAGxCN,EAAKE,SAXAF,EAAKE,SAAWlD,EAAKuB,4DAiBLyB,EAAM83B,GAC/B,OAAKA,EAG4F,IAA7Fn3B,KAAKC,IAAID,KAAKoJ,IAAI/J,EAAKlB,EAAIg5B,EAAkBh5B,GAAI6B,KAAKoJ,IAAI/J,EAAKnB,EAAIi5B,EAAkBj5B,QAGrFmB,EAAKM,MAAQ,KAGbN,EAAKE,QARAF,EAAKE,SAAWlD,EAAKuB,gDAwCjByB,EAAM43B,GACfA,EACF9oC,KAAK4rB,SAAS,SAAAhgB,GAAA,IAAA89B,EAAEv7B,EAAFvC,EAAEuC,eAAF,MAAuB,CACnC26B,iBAAkB,KAClB36B,gBAAgBu7B,EAAAx7B,EAAKgN,SAAQrE,YAAb9E,MAAA23B,EAAA,CAAyBv7B,GAAzBxO,OAA4C,CAC1D,CAACqQ,EAAG84B,EAAiB94B,EAAGD,EAAG+4B,EAAiB/4B,EAAGqB,OAAQ,KAAME,OAAQ,MACrE,CAACtB,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGqB,OAAQ03B,EAAiB13B,OAAQE,OAAQw3B,EAAiBx3B,WAEnF/K,OAAQ,CACN,CAAC5I,KAAMmrC,EAAkB98B,GAAIkF,EAAMxR,KAAM,OAAQyf,OAAQ,UAE3DzU,IAAoB,IAAfwG,EAAKM,SAGZxR,KAAK4rB,SAAS,CAACkd,iBAAkB53B,+CAIlB63B,EAAeC,GAChChpC,KAAK4rB,SAAS,SAAA5W,GAAA,IAAA20B,EAAEx7B,EAAF6G,EAAE7G,eAAF,MAAuB,CACnC26B,iBAAkBC,EAClBC,kBAAmB,KACnB76B,gBAAgBw7B,EAAAz7B,EAAKgN,SAAQrE,YAAb9E,MAAA43B,EAAA,CAAyBx7B,GAAzBxO,OAA4C,CAC1D,CAACqQ,EAAGg5B,EAAkBh5B,EAAGD,EAAGi5B,EAAkBj5B,EAAGqB,OAAQ,KAAME,OAAQ,MACvE,CAACtB,EAAG+4B,EAAc/4B,EAAGD,EAAGg5B,EAAch5B,EAAGqB,OAAQ23B,EAAc33B,OAAQE,OAAQy3B,EAAcz3B,WAE/F/K,OAAQ,KACRmE,KAAK,8CAIQwG,EAAM83B,GACjBA,EACFhpC,KAAK4rB,SAAS,SAAA9f,GAAA,IAAEqC,EAAFrC,EAAEqC,eAAF,MAAuB,CACnC66B,kBAAmB,KACnB76B,eAAgBD,EAAKgN,QAAQrE,YAAY1I,EAAgB,CACvD6B,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGyB,MAAOrD,EAAe+C,EAAKnB,GAAG9R,MAAMiT,EAAKlB,GAAGwB,MAAQ,IAE5EjL,OAAQ,CACN,CAAC5I,KAAMqrC,EAAmBh9B,GAAIkF,EAAMxR,KAAM,QAASyf,OAAQ,aAI/Dnf,KAAK4rB,SAAS,CAACod,kBAAmB93B,qCAsD7B,IAAAwZ,EAC4E1qB,KAAKgL,MAAjF/G,EADAymB,EACAzmB,OAAQ2lC,EADRlf,EACQkf,MAAOX,EADfve,EACeue,QAASC,EADxBxe,EACwBwe,SAA0BW,EADlDnf,EACkCvc,eADlC27B,EAEoE9pC,KAAK4kB,MAAzEzW,EAFA27B,EAEA37B,eAAgB5H,EAFhBujC,EAEgBvjC,OAAQmE,EAFxBo/B,EAEwBp/B,IAAKo+B,EAF7BgB,EAE6BhB,iBAAkBE,EAF/Cc,EAE+Cd,kBAChDe,EAAc9lC,EAAO3E,mBACrBjB,EAAQ4B,OAAAsM,EAAA,EAAAtM,CAAA,GAAO8pC,EAAP,CAAoB/rC,MAAMiC,OAAAsM,EAAA,EAAAtM,CAAA,GAAK8pC,EAAY/rC,MAAlB,CAAyBwI,QAAS,cAEzE,OACEgG,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACGw7B,GAAWC,EACV18B,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAOpnB,EAAM,QAAU,OAAQsC,KAAMtC,EAAM,cAAWhM,EAAW4N,QACtE5B,EAAM,sCACHo+B,GAAqBE,EACpBF,EAAmB,0EACjB,2EAFsC,8BAO9Ct8B,EAAAC,EAAAtP,cAAA,YAEA,KACJqP,EAAAC,EAAAtP,cAACkuB,GAADprB,OAAA2M,OAAA,CACEwQ,SAAUlP,EAAKgN,QACfU,QAAM,EACN6J,aAAc,GACdlK,UAAW0tB,GAAWC,EACtB1tB,SAAUytB,GAAWC,EACrBztB,gBAAiBzb,KAAKyb,gBACtBC,eAAgB1b,KAAK0b,eACrB3F,SAAU/V,KAAK+V,SACfgH,KAAM/c,KAAK+c,KACX1e,SAAUA,EACV2e,UAAQ,EAACkL,YAAU,EACnB/Z,eAAgBA,GACX5H,EAAMtG,OAAAsM,EAAA,EAAAtM,CAAA,GAAO2pC,EAAP,CAAcrjC,WAAUqjC,IAEpCX,GAAWC,EACV18B,EAAAC,EAAAtP,cAAA,WACEqP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQ/W,QAAS7c,KAAKosB,MAAOG,SAAUpe,IAAmB07B,EAAwB/L,SAAO,GAAzF,UAEA,aAlPajwB,aAgQzBg7B,GAAW/6B,aAAe,CACxBm7B,SAAS,EACTC,UAAU,GAGZL,GAAazZ,GAAWyZ,QAElBmB,8MA8kCJplB,MAAQ,CACNqlB,UAAW,KAGbC,cAAgB,WACdzjC,EAAKmlB,SAAS,CAACqe,UAAW,OAG5BE,iBAAmB,WACjB1jC,EAAKmlB,SAAS,SAAAhH,GAAK,MAAK,CAACqlB,UAAWrlB,EAAMqlB,UAAY,QAGxDG,aAAe,WACb3jC,EAAKmlB,SAAS,SAAAhH,GAAK,MAAK,CAACqlB,UAAWrlB,EAAMqlB,UAAY,QAGxDI,aAAe,WACb5jC,EAAKmlB,SAAS,CAACqe,UAAWxjC,EAAKC,YAAY4jC,MAAM7rC,OAAS,6EAGnD,IACAwrC,EAAajqC,KAAK4kB,MAAlBqlB,UACDK,EAAQtqC,KAAK0G,YAAY4jC,MACzBC,EAAOD,EAAML,GAEnB,OACEz9B,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,KACEh+B,EAAAC,EAAAtP,cAACqtC,EAAA,EAAQ9Y,QAAT,KACEllB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMkK,QAAS,QAAS8F,cAAe,SAAU/F,UAAW,UAC1DzwB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM2f,KAAM,UAAWC,MAAO,CAC5B,CAACzf,IAAK,QAASG,KAAM,gBAAiB6P,QAAS7c,KAAKkqC,cAAe3d,SAAwB,IAAd0d,GAC7E,CAACp9B,IAAK,WAAYG,KAAM,WAAY6P,QAAS7c,KAAKmqC,iBAAkB5d,SAAwB,IAAd0d,GAC9E,CAACp9B,IAAK,OAAQG,KAAM,UAAW6P,QAAS7c,KAAKoqC,aAAc7d,SAAU0d,IAAcK,EAAM7rC,OAAS,GAClG,CAACoO,IAAK,OAAQG,KAAM,eAAgB6P,QAAS7c,KAAKqqC,aAAc9d,SAAU0d,IAAcK,EAAM7rC,OAAS,OAG3G+N,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KAAU1mB,EAAAC,EAAAtP,cAACqtC,EAAA,EAAQ5Y,OAAT,KAAiBqY,EAAY,EAA7B,MAAmCM,EAAKpU,QAClD3pB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KAAU1mB,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CAASl+B,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,CAAUZ,IAAKo9B,GAAYM,EAAKntC,SAC5DoP,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACG+W,EAAYK,EAAM7rC,OAAS,EAC1B+N,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQkK,SAAO,EAACjhB,QAAS7c,KAAKoqC,aAAcp9B,KAAM,UAAWV,QAAS,oBAEtEE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQa,UAAQ,EAAC3nB,GAAIC,IAASf,GAAI,SAAUgB,KAAM,OAAQV,QAAS,6BACnEE,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQa,UAAQ,EAAC3nB,GAAIC,IAASf,GAAI,WAAYgB,KAAM,UAAWV,QAAS,sDA3nChEuB,aAApBm8B,GACGM,MAAQ,CACb,CAACnU,MAAO,eAAgB/4B,KAAMoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAC5BjB,EAAAC,EAAAtP,cAAA,4CACgCqP,EAAAC,EAAAtP,cAAA,+BADhC,wCAGAqP,EAAAC,EAAAtP,cAAA,sCAC0BqP,EAAAC,EAAAtP,cAAA,iCAD1B,sBAC6EqP,EAAAC,EAAAtP,cAAA,uBAAuB,QAClGqP,EAAAC,EAAAtP,cAAA,uBAFF,aAEkCqP,EAAAC,EAAAtP,cAAA,wBAFlC,UAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAAA,kBACMqP,EAAAC,EAAAtP,cAAA,2BADN,qDACkFqP,EAAAC,EAAAtP,cAAA,2BADlF,uBAEoBqP,EAAAC,EAAAtP,cAAA,uCAFpB,8BAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,gBAE7D,CAACvC,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,iBAG/Ds3B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,eAKrE,CAACgX,MAAO,SAAU/4B,KAAMoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACtBjB,EAAAC,EAAAtP,cAAA,sBACUqP,EAAAC,EAAAtP,cAAA,+BADV,sBAC2DqP,EAAAC,EAAAtP,cAAA,8BAD3D,IAEEqP,EAAAC,EAAAtP,cAAA,4BAFF,QAEkCqP,EAAAC,EAAAtP,cAAA,4BAFlC,KAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAAA,sBACUqP,EAAAC,EAAAtP,cAAA,+DADV,+BAGAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,gBAE7D,CAACvC,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAAA,+BACmBqP,EAAAC,EAAAtP,cAAA,wCADnB,6BACoFqP,EAAAC,EAAAtP,cAAA,+CADpF,cAE+BqP,EAAAC,EAAAtP,cAAA,4CAF/B,mBAGKqP,EAAAC,EAAAtP,cAAA,0BAHL,qBAGgDqP,EAAAC,EAAAtP,cAAA,mCAHhD,KAKAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,gBAE7D,CAACvC,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD23B,SAAO,MAGX,CAAC9S,MAAO,SAAU/4B,KAAKoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACrBjB,EAAAC,EAAAtP,cAAA,oCACwBqP,EAAAC,EAAAtP,cAAA,6BADxB,KACsDqP,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,SAAd,UADtD,IAEEtlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,QAAd,WAFF,KAEyCtlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,UAAd,WAFzC,IAGEtlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,OAAd,WAHF,aAGgDtlB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOC,MAAO,QAAd,2BAHhD,KAKAtlB,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAAA,yBACaqP,EAAAC,EAAAtP,cAAA,8BADb,QAC+CqP,EAAAC,EAAAtP,cAAA,2CAD/C,SAC+FqP,EAAAC,EAAAtP,cAAA,wCAD/F,aAEmCqP,EAAAC,EAAAtP,cAAA,+CAFnC,KAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,SAC7D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAAA,qCAGAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACExB,SAAO,EACP96B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAAC6kB,MAAO,WAAY/4B,KAAKoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACvBjB,EAAAC,EAAAtP,cAAA,yDAC6CqP,EAAAC,EAAAtP,cAAA,+CAD7C,8CAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAIpE3S,EAAAC,EAAAtP,cAAA,sBACUqP,EAAAC,EAAAtP,cAAA,qCADV,oCAC+EqP,EAAAC,EAAAtP,cAAA,qDAD/E,6FAKAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,SAC9D,CAACxhB,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAIpE3S,EAAAC,EAAAtP,cAAA,iFAGAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEvB,UAAQ,EACR/6B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAAC6kB,MAAO,UAAW/4B,KAAKoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACtBjB,EAAAC,EAAAtP,cAAA,iHAEQqP,EAAAC,EAAAtP,cAAA,wBAFR,KAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAKnD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,gBAE7D,CAACvC,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,gBAE7D,CAACvC,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAKpE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAKpE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAAA,WACAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAKpE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAKpE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,QAASyf,OAAQ,aAKpE3S,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDs4B,MAAO,CACLrjC,OAAQ,CACN,CAAC5I,KAAM,CAACqS,EAAG,EAAGD,EAAG,GAAI/D,GAAI,CAACgE,EAAG,EAAGD,EAAG,GAAIrQ,KAAM,OAAQyf,OAAQ,aAInE3S,EAAAC,EAAAtP,cAAA,4CAGAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACExB,SAAO,EAACC,UAAQ,EAChB/6B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAAC6kB,MAAO,0BAA2B/4B,KAAKoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACtCjB,EAAAC,EAAAtP,cAAA,8JAIAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAAC6kB,MAAO,mCAAoC/4B,KAAKoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAC/CjB,EAAAC,EAAAtP,cAAA,wSAKAqP,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInD9E,EAAAC,EAAAtP,cAACstC,GAAD,CACEt8B,eAAgB,CACd,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKsE,eAC3D,CAACxC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKsE,sBAKnE,CAAC2jB,MAAO,wBAA0B/4B,KAAMoP,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACtCjB,EAAAC,EAAAtP,cAAA,oDACwCqP,EAAAC,EAAAtP,cAACuoC,EAAA,EAAD,CAAS15B,GAAI,aAAb,yCADxC,mBAEkCQ,EAAAC,EAAAtP,cAACuoC,EAAA,EAAD,CAAS15B,GAAI,WAAb,gBAFlC,QA+DSg+B,UC34CTU,sNAGJ9lB,mBACE+lB,oBAAqB,CAAC36B,EAAG,EAAGD,EAAG,GAC/B66B,cAAe,CAACx5B,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cACpD+X,SAAUnc,EAAKgN,QAAQrK,2BACvBg6B,cAAe,KACfC,UAAU,GACP/qC,EAAK0gC,kCACR7F,aAAc,KACdxQ,iBAAkB,SA0BpBsW,wBAA0B,WACxB3gC,EAAK6rB,SAAS,CAACqQ,MAAO,UAGxB8O,4BAA8B,SAACJ,EAAqBC,GAClD7qC,EAAK6rB,SAAS,CAAC+e,sBAAqBC,qBAGtCI,iBAAmB,SAAA3gB,GACjB,IAAIvmB,EAAM+mC,EACV,IACE/mC,EAAOoK,EAAKgN,QAAQ3H,aAAa8W,GACjCwgB,EAAgB,KAChB,MAAO/kC,GACPhC,EAAOoK,EAAKgN,QAAQnK,SACpB85B,EAAgB/kC,EAAEmlC,QAEpBlrC,EAAK6rB,SAAS,SAAAhH,GAAK,MAAK,CACtByF,WACAvmB,OACA+mC,gBACAzgB,iBAAkBxF,EAAMyF,eAI5BtU,SAAW,SAAAilB,GACTj7B,EAAK6rB,SAAS,CAAC9nB,KAAMk3B,OAGvBE,qBAAuB,SAAAN,GACrB76B,EAAK6rB,SAAS,CAACgP,oBAGjBsQ,SAAW,WAAM,IAAAplB,EACc/lB,EAAK6kB,MAA3B9gB,EADQgiB,EACRhiB,KACDqnC,EAFSrlB,EACF8U,cACuB92B,EACpC/D,EAAKirC,iBAAiBG,EAAYh9B,mBAGpCi9B,WAAa,WACXrrC,EAAKirC,iBAAiB98B,EAAKgN,QAAQrK,+BAGrCkM,KAAO,WACLhd,EAAKirC,iBAAiBjrC,EAAK6kB,MAAMwF,qBAGnCihB,UAAY,WACVtrC,EAAKirC,iBAAiBjrC,EAAK6kB,MAAMyF,aAGnCihB,aAAe,WACbzkC,EAAsBqH,EAAKgN,QAAQ3K,oBAAoBxQ,EAAK6kB,MAAMyF,WAClE0W,MAAM,mCAGRkE,iBAAmB,WACjBp+B,GAAuB9G,EAAK6kB,MAAMgW,cAAgB76B,EAAK6kB,MAAM9gB,MAAMwM,kBACnEywB,MAAM,wCAGRwK,YAAc,WACZxrC,EAAKiL,MAAMugC,YAAYr9B,EAAKgN,QAAQ3H,aAAaxT,EAAK6kB,MAAMyF,UAAU/Z,mHApFtE,IACM+Z,EADS,IAAIiX,gBAAgBjhC,OAAOiB,SAASigC,QAC3B9K,IAAI,aAAez2B,KAAKgL,MAAMwgC,wBACtD,GAAInhB,EAAU,CACZ,IAAIvmB,EAAMgnC,EACV,KACEhnC,EAAOoK,EAAKgN,QAAQzH,+BAA+B4W,MAEjDygB,EAAW,8BAEb,MAAOhlC,GACPhC,EAAO,KACPgnC,EAAQ,qCAAAnrC,OAAwCmG,EAAEmlC,SAEpD,OAAKnnC,EAGE,CAACA,OAAMgnC,UAAU,EAAOzgB,SAAUvmB,EAAKqK,gBAFrC,CAACrK,KAAMoK,EAAKgN,QAAQnK,SAAU+5B,WAAUzgB,SAAUnc,EAAKgN,QAAQrK,4BAIxE,MAAO,CAAC/M,KAAMoK,EAAKgN,QAAQnK,SAAU+5B,UAAU,EAAOzgB,SAAUnc,EAAKgN,QAAQrK,6DAqExE,IAAA1F,EACsCnL,KAAKgL,MAA3C/I,EADAkJ,EACAlJ,KAAMgC,EADNkH,EACMlH,OAAQ07B,EADdx0B,EACcw0B,QAAS4L,EADvBpgC,EACuBogC,YADvBlS,EAE+Gr5B,KAAK4kB,MAApH+lB,EAFAtR,EAEAsR,oBAAqBtgB,EAFrBgP,EAEqBhP,SAAUugB,EAF/BvR,EAE+BuR,cAAeC,EAF9CxR,EAE8CwR,cAAeC,EAF7DzR,EAE6DyR,SAAUhnC,EAFvEu1B,EAEuEv1B,KAAM82B,EAF7EvB,EAE6EuB,aAAcxQ,EAF3FiP,EAE2FjP,iBAC5F/rB,EAAW4F,EAAO3E,mBAElBgR,EAAmBpC,EAAKgN,QAAQ3K,oBAAoB8Z,GAC1D,OACE7d,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,OAAQ2J,EACRze,KAAM,OACNmH,QAASxzB,KAAK0gC,wBACd7M,OAAQ,iCACRvnB,QAAO,GAAA3M,OAAKmrC,EAAL,+CACPtW,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAEjDjoB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAMixB,UAAQ,EAACtR,KAAM,UAAWC,MAAO,CACrC,CAACzf,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBwlB,MAAO,QAASsP,QAAQ,EAAMt0B,GAAI,IACzF8zB,KAAI,aAAAjhC,OAAe2Q,GACnB6lB,MAAO0K,UAAUF,MAAQ,iCAAmC,iCAC9D,CAAC9zB,IAAK,OAAQG,KAAM,YAAaV,QAAS,gBAAiBwlB,MAAO,QAASsP,QAAQ,EACjFjL,MAAO,qCAAsCtZ,QAAS7c,KAAKsrC,cAC7D,CAACz+B,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBwlB,MAAO,QAASsP,QAAQ,EAC3FjL,MAAO,0CAA2CtZ,QAAS7c,KAAKilC,uBAIxEz4B,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACG+W,EAAgBr+B,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CAASvO,OAAK,EAAC3vB,QAASu+B,IAAoB,KAC7Dr+B,EAAAC,EAAAtP,cAACkkC,GAAD,CACEp/B,KAAMA,EACN5D,SAAUA,EACVyF,KAAMA,EACNiS,SAAU/V,KAAK+V,SACfmlB,qBAAsBl7B,KAAKk7B,sBAE3B1uB,EAAAC,EAAAtP,cAAA,WACEqP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,aACTwxB,SAAO,EACPjhB,QAAS7c,KAAKqrC,aAGlB7+B,EAAAC,EAAAtP,cAACsuC,GAAD,CACEC,aAAcf,EACdgB,qBAAsB3rC,KAAK+qC,4BAC3BpL,QAASA,IAEXnzB,EAAAC,EAAAtP,cAAA,WACEqP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,iBACTwxB,SAAO,EACPvR,UAAWqO,GAAgB92B,GAAMwM,mBAAqBA,EACtDuM,QAAS7c,KAAKkrC,WAEhB1+B,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,QACTssB,UAAQ,EACRrM,SAAUjc,IAAqBtQ,KAAK0G,YAAY8kC,wBAChD3uB,QAAS7c,KAAKorC,aAEhB5+B,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,OACT+mB,WAAS,EACT9G,UAAWnC,EACXvN,QAAS7c,KAAK+c,QAGlBvQ,EAAAC,EAAAtP,cAACyuC,GAAD,CACEvhB,SAAUA,EACVnR,OAAQ0xB,EACRI,iBAAkBhrC,KAAKgrC,mBAExBO,EACC/+B,EAAAC,EAAAtP,cAAA,WACEqP,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,eACTwxB,SAAO,EACPjhB,QAAS7c,KAAKurC,YACdhf,WAAYse,KAGd,eA1LWh9B,cAArB68B,GACGc,wBAA0Bt9B,EAAKgN,QAAQ3K,oBAAoBrC,EAAKgN,QAAQrK,gCAyM3Eg7B,8MA+BJjnB,MAAQ,CACN8mB,aAAc,CAAC17B,EAAG,EAAGD,EAAG,MA6B1B0L,gBAAkB,SAAAvK,GAChB,OAAQzK,EAAKiV,eAAexK,KAAqB,IAAXA,EAAKnB,GAAWmB,EAAKlB,GAAK,MAGlE0L,eAAiB,SAAAxK,GAAQ,IAChBw6B,EADgBzrC,OAAAymC,GAAA,EAAAzmC,CAAAwG,GAChBilC,aACP,OAAOx6B,EAAKlB,IAAM07B,EAAa17B,GAAKkB,EAAKnB,IAAM27B,EAAa37B,KAG9DgG,SAAW,SAAA7E,GACT,IAAMw6B,EAAe,CAAC17B,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,GAIzC,QAHgCrR,IAA5B+H,EAAKuE,MAAM0gC,cACbjlC,EAAKmlB,SAAS,CAAC8f,aAAcA,IAE3BjlC,EAAKuE,MAAM2gC,qBAAsB,CACnC,IAAMzyB,EAAShI,EAAKE,OAAS,CAACA,OAAQF,EAAKE,QAAU,CAACI,MAAON,EAAKM,OAClE/K,EAAKuE,MAAM2gC,qBAAqBD,EAAcxyB,iGA1Cb,IAAVymB,EAAU/zB,EAAV+zB,QACzB,GAAIA,EAAQC,MAAO,KACV/yB,EAAO8yB,EAAQC,MAAf/yB,IACDyI,EAActV,KAAK0G,YAAYolC,YAAYj/B,GACjD,GAAIyI,EAAa,KACRtF,EAAQsF,EAARtF,EAAGD,EAAKuF,EAALvF,EACJgD,EAAO/S,KAAK0G,YAAYyH,eAAe4B,GAAG9R,MAAM+R,GACtDhQ,KAAK+V,SAAShD,gDAKDoS,EAAWC,EAAWC,QACR3mB,IAA3BymB,EAAUumB,mBAA0DhtC,IAA5BsB,KAAKgL,MAAM0gC,cACrD1rC,KAAK4rB,SAAS,CAAC8f,aAAcvmB,EAAUumB,gDAgClC,IAEDrtC,EADW2B,KAAKgL,MAAf/G,OACiB3E,mBAExB,OACEkN,EAAAC,EAAAtP,cAACkuB,GAAD,CACEjO,SAAUlP,EAAKgN,QACfU,QAAM,EACN6J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCzD,eAAgBnO,KAAK0G,YAAYyH,eACjCoN,WAAS,EAACC,UAAU,EACpBC,gBAAiBzb,KAAKyb,gBACtBC,eAAgB1b,KAAK0b,eACrB3F,SAAU/V,KAAK+V,SACf1X,SAAUA,EACV2e,UAAU,EACVkL,YAAY,yCA3ChB,YAAgCxpB,IAA5BsB,KAAKgL,MAAM0gC,aACN1rC,KAAK4kB,MAAM8mB,aAEX1rC,KAAKgL,MAAM0gC,oBAzDU79B,aAA5Bg+B,GACG19B,eAAiB,CACtB,CAAC4B,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACvB,EAAG,EAAG9R,MAAO,CACZ,CAAC+R,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAKuB,SAAU6B,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQlD,EAAK0D,SAAUN,OAAQpD,EAAKoE,cAC3D,CAACtC,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACtB,EAAG,EAAGD,EAAG,EAAGyB,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAd7Cu6B,GAiBGpyB,KAAO,CACZ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAlBjCoyB,GAoBGC,YAAc,CACnBC,EAAK,CAAC/7B,EAAG,EAAGD,EAAG,GACfi8B,EAAG,CAACh8B,EAAG,EAAGD,EAAG,GACb+lB,EAAG,CAAC9lB,EAAG,EAAGD,EAAG,GACbgmB,EAAG,CAAC/lB,EAAG,EAAGD,EAAG,GACbimB,EAAG,CAAChmB,EAAG,EAAGD,EAAG,GACbk8B,EAAG,CAACj8B,EAAG,EAAGD,EAAG,GACbtD,EAAG,CAACuD,EAAG,EAAGD,EAAG,GACbm8B,EAAG,CAACl8B,EAAG,EAAGD,EAAG,IAmFjB87B,GAAsBzc,GAAWyc,QAE3BM,8MACJvnB,MAAQ,CACNyF,SAAUnc,EAAKgN,QAAQrK,8BAiBzB4K,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGT3F,SAAW,SAAA7E,GAAQ,IACVgI,EAAUhR,EAAK8C,MAAfkO,OACH,UAAWA,EACThI,EAAKM,QAAU0H,EAAO1H,OACxBtJ,EAAKkkC,eAAe,CAACp8B,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGyB,MAAO0H,EAAO1H,QAElD,WAAY0H,IACjBhI,EAAKE,SAAW8H,EAAO9H,OACzBlJ,EAAKkkC,eAAe,CAACp8B,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGqB,OAAQ8H,EAAO9H,OAAQE,OAAQpD,EAAKoE,eAE/EpK,EAAKkkC,eAAe,CAACp8B,EAAGkB,EAAKlB,EAAGD,EAAGmB,EAAKnB,EAAGqB,OAAQ,KAAME,OAAQ,WAKvE86B,eAAiB,SAAAC,GACf,IAAMC,EAAcp+B,EAAKgN,QAAQrE,YAAY3O,EAAKmiB,SAAUgiB,QAEhC3tC,IAAxBwJ,EAAK8C,MAAMqf,UACbniB,EAAK0jB,SAAS,CAACvB,SAAUiiB,IAEvBpkC,EAAK8C,MAAMggC,kBACb9iC,EAAK8C,MAAMggC,iBAAiBsB,sFA5CbnnB,EAAWC,EAAWC,QACZ3mB,IAAvBymB,EAAUkF,eAAkD3rB,IAAxBsB,KAAKgL,MAAMqf,UACjDrqB,KAAK4rB,SAAS,CAACvB,SAAUlF,EAAUkF,4CA8C9B,IACAA,EAAYrqB,KAAZqqB,SAEDhsB,EADW2B,KAAKgL,MAAf/G,OACiB3E,mBAExB,OACEkN,EAAAC,EAAAtP,cAACkuB,GAAD,CACEjO,SAAUlP,EAAKgN,QACfU,QAAM,EACN6J,aAAc,CAACvX,EAAKuB,SAAUvB,EAAK0D,UACnCzD,eAAgBkc,EAChB9O,WAAS,EAACC,UAAU,EACpBC,gBAAiBzb,KAAKyb,gBACtBC,eAAgB1b,KAAK0b,eACrB3F,SAAU/V,KAAK+V,SACf1X,SAAUA,EACV2e,UAAU,EACVkL,YAAY,qCA1DhB,YAA4BxpB,IAAxBsB,KAAKgL,MAAMqf,SACNrqB,KAAK4kB,MAAMyF,SAEXrqB,KAAKgL,MAAMqf,gBAfQxc,aAoFhCs+B,GAAoB/c,GAAW+c,IAEhBxM,oBAAQkM,GAAoB3c,aAAazV,KAAzCkmB,CAA+CvQ,GAAWsb,KC/YnE6B,8MACJ3nB,MAAQ,CACN4nB,SAAS,EACThtC,UAAW,KACXitC,YAAa,KACbC,KAAM,KACN5oC,KAAM,QA6BR6oC,kBAAoB,SAAAntC,GAClBO,EAAK6rB,SAAS,CACZ4gB,SAAS,EACThtC,YACAitC,YAAajtC,EAAUg3B,iBACvBkW,KAAM3sC,EAAK6sC,QAAQptC,EAAUg3B,kBAC7B1yB,KAAMtE,EAAUg3B,iBAAiB1yB,UAcrCiS,SAAW,SAAAilB,GACTj7B,EAAK6rB,SAAS,CAAC9nB,KAAMk3B,OAuFvBF,OAAS,SAAAvxB,GAAS,IAEVyxB,EADgBj7B,EAAK6kB,MAApB6nB,YACqB3oC,KAAKkN,UAAUzH,GAErCsjC,EAAmB9sC,EAAK+sC,oBAAoB9R,GAClD,GAAI6R,EACF9sC,EAAK6rB,SAAS,CACZ6gB,YAAaI,EACb/oC,KAAM+oC,EAAiB/oC,WAH3B,CAQA,IAAMipC,EAAchtC,EAAKitC,iBAbTC,EAcuBltC,EAAKmtC,mBAAmBH,GAA1DI,EAdWF,EAcXE,aAAcC,EAdHH,EAcGG,iBACfC,EAAUttC,EAAKutC,cAAcF,EAAkBpS,GACnDj7B,EAAK6rB,SAAS,CACZpsB,UAAW2tC,EACXV,YAAaY,EACbX,KAAM3sC,EAAK6sC,QAAQO,EAAa3W,kBAChC1yB,KAAMupC,EAAQvpC,WAuBlBypC,gBAAkB,SAAAC,GAChB,IAAMC,EAAeD,EAASA,EAAS/uC,OAAS,GAChD,OAAIgvC,EAAaC,gBACXD,EAAaC,gBAAgBjvC,OACxBgvC,EAAaC,gBAAgB/rC,IAAI,SAAAgsC,GAAQ,OAAIH,EAAS7tC,OAAOguC,KAE7D,CAACH,GAGNC,EAAaG,kBACR,CAACJ,EAAS7tC,OAAO8tC,EAAaG,oBAE9B,CAACJ,MAKdK,kBAAoB,WAAM,IACjBpB,EAAe1sC,EAAK6kB,MAApB6nB,YACDM,EAAchtC,EAAKitC,iBAAiB3kC,MAAM,GAAI,GAF5BylC,EAGe/tC,EAAKmtC,mBAAmBH,GAA1DI,EAHmBW,EAGnBX,aAAcC,EAHKU,EAGLV,iBACfC,EAAUttC,EAAKguC,WAAWX,EAAkBX,GAChD1sC,EAAK6rB,SAAS,CACZpsB,UAAW2tC,EACXV,YAAaY,EACbX,KAAM3sC,EAAK6sC,QAAQO,EAAa3W,kBAChC1yB,KAAMupC,EAAQvpC,UAIlBkqC,cAAgB,WACdjuC,EAAK6rB,SAAS,CAAC4gB,SAAS,OAG1ByB,gBAAkB,WAChB,IAAMC,EAAmB3rC,KAAKsD,MAAMtD,KAAKC,UAAUzC,EAAK6kB,MAAMplB,UAAW,SAACqN,EAAKvP,GAC7E,OAAIA,aAAiB4Q,OACnB,EAEO5Q,KAGXyC,EAAKiL,MAAM/G,OAAOgqC,gBAAgBC,MAGpCC,gBAAkB,WAChB,IAAMD,EAAmB3rC,KAAKsD,MAAMtD,KAAKC,UAAUzC,EAAK6kB,MAAMplB,UAAW,SAACqN,EAAKvP,GAC7E,OAAIA,aAAiB4Q,OACnB,EAEO5Q,KAGXyC,EAAKiL,MAAM/G,OAAOkqC,gBAAgBD,MAGpCE,wBAA0B,WACpBruC,EAAK6kB,MAAMplB,UAAUuB,GACvBhB,EAAKouC,kBAELpuC,EAAKkuC,qBAITI,iBAAmB,WACjBtuC,EAAK6rB,SAAS,CACZ4gB,SAAS,EACThtC,UAAW,KACXitC,YAAa,KACbC,KAAM,KACN5oC,KAAM,2FAtPJ9D,KAAKgL,MAAMsjC,kBACbtuC,KAAK2sC,kBAAkB3sC,KAAKuuC,UAAUvuC,KAAKgL,MAAMsjC,qDAI3CE,GAAe,IAAA/nC,EAAAzG,KAKvB,KAJAwuC,EAAavuC,OAAAsM,EAAA,EAAAtM,CAAA,GAAOuuC,IACD1qC,MAAQ0qC,EAAcnkB,WACvCmkB,EAAc1qC,KAAOoK,EAAKgN,QAAQzH,+BAA+B+6B,EAAcnkB,WAE7EmkB,EAAchY,iBAChBgY,EAAchY,iBAAmBx2B,KAAKuuC,UAAUC,EAAchY,uBACzD,GAAIgY,EAAcd,gBACvBc,EAAcd,gBAAkBc,EAAcd,gBAAgB/rC,IAAI,SAAAgsC,GAAQ,OAAIlnC,EAAK8nC,UAAUZ,SACxF,MAAI,sBAAuBa,GAKhC,MAAM,IAAIvgC,MAAM,4BAJZugC,EAAcZ,oBAChBY,EAAcZ,kBAAoB5tC,KAAKuuC,UAAUC,EAAcZ,oBAMnE,OAAOY,6CAaUvY,EAAYC,GAC7B,OAAO92B,IAAEiuB,MAAM6I,GAAev0B,IAAI,SAAAwB,GAAK,OACrCqJ,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CACEllB,IAAK1J,EACLrF,KAAMm4B,EAAa9yB,EAAQ,OAAS,eACpC2uB,MAAO,yDASOkJ,GAAS,IACpByR,EAAezsC,KAAK4kB,MAApB6nB,YACP,OAAIA,EAAYiB,gBACPjB,EAAYiB,gBAChB9uC,KAAK,SAAA6vC,GAAQ,OAAIA,EAASpkB,WAAa2Q,EAAQ1qB,mBAE9Cm8B,EAAYmB,mBAAqBnB,EAAYmB,kBAAkBvjB,WAAa2Q,EAAQ1qB,iBAC/Em8B,EAAYmB,kBAIhB,8CAGQ,IAAA9nB,EACa9lB,KAAK4kB,MAA1B6nB,EADQ3mB,EACR2mB,YACHe,EAFW1nB,EACK4mB,KACA9tC,KAAK,SAAA4uC,GAAQ,OAAIA,EAAS5uC,KAAK,SAAA8vC,GAAY,OAAIA,IAAiBjC,MAYpF,OAXAe,EAAWA,EAASnlC,MAAM,EAAGmlC,EAASplC,UAAU,SAAAsmC,GAAY,OAAIA,IAAiBjC,IAAe,IACnE9qC,IAAI,SAAC+sC,EAAcvrC,GAAf,OACrB,IAAVA,EACI,CAAC,YAAa,oBAEdqqC,EAASrqC,EAAQ,GAAGuqC,gBAChB,CAAC,kBAAmBF,EAASrqC,EAAQ,GAAGuqC,gBAAgBx+B,QAAQw/B,IAChE,CAAC,kEAOM3B,GAAa,IACvBvtC,EAAaQ,KAAK4kB,MAAlBplB,UAED2tC,EAAYltC,OAAAsM,EAAA,EAAAtM,CAAA,GACbT,EADa,CAEhBg3B,iBAAiBv2B,OAAAsM,EAAA,EAAAtM,CAAA,GAAKT,EAAUg3B,oBAE9B4W,EAAmBD,EAAa3W,iBAPNjyB,GAAA,EAAAC,GAAA,EAAAC,OAAA/F,EAAA,IAQ9B,QAAAgG,EAAAC,EAAoBvF,IAAE4S,QAAQ+6B,EAAY1kC,MAAM,IAAhDzD,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA1CpB,EAA0CuB,EAAApH,MAC7CqxC,EAAUvB,EAAiBjqC,GAC3BkqC,EAAUt0B,MAAM61B,QAAQD,GAAWA,EAAQtmC,QAAjCpI,OAAAsM,EAAA,EAAAtM,CAAA,GAA+C0uC,GAC/DvB,EAAiBjqC,GAASkqC,EAC1BD,EAAmBC,GAZS,MAAAnoC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAe9B,MAAO,CAAC0oC,eAAcC,0DAGVA,EAAkBpS,GAC9B,IAAIqS,EAAU,KAqBd,OApBID,EAAiBM,iBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgBrlC,QACpE+kC,EAAmBA,EAAiBM,gBACpCL,EAAU,CACRhjB,SAAU2Q,EAAQ1qB,iBAClB/G,MAAOyxB,EAAQ/rB,mBACfnL,KAAMk3B,EACN4S,kBAAmB,MAErBR,EAAiB1lC,KAAK2lC,KAEtBA,EAAU,CACRhjB,SAAU2Q,EAAQ1qB,iBAClB/G,MAAOyxB,EAAQ/rB,mBACfnL,KAAMk3B,EACN0S,gBAAiB,IAEnBN,EAAiBQ,kBAAoBP,GAGhCA,qCAGED,EAAkB7C,GAO3B,OANI6C,EAAiBM,gBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgB3pC,OAAO,SAAA0qC,GAAQ,OAAIA,IAAalE,IAEpG6C,EAAiBQ,kBAAoB,KAGhCR,oCA6BP,IAFgE,IAC5DV,EAAO,CAAC,CADoDluC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvCwB,KAAK4kB,MAAMplB,UAAUg3B,mBAEvCkW,KAAUA,EAAO1sC,KAAK6uC,YAAYnC,MAEzC,OAAOA,sCAGGA,GACV,IAAMoC,EAAW1vC,IAAE4S,QAAQ06B,EAAK/qC,IAAI3B,KAAKutC,kBACzC,OAAIuB,EAASrwC,SAAWiuC,EAAKjuC,OACpBqwC,EAELpC,EAAK9tC,KAAK,SAAC4uC,EAAUrqC,GAAX,OAAqBqqC,IAAasB,EAAS3rC,KAChD2rC,EAGFpC,mCA6EA,IAAA9gC,EAAA1D,EAAAlI,KAAAmL,EACgBnL,KAAKgL,MAArB/I,EADAkJ,EACAlJ,KAAMgC,EADNkH,EACMlH,OADNo1B,EAE+Cr5B,KAAK4kB,MAApD4nB,EAFAnT,EAEAmT,QAAShtC,EAFT65B,EAES75B,UAAWsE,EAFpBu1B,EAEoBv1B,KAAM4oC,EAF1BrT,EAE0BqT,KAAMD,EAFhCpT,EAEgCoT,YACjCpuC,EAAW4F,EAAO3E,mBAExB,OAAIktC,GAAahtC,IAAaA,EAAU62B,cAMnC72B,EAKHgN,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAOjG,EAAwBrH,IAC3CgN,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,KAAMQ,UAAW,qBAAsBtN,KAAK+uC,mBAAmBvvC,EAAUwF,KAAKixB,WAAYz2B,EAAUwF,KAAKkxB,gBACrH1pB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAOtN,EAAUwF,KAAKgqC,UAGtCxiC,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQP,WAAS,EAACxW,QAAS7c,KAAKguC,eAAhC,QACAxhC,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQa,UAAQ,EAAC5X,QAAS7c,KAAKouC,yBAA0B5uC,EAAUuB,GAAK,SAAW,UACnFyL,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAAC/b,QAAS7c,KAAKquC,kBAA/B,aAGJ7hC,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,QACAN,EAAAC,EAAAtP,cAAA,aACEqP,EAAAC,EAAAtP,cAAA,aACCuvC,EAAK/qC,IAAI,SAAC6rC,EAAUyB,GAAX,OACRziC,EAAAC,EAAAtP,cAAA,MAAI0P,IAAKoiC,GACNzB,EAAS7rC,IAAI,SAAC+sC,EAAcQ,GAAf,OACZ1iC,EAAAC,EAAAtP,cAAA,MAAI0P,IAAKqiC,GACO,IAAbD,GAAkBP,IAAiBhC,EAAKuC,EAAW,GAAGC,GACrD1iC,EAAAC,EAAAtP,cAACw0B,GAAD,CACEhW,OAAK,EACLG,SAAUhY,IAAS4qC,EAAa5qC,KAChC+X,SAAU,WACR3T,EAAK0jB,SAAS,CACZ6gB,YAAaiC,EACb5qC,KAAM4qC,EAAa5qC,QAGvBzF,SAAUA,EACVyF,KAAM4qC,EAAa5qC,OAEnB,cAQf2oC,EAAY3oC,KAAO0I,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KAClBtnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,gBACAN,EAAAC,EAAAtP,cAACkkC,GAAD,CACEp/B,KAAMA,EACNy5B,eAAgB17B,KAAK07B,eACrB53B,KAAMA,EACN2hB,aAAc,CAACgnB,EAAY3oC,KAAKuL,YAChC8sB,OAAKvwB,EAAA,GAAA3L,OAAAqU,EAAA,EAAArU,CAAA2L,EAAIpM,EAAUC,QAAQ8jC,cAAgB,UAAtCtjC,OAAAqU,EAAA,EAAArU,CAAA2L,EAAiDsC,EAAKyC,aAAanR,EAAUC,QAAQ8jC,eAAiB,UAAtG33B,GACLkvB,OAAQ96B,KAAK86B,OACbC,wBAAyB/6B,KAAK+6B,wBAC9BhlB,SAAU/V,KAAK+V,UAEfvJ,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQgF,UAAQ,EAACrM,SAAUkgB,IAAgBjtC,EAAWqd,QAAS7c,KAAK6tC,mBAClErhC,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CAAMj0B,KAAM,WADd,qBAIS,MAhER,KALL0O,EAAAC,EAAAtP,cAACgyC,GAAD,CAAeb,iBAAkB9uC,EAAWmtC,kBAAmB3sC,KAAK2sC,2BA3Q9C9+B,aA0VxBuhC,8MAOJxqB,MAAQ,CACNplB,UAAWsJ,EAAKkC,MAAMsjC,kBAAoB,CACxCjY,eAAe,EACf52B,QAAS,CACP8jC,cAAer1B,EAAKuB,SACpB/P,KAAM,OACNE,YAAa,CACXC,OAAQ,IAGZmF,KAAM,CACJgqC,OAAQ,GACR/Y,WAAY,EACZC,cAAe,EACf5rB,QAAQ,EACRrF,gBAAiB,MAEnBuxB,iBAAkB,CAChBnM,SAAUnc,EAAKgN,QAAQnK,SAAST,iBAChCxM,KAAMoK,EAAKgN,QAAQnK,SACnB28B,gBAAiB,KAGrBzR,MAAO,CACL5R,SAAU,MAEZglB,iBAAiB,KAcnB5b,SAAW,SAAC3tB,EAADkP,GAA+B,IAA1BlX,EAA0BkX,EAA1BlX,KAAMR,EAAoB0X,EAApB1X,MAAO67B,EAAankB,EAAbmkB,aACbz6B,IAAVpB,UAA8B67B,WAAmB,IACnD77B,EAAQ67B,GAEV,IAAImW,EAAiBhyC,EACjBQ,KAAQgL,EAAKpC,YAAY6oC,kBAC3BD,EAAiBxmC,EAAKpC,YAAY6oC,gBAAgBzxC,GAAMwxC,IAE1DxmC,EAAK8iB,SAAS,SAAAhH,GACZ,IAAMplB,EAASS,OAAAsM,EAAA,EAAAtM,CAAA,GACV2kB,EAAMplB,WAEPgwC,EAAuBhwC,EACrBiwC,EAAQ3xC,EAAKqS,MAAM,KALJuD,GAAA,EAAAC,GAAA,EAAAC,OAAAlV,EAAA,IAMrB,QAAAmV,EAAAC,EAAmB27B,EAAMpnC,MAAM,EAAGonC,EAAMhxC,OAAS,GAAjDmG,OAAAC,cAAA6O,GAAAG,EAAAC,EAAAhP,QAAAC,MAAA2O,GAAA,EAAqD,CACnD87B,EAAuBA,EAD4B37B,EAAAvW,QACE,IAPlC,MAAA4H,GAAAyO,GAAA,EAAAC,EAAA1O,EAAA,YAAAwO,GAAA,MAAAI,EAAA3O,QAAA2O,EAAA3O,SAAA,WAAAwO,EAAA,MAAAC,GAUrB,OADA47B,EAAqBC,EAAMA,EAAMhxC,OAAS,IAAM6wC,EACzC,CAAC9vC,eAEVsJ,EAAK4mC,WAAW5xC,EAAMwxC,MAGxBI,WAAa,SAAA5xC,GACE,8BAATA,EACFgL,EAAK8iB,SAAS,SAAAhH,GACZ,IAAMyF,EAAWzF,EAAMplB,UAAUg3B,iBAAiBnM,SAC5CslB,IAAkBtlB,GACpBnc,EAAKgN,QAAQ00B,kCAAkCvlB,GAC7CvmB,EAAO6rC,EAAkBzhC,EAAKgN,QAAQzH,+BAA+B4W,GAAY,KACvF,MAAO,CACL4R,MAAMh8B,OAAAsM,EAAA,EAAAtM,CAAA,GACD2kB,EAAMqX,MADN,CAEH5R,UAAWA,GAAYslB,EAAkB,KAAO,iCAElDnwC,UAAUS,OAAAsM,EAAA,EAAAtM,CAAA,GACL2kB,EAAMplB,UADF,CAEPC,QAAQQ,OAAAsM,EAAA,EAAAtM,CAAA,GACH2kB,EAAMplB,UAAUC,QADd,CAEL8jC,cAAez/B,EAAOA,EAAKuL,WAAa,OAE1CmnB,iBAAiBv2B,OAAAsM,EAAA,EAAAtM,CAAA,GACZ2kB,EAAMplB,UAAUg3B,iBADL,CAEd1yB,cAKU,iBAAThG,GACTgL,EAAK8iB,SAAS,SAAAhH,GACZ,OAAQA,EAAMplB,UAAUC,QAAQC,MAC9B,IAAK,OAUL,IAAK,YACH,OAAON,IAAEC,MAAM,GAAI,CAACG,UAAWolB,EAAMplB,WAAY,CAC/CA,UAAW,CACTC,QAAS,CACPG,YAAa,CACXC,OAAQ,OAKlB,QACE,OAAO,WAMjBouC,gBAAkB,WAAM,IAAA4B,EACK/mC,EAAK8b,MAAzBplB,EADeqwC,EACfrwC,UADeqwC,EACJ5T,MACR5R,UAGVvhB,EAAKkC,MAAM2hC,kBAAkBntC,MAG/B+rC,YAAc,SAAAj7B,GACZxH,EAAK8iB,SAAS,CACZyjB,iBAAiB,IAEnBvmC,EAAK2qB,SAAS,KAAM,CAAC31B,KAAM,4BAA6BR,MAAOgT,OAGjEw/B,aAAe,WACbhnC,EAAK8iB,SAAS,CAACyjB,iBAAiB,wFAxGhC,IAAKrvC,KAAKgL,MAAMsjC,iBAAkB,CAChC,IACMjkB,EADS,IAAIiX,gBAAgBjhC,OAAOiB,SAASigC,QAC3B9K,IAAI,YACxBpM,IACFrqB,KAAKyzB,SAAS,KAAM,CAAC31B,KAAM,4BAA6BR,MAAO+sB,IAC/DrqB,KAAK4rB,SAAS,CAACyjB,iBAAiB,uCAsG7B,IAAAniC,EAC4BlN,KAAKgL,MAAjC/G,EADAiJ,EACAjJ,OAAQqqC,EADRphC,EACQohC,iBADR/E,EAEqCvpC,KAAK4kB,MAA1CyqB,EAFA9F,EAEA8F,gBAAiB7vC,EAFjB+pC,EAEiB/pC,UAAWy8B,EAF5BsN,EAE4BtN,MAC7B59B,EAAW4F,EAAO3E,mBAExB,OAAI+vC,EAEA7iC,EAAAC,EAAAtP,cAAC4yC,GAAD,CACExE,YAAavrC,KAAKurC,YAClBC,wBAAyBhsC,EAAUg3B,iBAAiBnM,WAMxD7d,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,2BACAplB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAD,CAAMic,SAAUhwC,KAAKiuC,iBACnBzhC,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEl2B,KAAM,4BACNm2B,QAASC,KACTC,MAAO,mBACPC,YAAa,gBACbvI,SAAU7rB,KAAKyzB,SACfn2B,MAAOkC,EAAUg3B,iBAAiBnM,SAClCgK,UAAQ,EACR4H,MAAOA,EAAM5R,WAEf7d,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CACEtnB,QAAS,gBACT+mB,WAAS,EACTxW,QAAS7c,KAAK8vC,gBAGlBtjC,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,CAAYsd,QAAM,GAChBzjC,EAAAC,EAAAtP,cAAA,gCACAqP,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKmc,MAAN,CACEpyC,KAAM,wBACNq2B,MAAO,WACPtI,SAAU7rB,KAAKyzB,SACfn2B,MAAO4Q,EAAKuB,SACZ0pB,QAAS35B,EAAUC,QAAQ8jC,gBAAkBr1B,EAAKuB,SAClD8c,SAAU/sB,EAAUC,QAAQ8jC,gBAAkBr1B,EAAKuB,WAErDjD,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKmc,MAAN,CACEpyC,KAAM,wBACNq2B,MAAO,WACPtI,SAAU7rB,KAAKyzB,SACfn2B,MAAO4Q,EAAK0D,SACZunB,QAAS35B,EAAUC,QAAQ8jC,gBAAkBr1B,EAAK0D,SAClD2a,SAAU/sB,EAAUC,QAAQ8jC,gBAAkBr1B,EAAK0D,YAGtDpS,EAAUg3B,iBAAiB1yB,KAC1B0I,EAAAC,EAAAtP,cAACw0B,GAAD,CACE/V,QAAM,EACNvd,SAAUA,EACVyF,KAAMtE,EAAUg3B,iBAAiB1yB,OAEjC,KACJ0I,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKoc,OAAN,CACE1wC,QAAS,CACP,CAACoN,IAAK,OAAQvP,MAAO,OAAQN,KAAM,QACnC,CAAC6P,IAAK,YAAavP,MAAO,YAAaN,KAAM,eAE/Cc,KAAM,eACNq2B,MAAO,OACPtI,SAAU7rB,KAAKyzB,SACfY,UAAQ,EACR/2B,MAAOkC,EAAUC,QAAQC,OAEC,SAA3BF,EAAUC,QAAQC,KACjB8M,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTx0B,KAAM,QACNy0B,MAAK,YAAAx0B,OAAcH,EAAUC,QAAQG,YAAYC,QACjD00B,IAAK,EACLziB,IAAK,GACLhU,KAAM,6BACN+tB,SAAU7rB,KAAKyzB,SACfY,UAAQ,EACR/2B,MAAOkC,EAAUC,QAAQG,YAAYC,UAGZ,cAA3BL,EAAUC,QAAQC,KACpB8M,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTx0B,KAAM,QACNy0B,MAAK,kBAAAx0B,OAAoBH,EAAUC,QAAQG,YAAYC,QACvD00B,IAAK,EACLziB,IAAK,GACLhU,KAAM,6BACN+tB,SAAU7rB,KAAKyzB,SACfY,UAAQ,EACR/2B,MAAOkC,EAAUC,QAAQG,YAAYC,UAGvC,yBACJ2M,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTC,MAAO,SACPr2B,KAAM,cACN+tB,SAAU7rB,KAAKyzB,SACfn2B,MAAOkC,EAAUwF,KAAKgqC,SAExBxiC,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTx0B,KAAM,QACNy0B,MAAK,eAAAx0B,OAAiBH,EAAUwF,KAAKixB,WAAhC,KAAAt2B,OAA8CH,EAAUwF,KAAKkxB,eAClE3B,IAAK,EACLziB,IAAKtS,EAAUwF,KAAKkxB,cACpBp4B,KAAM,kBACN+tB,SAAU7rB,KAAKyzB,SACfY,UAAQ,EACR/2B,MAAOkC,EAAUwF,KAAKixB,cAG1BzpB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKpB,MAAN,KACEnmB,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASuF,KACTrF,MAAO,SACPr2B,KAAM,cACN+tB,SAAU7rB,KAAKyzB,SACf0F,QAAS35B,EAAUwF,KAAKsF,SAE1BkC,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTx0B,KAAM,iBACNy0B,MAAO,aACPr2B,KAAM,uBACN+tB,SAAU7rB,KAAKyzB,SACfn2B,MAAOkC,EAAUwF,KAAKC,gBAAkBzF,EAAUwF,KAAKC,gBAAgBmrC,OAAO,oBAAsB,MAGxG5jC,EAAAC,EAAAtP,cAAC42B,GAAA,EAAKH,OAAN,CAAakK,SAAO,EAACxxB,QAASgiC,EAAmB,SAAW,qBA3R5CzgC,aAAtBuhC,GACGG,gBAAkB,CACvBc,6BAA8B/1B,SAC9Bg2B,kBAAmBh2B,SACnBi2B,uBAAwB,SAAAC,GAAS,OAAIA,EAAY5yC,IAAO4yC,GAAa,OAsSzEpB,GAAgBhgB,GAAWggB,IAEZhgB,UAAWmd,IC3oBpBkE,8MAOJC,yBAA2B,WACzB3wC,EAAKiL,MAAMyD,QAAQ/G,KAAK,oFAIxB,IAAMlI,EAAYQ,KAAKR,UACvB,OAAKA,GAAcA,EAAU62B,cAiB3B7pB,EAAAC,EAAAtP,cAACwzC,GAAD,CAAiBrC,iBAAkB9uC,IAfjCgN,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,MAAM,EACN9U,KAAM,OACNmH,QAASxzB,KAAK0wC,yBACd7c,OAAQ,2BACRvnB,QAAS,kHACTkoB,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAPnD,8DAdU,IAAAtpB,EAC0BnL,KAAKgL,MAAtCD,EADOI,EACPJ,MAEP,OAHcI,EACArI,eAAiByF,KACRwC,EAAMo5B,OAAOpjC,WAHZ8M,aAyCbE,eAAWqhB,GAAWqhB,KClC/BG,oLACK,IAAA7wC,EAAAC,KAAAmL,EAC4EnL,KAAKgL,MAAjF/I,EADAkJ,EACAlJ,KADA4uC,EAAA1lC,EACMrI,eAAiB8H,EADvBimC,EACuBjmC,aAAcC,EADrCgmC,EACqChmC,gBAAiBJ,EADtDomC,EACsDpmC,YAAanB,EADnEunC,EACmEvnC,KAE1E,OACEkD,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAMlK,KAAKgL,MAAMD,MAAMb,MAClCsC,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACIxL,GAAQA,EAAKujC,MACbh5B,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACuoC,EAAA,EAAD,CAAM15B,GAAE,GAAArM,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,YAAqCsC,EAAAC,EAAAtP,cAACy2B,GAAA,EAAD,CAAQtnB,QAAS,oBAE9D,KACJE,EAAAC,EAAAtP,cAACyQ,EAAA,EAAD,CAAKR,KAAM,CAACgmB,UAAU,GAAOhoB,MAAO,CAClC,CAACyB,IAAK,gBAAiBsnB,MAAO,kBAAmB7H,MAAO1hB,EAAcknB,MAAO,SAC7E,CAACjlB,IAAK,oBAAqBsnB,MAAO,cAAe7H,MAAOzhB,GACxD,CAACgC,IAAK,eAAgBsnB,MAAO,iBAAkB7H,MAAO7hB,GACtD,CAACoC,IAAK,OAAQsnB,MAAO,aAAc7H,MAAOhjB,IAC1CvF,OAAO,SAAA6H,GAAA,OAAAA,EAAE0gB,MAAiB7tB,SAAQkD,IAAI,SAAAqT,GAAA,IAAEnI,EAAFmI,EAAEnI,IAAKsnB,EAAPnf,EAAOmf,MAAO7H,EAAdtX,EAAcsX,MAAOwF,EAArB9c,EAAqB8c,MAArB,MACtC,CAACzlB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KAAW0mB,EAAX,IAAkB3nB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAOvlB,QAASggB,EAAM7tB,OAAQqzB,MAAOA,MAAuBqI,OAAQ,kBAC9G3tB,EAAAC,EAAAtP,cAACm9B,GAAD,CAAe3E,gBAAiB51B,EAAKiL,MAAMkvB,oBAAqBn3B,WAAYupB,YAKlFrqB,GAAQA,EAAKujC,MACbh5B,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAI,GAAAvK,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,YACfsC,EAAAC,EAAAtP,cAACwzC,GAAD,OAEA,KACF1uC,GAAQA,EAAKujC,MACbh5B,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAI,GAAAvK,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,cACfsC,EAAAC,EAAAtP,cAAC2zC,GAAD,OAEA,KACJtkC,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,CAAOC,OAAK,EAACzD,KAAI,GAAAvK,OAAKK,KAAKgL,MAAMD,MAAMb,KAAtB,SACfsC,EAAAC,EAAAtP,cAAC4zC,GAAD,CAAiB7W,oBAAqBl6B,KAAKgL,MAAMkvB,+BApClCrsB,aAkDnBmjC,8MACJpsB,MAAQ,CACNqsB,YAAaxqC,EAAKjH,UAAYiH,EAAKjH,UAAUuB,GAAK,KAClD+C,KAAM2C,EAAKyqC,0BACXC,cAAe,KACfjnC,KAAMzD,EAAKjH,UAAY,GAAK,KAC5B4xC,WAAW,EACX1mC,KAAK,KAkEPowB,OAAS,SAACvxB,EAAOyxB,GACXv0B,EAAKme,MAAMla,KAIfjE,EAAK0nC,gBAAgBnT,EAAS,CAACqW,WAAW,OA+E5CtW,wBAA0B,WACpBt0B,EAAKme,MAAMwsB,WACb3qC,EAAKmlB,SAAS,CAACwlB,WAAW,EAAOD,cAAe,UAcpDT,yBAA2B,WACzBjqC,EAAKuE,MAAMkvB,oBAAoB,SAGjCyK,MAAQ,WACNl+B,EAAKuE,MAAMkvB,oBAAoB,SAGjCoX,eAAiB,SAAAxrC,GACf,IAAMmF,EAAM5K,OAAOiB,SAASs/B,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAMnhC,EAAYiH,EAAKjH,UACvBqhC,UAAUF,MAAM,CACdxK,MAAK,+BAAAx2B,OAAiCkH,EAAwBrH,IAC9DxC,KAAI,yBACJiO,QACC61B,MAAM,WACPj6B,EAAsBoE,GACtB81B,MAAM,mCAGRl6B,EAAsBoE,GACtB81B,MAAM,4BAERj7B,EAAEi/B,qGAhKF,IAAMvlC,EAAYQ,KAAKR,UAEnBA,GACFQ,KAAKgL,MAAMkvB,oBAAoB16B,8CAIhB2lB,EAAWC,GAC5B,IAAM5lB,EAAYQ,KAAKR,UAEnBA,GAAa4lB,EAAU6rB,cAAgBzxC,EAAUuB,KACnDf,KAAKgL,MAAMkvB,oBAAoB16B,GAC/BQ,KAAK4rB,SAAS,CACZqlB,YAAazxC,EAAUuB,GACvB+C,KAAM9D,KAAKkxC,0BACXC,cAAe,KACfjnC,KAAM,GACNknC,WAAW,EACX1mC,KAAK,MAGJlL,GAAaQ,KAAK4kB,MAAMqsB,aAC3BjxC,KAAK4rB,SAAS,CACVqlB,YAAa,KACbntC,KAAM,KACNqtC,cAAe,KACfjnC,KAAM,GACNknC,WAAW,EACX1mC,KAAK,IAGPlL,GAAaQ,KAAKgL,MAAM/I,MAAQjC,KAAK4kB,MAAMusB,eAC7CnxC,KAAKmuC,gBAAgBnuC,KAAK4kB,MAAMusB,cAAe,CAACE,WAAW,sDAa7D,IAAMxb,EAAgB71B,KAAK61B,cAC3B,IAAKA,EACH,OAAO,KAIT,IAFA,IAAI0b,EAAgBrjC,EAAKgN,QAAQzH,+BAA+BoiB,EAAcW,iBAAiBnM,UAC3FmnB,EAAoB3b,EAAcW,iBAC/Bgb,GAAmB,CACxB,IAAMC,EAAqBD,EAAkB9D,gBAAgB8D,EAAkB9D,gBAAgBjvC,OAAS,GACxG,IAAKgzC,EACH,MAGF,GADAF,EAAgBA,EAAcvgC,UAAUygC,EAAmBloC,QACtDkoC,EAAmB7D,kBACtB,MAEF2D,EAAgBA,EAAcvgC,UAAUygC,EAAmB7D,kBAAkBrkC,OAC7EioC,EAAoBC,EAAmB7D,kBAGzC,OAAO2D,0CAGOG,GAAuC,IAAAxpC,EAAAlI,KAAA2xC,GAAAnzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAApB6yC,iBAAwB,IAAAM,KAErD,GADe3xC,KAAKgL,MAAb/I,KACP,CAGA,IAAMzC,EAAYQ,KAAKR,UACjBq2B,EAAgB71B,KAAK61B,cAErBpnB,EAAUijC,EAAajjC,QACzB+iC,EAAoB3b,EAAcW,iBAClCob,EAAmBnjC,EAAQpG,MAAM,GAAGtE,OAAO,SAACD,EAAMX,GAAP,OAAiBA,EAAQ,IAAM,IAC9E,GAAKyuC,EAAiBnzC,OAAtB,CAGA,IAdqD,IAAAozC,EAAA,WAenD,IAAMC,EAAcF,EAAiBG,QACrC,GAAIP,EAAkBQ,uBAAuBtpC,SAASopC,EAAYxhC,kBAMhE,OALApI,EAAK0jB,SAAS,CACZwlB,WAAW,EACX1mC,KAAK,EACLymC,cAAe,OAEjB,CAAAc,OAAA,GAEF,IAAMC,EAAsBV,EAAkB9D,gBAC3C9uC,KAAK,SAAA6vC,GAAQ,OAAIA,EAASpkB,WAAaynB,EAAYxhC,mBACtD,OAAK4hC,EAOAA,EAAoBtE,uBASzB4D,EAAoBU,EAAoBtE,oBARtC1lC,EAAK0jB,SAAS,CACZwlB,WAAW,EACX1mC,KAAK,EACL5G,KAAMguC,EAAYxhC,mBAAqBpI,EAAK0c,MAAM9gB,KAAKwM,iBAAmBwhC,EAAc5pC,EAAK0c,MAAM9gB,KACnGqtC,cAAe,OAEjB,CAAAc,OAAA,KAbIZ,IACFnpC,EAAK8C,MAAM/G,OAAOkuC,oBAAoB3yC,EAAWkyC,EAAaxnC,KAAKnG,OAAO,SAAC26B,EAAMv7B,GAAP,OAAiBA,EAAQ,IAAM,KACzG+E,EAAK0jB,SAAS,CAACulB,cAAeO,KAEhC,CAAAO,OAAA,KAjBGL,EAAiBnzC,QAAQ,KAAA2zC,EAAAP,IAAA,qBAAAO,EAAA,OAAAA,EAAAH,EA+BhCjyC,KAAK4rB,SAAS,CACZ9nB,KAAM4tC,EAAa1gC,UAAUwgC,EAAkBjoC,OAC/C6nC,WAAW,EACX1mC,KAAK,EACLymC,cAAe,oDAUAlb,EAAYC,GAC7B,OAAO92B,IAAEiuB,MAAM6I,GAAev0B,IAAI,SAAAwB,GAAK,OACrCqJ,EAAAC,EAAAtP,cAAC40B,GAAA,EAAD,CACEllB,IAAK1J,EACLrF,KAAMm4B,EAAa9yB,EAAQ,OAAS,eACpC2uB,MAAO,8CAgCJ,IAAA/lB,EACP,IAAK/L,KAAKgL,MAAM/I,KACd,OAAO,KAET,IAAMzC,EAAYQ,KAAKR,UACvB,IAAKA,EACH,OACEgN,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAACu2B,GAAA,EAAD,CACEyN,MAAM,EACN9U,KAAM,OACNmH,QAASxzB,KAAK0wC,yBACd7c,OAAQ,2BACRvnB,QAAS,kHACTkoB,QAAS,CAAC,CAAC3nB,IAAK,KAAMP,QAAS,KAAMmoB,UAAU,MAPnD,4BAPG,IAAA3O,EAqBwB9lB,KAAK4kB,MAA7B9gB,EArBAgiB,EAqBAhiB,KAAMstC,EArBNtrB,EAqBMsrB,UAAW1mC,EArBjBob,EAqBiBpb,IACxB,IAAK5G,EACH,OAAO,KAvBF,IAAAoJ,EA0BkBlN,KAAKgL,MAAvB/I,EA1BAiL,EA0BAjL,KAAMX,EA1BN4L,EA0BM5L,SACP2pC,EACJmG,EACE5kC,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CAASvO,OAAK,EAACjvB,KAAM,UAAWV,QAAS,gCACvC5B,EACF8B,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CAAS6H,SAAO,EAACrlC,KAAM,QAASV,QAAS,4BAEzCE,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CAASl+B,QAASzF,EAAwBrH,KAG9C,OACEgN,EAAAC,EAAAtP,cAACsQ,EAAA,SAAD,KACEjB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAD,CAAMC,UAAQ,GACZzmB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAACuP,EAAA,EAAD,CAAM6xB,WAAS,EAAClS,KAAM,UAAWsR,UAAQ,EAACrR,MAAO,CAC/C,CAACzf,IAAK,QAASP,QAAS,QAASU,KAAM,IAAK6P,QAAS7c,KAAK2kC,MAAO7S,MAAO,MAAOsP,QAAQ,GACvF,CAACv0B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAAS6P,QAAS7c,KAAKsxC,eAAgBxkC,GAAIC,IACrFf,GAAI1K,EAAS6K,SAAU2lB,MAAO,QAASsP,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,kCAC7DnhC,EAAU62B,cAAgB,CAACxpB,IAAK,OAAQP,QAAS,cAAeU,KAAM,OAAQF,GAAIC,IACjFf,GAAE,WAAArM,OAAaH,EAAUuB,GAAvB,SAAkC+wB,MAAO,QAASsP,QAAQ,EAC5DjL,MAAO,4BAA8B,MACvCpyB,OAAO,SAAA26B,GAAI,OAAIA,OAEnBlyB,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACE1mB,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,KACEtnB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAOjG,EAAwBrH,IAC3CgN,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,KAAMQ,UAAW,qBAAsBtN,KAAK+uC,mBAAmBvvC,EAAUwF,KAAKixB,WAAYz2B,EAAUwF,KAAKkxB,gBACrH1pB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAOtN,EAAUwF,KAAKgqC,UAGtCxiC,EAAAC,EAAAtP,cAAC61B,GAAA,EAAKE,IAAN,KACG+X,IAGLz+B,EAAAC,EAAAtP,cAACkkC,GAAD,CACEp/B,KAAMA,EACNy5B,eAAgB17B,KAAK07B,eACrB53B,KAAMA,EACN2hB,aAAc,CAACjmB,EAAUC,QAAQ8jC,eACjCpH,OAAKpwB,EAAA,GAAA9L,OAAAqU,EAAA,EAAArU,CAAA8L,EAAIvM,EAAUC,QAAQ8jC,cAAgB,OAAtCtjC,OAAAqU,EAAA,EAAArU,CAAA8L,EAA8CmC,EAAKyC,aAAanR,EAAUC,QAAQ8jC,eAAiB,UAAnGx3B,GACL+uB,OAAQ96B,KAAK86B,OACbC,wBAAyB/6B,KAAK+6B,yBAE7BkQ,sCApQO,IAAA/qB,EAC0BlgB,KAAKgL,MAAtCD,EADOmV,EACPnV,MAEP,OAHcmV,EACApd,eAAiByF,KACRwC,EAAMo5B,OAAOpjC,0CAKpC,IAAMvB,EAAYQ,KAAKR,UACvB,OAAKA,EAGUQ,KAAKgL,MAAb/I,KACKc,WAAWvD,EAAUuB,KAAO,CACtCiE,KAAM,CACJ4E,SAAS,EACTwsB,SAAU,EACV1rB,KAAK,GAEP8rB,iBAAkB,CAChBnM,SAAU7qB,EAAUg3B,iBAAiBnM,SACrC2nB,uBAAwB,GACxBtE,gBAAiB,KAZZ,YAnBiB7/B,aA2R9BmjC,GAAkBjjC,YAAWqhB,GAAW4hB,KAEzBjjC,mBAAWqhB,GAAWwhB,KCxU/B0B,8MACJ1tB,MAAQ,CACN2tB,SAAU,KACVC,eAAgB,KAChBC,cAAe,QAGjBtiB,eAAiB,SAAAoiB,GACf,IAAIG,GAEFA,EADEH,EACK,SAAA5yC,OAAY4yC,EAASxxC,IAElB,YAEIhB,EAAKiL,MAAM1J,SAAS6K,UAClCpM,EAAKiL,MAAMyD,QAAQ/G,KAAKgrC,GAEtB3yC,EAAK6kB,MAAM2tB,WAAaA,GAG5BxyC,EAAK6rB,SAAS,CAAC2mB,gBAGjB5d,qBAAuB,SAAA6d,GACrB,IAAIG,GAEFA,EADEH,EACW,eAAA7yC,OAAkB6yC,EAAezxC,IAEjC,YAEOhB,EAAKiL,MAAM1J,SAAS6K,UACxCpM,EAAKiL,MAAMyD,QAAQ/G,KAAKirC,GAEtB5yC,EAAK6kB,MAAM4tB,iBAAmBA,GAGlCzyC,EAAK6rB,SAAS,CAAC4mB,sBAGjBtY,oBAAsB,SAAAuY,GACpB,IAAIG,GAEFA,EADEH,EACU,WAAA9yC,OAAc8yC,EAAc1xC,IAE5B,YAEOhB,EAAKiL,MAAM1J,SAAS6K,UACvCpM,EAAKiL,MAAMyD,QAAQ/G,KAAKkrC,GAEtB7yC,EAAK6kB,MAAM6tB,gBAAkBA,GAGjC1yC,EAAK6rB,SAAS,CAAC6mB,qBAGjB9L,oBAAsB,SAAAl9B,GAAc,IAAA0B,EACXpL,EAAKiL,MAArB/I,EAD2BkJ,EAC3BlJ,KAAMgC,EADqBkH,EACrBlH,OAETwF,EAAWP,QAAQR,SAASzG,EAAKlB,IACnCkD,EAAO4uC,gBAAgBppC,GAEvBxF,EAAO6uC,eAAerpC,MAI1Bm9B,gBAAkB,SAAAn9B,GACC1J,EAAKiL,MAAf/G,OAEA2iC,gBAAgBn9B,MAGzBo9B,gBAAkB,SAAAp9B,GACC1J,EAAKiL,MAAf/G,OAEA4iC,gBAAgBp9B,sFAGN0b,GACjBnlB,KAAK+yC,0CAA0C5tB,GAC/CnlB,KAAKgzC,oBAAoB7tB,GACzBnlB,KAAKizC,kBAAkB9tB,qEAGiBA,GACxC,IAAMljB,EAAOjC,KAAKgL,MAAM/I,KACnBA,IAGCkjB,EAAUljB,MAASkjB,EAAUljB,KAAK+F,cAAiB/F,IAAQA,EAAK+F,cAAgB/F,EAAK5D,SAAS+H,qBAClG0/B,GAASC,cAAcG,iEAIP/gB,GAClB,IAAMljB,EAAOjC,KAAKgL,MAAM/I,KACxB,GAAKA,GAIDkjB,EAAUzhB,UAAUuF,SAAWjJ,KAAKgL,MAAMtH,UAAUuF,UAIpDjJ,KAAK4kB,MAAM2tB,UAAavyC,KAAK4kB,MAAM2tB,SAASvpC,UAAhD,CAIA,IAAMkqC,EAAwB,IAAIC,IAAIhuB,EAAUzhB,UAAUuF,OAAOtH,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,MAE5EqyC,EADgBpzC,KAAKgL,MAAMtH,UAAUuF,OAAOtH,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,KAC5BgD,OAAO,SAAAhD,GAAE,OAAKmyC,EAAsBG,IAAItyC,KAC/E,GAAgC,IAA5BqyC,EAAiB30C,OAArB,CAIA,IAAMu8B,EAAUh7B,KAAKgL,MAAMtH,UAAU6E,KAAK6qC,EAAiB,IAC3D,GAAqB,IAAjBpY,EAAQjoB,KAAY,CACtB,IAAMg0B,EAAc/L,EAAQ9xB,QAAQ,KAAOjH,EAAKlB,GAAKi6B,EAAQ9xB,QAAQ,GAAM8xB,EAAQ9xB,QAAQ,KAAOjH,EAAKlB,GAAKi6B,EAAQ9xB,QAAQ,GAAK,KAC3H8tB,EAAYh3B,KAAKgL,MAAMrI,UAAU4F,KAAKw+B,GAC5CjB,GAASC,cAAcuN,OAAOtc,EAAS,eAAAr3B,OAAkBq3B,EAAUl5B,KAA5B,gCAEpB,IAAjBk9B,EAAQjoB,MACV/S,KAAKmwB,eAAe6K,+CAIN7V,GAAW,IAAA1e,EAAAzG,KACrBiC,EAAOjC,KAAKgL,MAAM/I,KACxB,GAAKA,GAGAjC,KAAKgL,MAAMtH,UAAUuF,OAAOxK,OAAjC,CAGA,IAAM80C,EAA2BvzC,KAAKgL,MAAMtH,UAAUuF,OACnDlF,OAAO,SAAAD,GAAI,OAAIA,EAAK0vC,aAAevxC,EAAKlB,KACxCgD,OAAO,SAAAD,GACN,IAAM2vC,EAAWtuB,EAAUzhB,UAAU6E,KAAKzE,EAAK/C,IAC/C,OAAO0yC,GAAYA,EAASD,aAAevxC,EAAKlB,KAEpD,GAAKwyC,EAAyB90C,OAA9B,CAIA,IAAMwJ,EAAasrC,EAAyB5xC,IAAI,SAAAmC,GAC9C,IAAMijC,EAAcjjC,EAAKoF,QAAQ,KAAOjH,EAAKlB,GAAK+C,EAAKoF,QAAQ,GAAMpF,EAAKoF,QAAQ,KAAOjH,EAAKlB,GAAK+C,EAAKoF,QAAQ,GAAK,KAErH,OADkBzC,EAAKuE,MAAMrI,UAAU4F,KAAKw+B,KAGxC/P,EAAkC,IAAtB/uB,EAAWxJ,OAAewJ,EAAW,GAAK,KAC5D69B,GAASC,cAAcuN,OAAOtc,EAAS,wBAAAr3B,OAA2Bq3B,EAAUl5B,MAArC,6BAAA6B,OAA2E4zC,EAAyB90C,QAAU,CACnJi1C,IAAK,YACLt2C,KAAI,6BAAAuC,OAA+B4zC,EAAyB90C,OAAxD,+CAIC,IAAAyJ,EAAAlI,KAAA8lB,EAC2C9lB,KAAK4kB,MAAhD2tB,EADAzsB,EACAysB,SAAUC,EADV1sB,EACU0sB,eAAgBC,EAD1B3sB,EAC0B2sB,cAD1BvlC,EAE0ElN,KAAKgL,MAA/EvJ,EAFAyL,EAEAzL,UAAWK,EAFXoL,EAEWpL,aAAcwF,EAFzB4F,EAEyB5F,UAAWrF,EAFpCiL,EAEoCjL,KAAwBmuB,EAF5DljB,EAE0CvK,UAAY4F,KACvDooB,EAAU4hB,EAAWniB,EAAUmiB,EAASrpC,QAAQ,IAAM,KACtD0nB,EAAU2hB,EAAWniB,EAAUmiB,EAASrpC,QAAQ,IAAM,KACtD8nB,KAAiB/uB,IAAQ0uB,IAAWA,EAAQ5vB,KAAOkB,EAAKlB,GACxDkwB,KAAiBhvB,IAAQ2uB,IAAWA,EAAQ7vB,KAAOkB,EAAKlB,GACxDowB,EAAWH,GAAiBC,EAC5B0iB,EAAmBpB,GAAY5hB,GAAWC,EAC3C2hB,EAASvpC,SAAT,UAAArJ,OACWqxB,EAAgB,MAAQL,EAAQ7yB,KAD3C,QAAA6B,OACsDsxB,EAAgB,MAAQL,EAAQ9yB,MACpFqzB,EAAQ,aAAAxxB,OACMqxB,EAAgB,MAAQL,EAAQ7yB,KADtC,QAAA6B,OACiDsxB,EAAgB,MAAQL,EAAQ9yB,MADjF,YAAA6B,OAEKqxB,EAAgB,MAAQL,EAAQ7yB,KAFrC,QAAA6B,OAEgDsxB,EAAgB,MAAQL,EAAQ9yB,MAC3F,4BACE+2B,KAAkB2d,IAAkBvwC,IAAQuwC,EAAetpC,QAAQR,SAASzG,EAAKlB,IACjF6yC,EAAwBpB,EACzBA,EAAexpC,SAAf,qBAAArJ,OACsB6yC,EAAe10C,MACnC+2B,EAAc,mBAAAl1B,OACM6yC,EAAe10C,MADrB,uBAAA6B,OAEU6yC,EAAe10C,MAC1C,cACJ,OACE0O,EAAAC,EAAAtP,cAAC02C,EAAA,EAAD,KACErnC,EAAAC,EAAAtP,cAAC22C,GAAmBjxB,YAApB,MACArW,EAAAC,EAAAtP,cAAC22B,EAAA,EAAD,CAASmJ,UAAW,UAClBzwB,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,MAAZ,gBACAN,EAAAC,EAAAtP,cAACooC,GAAD,MACA/4B,EAAAC,EAAAtP,cAAC42C,GAAD,CAAO9vC,OAAQA,IACdhC,EAAOuK,EAAAC,EAAAtP,cAAC06B,GAAD,CAAU5zB,OAAQA,EAAQhC,KAAMA,EAAM0xB,QAASnnB,EAAAC,EAAAtP,cAAC00B,EAAA,EAAD,CAAO/kB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WAAgB,KAC9GE,EAAAC,EAAAtP,cAAC62C,GAAD,CAAQ/vC,OAAQA,KAEhBxC,EAaE,KAZDK,IAAiBwF,EAChBkF,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CACE5R,UAAQ,EACR/E,OAAQ,iCACRvnB,QAASE,EAAAC,EAAAtP,cAAA,0HAGXqP,EAAAC,EAAAtP,cAACqtC,EAAA,EAAD,CACE3W,OAAQ,0BACRvnB,QAASE,EAAAC,EAAAtP,cAAA,wEAIfqP,EAAAC,EAAAtP,cAAC82C,EAAD,CAAiB7mC,KAAM,CAACgmB,UAAU,EAAM2P,UAAU,EAAOxE,WAAW,GAAOnzB,MAAO,CAChFnH,EAAOqD,UAAY,CAAC+E,SAAU,CAACW,KAAM,QAASV,QAAS,SAAUpC,KAAM,QAASiwB,OAAQ,kBACtF3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KAAUluB,EAAAC,EAAAtP,cAAC+2C,GAAD,CAAO/jB,eAAgBjoB,EAAKioB,eAAgBwE,qBAAsBzsB,EAAKysB,qBAAsBuF,oBAAqBhyB,EAAKgyB,yBAC9H,KACLj2B,EAAOqD,UAAY,CAAC+E,SAAU,CAACW,KAAM,OAAQV,QAASqnC,GAAkBzpC,KAAM,OAAQgC,SAAUqmC,EAAQ,QAAA5yC,OAAW4yC,EAASxxC,IAAO,OAAQo5B,OAAQ,kBACjJ3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KAAUluB,EAAAC,EAAAtP,cAACg3C,GAAD,CAAYrwC,KAAMyuC,EAAUpiB,eAAgBjoB,EAAKioB,oBACxD,KACLlsB,EAAOqD,UAAY,CAAC+E,SAAU,CAACW,KAAM,UAAWV,QAASsnC,GAAwB1pC,KAAM,aAAcgC,SAAUsmC,EAAc,cAAA7yC,OAAiB6yC,EAAezxC,IAAO,aAAco5B,OAAQ,kBACxL3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KACEluB,EAAAC,EAAAtP,cAACi3C,GAAD,CACE3qC,WAAY+oC,EACZ7d,qBAAsBzsB,EAAKysB,qBAC3BxE,eAAgBjoB,EAAKioB,eACrBwW,oBAAqBz+B,EAAKy+B,oBAC1BC,gBAAiB1+B,EAAK0+B,gBACtBC,gBAAiB3+B,EAAK2+B,qBAGvB,KACL,CAACx6B,SAAU,CAACW,KAAM,UAAWV,QAAS,WAAYpC,KAAM,UAAWiwB,OAAQ,kBACzE3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KAAUluB,EAAAC,EAAAtP,cAACk3C,GAAD,SAEZ,CAAChoC,SAAU,CAACW,KAAM,SAAUV,QAASmmC,EAAgB5rC,EAAwB4rC,GAAiB,WAC9FvoC,KAAM,SACNgC,SAAUumC,EAAa,UAAA9yC,OAAa8yC,EAAc1xC,IAAO,SACzDo5B,OAAQ,kBACN3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KAAUluB,EAAAC,EAAAtP,cAACm3C,GAAD,CAAY90C,UAAWizC,EAAevY,oBAAqBhyB,EAAKgyB,yBAE5E,CAAC7tB,SAAU,CAACW,KAAM,OAAQV,QAAS,iBAAkBpC,KAAM,gBAAiBiwB,OAAQ,kBAClF3tB,EAAAC,EAAAtP,cAACyQ,EAAA,EAAI8sB,KAAL,KAAUluB,EAAAC,EAAAtP,cAACo3C,GAAD,YAGd/nC,EAAAC,EAAAtP,cAACy0B,EAAA,EAAD,CAAQ9kB,GAAI,KAAMgR,MAAO,CAACgU,MAAO,YAAazqB,kBA1OpCwG,aAuPHE,eAAWqhB,GAAWkjB,KChQjBkC,QACW,cAA7Bn0C,OAAOiB,SAASmzC,UAEe,UAA7Bp0C,OAAOiB,SAASmzC,UAEhBp0C,OAAOiB,SAASmzC,SAAS1pC,MACvB,2DCXN2pC,IAASva,OACP3tB,EAAAC,EAAAtP,cAACuoC,EAAA,EAAD,CAAeiP,SAAUttC,iBACvBmF,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACuQ,EAAA,EAAD,KACElB,EAAAC,EAAAtP,cAACy3C,GAAD,SAIL13C,SAAS2D,eAAe,SDkHrB,kBAAmBggC,WACrBA,UAAUgU,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.eb77c771.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport const copyToClipboard = text => {\r\n  const textArea = document.createElement(\"textarea\");\r\n  // This won't work\r\n  // textArea.style.display = 'none'\r\n  document.body.appendChild(textArea);\r\n  textArea.value = text;\r\n  textArea.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(textArea);\r\n};\r\n\r\nexport const topicalThemes = [\r\n  {\r\n    from: moment(\"2019-10-28T12:30:00\"),\r\n    until: moment(\"2019-11-01T00:00:00\"),\r\n    name: 'Halloween',\r\n    override: {\r\n      theme: {\r\n        cells: 'halloween',\r\n        pieces: 'halloween-ghost',\r\n        scheme: 'halloween',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst getTopicalThemeOverrideAndNextUpdateDate = (on = moment()) => {\r\n  const matchingTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrBefore(on) && topicalTheme.until.isSameOrAfter(on)\r\n  ));\r\n  if (matchingTopicalTheme) {\r\n    return {\r\n      override: matchingTopicalTheme.override,\r\n      nextUpdatedDate: matchingTopicalTheme.until,\r\n      name: matchingTopicalTheme.name,\r\n    };\r\n  }\r\n\r\n  const nextTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrAfter(on)\r\n  ));\r\n  if (nextTopicalTheme) {\r\n    return {override: null, nextUpdatedDate: nextTopicalTheme.from, name: null};\r\n  }\r\n\r\n  return {override: null, nextUpdatedDate: null, name: null};\r\n};\r\n\r\nexport const getApplicableSettingsAndNextUpdateDate = (settings, on) => {\r\n  const {override, nextUpdatedDate, name} = getTopicalThemeOverrideAndNextUpdateDate(on);\r\n  if (settings.theme.useTopicalTheme && override) {\r\n    settings = _.merge({}, settings, override);\r\n  }\r\n\r\n  return {applicableSettings: settings, nextUpdatedDate, override, name};\r\n};\r\n\r\nexport const getChallengeTitle = challenge => {\r\n  switch (challenge.options.type) {\r\n    case 'mate':\r\n      return `Find mate in ${challenge.options.typeOptions.mateIn}`;\r\n    case 'avoidMate':\r\n      return `Avoid mate in ${challenge.options.typeOptions.mateIn}`;\r\n    default:\r\n      return 'Unknown challenge';\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst appVersion = 10;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return {\r\n      autoSubmitMoves: false,\r\n      confirmSubmitMoves: true,\r\n      enableNotifications: false,\r\n      theme: {\r\n        useTopicalTheme: true,\r\n        cells: 'original',\r\n        pieces: 'king',\r\n        scheme: '',\r\n        rotateOpponent: true,\r\n        animations: true,\r\n        arrows: true,\r\n        numbers: 'obvious',\r\n      },\r\n    };\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      settings = null;\r\n    }\r\n    this.updateApplicableSettingsTimeout = null;\r\n    this.setSettings(settings);\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onChallenges = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  setSettings(settings) {\r\n    if (settings) {\r\n      this.settings = _.merge(this.constructor.getDefaultSettings(), settings);\r\n    } else {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    const {applicableSettings, nextUpdatedDate, override, name} = utils.getApplicableSettingsAndNextUpdateDate(this.settings);\r\n    this.applicableSettings = applicableSettings;\r\n    this.applicableSettingsName = name;\r\n    this.applicableSettingsOverride = override;\r\n    if (this.updateApplicableSettingsTimeout) {\r\n      clearTimeout(this.updateApplicableSettingsTimeout);\r\n      this.updateApplicableSettingsTimeout = null;\r\n    }\r\n    if (nextUpdatedDate) {\r\n      const millisecondsUntilUpdate = nextUpdatedDate.diff(moment());\r\n      this.updateApplicableSettingsTimeout = setTimeout(() => {\r\n        this.setSettings(this.settings);\r\n        this.onUser.map(callback => callback(this.user));\r\n      }, millisecondsUntilUpdate);\r\n    }\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n    this.socket.on(\"game\", this.gotGame);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.challengesInfo = this.prepareChallenges([]);\r\n    this.socket.on(\"challenges\", this.gotChallenges);\r\n    this.socket.on(\"personal-challenges\", this.gotPersonalChallenges);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.setSettings(user.settings);\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n    this.gotChallenges(this.challengesInfo.challenges);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  gotGame = game => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== game.id).concat([game]);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createChallenge(challenge) {\r\n    this.socket.emit('create-challenge', challenge);\r\n  }\r\n\r\n  updateChallenge(challenge) {\r\n    this.socket.emit('update-challenge', challenge);\r\n  }\r\n\r\n  submitChallengeMove(challenge, path) {\r\n    this.socket.emit(\"submit-challenge-moves\", {id: challenge.id, path});\r\n  }\r\n\r\n  gotChallenges = challenges => {\r\n    for (const challenge of challenges) {\r\n      challenge.meta.publishDatetime = moment(challenge.meta.publishDatetime);\r\n    }\r\n    challenges = _.sortBy(challenges, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.challengesInfo = this.prepareChallenges(challenges);\r\n    this.onChallenges.map(callback => callback(this.challengesInfo));\r\n  };\r\n\r\n  gotPersonalChallenges = personalChallenges => {\r\n    this.gotChallenges(personalChallenges.concat(this.challengesInfo.other));\r\n  };\r\n\r\n  prepareChallenges(challenges) {\r\n    const otherChallenges = this.user ? challenges.filter(challenge => challenge.userId !== this.user.id) : challenges;\r\n    return {\r\n      challenges,\r\n      public: challenges.filter(challenge => challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()),\r\n      private: challenges.filter(challenge => !challenge.meta.public || challenge.meta.publishDatetime.isAfter()),\r\n      byId: _.fromPairs(challenges.map(game => [game.id, game])),\r\n      mine: this.user ? challenges.filter(challenge => challenge.userId === this.user.id) : [],\r\n      other: otherChallenges,\r\n      otherSolved: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.won) : otherChallenges,\r\n      otherStarted: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.started && !this.user.challenges[challenge.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.started) : otherChallenges,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n    this.lastMovesInHistory = this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove);\r\n    this.path = this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    throw new Error('Not implemented `areCellsNeighbours`');\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => this.areCellsNeighbours(cell, playerCell))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nclass GameClassic extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    return (\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    );\r\n  }\r\n}\r\nGame.Classic = GameClassic;\r\n\r\nclass GameHex extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    if (!(\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    )) {\r\n      return false;\r\n    }\r\n\r\n    if (lhs.x === rhs.x) {\r\n      return true;\r\n    } else if (lhs.x % 2 === 0) {\r\n      return rhs.y >= lhs.y;\r\n    } else {\r\n      return rhs.y <= lhs.y;\r\n    }\r\n  }\r\n}\r\nGame.Hex = GameHex;\r\n\r\nGame.GAME_TYPES = [Game.Classic, Game.Hex];\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import Game from \"../../../game/game\";\r\n\r\nexport const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n\r\nexport const translate = (gameType, point) => {\r\n  return getTranslate(gameType)(point);\r\n};\r\n\r\nexport const getTranslate = gameType => {\r\n  if (gameType === Game.Classic) {\r\n    return getTranslateClassic;\r\n  } else if (gameType === Game.Hex) {\r\n    return getTranslateHex;\r\n  }\r\n\r\n  throw new Error(`Unknown game type of type '${gameType ? gameType.constructor.name : gameType}'`);\r\n};\r\n\r\nexport const getTranslateClassic = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: point.y * cellSize,\r\n  });\r\n};\r\n\r\nexport const getTranslateHex = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: (point.y + (point.x % 2 === 0 ? 0.25 : -0.25)) * cellSize,\r\n  });\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenWitchHat = definePiece('PieceHalloweenWitchHat', {\r\n  path: <path d=\"m503.15112,306.14207c-0.08158,-19.00159 -17.54216,-60.97152 -168.51607,-65.22834l-56.26328,-124.83471l76.29825,31.88264l-114.45191,-123.15047c-15.62768,-10.96294 -68.47535,146.47597 -90.00964,213.1728l0,0c-15.14543,2.38948 -62.92045,11.0826 -99.71439,30.45222c-35.89653,18.84568 -54.83104,35.48317 -49.64961,58.60561c-3.7637,26.02861 5.74707,103.14994 246.53844,113.09401c77.45129,3.20712 270.97346,-48.42768 255.7682,-133.99376zm-240.39978,5.43162c-121.8814,8.58253 -132.04665,-25.29799 -132.04665,-25.29799l11.06991,-24.04705c0,0 33.36383,22.50785 101.67601,21.3258c68.31218,-1.19474 96.66319,-31.58713 96.66319,-31.58713l17.99721,21.89507c-4.4073,28.55043 -95.35967,37.7113 -95.35967,37.7113z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCauldron = definePiece('PieceHalloweenCauldron', {\r\n  path: <path d=\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954 c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673 c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939 c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954 c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689 c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1 c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715 c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z M244.915,236c-78.418,0-125.798-29.477-125.798-51.3 c0-20.734,49.014-50.853,125.816-50.853c8.044,0,15.73,0.399,23.128,1.01l-12.19,28.209c-3.218,7.447-2.473,16.014,1.983,22.794 c4.456,6.78,12.024,10.862,20.138,10.862c9.611,0,18.303-5.711,22.118-14.532l16.543-38.252 c34.191,10.619,54.079,27.573,54.079,40.762C370.731,207.889,320.981,236,244.915,236z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenBat = definePiece('PieceHalloweenBat', {\r\n  path: <path d=\"m520.84272,171.44399c-8.83353,-12.69106 -16.6399,-27.11688 -22.85989,-42.92364c-9.91775,-25.0968 -14.56277,-50.31915 -14.5057,-73.25893c0.01141,-8.66234 -10.44274,-13.31877 -16.87957,-7.50964c-28.86304,25.99842 -77.48168,46.1763 -136.24632,55.95709c5.66076,-27.88153 5.47816,-60.38526 -10.4998,-91.3825c-2.86462,-5.55805 -10.62534,-6.19716 -14.28886,-1.14128c-4.65643,6.42542 -9.55254,15.94372 -9.55254,27.61904l-68.13457,0c0,-11.67532 -4.88469,-21.19362 -9.54112,-27.61904c-3.66352,-5.06729 -11.41283,-4.42818 -14.28886,1.14128c-15.97796,30.98582 -16.14915,63.4439 -10.48839,91.32544c-58.76464,-9.78079 -107.3947,-29.94726 -136.24632,-55.93426c-6.43683,-5.79772 -16.87957,-1.12987 -16.87957,7.53247c0.06848,22.93978 -4.58796,48.17354 -14.5057,73.25893c-6.21999,15.80676 -14.02636,30.24399 -22.85989,42.92364c-6.6765,9.56395 -1.92877,22.98543 9.19874,26.50058c10.19165,3.207 20.60015,7.74931 30.81463,13.60409c35.3227,20.23494 56.25382,50.76425 60.5108,76.28333c1.17552,7.0303 3.62928,9.74655 13.30736,8.19441c24.05824,-3.90319 56.71033,-1.27824 88.11843,16.71979c17.29043,9.91775 31.5907,22.26642 41.93072,35.25422c3.36678,4.22275 7.79496,6.99606 15.00787,6.99606c7.07595,0 11.54978,-2.79614 14.90515,-7.00748c10.35143,-12.99921 24.69736,-25.32506 41.9992,-35.23139c31.41951,-18.00944 64.07161,-20.63439 88.15267,-16.7312c9.67808,1.56356 12.12042,-1.17552 13.30736,-8.20582c4.25698,-25.50767 25.19952,-56.03698 60.52222,-76.28333c10.22589,-5.86619 20.65722,-10.39708 30.81463,-13.60409c11.11609,-3.49232 15.85242,-16.91381 9.18733,-26.47776z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 0, y: 100},\r\n});\r\n\r\nconst PieceHalloweenSpider = definePiece('PieceHalloweenSpider', {\r\n  path: <path d=\"M392.236,256.85c-3.204-3.473-7.704-5.451-12.436-5.451h-20.374c-3.501-15.538-8.927-30.108-16.075-43.152 l44.043-13.528l68.976,73.267c3.34,3.542,7.826,5.325,12.339,5.325c4.169,0,8.332-1.528,11.608-4.603 c6.798-6.41,7.109-17.127,0.712-23.938l-76.206-80.945c-4.416-4.697-11.13-6.464-17.299-4.581l-65.142,20.012 c-6.842-7.334-14.321-13.819-22.387-19.144l79.475-60.708l63.803,37.227c8.073,4.703,18.425,1.968,23.151-6.096 c4.713-8.08,1.987-18.447-6.086-23.161l-73.59-42.94c-5.917-3.447-13.362-2.994-18.82,1.176l-61.323,46.84 c-2.544-8.789-7.769-16.651-14.916-23.168l9.129-19.879c3.903-8.5,0.168-18.554-8.333-22.448c-8.532-3.92-18.554-0.182-22.445,8.325 l-8.448,18.416c-5.988-1.463-12.204-2.49-18.769-2.49s-12.786,1.026-18.768,2.49l-8.455-18.416 c-3.885-8.507-13.938-12.23-22.439-8.325c-8.501,3.894-12.236,13.948-8.338,22.448l9.135,19.879 c-6.785,6.177-11.744,13.593-14.405,21.838l-61.835-47.231c-5.456-4.151-12.901-4.629-18.82-1.167l-73.597,42.94 c-8.066,4.713-10.798,15.085-6.085,23.161c4.713,8.08,15.085,10.814,23.157,6.095l63.802-37.227l80.732,61.669 c-8.054,5.166-15.577,11.384-22.439,18.555l-66.347-20.384c-6.17-1.884-12.87-0.107-17.298,4.58L4.613,243.058 c-6.402,6.814-6.085,17.528,0.712,23.938c3.27,3.086,7.439,4.607,11.608,4.607c4.5,0,8.993-1.787,12.333-5.326l68.981-73.271 l44.916,13.794c-7.296,12.955-12.916,27.402-16.586,42.888h-20.736c-4.733,0-9.232,1.978-12.437,5.451L4.496,351.453 c-6.35,6.872-5.923,17.587,0.958,23.927c3.256,3.006,7.375,4.49,11.478,4.49c4.565,0,9.11-1.835,12.45-5.447l83.879-90.868h8.72 c-0.103,2.606-0.317,5.17-0.317,7.808c0,82.225,54.247,148.879,121.156,148.879c66.91,0,121.156-66.654,121.156-148.879 c0-2.059-0.181-4.06-0.252-6.095h8.649l83.878,90.867c3.341,3.612,7.892,5.448,12.456,5.448c4.098,0,8.215-1.489,11.478-4.49 c6.876-6.341,7.31-17.059,0.959-23.928L392.236,256.85z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCat = definePiece('PieceHalloweenCat', {\r\n  path: <path d=\"M535.892,69.273c-1.147-7.46-7.924-12.77-15.396-12.135c-18.883,1.568-36.254,5.171-53.12,11.036 c-26.556,9.215-50.526,22.663-71.3,39.987l-0.308-0.086c-14.421-3.867-29.328-7.866-44.305-11.164 c-22.579-4.957-45.793-7.843-68.993-8.569c-21.208-0.665-43.206,0.343-67.381,3.097c-24.638,2.791-49.336,8.058-73.413,15.628 c-0.21,0.065-0.397,0.119-0.567,0.166c-1.97-1.857-3.953-3.192-5.603-4.301c-0.621-0.429-1.265-0.84-1.849-1.304 c-21.19-16.97-46.129-29.802-74.134-38.137c-13.444-4.004-26.71-6.356-40.545-7.206C11.8,55.825,5.42,60.755,4.011,67.791 c-0.182,0.913-0.383,1.801-0.574,2.681c-0.497,2.28-1.013,4.632-1.363,7.236c-3.068,22.953-2.728,46.419,0.99,69.745 c4.587,28.742,13.229,55.232,25.692,78.808c-6.198,14.209-10.097,30.103-11.889,48.472c-3.624,37.075,3.206,72.854,20.302,106.335 c13.562,26.546,33.085,49.106,58.047,67.047c22.906,16.461,44.463,24.021,70.319,31.83c25.86,7.812,52.794-18.394,103.458-18.053 c47.781,0.304,59.902,19.845,93.234,19.845c0,0,1.218-0.275,1.204-0.275c18.337-5.021,34.737-11.397,50.143-19.49 c27.872-14.626,51.054-34.909,68.896-60.294c19.695-28.012,31.298-59.897,34.504-94.77c2.525-27.56-1.115-54.252-10.889-79.539 l1.956-4.331c5.596-12.405,11.383-25.219,16.186-38.447c7.761-21.406,12.134-44.354,13.366-70.146 C538.166,102.325,538.497,86.233,535.892,69.273z M228.288,339.606c0,0-55.298,5.619-85.933-25.015 c-30.635-30.645-25.013-85.936-25.013-85.936s55.293-5.612,85.928,25.022C233.909,284.311,228.288,339.606,228.288,339.606z  M401.251,314.591c-30.635,30.634-85.93,25.015-85.93,25.015s-5.614-55.295,25.02-85.928 c30.631-30.635,85.926-25.022,85.926-25.022S431.891,283.957,401.251,314.591z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenTombstone = definePiece('PieceHalloweenTombstone', {\r\n  path: <g>\r\n   <path d=\"m310.57959,214.18901c18.11361,-19.31361 -3.7406,-43.37905 -25.98583,-38.09752l0,42.67408c9.2552,1.74895 18.77428,3.11653 25.98583,-4.57656z\"/>\r\n   <path d=\"m129.70544,175.71203l0,42.67408c1.4138,0.01734 2.82568,0.04045 4.23563,0.07705c40.18933,0.00193 36.10009,-50.48851 -4.23563,-42.75112z\"/>\r\n   <path d=\"m413.15147,392.28371l-16.74989,0l0,-215.12898c0,-40.68243 -13.72389,-78.15395 -36.78388,-108.06144l-22.93479,7.21154l9.8003,27.57684l0.81284,2.2748l-1.54285,1.56597l-23.05228,23.42789c-1.05361,1.07287 -2.77752,1.08443 -3.85232,0.03274c-1.02472,-1.01509 -1.07865,-2.65617 -0.13676,-3.7329l20.04555,-22.91938l-12.48344,-29.52418l-1.64687,-3.89277l4.24718,-2.15345l21.51906,-10.90592c-32.4115,-35.66478 -79.16711,-58.05447 -131.15032,-58.05447c-47.67246,0 -90.9398,18.83399 -122.78115,49.45994l25.07861,12.71458l2.53097,1.28282l0.31589,2.24205l7.99742,56.33826c0.2138,1.48892 -0.8244,2.86613 -2.31332,3.07993c-1.42151,0.20032 -2.74285,-0.74542 -3.04333,-2.12841l-11.27574,-52.83457l-30.02113,-9.43818c-27.17619,31.13831 -43.64679,71.86504 -43.64679,116.44023l0,215.12898l-16.75181,0c-10.63818,0 -19.2616,8.62342 -19.2616,19.2616l0,18.9226c0,10.63433 8.62342,19.2616 19.2616,19.2616l387.82079,0c10.63818,0 19.2616,-8.62727 19.2616,-19.2616l0,-18.9226c-0.00193,-10.63818 -8.62535,-19.26353 -19.26353,-19.26353zm-144.04211,-222.43298c5.59164,-0.28122 11.37783,-0.57207 17.23143,-0.57207c13.94155,0 31.1229,1.44847 40.31261,12.73577c0.00385,0.00385 0.0077,0.0077 0.01156,0.01156l0.0077,0.01541c0.00385,0.00578 0.01156,0.01156 0.01541,0.01734c0.0077,0.0077 0.01541,0.01541 0.01926,0.02504c0.00385,0.00578 0.0077,0.01156 0.01541,0.01926c6.75697,8.36531 8.55408,16.01602 5.34124,22.74025c-5.38362,11.27959 -23.59931,17.36819 -37.99736,17.36819c-3.28025,0 -9.09533,-0.89374 -9.09533,-0.89374s-4.54959,37.16719 2.2382,44.46541c1.52745,1.63724 3.37078,2.8199 5.51267,3.54221l-32.98549,0c10.84621,-4.50721 15.75406,-26.9778 15.75406,-49.26732c0,-22.61312 -4.91171,-45.40923 -15.76947,-49.79509c2.96629,-0.09246 6.11556,-0.2504 9.3881,-0.4122zm-59.43938,0.48154l34.88854,0c-3.75794,1.56019 -7.90881,5.69758 -11.09468,15.3149c-2.9085,8.77944 -3.1069,20.6677 -3.1069,33.48244c0,22.0006 3.46516,45.50553 14.04749,50.19381l-34.89624,0c3.74253,-1.55826 7.88955,-5.69373 11.05616,-15.3149c2.89117,-8.77173 3.13001,-20.66192 3.13001,-33.46896c0.00385,-22.00831 -3.48635,-45.51709 -14.02437,-50.20729zm-104.76,-0.05201c3.66741,-0.07705 7.46002,-0.23692 11.41443,-0.40257c5.73803,-0.23884 11.6629,-0.48732 17.50109,-0.48732c11.63979,0 20.4173,1.0305 27.62114,3.24558c11.07542,3.40545 17.20446,10.95407 16.81538,20.71393c-0.47769,12.00961 -10.52647,23.21986 -23.3701,26.07636c-0.59518,0.13098 -1.08443,0.55088 -1.29823,1.1191c-0.2138,0.56629 -0.13483,1.20578 0.22151,1.69887l21.18006,29.4298c6.29854,8.78714 12.74155,15.2263 22.73062,17.64748l-21.625,0l-34.1932,-47.22752c-0.35056,-0.48732 -0.92263,-0.76276 -1.5313,-0.74542c-1.7374,0.06742 -3.79646,0.13676 -5.89598,0.13676c-1.68154,0 -3.20898,-0.04238 -4.66516,-0.13483c-0.48924,-0.02889 -0.98619,0.14446 -1.35024,0.48539c-0.36212,0.34286 -0.56822,0.81862 -0.56822,1.31749c0,2.50016 -0.22921,5.6398 -0.46228,8.96435c-0.84558,11.75536 -1.89919,26.37876 4.88667,33.66735c1.52359,1.63531 3.36308,2.81605 5.50304,3.53643l-32.95275,0c10.89051,-4.50721 15.8157,-26.97973 15.8157,-49.27118c0,-22.57652 -4.91363,-45.33411 -15.77718,-49.77005z\"/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 50, y: 50},\r\n});\r\n\r\nconst PieceHalloweenPumpkin = definePiece('PieceHalloweenPumpkin', {\r\n  path: <path d=\"m468.74161,145.38332c-25.52721,-31.3253 -52.92613,-46.95841 -82.22343,-46.95841c-20.72406,0 -40.16348,8.29877 -58.36017,25.00115c-12.62923,-9.61583 -26.26865,-16.44316 -40.93732,-20.48009c-3.03246,-39.3801 -20.45722,-67.93597 -52.29333,-85.65997l-33.33805,23.54115c21.70947,14.12736 34.34823,33.82218 37.88389,59.08636c-21.72472,2.535 -41.93416,10.61267 -60.63213,24.23112c-18.68273,-17.16363 -38.64438,-25.72163 -59.85448,-25.72163c-29.81764,0 -56.60092,15.63311 -80.33839,46.95841c-25.77309,32.32024 -38.6482,70.49765 -38.6482,114.44265c0,11.10824 1.014,22.26984 3.01722,33.35139c7.58211,45.47172 28.81127,85.15297 63.6646,118.97324c31.32339,30.84689 60.38435,46.24556 87.16381,46.24556c0.6328,0 1.28465,-0.02287 1.93651,-0.06671c30.65438,-9.40998 63.19572,-14.48378 96.93403,-14.48378c28.17847,0 55.52974,3.54137 81.64019,10.18954l-0.14104,-0.18679l0.61564,0.30496c4.98994,1.27703 9.93032,2.67604 14.82877,4.17988c0.66329,0.04003 1.32658,0.0629 1.98797,0.0629c26.78518,0 55.56786,-15.39867 86.39569,-46.24556l0,-0.00191c33.84124,-33.82027 55.57167,-73.49962 65.16463,-118.97324c2.55406,-12.61017 3.79296,-25.00115 3.79296,-37.12911c0.00191,-42.46213 -12.76075,-79.34345 -38.25937,-110.66113zm-373.25996,61.40407l108.37772,37.1577c-9.0993,24.7305 -25.51387,37.10433 -49.26277,37.10433c-6.56812,0 -12.38717,-1.0159 -17.42666,-3.03056l0,0c-32.34883,-13.12289 -46.2284,-36.88323 -41.68828,-71.23146zm96.2574,231.91396c0.50509,-0.51081 1.26559,-1.27322 2.26244,-2.27578l0.75859,0.77193c-0.50509,0.49938 -1.50956,0.99303 -3.02103,1.50384zm184.91743,-70.48812l-249.34824,0l-18.17954,-50.80093l48.5099,32.62139l39.39535,-32.62139l53.07289,37.14054l55.32199,-39.37439l43.19022,37.12911l50.78568,-31.82467l-22.74825,47.73034zm0.00191,-90.19437c-5.56555,2.01275 -11.36364,3.03056 -17.42095,3.03056c-24.25781,0 -40.68953,-12.37383 -49.27421,-37.10433l108.3701,-37.1596c4.05218,34.34823 -9.8617,58.11048 -41.67494,71.23337z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenGhost = definePiece('PieceHalloweenGhost', {\r\n  path: <g>\r\n    <path d={\"m201.144531 256c-17.300781 0-36.574219 30.042969-36.574219 73.144531-.179687 13.222657.574219 26.441407 2.25 39.558594 20.023438-16.175781 48.621094-16.175781 68.644532 0 1.675781-13.117187 2.429687-26.335937 2.25-39.558594 0-43.101562-19.273438-73.144531-36.570313-73.144531zm0 0\"}/>\r\n    <path d={\"m201.144531 374.855469c-11.320312-.027344-22.007812 5.222656-28.902343 14.199219 6.390624 13.230468 16.449218 13.230468 28.902343 13.230468 12.449219 0 22.507813 0 28.898438-13.230468-6.894531-8.976563-17.582031-14.226563-28.898438-14.199219zm0 0\"}/>\r\n    <path d={\"m146.285156 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m9.390625 137.398438c-6.011719 5.988281-9.390625 14.125-9.390625 22.609374 0 8.488282 3.378906 16.621094 9.390625 22.613282l27.179687 27.234375v-22.691407c.042969-19.089843 2.753907-38.082031 8.046876-56.421874-12.015626-5.023438-25.871094-2.40625-35.226563 6.65625zm0 0\"}/>\r\n    <path d={\"m292.570312 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m434.707031 387.328125c-9.484375-16.925781-14.359375-36.042969-14.136719-55.441406v-66.40625c-2.863281-1.125-4.96875-3.617188-5.601562-6.632813-.632812-3.011718.296875-6.140625 2.464844-8.324218l67.886718-67.886719c12.472657-12.507813 12.472657-32.75 0-45.257813-12.667968-12.078125-32.589843-12.078125-45.257812 0l-67.882812 67.886719c-3.589844 3.464844-9.292969 3.414063-12.816407-.109375-3.527343-3.527344-3.578125-9.230469-.113281-12.816406l55.351562-55.351563c-20.773437-80.652343-93.511718-137.0117185-176.796874-136.988281h-2.832032c-78.738281 1.859375-147.5 53.765625-170.863281 128.976562-6.140625 18.785157-9.261719 38.425782-9.253906 58.1875v178.550782c.078125 14.484375 3.398437 28.769531 9.71875 41.800781 29.476562 61.511719 121.363281 104.484375 223.425781 104.484375 100.761719 0 178.148438-32.171875 215.863281-88.960938-28.007812 2.40625-54.90625-11.484374-69.15625-35.710937zm-343.277343-209.042969c0-33.882812 15.722656-59.429687 36.570312-59.429687 20.84375 0 36.570312 25.546875 36.570312 59.429687 0 33.882813-15.726562 59.429688-36.570312 59.429688-20.847656 0-36.570312-25.546875-36.570312-59.429688zm157.859374 210.960938c-.171874 1.1875-.578124 2.324218-1.199218 3.347656-9.296875 25.070312-26.128906 27.976562-46.945313 27.976562-20.820312 0-37.652343-2.90625-46.949219-27.976562-.621093-1.023438-1.027343-2.160156-1.199218-3.347656-5.195313-19.589844-7.457032-39.847656-6.710938-60.101563 0-51.265625 24.101563-91.429687 54.859375-91.429687 30.753907 0 54.855469 40.164062 54.855469 91.429687.75 20.253907-1.511719 40.511719-6.710938 60.101563zm24.996094-151.53125c-20.84375 0-36.570312-25.546875-36.570312-59.429688 0-33.882812 15.726562-59.429687 36.570312-59.429687 20.847656 0 36.570313 25.546875 36.570313 59.429687 0 33.882813-15.722657 59.429688-36.570313 59.429688zm0 0\"}/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n    'halloween-witch-hat': PieceHalloweenWitchHat,\r\n    'halloween-cauldron': PieceHalloweenCauldron,\r\n    'halloween-bat': PieceHalloweenBat,\r\n    'halloween-spider': PieceHalloweenSpider,\r\n    'halloween-cat': PieceHalloweenCat,\r\n    'halloween-tombstone': PieceHalloweenTombstone,\r\n    'halloween-pumpkin': PieceHalloweenPumpkin,\r\n    'halloween-ghost': PieceHalloweenGhost,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass BaseCellDefinitions extends PureComponent {\r\n  static defaultBorder = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`M0,0h${constants.cellSize}v${constants.cellSize}h-${constants.cellSize}z M${constants.borderWidth},${constants.borderWidth}v${constants.cellSize - constants.borderWidth * 2}h${constants.cellSize - constants.borderWidth * 2}v-${constants.cellSize - constants.borderWidth * 2}z`} />\r\n    </g>\r\n  );\r\n  static defaultBorderHex = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`\r\n        M ${(() => {\r\n          const center = {x: 0, y: 0};\r\n          return [0, 1, 2, 3, 4, 5]\r\n            .map(index => index / 6 * Math.PI * 2)\r\n            .map(angle => {\r\n              const radius = constants.cellSize * 1.5 / 2;\r\n              const x = center.x + Math.cos(angle) * radius;\r\n              const y = center.y + Math.sin(angle) * radius;\r\n              return `${x},${y}`;\r\n            })\r\n            .join('L');\r\n        })()} z \r\n        M ${[0, 1, 2, 3, 4, 5].reverse().map(index => index / 6 * Math.PI * 2).map(angle => `${Math.cos(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2},${Math.sin(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2}`).concat('L')} z \r\n      `} />\r\n    </g>\r\n  );\r\n\r\n\trender() {\r\n\t  const {name, paths} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`cell-${name}-border`} className={\"cell-border\"}>\r\n          {paths.border}\r\n        </g>\r\n        <g id={`cell-${name}-0`} className={\"cell-0\"}>\r\n          {paths.level0}\r\n        </g>\r\n        <g id={`cell-${name}-1`} className={\"cell-1\"}>\r\n          {paths.level1}\r\n        </g>\r\n        <g id={`cell-${name}-2`} className={\"cell-2\"}>\r\n          {paths.level2}\r\n        </g>\r\n        <g id={`cell-${name}-3`} className={\"cell-3\"}>\r\n          {paths.level3}\r\n        </g>\r\n        <g id={`cell-${name}-4`} className={\"cell-4\"}>\r\n          {paths.level4}\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBaseCellDefinitions.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  paths: PropTypes.shape({\r\n    border: PropTypes.node.isRequired,\r\n    level0: PropTypes.node.isRequired,\r\n    level1: PropTypes.node.isRequired,\r\n    level2: PropTypes.node.isRequired,\r\n    level3: PropTypes.node.isRequired,\r\n    level4: PropTypes.node.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst defineCellDefinitions = (className, name, paths) => {\r\n  class CellDefinitionsFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BaseCellDefinitions name={name} paths={paths} />\r\n      );\r\n    }\r\n  }\r\n  CellDefinitionsFor.displayName = className;\r\n\r\n  return CellDefinitionsFor;\r\n};\r\n\r\nconst OriginalCellDefinitions = defineCellDefinitions('OriginalCellDefinitions', 'original', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <rect\r\n      className={'border fill'}\r\n      width={constants.cellSize - constants.borderWidth * 2}\r\n      height={constants.cellSize - constants.borderWidth * 2}\r\n      transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n    />\r\n  ),\r\n  level1: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 2}\r\n        height={constants.cellSize - constants.borderWidth * 2}\r\n        transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level3: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level4: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 10}\r\n        height={constants.cellSize - constants.borderWidth * 10}\r\n        transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nconst HalloweenCellDefinitions = defineCellDefinitions('HalloweenCellDefinitions', 'halloween', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <path className={\"fill\"} transform={\"scale(0.21)\"} d={\"m475.484375 292.628906h18.285156c8.34375.027344 15.640625-5.609375 17.71875-13.691406 2.074219-8.082031-1.605469-16.539062-8.933593-20.53125.082031-.433594.132812-.875.148437-1.316406.09375-.339844.164063-.683594.210937-1.035156v-171.820313c6.503907-11.746094 9.664063-25.046875 9.140626-38.464844 0-27.902343-10.832032-45.7148435-18.285157-45.7148435-7.449219 0-18.285156 17.8125005-18.285156 45.7148435-.523437 13.417969 2.636719 26.71875 9.144531 38.464844v109.511719c-11.957031-32.042969-32.140625-60.375-58.515625-82.148438-4.039062-3.027344-9.769531-2.210937-12.800781 1.828125-3.027344 4.042969-2.210938 9.773438 1.828125 12.800781 49.691406 37.265626 67 117.863282 69.332031 129.828126h-27.273437c0-2.53125-.492188-62.117188-43.492188-72.867188-3.179687-.820312-6.550781.125-8.839843 2.476562-2.289063 2.355469-3.140626 5.753907-2.230469 8.90625.90625 3.15625 3.4375 5.578126 6.625 6.355469 29.121093 7.277344 29.652343 54.527344 29.652343 55.128907h-173.488281c2.828125-12.214844 22.457031-88.640626 77.449219-120.0625 4.253906-2.566407 5.679688-8.054688 3.21875-12.363282-2.464844-4.3125-7.917969-5.871094-12.285156-3.507812-33.832032 19.34375-55.425782 52.480468-68.574219 81.003906v-116.890625c6.492187-11.75 9.640625-25.050781 9.105469-38.464844 0-27.902343-10.832032-45.7148435-18.285156-45.7148435-7.449219 0-18.285157 17.8125005-18.285157 45.7148435-.523437 13.417969 2.640625 26.71875 9.144531 38.464844v120.339844c-15.261718-33.203125-38.578124-62.0625-67.832031-83.960938-4.109375-2.933593-9.820312-1.980469-12.753906 2.128907-2.933594 4.113281-1.980469 9.824218 2.128906 12.757812 55.167969 39.402344 75.054688 108.496094 78.171875 120.554688h-173.429687c0-.601563.53125-47.851563 29.648437-55.128907 4.867188-1.257812 7.804688-6.203125 6.585938-11.074219-1.222656-4.875-6.144532-7.851562-11.027344-6.664062-43 10.75-43.492188 70.335938-43.492188 72.867188h-27.429687c.714844-7.988282 9.4375-91.675782 60.34375-129.828126 2.613281-1.960937 3.980469-5.164062 3.589844-8.40625-.390625-3.242187-2.480469-6.03125-5.484375-7.316406-3.003906-1.28125-6.464844-.863281-9.078125 1.09375-22.324219 17.949219-39.382813 41.597656-49.371094 68.445313v-95.808594c6.503906-11.746094 9.667969-25.046875 9.144531-38.464844 0-27.902343-10.835937-45.7148435-18.289062-45.7148435-7.449219 0-18.2851565 17.8125005-18.2851565 45.7148435-.5234375 13.417969 2.6406245 26.71875 9.1445315 38.464844v171.820313c.054687.488281.152343.96875.292969 1.4375 0 .292968 0 .601562.109374.914062-7.320312 3.988281-11 12.433594-8.9375 20.507812 2.0625 8.078126 9.34375 13.722657 17.675782 13.714844h54.859375c20.199219 0 36.570312 16.371094 36.570312 36.570313s-16.371093 36.570312-36.570312 36.570312h-36.570313c-10.101562 0-18.289062 8.1875-18.289062 18.285157 0 10.101562 8.1875 18.285156 18.289062 18.285156h128c20.195313 0 36.570313 16.375 36.570313 36.574218 0 20.195313-16.375 36.570313-36.570313 36.570313h-118.859375c-10.097656 0-18.285156 8.1875-18.285156 18.285156 0 10.101563 8.1875 18.285157 18.285156 18.285157h448c10.101563 0 18.285157-8.183594 18.285157-18.285157 0-10.097656-8.183594-18.285156-18.285157-18.285156h-36.570312c-20.199219 0-36.570313-16.375-36.570313-36.570313 0-20.199218 16.371094-36.574218 36.570313-36.574218h36.570312c10.101563 0 18.285157-8.183594 18.285157-18.285156 0-10.097657-8.183594-18.285157-18.285157-18.285157h-18.285156c-20.199219 0-36.570313-16.371093-36.570313-36.570312s16.371094-36.570313 36.570313-36.570313zm-338.285156 0c0-5.050781 4.09375-9.144531 9.140625-9.144531h64c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625h-64c-5.046875 0-9.140625-4.09375-9.140625-9.140625zm27.429687 54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046875 4.09375-9.140625 9.144531-9.140625h228.570313c5.050781 0 9.140625 4.09375 9.140625 9.140625 0 5.050781-4.089844 9.144531-9.140625 9.144531zm27.425782 36.570313c0-5.046876 4.09375-9.140626 9.144531-9.140626h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531zm182.859374 36.574218c5.046876 0 9.140626 4.09375 9.140626 9.140625 0 5.050781-4.09375 9.144531-9.140626 9.144531h-118.859374c-5.046876 0-9.140626-4.09375-9.140626-9.144531 0-5.046875 4.09375-9.140625 9.140626-9.140625zm-64 64h-91.429687c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h91.429687c5.046876 0 9.140626 4.09375 9.140626 9.144531s-4.09375 9.144531-9.140626 9.144531zm91.425782 0h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.144531s-4.09375 9.144531-9.144531 9.144531zm0-91.429687h-109.710938c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046876 4.09375-9.140626 9.144531-9.140626h109.710938c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531zm0-91.429688h-82.285156c-5.046876 0-9.140626-4.09375-9.140626-9.140625 0-5.050781 4.09375-9.144531 9.140626-9.144531h82.285156c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625zm0 0\"}/>\r\n  ),\r\n  level1: (\r\n    <g className={\"fill\"} transform={\"translate(-1,6),scale(0.33,0.33)\"}>\r\n      <path d={\"m221.30057,128.34535c12.80287,-11.57301 -2.64389,-25.9934 -18.36703,-22.82862l0,25.57096c6.54166,1.048 13.26984,1.86747 18.36703,-2.74234z\"}/>\r\n      <path d={\"m93.457,105.28936l0,25.57096c0.99929,0.01039 1.99722,0.02424 2.99378,0.04617c28.4062,0.00115 25.51589,-30.25349 -2.99378,-25.61713z\"}/>\r\n      <path d={\"m293.79936,235.06243l-11.83898,0l0,-128.90859c0,-24.37754 -9.70018,-46.83105 -25.9992,-64.75208l-16.21053,4.32127l6.92695,16.52446l0.57452,1.36309l-1.0905,0.93835l-16.29357,14.03835c-0.7447,0.64288 -1.96318,0.64981 -2.72286,0.01962c-0.72428,-0.60826 -0.7624,-1.59162 -0.09666,-2.23681l14.16839,-13.73365l-8.82342,-17.69134l-1.16402,-2.33261l3.00195,-1.29038l15.20988,-6.53499c-22.90876,-21.37089 -55.95607,-34.78713 -92.6983,-34.78713c-33.69535,0 -64.27712,11.28562 -86.78289,29.63716l17.7258,7.61877l1.78892,0.76869l0.22327,1.34347l5.65265,33.75875c0.15112,0.89218 -0.58269,1.71743 -1.63508,1.84554c-1.00473,0.12004 -1.93867,-0.44667 -2.15106,-1.27537l-7.9698,-31.65929l-21.21922,-5.65551c-19.20839,18.65855 -30.84997,43.06264 -30.84997,69.77278l0,128.90859l-11.84034,0c-7.51917,0 -13.61428,5.16729 -13.61428,11.54185l0,11.33871c0,6.37225 6.09511,11.54185 13.61428,11.54185l274.11544,0c7.51917,0 13.61428,-5.16959 13.61428,-11.54185l0,-11.33871c-0.00136,-6.37456 -6.09648,-11.543 -13.61565,-11.543zm-101.81034,-133.28526c3.95223,-0.16851 8.04196,-0.34279 12.17934,-0.34279c9.85402,0 21.99796,0.86795 28.49333,7.63147c0.00272,0.00231 0.00545,0.00462 0.00817,0.00693l0.00545,0.00923c0.00272,0.00346 0.00817,0.00693 0.01089,0.01039c0.00545,0.00462 0.01089,0.00923 0.01361,0.015c0.00272,0.00346 0.00545,0.00693 0.01089,0.01154c4.77589,5.01262 6.0461,9.59705 3.77524,13.62631c-3.80519,6.75891 -16.68022,10.40728 -26.8569,10.40728c-2.31851,0 -6.42866,-0.53554 -6.42866,-0.53554s-3.21569,22.27115 1.58198,26.64436c1.07961,0.98106 2.3825,1.68973 3.89641,2.12255l-23.31446,0c7.6662,-2.70079 11.13512,-16.16551 11.13512,-29.52174c0,-13.55013 -3.47164,-27.20991 -11.14601,-29.83799c2.0966,-0.0554 4.32254,-0.15004 6.6356,-0.247zm-42.01232,0.28855l24.65955,0c-2.65615,0.93489 -5.59002,3.41408 -7.84183,9.17692c-2.05576,5.26077 -2.19598,12.3844 -2.19598,20.06319c0,13.1831 2.44921,27.26762 9.9289,30.0769l-24.665,0c2.64526,-0.93374 5.57641,-3.41177 7.8146,-9.17692c2.0435,-5.25616 2.21232,-12.38094 2.21232,-20.05512c0.00272,-13.18772 -2.46419,-27.27454 -9.91256,-30.08498zm-74.04537,-0.03116c2.59216,-0.04617 5.27281,-0.14196 8.06782,-0.24122c4.0557,-0.14312 8.24345,-0.29201 12.36994,-0.29201c8.22711,0 14.43114,0.61749 19.52288,1.9448c7.82821,2.0406 12.16028,6.56385 11.88527,12.4121c-0.33763,7.19634 -7.44021,13.9137 -16.51821,15.62535c-0.42068,0.07848 -0.76648,0.3301 -0.9176,0.67058c-0.15112,0.33933 -0.0953,0.72252 0.15656,1.01799l14.97027,17.63479c4.45187,5.26539 9.00585,9.12383 16.06622,10.57464l-15.28476,0l-24.16808,-28.29946c-0.24778,-0.29201 -0.65212,-0.45706 -1.08234,-0.44667c-1.22801,0.0404 -2.68338,0.08195 -4.16733,0.08195c-1.18853,0 -2.26814,-0.02539 -3.29738,-0.08079c-0.3458,-0.01731 -0.69705,0.08656 -0.95436,0.29085c-0.25595,0.20544 -0.40162,0.49053 -0.40162,0.78946c0,1.49813 -0.16201,3.37945 -0.32674,5.37158c-0.59767,7.04399 -1.34237,15.80656 3.45394,20.174c1.07689,0.9799 2.37705,1.68742 3.8896,2.11908l-23.29132,0c7.69752,-2.70079 11.17869,-16.16667 11.17869,-29.52405c0,-13.5282 -3.473,-27.16489 -11.15146,-29.82298z\"}/>\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <path className={\"fill\"} transform={\"translate(9,7),scale(0.3,0.3)\"} d={\"M245.928,84.493c-13.393-16.435-27.768-24.637-43.139-24.637c-10.873,0-21.072,4.354-30.619,13.117   c-6.626-5.045-13.782-8.627-21.478-10.745c-1.591-20.661-10.733-35.643-27.436-44.942l-17.491,12.351   c11.39,7.412,18.021,17.745,19.876,31c-11.398,1.33-22.001,5.568-31.811,12.713c-9.802-9.005-20.275-13.495-31.403-13.495   c-15.644,0-29.696,8.202-42.15,24.637C6.755,101.449,0,121.479,0,144.535c0,5.828,0.532,11.684,1.583,17.498   c3.978,23.857,15.116,44.676,33.402,62.42c16.434,16.184,31.681,24.263,45.731,24.263c0.332,0,0.674-0.012,1.016-0.035   c16.083-4.937,33.156-7.599,50.857-7.599c14.784,0,29.134,1.858,42.833,5.346l-0.074-0.098l0.323,0.16   c2.618,0.67,5.21,1.404,7.78,2.193c0.348,0.021,0.696,0.033,1.043,0.033c14.053,0,29.154-8.079,45.328-24.263v-0.001   c17.755-17.744,29.156-38.562,34.189-62.42c1.34-6.616,1.99-13.117,1.99-19.48C266.002,120.274,259.306,100.924,245.928,84.493z\"}/>\r\n  ),\r\n  level3: (\r\n    <path className={\"fill\"} transform={\"translate(18,10),scale(0.13,0.13)\"} d={\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954  c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673  c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939  c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954  c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689  c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1  c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715  c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z\"}/>\r\n  ),\r\n  level4: (\r\n    <path className={\"fill\"} transform={\"translate(15,0),scale(0.25)\"} d={\"M277.531,179.745c-0.045-10.481-9.676-33.631-92.951-35.979l-31.034-68.857l42.085,17.586 l-63.13-67.928c-8.62-6.047-37.77,80.794-49.648,117.583l0,0c-8.354,1.318-34.706,6.113-55.001,16.797 c-19.8,10.395-30.244,19.572-27.386,32.326c-2.076,14.357,3.17,56.896,135.987,62.381 C179.174,255.423,285.918,226.942,277.531,179.745z M144.93,182.741c-67.228,4.734-72.835-13.954-72.835-13.954l6.106-13.264 c0,0,18.403,12.415,56.083,11.763c37.68-0.659,53.318-17.423,53.318-17.423l9.927,12.077 C195.098,177.688,144.93,182.741,144.93,182.741z\"}/>\r\n  ),\r\n});\r\n\r\nclass CellDefinitions extends PureComponent {\r\n  static cellDefinitionsStyleMap = {\r\n    'original': OriginalCellDefinitions,\r\n    'halloween': HalloweenCellDefinitions,\r\n  };\r\n\r\n\trender() {\r\n  \treturn Object.values(this.constructor.cellDefinitionsStyleMap)\r\n    \t.map(CellDefinitionsStyle =>\r\n        <CellDefinitionsStyle key={CellDefinitionsStyle.displayName || CellDefinitionsStyle.name} />);\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl, gameType,\r\n      theme: {cells = 'original', pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translate = constants.translate(gameType, {x, y});\r\n    return (\r\n    \t<g transform={`translate(${translate.x},${translate.y})`}>\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`#cell-${cells}-${i}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`#cell-${cells}-${i}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n        <use\r\n          xlinkHref={`#cell-${cells}-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows, gameType,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  gameType={gameType}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces gameType={gameType} rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {gameType, rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(gameType.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            gameType={gameType}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {gameType, cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translateTo = constants.translate(gameType, position);\r\n    const translateFrom = constants.translate(gameType, previousPosition);\r\n    return (\r\n      <g transform={`translate(${translateTo.x},${translateTo.y})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${translateFrom.x} ${translateFrom.y}`}\r\n          to={`${translateTo.x} ${translateTo.y}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      gameType, cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl,\r\n    } = this.props;\r\n    return (\r\n      <Cell\r\n        gameType={gameType}\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        gameType={game.constructor}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {gameType, small, medium, player, applicableSettings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={applicableSettings}\r\n        allowControl={allowControl}\r\n        gameType={gameType}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    challengesInfo: client.challengesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotChallenges = challengesInfo => {\r\n    this.setState({challengesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, challengesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        challengesInfo={challengesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.Classic.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={applicableSettings}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {applicableSettings, user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize, reverse} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    let visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize);\r\n    if (reverse) {\r\n      visibleGames = visibleGames.reverse();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n              applicableSettings={applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n  reverse: PropTypes.bool.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n  reverse: true,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport class ChallengeCard extends Component {\r\n  selectChallenge = () => {\r\n    this.props.selectChallenge(this.props.challenge);\r\n  };\r\n\r\n  get userChallenge() {\r\n    const {user, challenge} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    return user.challenges[challenge.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, challenge, currentChallengeId} = this.props;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const creator = usersById[challenge.userId];\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/puzzle/${challenge.id}`}\r\n        onClick={this.selectChallenge}\r\n        style={{\r\n          ...(challenge.id === currentChallengeId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {utils.getChallengeTitle(challenge)}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[challenge.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[challenge.meta.difficulty],\r\n              }}\r\n              content={`${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[challenge.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userChallenge && userChallenge.meta.started && !userChallenge.meta.won ? (\r\n              <Label icon={{name: 'play', color: 'green'}} content={'Started'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.won ? (\r\n              <Label icon={{name: 'trophy', color: 'green'}} content={'Solved'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.mistakes ? (\r\n              <Label icon={{name: 'exclamation', color: 'red'}} content={`${userChallenge.meta.mistakes} mistakes`} />\r\n            ) : null}\r\n            {user && challenge.isMyChallenge ? (\r\n              <Label\r\n                icon={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      challenge.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? challenge.meta.publishDatetime.fromNow() : (\r\n                      challenge.meta.public\r\n                        ? challenge.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={challenge.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            <Board\r\n              game={Game.Classic.fromCompressedPositionNotation(challenge.startingPosition.position)}\r\n              medium\r\n              settings={applicableSettings}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  challenge: PropTypes.object.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChallengeList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById}, challenges, selectChallenge, currentChallengeId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(challenges.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleChallenges = challenges\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visibleChallenges.map(challenge => (\r\n            <ChallengeCard\r\n              key={challenge.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={challenge}\r\n              selectChallenge={selectChallenge}\r\n              currentChallengeId={currentChallengeId}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  challenges: PropTypes.array.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nChallengeList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(ChallengeList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport ChallengeList, {ChallengeCard} from \"./ChallengeList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n            {Object.values(otherUser.challenges || {}).length ? (\r\n              <Label\r\n                icon={'puzzle'}\r\n                content={`${Object.values(otherUser.challenges).filter(userChallenge => userChallenge.meta.won && !userChallenge.meta.mistakes).length}/${Object.values(otherUser.challenges).filter(userChallenge => userChallenge.meta.won).length}/${Object.values(otherUser.challenges).length}`}\r\n                title={`${Object.values(otherUser.challenges).filter(userChallenge => userChallenge.meta.won && !userChallenge.meta.mistakes).length} perfect puzzles, out of ${Object.values(otherUser.challenges).filter(userChallenge => userChallenge.meta.won).length} solved, out of ${Object.values(otherUser.challenges).length} attempted`}\r\n              />\r\n            ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      challengesInfo: {otherUnsolved, challenges, otherStarted, otherNotStarted, otherSolved},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <ChallengeCard\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={otherUnsolved[0]}\r\n              selectChallenge={this.props.selectLiveChallenge}\r\n              currentChallengeId={null}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournamentsById={tournamentsById}\r\n                games={items}\r\n                selectLiveGame={selectLiveGame}\r\n                applicableSettings={client.applicableSettings}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {challenges ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let challengesList = [\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!challengesList.length) {\r\n              challengesList = [\r\n                {key: 'puzzles', label: \"Puzzles\", items: challenges},\r\n              ];\r\n            }\r\n            return challengesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(this.state.game.constructor.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.constructor !== prevProps.game.constructor\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.client.applicableSettings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.client.applicableSettings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !!(!this.props.submit && !selectedGame && game.previous);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={displayGame === game ? (\r\n          this.props.submit ? this.props.game.chainCount : (\r\n            this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n          )\r\n        ) : 0}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={client.applicableSettings}\r\n        animated={client.applicableSettings.theme.animations}\r\n        showArrows={client.applicableSettings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  submitAndDisableConfirm = () => {\r\n    this.props.submit();\r\n    this.props.client.updateSettings({...this.props.user.settings, confirmSubmitMoves: false});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, applicableSettings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canAnyPlayerSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const previousGame = canAnyPlayerSubmit ? game.previous : game;\r\n    const isPlayersTurn = previousGame.nextPlayer === player;\r\n    const playerWon = previousGame.winner === player;\r\n    const finished = previousGame.finished;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={finished || player === Game.PLAYER_B}\r\n        color={finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard\r\n                  gameType={game.constructor}\r\n                  medium\r\n                  applicableSettings={applicableSettings}\r\n                  player={player}\r\n                  allowControl={allowControl}\r\n                />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    applicableSettings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          {applicableSettings.confirmSubmitMoves ? (\r\n                            <Modal\r\n                              size={'mini'}\r\n                              trigger={\r\n                                <Button\r\n                                  positive\r\n                                  className={'attention'}\r\n                                >\r\n                                  Submit...\r\n                                </Button>\r\n                              }\r\n                              header={'Submit move'}\r\n                              content={\r\n                                <Modal.Content>\r\n                                  Are you sure you want to submit these moves?\r\n                                  <br />\r\n                                  <Board\r\n                                    game={game}\r\n                                    medium\r\n                                    settings={applicableSettings}\r\n                                    animated\r\n                                    showArrows\r\n                                  />\r\n                                </Modal.Content>\r\n                              }\r\n                              actions={[\r\n                                {key: 'never-ask-again', content: 'Never ask again', onClick: this.submitAndDisableConfirm},\r\n                                {key: 'cancel', negative: true, content: 'Cancel'},\r\n                                {key: 'ok', positive: true, content: 'Submit', onClick: submit},\r\n                              ]}\r\n                            />\r\n                          ) : (\r\n                            <Button\r\n                              positive\r\n                              className={'attention'}\r\n                              onClick={submit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          )}\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? {\r\n            key: 'take-move-back', content: (\r\n              <Button negative content={'Take move back'} onClick={takeBack}/>\r\n            ),\r\n          } : null,\r\n          !finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={applicableSettings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  applicableSettings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canAnyPlayerSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayPlayer = withClient(PlayPlayer);\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, applicableSettings, selectedGame, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={applicableSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu, Button} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.Classic.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.Classic.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  switchToClassic = () => {\r\n    this.switchTo(Game.Classic);\r\n  };\r\n\r\n  switchToHex = () => {\r\n    this.switchTo(Game.Hex);\r\n  };\r\n\r\n  switchTo = gameType => {\r\n    this.setState({\r\n      selectedGame: null,\r\n      game: gameType.create(),\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Button onClick={this.switchToClassic} content={'Switch to Classic'} disabled={game.constructor === Game.Classic}/>\r\n          <Button onClick={this.switchToHex} content={'Switch to Hex'} disabled={game.constructor === Game.Hex}/>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themeCellsOptions = [\r\n    {value: 'original', label: 'Original'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n    {value: 'halloween-witch-hat', label: 'Halloween: Witch Hat'},\r\n    {value: 'halloween-cauldron', label: 'Halloween: Cauldron'},\r\n    {value: 'halloween-bat', label: 'Halloween: Bat'},\r\n    {value: 'halloween-spider', label: 'Halloween: Spider'},\r\n    {value: 'halloween-cat', label: 'Halloween: Cat'},\r\n    {value: 'halloween-tombstone', label: 'Halloween: Tombstone'},\r\n    {value: 'halloween-pumpkin', label: 'Halloween: Pumpkin'},\r\n    {value: 'halloween-ghost', label: 'Halloween: Ghost'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateConfirmSubmitMoves = (e, {checked}) => {\r\n    this.props.updateSettings({confirmSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeUseTopicalTheme = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {useTopicalTheme: checked}});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  updateThemeCells = (e, {value}) => {\r\n    this.props.updateSettings({theme: {cells: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, confirmSubmitMoves, enableNotifications, theme}, applicableSettingsName, applicableSettingsOverride} = this.props;\r\n    const {useTopicalTheme, cells = 'original', pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Confirm before submitting online moves'}\r\n                  name={'confirmSubmitMoves'}\r\n                  checked={confirmSubmitMoves}\r\n                  onChange={this.updateConfirmSubmitMoves}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Use topical theme when available'}\r\n                    name={'theme.useTopicalTheme'}\r\n                    checked={useTopicalTheme}\r\n                    onChange={this.updateThemeUseTopicalTheme}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  {applicableSettingsName ? (\r\n                    <Fragment>\r\n                      {applicableSettingsName}\r\n                      <br/>\r\n                      {this.themeDemoBoard(applicableSettingsOverride.theme)}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Cells:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                          </Grid.Row>\r\n                        {this.themeCellsOptions.map(option => (\r\n                          <Grid.Row key={`theme-cells-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.cells'}\r\n                                value={option.value}\r\n                                checked={cells === option.value}\r\n                                onChange={this.updateThemeCells}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({cells: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Colours:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  applicableThemeName: PropTypes.string,\r\n  applicableSettingsOverride: PropTypes.object,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.client.settings,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n    const {client} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: (\r\n          <SettingsContent\r\n            settings={settings}\r\n            updateSettings={this.updateSettings}\r\n            applicableSettingsName={client.applicableSettingsName}\r\n            applicableSettingsOverride={client.applicableSettingsOverride}\r\n          />\r\n        )}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n          reverse={false}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              (user && user.admin) ? {key: 'edit', content: 'Create Puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/create?position=${(selectedGame || gameGame).positionNotation}`, color: 'green', active: true,\r\n                title: 'Click to create a puzzle from this position', target: '_blank'} : null,\r\n              (user && user.admin) ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, client, user, usersInfo: {byId},\r\n      gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList\r\n                  user={user}\r\n                  usersById={byId}\r\n                  tournamentsById={tournamentsById}\r\n                  games={items}\r\n                  selectLiveGame={selectLiveGame}\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!client.applicableSettings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                  applicableSettings={client.applicableSettings}\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                      applicableSettings={client.applicableSettings}\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {client, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = client.applicableSettings;\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          gameType={Game.Classic}\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong>{\" and \"}\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.Classic.getPositionNotation(Game.Classic.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.Classic.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), urlError, position: Game.Classic.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.Classic.create(), urlError: false, position: Game.Classic.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.Classic.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.Classic.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.Classic.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.Classic.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.Classic.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    const positionNotation = Game.Classic.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition ? (\r\n              <div>\r\n                <Button\r\n                  content={'Use position'}\r\n                  primary\r\n                  onClick={this.usePosition}\r\n                  disabled={!!positionError}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.Classic.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass CreateChallenge extends Component {\r\n  state = {\r\n    editing: true,\r\n    challenge: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.initialChallenge) {\r\n      this.onCreateChallenge(this.fillGames(this.props.initialChallenge));\r\n    }\r\n  }\r\n\r\n  fillGames(challengeStep) {\r\n    challengeStep = {...challengeStep};\r\n    if (!challengeStep.game && challengeStep.position) {\r\n      challengeStep.game = Game.Classic.fromCompressedPositionNotation(challengeStep.position);\r\n    }\r\n    if (challengeStep.startingPosition) {\r\n      challengeStep.startingPosition = this.fillGames(challengeStep.startingPosition);\r\n    } else if (challengeStep.playerResponses) {\r\n      challengeStep.playerResponses = challengeStep.playerResponses.map(nextStep => this.fillGames(nextStep));\r\n    } else if ('challengeResponse' in challengeStep) {\r\n      if (challengeStep.challengeResponse) {\r\n        challengeStep.challengeResponse = this.fillGames(challengeStep.challengeResponse);\r\n      }\r\n    } else {\r\n      throw new Error('Cannot find type of step');\r\n    }\r\n\r\n    return challengeStep;\r\n  }\r\n\r\n  onCreateChallenge = challenge => {\r\n    this.setState({\r\n      editing: false,\r\n      challenge,\r\n      currentStep: challenge.startingPosition,\r\n      tree: this.getTree(challenge.startingPosition),\r\n      game: challenge.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.challengeResponse && currentStep.challengeResponse.position === newGame.positionNotation) {\r\n        return currentStep.challengeResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['challenge', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['challengeResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicateChallenge(pathIndexes) {\r\n    const {challenge} = this.state;\r\n\r\n    const newChallenge = {\r\n      ...challenge,\r\n      startingPosition: {...challenge.startingPosition},\r\n    };\r\n    let newModifyingStep = newChallenge.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newChallenge, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        challengeResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.challengeResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.challengeResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.challenge.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.challengeResponse) {\r\n        return [treePath.concat(lastTreeStep.challengeResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editChallenge = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createChallenge(cleanedChallenge);\r\n  };\r\n\r\n  updateChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.updateChallenge(cleanedChallenge);\r\n  };\r\n\r\n  createOrUpdateChallenge = () => {\r\n    if (this.state.challenge.id) {\r\n      this.updateChallenge();\r\n    } else {\r\n      this.createChallenge();\r\n    }\r\n  };\r\n\r\n  discardChallenge = () => {\r\n    this.setState({\r\n      editing: true,\r\n      challenge: null,\r\n      currentStep: null,\r\n      tree: null,\r\n      game: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const {editing, challenge, game, tree, currentStep} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editing && (!challenge || challenge.isMyChallenge)) {\r\n      return (\r\n        <ChallengeForm initialChallenge={challenge} onCreateChallenge={this.onCreateChallenge} />\r\n      )\r\n    }\r\n\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getChallengeTitle(challenge)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editChallenge}>Edit</Button>\r\n            <Button positive onClick={this.createOrUpdateChallenge}>{challenge.id ? 'Update' : 'Create'}</Button>\r\n            <Button negative onClick={this.discardChallenge}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[challenge.options.initialPlayer]: 'Player', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Puzzle'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === challenge} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCreateChallenge.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n};\r\n\r\nclass ChallengeForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    challenge: this.props.initialChallenge || {\r\n      isMyChallenge: true,\r\n      options: {\r\n        initialPlayer: Game.PLAYER_A,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: Game.Classic.create().positionNotation,\r\n        game: Game.Classic.create(),\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.initialChallenge) {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n        this.setState({editingPosition: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const challenge = {\r\n        ...state.challenge,\r\n      };\r\n      let newChallengeToChange = challenge;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newChallengeToChange = newChallengeToChange[part] || {};\r\n      }\r\n      newChallengeToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {challenge};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.challenge.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.Classic.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.Classic.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          challenge: {\r\n            ...state.challenge,\r\n            options: {\r\n              ...state.challenge.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.challenge.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    } else if (name === 'options.type') {\r\n      this.setState(state => {\r\n        switch (state.challenge.options.type) {\r\n          case 'mate':\r\n            return _.merge({}, {challenge: state.challenge}, {\r\n              challenge: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          case 'avoidMate':\r\n            return _.merge({}, {challenge: state.challenge}, {\r\n              challenge: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          default:\r\n            return null;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const {challenge, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreateChallenge(challenge);\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {client, initialChallenge} = this.props;\r\n    const {editingPosition, challenge, error} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          initialPositionNotation={challenge.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a challenge</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createChallenge}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={challenge.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {challenge.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={challenge.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n                {key: 'avoidMate', value: 'avoidMate', text: 'Avoid Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={challenge.options.type}\r\n            />\r\n            {challenge.options.type === 'mate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={challenge.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : challenge.options.type === 'avoidMate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Avoid Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={challenge.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : \"Unknown challenge type\"}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={challenge.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={challenge.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.publishDatetime ? challenge.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialChallenge ? 'Update' : 'Create'} />\r\n          </Form>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeForm.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n  onCreateChallenge: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeForm = withClient(ChallengeForm);\r\n\r\nexport default withClient(CreateChallenge);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Modal} from \"semantic-ui-react\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass EditChallenge extends Component {\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.history.push('/puzzle');\r\n  };\r\n\r\n  render() {\r\n    const challenge = this.challenge;\r\n    if (!challenge || !challenge.isMyChallenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was deleted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CreateChallenge initialChallenge={challenge} />\r\n    );\r\n  }\r\n}\r\n\r\nEditChallenge.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(EditChallenge));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Menu, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\nimport ChallengeList from \"./ChallengeList\";\r\nimport {Link, NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport EditChallenge from \"./EditChallenge\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass Challenges extends Component {\r\n  render() {\r\n    const {user, challengesInfo: {otherStarted, otherNotStarted, otherSolved, mine}} = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            {(user && user.admin) ? (\r\n              <Segment>\r\n                <Link to={`${this.props.match.path}/create`}><Button content={'Create Puzzle'} /></Link>\r\n              </Segment>\r\n            ) : null}\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n              {key: 'mine', label: \"My Puzzles\", items: mine},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/create`}>\r\n            <CreateChallenge />\r\n          </Route>\r\n        ) : null}\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/:id/edit`}>\r\n            <EditChallenge />\r\n          </Route>\r\n        ) : null}\r\n        <Route exact path={`${this.props.match.path}/:id`}>\r\n          <ChallengePlayer selectLiveChallenge={this.props.selectLiveChallenge} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  liveChallenge: PropTypes.object,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nclass ChallengePlayer extends Component {\r\n  state = {\r\n    challengeId: this.challenge ? this.challenge.id : null,\r\n    game: this.getResumedChallengeGame(),\r\n    submittedGame: null,\r\n    path: this.challenge ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  get userChallenge() {\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.challenges[challenge.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: challenge.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge) {\r\n      this.props.selectLiveChallenge(challenge);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge && prevState.challengeId !== challenge.id) {\r\n      this.props.selectLiveChallenge(challenge);\r\n      this.setState({\r\n        challengeId: challenge.id,\r\n        game: this.getResumedChallengeGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!challenge && this.state.challengeId) {\r\n      this.setState({\r\n          challengeId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (challenge && this.props.user && this.state.submittedGame) {\r\n      this.updateChallenge(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updateChallenge(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedChallengeGame() {\r\n    const userChallenge = this.userChallenge;\r\n    if (!userChallenge) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.Classic.fromCompressedPositionNotation(userChallenge.startingPosition.position);\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    while (userChallengeStep) {\r\n      const lastPlayerResponse = userChallengeStep.playerResponses[userChallengeStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.challengeResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.challengeResponse.moves);\r\n      userChallengeStep = lastPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updateChallenge(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const challenge = this.challenge;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userChallengeStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userChallengeStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitChallengeMove(challenge, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.challengeResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userChallengeStep = validPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userChallengeStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  close = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  shareChallenge = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const challenge = this.challenge;\r\n      navigator.share({\r\n        title: `Thyra Online - Solve puzzle ${utils.getChallengeTitle(challenge)}`,\r\n        text: `Solve Santorini puzzle`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {user, location} = this.props;\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={utils.getChallengeTitle(challenge)} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareChallenge, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to challenge'},\r\n              (challenge.isMyChallenge ? {key: 'edit', content: 'Edit puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/${challenge.id}/edit`, color: 'green', active: true,\r\n                title: 'Click to edit the puzzle'} : null),\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{utils.getChallengeTitle(challenge)}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          allowControl={[challenge.options.initialPlayer]}\r\n          names={{[challenge.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Puzzle'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired\r\n};\r\n\r\nChallengePlayer = withRouter(withClient(ChallengePlayer));\r\n\r\nexport default withRouter(withClient(Challenges));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Challenges from \"./components/Challenges\";\nimport * as utils from \"./utils\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    liveChallenge: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/lobby';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLiveChallenge = liveChallenge => {\n    let challengeUrl;\n    if (liveChallenge) {\n      challengeUrl = `/puzzle/${liveChallenge.id}`;\n    } else {\n      challengeUrl = `/lobby`;\n    }\n    if (challengeUrl !== this.props.location.pathname) {\n      this.props.history.push(challengeUrl);\n    }\n    if (this.state.liveChallenge === liveChallenge) {\n      return;\n    }\n    this.setState({liveChallenge});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, liveChallenge} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          {menuItem: {icon: 'puzzle', content: liveChallenge ? utils.getChallengeTitle(liveChallenge) : 'Puzzles'},\n          path: 'puzzle',\n          navigate: liveChallenge ? `puzzle/${liveChallenge.id}` : 'puzzle',\n          render: () => (\n            <Tab.Pane><Challenges challenge={liveChallenge} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )},\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}