{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/TournamentList.js","components/CreateTournament.js","components/TournamentsSegment.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","document","getElementById","newScriptEl","createElement","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","on","emit","setInterval","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","animations","arrows","numbers","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","mine","moves","data","tournament","_this4","future","started","myFuture","myFinished","otherFuture","otherFinished","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","getAvailableMoves","winningCell","find","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","Array","RA","RB","keys","sort","String","fromCharCode","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","_this$constructor","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","diff","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","max","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","sortBy","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","isMoveAvailable","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this3$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","flipped","transpose","flipX","flipY","reverseConfig","reverseTransformCoordinates","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this5$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","Play","selectedGame","autoSubmitModal","submit","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","names","matchGame","displayGame","isMyGame","tooShortToResign","Segment","textAlign","Grid","centered","Row","Play_PlayNavigation","Play_PlayPlayer","components_Board","Board_BoardTransformation","Statistic","Group","widths","Modal","trigger","Button","negative","header","actions","inverted","secondary","Play_PlayHistory","Header","color","label","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","isPlayerControlled","isPlayersTurn","playerWon","stackable","attention","Board_PlayerColourBoard","positive","Checkbox","toggle","checked","item","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToPreviousMove","canGoToPreviousMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","gameIndexes","lastGameIndex","_this$gameIndexes2","copyToClipboard","text","textArea","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","render","Form","columns","verticalAlign","Column","Pane","floated","Field","option","radio","update","save","scrolling","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","components_Settings","open","onClose","active","href","components_Play","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","_len","args","_key","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","Icon","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDate","TournamentList","visibleTournaments","TournamentList_TournamentCard","gameCount","createTournament","parseInt","setValue","control","Input","placeholder","required","defaultValue","min","TournamentsSegment","chosenTournamentsInfo","count","components_CreateTournament","components_TournamentList","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","UserCard","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","loading","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","LogIn","changeMergeUsers","logIn","_this$state2","modal","LogOut","logOut","_this$props4$usersInf","_this$props4$gamesInf","Lobby_LogIn","Lobby_LogOut","components_GameList","components_TournamentsSegment","Lobby_UserList","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","getEditPositionUrl","assertThisInitialized","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","App","liveGame","liveTournament","gameUrl","getLiveGameUrl","tournamentUrl","getLiveTournamentUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Message","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"meAIMA,aAWJ,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAFdG,uBAAyB,KAEXH,KA4DdI,eAAiB,WACf,IAAKC,OAAOC,GAAGC,YAKb,OAJAC,cAAcT,EAAKI,wBACnBJ,EAAKI,uBAAyB,KAC9BJ,EAAKU,kBACLC,QAAQC,IAAI,qBAGd,IAAMC,EAAcC,SAASC,eAAe,oBACtCC,EAAcF,SAASG,cAAc,UAC3CD,EAAYE,GAAKL,EAAYK,GAC7BF,EAAYG,KAAON,EAAYM,KAC/BH,EAAYI,IAAMP,EAAYO,IAC9BP,EAAYQ,SACZP,SAASQ,KAAKC,OAAOP,GACrBL,QAAQa,KAAK,0CA3EDvB,KAkHdwB,OAAS,WACPnB,OAAOoB,SAASD,QAAO,IAnHXxB,KAsHd0B,cAAgB,WACd3B,EAAK4B,UACL5B,EAAK6B,WAAY,EACjB7B,EAAK8B,UAAUC,IAAI,SAAAC,GAAQ,OAAIA,EAAShC,EAAK6B,cAzHjC5B,KA4HdgC,iBAAmB,WACjBjC,EAAK6B,WAAY,EACjB7B,EAAKkC,cAAe,EACpBlC,EAAKmC,aAAaJ,IAAI,SAAAC,GAAQ,OAAIA,EAAShC,EAAK6B,cA/HpC5B,KAkIdmC,QAAU,SAAAC,GACJA,IACFrC,EAAKkB,GAAKmB,EAAKnB,GACflB,EAAKsC,SAAWD,EAAKE,KACrBvC,EAAKwC,MAAQH,EAAKG,MAClBxC,EAAKyC,SAAWJ,EAAKI,SACrBC,aAAaC,QAAQ,UAAW3C,EAAKkB,IACrCwB,aAAaC,QAAQ,YAAa3C,EAAKsC,UACvCI,aAAaC,QAAQ,aAAc3C,EAAKwC,OACxCE,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAU7C,EAAKyC,YAE5DzC,EAAKqC,KAAOA,EACZrC,EAAK8C,OAAOf,IAAI,SAAAC,GAAQ,OAAIA,EAASK,KACrCrC,EAAK+C,SAAS/C,EAAKgD,UAAUC,QA/IjBhD,KAkKd8C,SAAW,SAAAE,IACTA,EAAQC,IAAEC,QAAQF,EAAO,CAAC,SAAAZ,GAAI,OAAIA,EAAKe,wBAA0B,EAAI,GAAG,QAAS,YAAa,CAAC,MAAO,OAAQ,UACxGC,QAAQ,SAAChB,EAAMiB,GACnBjB,EAAKkB,KAAOD,EAAQ,IAEtBtD,EAAKgD,UAAYhD,EAAKwD,aAAaP,GACnCjD,EAAKyD,QAAQ1B,IAAI,SAAAC,GAAQ,OAAIA,EAAShC,EAAKgD,cAxK/B/C,KAuMdyD,SAAW,SAAAC,GACTA,EAAQT,IAAEC,QAAQQ,EAAO,CAAC,gBAAiB,MAAO,CAAC,OAAQ,SAC3D3D,EAAK4D,UAAY5D,EAAK6D,aAAaF,GACnC3D,EAAK8D,QAAQ/B,IAAI,SAAAC,GAAQ,OAAIA,EAAShC,EAAK4D,cA1M/B3D,KAkPd8D,eAAiB,SAAAC,GACfA,EAAcd,IAAEC,QAAQa,EAAa,CAAC,gBAAiB,cAAe,kBAAmB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,SACzHhE,EAAKiE,gBAAkBjE,EAAKkE,mBAAmBF,GAC/ChE,EAAKmE,cAAcpC,IAAI,SAAAC,GAAQ,OAAIA,EAAShC,EAAKiE,oBApPjDhE,KAAKiB,GAAKwB,aAAa0B,QAAQ,YAAc,KAC7CnE,KAAKqC,SAAWI,aAAa0B,QAAQ,cAAgB,KACrD,IAAMC,EAAW3B,aAAa0B,QAAQ,kBAAoB,KAC1D1B,aAAa4B,WAAW,iBACxBrE,KAAKuC,MAAQE,aAAa0B,QAAQ,eAAiBC,EACnD,IAAME,EAAgB7B,aAAa0B,QAAQ,kBAAoB,OAC/D,IACEnE,KAAKwC,SAAWG,KAAK4B,MAAMD,GAC3B,MAAOE,GACPxE,KAAKwC,SAAW,KAEbxC,KAAKwC,WACRxC,KAAKwC,SAAWxC,KAAKyE,YAAYC,sBAE9BrE,OAAOC,KACVD,OAAOC,GAAK,iBAAO,CACjBqE,GAAI,kBAAMjE,QAAQa,KAAK,8BACvBqD,KAAM,kBAAMlE,QAAQa,KAAK,8BACzBhB,aAAa,IAEfF,OAAOC,GAAGC,aAAc,EACxBP,KAAKG,uBAAyB0E,YAAY7E,KAAKI,eAAgB,MAGjEJ,KAAKiC,cAAe,EAEpBjC,KAAK6B,UAAY,GACjB7B,KAAKkC,aAAe,GACpBlC,KAAK6C,OAAS,GACd7C,KAAKwD,QAAU,GACfxD,KAAK6D,QAAU,GACf7D,KAAKkE,cAAgB,GAErBlE,KAAKS,mFA3CL,OAAOkC,KAAK4B,MAAM5B,KAAKC,UAAU,CAC/BkC,iBAAiB,EACjBC,qBAAqB,EACrBC,MAAO,CAACC,OAAQ,OAAQC,OAAQ,GAAIC,gBAAgB,EAAMC,YAAY,EAAMC,QAAQ,EAAMC,QAAS,oEA4CrGtF,KAAKuF,OAASlF,OAAOC,GAAGkF,6BACxBxF,KAAKyF,WAAazF,KAAKuF,OAAOhF,YAC9BP,KAAK4B,WAAY,EACjB5B,KAAKuF,OAAOZ,GAAG,UAAW3E,KAAK0B,eAC/B1B,KAAKuF,OAAOZ,GAAG,aAAc3E,KAAKgC,kBAClChC,KAAKuF,OAAOZ,GAAG,SAAU3E,KAAKwB,QAE9BxB,KAAKoC,KAAO,KACZpC,KAAKuF,OAAOZ,GAAG,OAAQ3E,KAAKmC,SAE5BnC,KAAK+C,UAAY/C,KAAKuD,aAAa,IACnCvD,KAAKuF,OAAOZ,GAAG,QAAS3E,KAAK8C,UAE7B9C,KAAK2D,UAAY3D,KAAK4D,aAAa,IACnC5D,KAAKuF,OAAOZ,GAAG,QAAS3E,KAAKyD,UAE7BzD,KAAKgE,gBAAkBhE,KAAKiE,mBAAmB,IAC/CjE,KAAKuF,OAAOZ,GAAG,cAAe3E,KAAK8D,gBAEnC9D,KAAK2B,4CAqBG+D,GACR,QAAAC,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,iBAAjFD,EAAAC,EAAAC,OAAAF,IAAmG,CAA9F,IAAMrD,EAAIsD,EAAAD,GACP5D,EAAW2D,EAAUpD,GACvBP,GACF/B,KAAKsC,GAAMwD,KAAK/D,wCAKV2D,GACV,QAAAK,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,WAAtED,EAAAC,EAAAH,OAAAE,IAAkF,CAA7E,IAAMzD,EAAI0D,EAAAD,GACPhE,EAAW2D,EAAUpD,GACvBP,GACFkB,IAAEgD,KAAKjG,KAAKsC,GAAOP,sCAMvB/B,KAAKuF,OAAOX,KAAK,cAAe,CAC9BsB,WA/Ga,EAgHbjF,GAAIjB,KAAKiB,GACTqB,KAAMtC,KAAKqC,SACXE,MAAOvC,KAAKuC,MACZC,SAAUxC,KAAKwC,yCAIbF,EAAM8B,EAAU+B,GACpBnG,KAAKuF,OAAOX,KAAK,SAAU,CAACsB,WAxHb,EAwHyB5D,OAAM8B,WAAU+B,gDAIxDnG,KAAKuF,OAAOX,KAAK,kDAmCJtC,GACbtC,KAAKuF,OAAOX,KAAK,kBAAmBtC,0CAGvB8B,GACbpE,KAAKuF,OAAOX,KAAK,kBAAmBR,0CAGvB5B,GACbxC,KAAKuF,OAAOX,KAAK,kBAAmBpC,6CAGpB4D,GAChBpG,KAAKuF,OAAOX,KAAK,uBAAwBwB,wCAY9BpD,GAAO,IACdqD,EADcC,EAAAtG,KAElB,GAAIA,KAAKoC,KAAM,CACb,IAAMmE,EAAUvD,EAAMwD,UAAU,SAAApE,GAAI,OAAIA,EAAKnB,KAAOqF,EAAKlE,KAAKnB,KAC1DsF,GAAW,GACbF,EAAarD,EAAMyD,MAAM,EAAGF,GAASG,OAAO1D,EAAMyD,MAAMF,EAAU,IAClEvD,EAAK,CAAIA,EAAMuD,IAAVG,OAAAzG,OAAA0G,EAAA,EAAA1G,CAAuBoG,KAE5BA,EAAarD,OAGfqD,EAAarD,EAEf,IAAM4D,EAAO3D,IAAE4D,UAAU7D,EAAMlB,IAAI,SAAAM,GAAI,MAAI,CAACA,EAAKnB,GAAImB,MAC/C0E,EAAS9D,EAAM+D,OAAO,SAAA3E,GAAI,OAAIA,EAAK0E,SACnCV,EAAcU,EAAOC,OAAO,SAAA3E,GAAI,MAAI,EAAC,GAAMkE,EAAKlE,MAAOkE,EAAKlE,KAAKnB,IAAW+F,SAAS5E,EAAKgE,eAChG,MAAO,CACLpD,QACA4D,OACAK,MAAOZ,EACPS,SACAI,QAASlE,EAAM+D,OAAO,SAAA3E,GAAI,OAAKA,EAAK0E,SACpCV,cACAe,cAAef,EAAYW,OAAO,SAAA3E,GAAI,OAAIkE,EAAKlE,MAAQkE,EAAKlE,KAAKnB,KAAOmB,EAAKgE,cAC7EgB,eAAgBpH,KAAKoC,MAAQwE,EAAK5G,KAAKoC,KAAKgE,cAAwB,2CAU3D1C,GAAO,IAAA2D,EAAArH,KACZsH,EAAO5D,EAAMqD,OAAO,SAAAQ,GAAI,OAAKA,EAAKC,WACxC,MAAO,CACL9D,QACAkD,KAAM3D,IAAE4D,UAAUnD,EAAM5B,IAAI,SAAAyF,GAAI,MAAI,CAACA,EAAKtG,GAAIsG,MAC9CD,OACAG,OAAQzH,KAAKoC,KAAOkF,EAAKP,OAAO,SAAAQ,GAAI,OAAIA,EAAKG,QAAQV,SAASK,EAAKjF,KAAKnB,MAAO,GAC/E0G,UAAW3H,KAAKoC,KAAOkF,EAAKP,OAAO,SAAAQ,GAAI,OAAKA,EAAKG,QAAQV,SAASK,EAAKjF,KAAKnB,MAAOqG,EACnFE,SAAU9D,EAAMqD,OAAO,SAAAQ,GAAI,OAAIA,EAAKC,WACpCI,KAAM5H,KAAKoC,KAAOsB,EAAMqD,OAAO,SAAAQ,GAAI,OAAIA,EAAKG,QAAQV,SAASK,EAAKjF,KAAKnB,MAAO,2CAInEsG,EAAMM,GACnB7H,KAAKuF,OAAOX,KAAK,oBAAqB,CAAC3D,GAAIsG,EAAKtG,GAAI4G,mDAGrCC,GACf9H,KAAKuF,OAAOX,KAAK,oBAAqBkD,0CAGzBC,GACb/H,KAAKuF,OAAOX,KAAK,kBAAmBmD,EAAW9G,4CAGjC8G,GACd/H,KAAKuF,OAAOX,KAAK,mBAAoBmD,EAAW9G,4CAGlC8G,GACd/H,KAAKuF,OAAOX,KAAK,mBAAoBmD,EAAW9G,4CAGlC8G,GACd/H,KAAKuF,OAAOX,KAAK,mBAAoBmD,EAAW9G,+CAS/B8C,GAAa,IAAAiE,EAAAhI,KACxBiI,EAASlE,EAAYgD,OAAO,SAAAgB,GAAU,OAAKA,EAAWG,UACtDZ,EAAOvD,EAAYgD,OAAO,SAAAgB,GAAU,OAAIA,EAAWG,UAAYH,EAAWP,WAC1EA,EAAWzD,EAAYgD,OAAO,SAAAgB,GAAU,OAAIA,EAAWP,WAC7D,MAAO,CACLzD,cACA6C,KAAM3D,IAAE4D,UAAU9C,EAAYjC,IAAI,SAAAyF,GAAI,MAAI,CAACA,EAAKtG,GAAIsG,MACpDU,SAAQX,OAAME,WACdW,SAAUnI,KAAKoC,KAAO6F,EAAOlB,OAAO,SAAAgB,GAAU,OAAIA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAO,GAC/FwG,OAAQzH,KAAKoC,KAAOkF,EAAKP,OAAO,SAAAgB,GAAU,OAAIA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAO,GAC3FmH,WAAYpI,KAAKoC,KAAOoF,EAAST,OAAO,SAAAgB,GAAU,OAAIA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAO,GACnGoH,YAAarI,KAAKoC,KAAOkF,EAAKP,OAAO,SAAAgB,GAAU,OAAKA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAOqG,EACjGK,UAAW3H,KAAKoC,KAAO6F,EAAOlB,OAAO,SAAAgB,GAAU,OAAKA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAOgH,EACjGK,cAAetI,KAAKoC,KAAOoF,EAAST,OAAO,SAAAgB,GAAU,OAAKA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAOuG,EACvGI,KAAM5H,KAAKoC,KAAO2B,EAAYgD,OAAO,SAAAgB,GAAU,OAAIA,EAAWL,QAAQV,SAASgB,EAAK5F,KAAKnB,MAAO,aAKzFsH,EAAS,IAAIzI,EAC1BO,OAAOkI,OAASA,EAEDzI,iDCnRT0I,uLACSC,GAAM,IACVC,EAAS1I,KAAK2I,MAAdD,MACP,SAAAhC,OAAUgC,EAAME,IAAIC,SAAS,KAAOH,EAAME,IAAInC,MAAM,GAAI,GAAKiC,EAAME,KAAnElC,OAAyE+B,EAAI,IAAA/B,OAAO+B,GAAS,sEAGrD,IAAA1I,EAAAC,KAAA8I,EACO9I,KAAK2I,MAA7CI,EADiCD,EACjCC,MAAOC,EAD0BF,EAC1BE,aAAcN,EADYI,EACZJ,MAAOjH,EADKqH,EACLrH,SAC/BwH,EAAY,KACZC,EAAc,KACdC,EAAWT,EAAME,IAwCrB,MAAO,CAACQ,cAtCcL,EACnBjH,IAAI,SAACuH,EAAMC,GAAP,MAAyB,CAACD,EAAMC,KACpCvC,OAAO,SAAAwC,GAAA,OAAAtJ,OAAAuJ,EAAA,EAAAvJ,CAAAsJ,EAAA,QACPzH,IAAI,SAAA2H,EAAwBpG,GAAU,IAAAqG,EAAAzJ,OAAAuJ,EAAA,EAAAvJ,CAAAwJ,EAAA,GAAhCJ,EAAgCK,EAAA,GAA1BJ,EAA0BI,EAAA,GACrC,IAAKL,EACH,OAAO,KAGT,IAAMM,EAAK5J,EAAK6J,aAAaP,EAAKZ,MAC9Ba,IAAkBN,IACpBC,EAAYU,GAEd,IAAME,OAA6BC,IAAlBT,EAAKQ,SAAyB9J,EAAK6J,aAAaP,EAAKQ,UAAYF,EAC9ElI,EAASsI,SAASC,WAAWH,KAC/BX,EAAc7F,EACd8F,EAAWQ,GAGb,IAAMM,EACqB,kBAAlBZ,EAAKY,SACR,CAACC,QAASb,EAAKY,UACfZ,EAAKY,SAEX,OAAOhK,OAAAkK,EAAA,EAAAlK,CAAA,CACL0J,MACGN,EAFL,CAGEY,SACEG,EAAAC,EAAArJ,cAACsJ,EAAA,EAAKC,KAANtK,OAAAuK,OAAA,CACEC,IAAKpB,EAAKZ,KACViC,GAAIC,IACJhB,GAAIE,GACAI,EAJN,CAKEW,KAAMvB,EAAKuB,MAAQX,EAASW,YAKnC7D,OAAO,SAAA8D,GAAY,OAAIA,IACH5B,YAAWC,cAAaC,6CAGxC,IAAA2B,EACiD9K,KAAK2I,MAAtDoC,EADAD,EACAC,IAAKC,EADLF,EACKE,KAAMtC,EADXoC,EACWpC,MAAOuC,EADlBH,EACkBG,iBAAkBC,EADpCJ,EACoCI,UADpCC,EAEmDnL,KAAKoL,0CAAxDhC,EAFA+B,EAEA/B,cAAeH,EAFfkC,EAEelC,UAAWC,EAF1BiC,EAE0BjC,YAAaC,EAFvCgC,EAEuChC,SAE9C,OACEiB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACiB,OAAdpC,EACCmB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,KACElB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAM9C,EAAME,IAAKe,GAAIV,KAErC,KACJmB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAO7C,KAAMU,GACXiB,EAAAC,EAAArJ,cAACyK,EAAA,EAADxL,OAAAuK,OAAA,CACEQ,KAAMA,EACNC,iBAAkBA,GACdF,EAHN,CAIEhC,MAAOK,EACPF,YAAaA,EACbgC,UAAWA,cAvEOQ,aA6F9BlD,EAAgBmD,aAAe,CAC7BV,kBAAkB,EAClBjC,aAAc,GAGD4C,sBAAWpD,8CCzGpBqD,oJAAyBC,QAEzBC,aA0FJ,SAAAA,EAAYC,EAAOC,EAAQC,EAAUC,EAAUC,GAAY,IAAA/E,EAAArH,KACzD,GADyDC,OAAAC,EAAA,EAAAD,CAAAD,KAAA+L,IACpDC,IAAUC,EACb,MAAM,IAAIH,MAAM,qDAElB9L,KAAKkM,SAAWA,EAChBlM,KAAKqM,SAAWrM,KAAKkM,SAAWlM,KAAKkM,SAASG,QAAU,IACrDtF,OAAO,SAAAQ,GAAI,OAAKA,EAAK+E,UACrB5F,OAAO,CAAC1G,OACXA,KAAKuM,kBAAoBvM,KAAKqM,QAAQrM,KAAKqM,QAAQxG,OAAS,GAC5D7F,KAAKwM,aAAexM,KAAKkM,SAAWlM,KAAKkM,SAASM,YAAc,IAAI9F,OAAO1G,MAC3EA,KAAKoM,WAAaA,EAClBpM,KAAKyM,UAAYzM,KAAKkM,SAAYE,EAAapM,KAAKkM,SAASO,UAAY,EAAIzM,KAAKkM,SAASO,UAAa,EACxGzM,KAAK0M,WAAa1M,KAAKkM,SAAWlM,KAAKkM,SAASQ,WAAa,EAAI,EACjE1M,KAAKmM,SAAWA,IAAuBF,EAAOU,eAAiB,CAACC,OAAQX,EAAOU,gBAAkBR,GACjGnM,KAAK6H,MAAQ7H,KAAKkM,SAAWlM,KAAKkM,SAASrE,MAAMnB,OAAO,CAAC1G,KAAKmM,WAAa,GAE3EnM,KAAKgM,MAAQA,EACbhM,KAAK6M,SAAW5M,OAAO6M,OAAO9M,KAAKgM,OAChClK,IAAI,SAAAiL,GAAG,OAAI9M,OAAO6M,OAAOC,KACzBC,OAAO,SAACC,EAAOC,GAAR,OAAoBD,EAAMvG,OAAOwG,KAC3ClN,KAAKmN,eAAiBnN,KAAKyE,YAAY2I,KAAKtL,IAAI,SAAAuL,GAAC,MAAK,CACpDA,IACArB,MAAO3E,EAAK5C,YAAY6I,QAAQxL,IAAI,SAAAyL,GAAC,OAAIlG,EAAK2E,MAAMqB,GAAGE,QAtBA,IAyBlDC,EAAuEvB,EAAvEuB,WAAYC,EAA2DxB,EAA3DwB,SAAUC,EAAiDzB,EAAjDyB,qBAAsBpB,EAA2BL,EAA3BK,QAASK,EAAkBV,EAAlBU,eAC5D3M,KAAK2N,WAAazB,EAAWA,EAASsB,WAAazB,EAAK6B,SACxD5N,KAAKwN,WAAaA,EAClBxN,KAAK6N,aAAe3B,EAAWA,EAASuB,SAAW,KACnDzN,KAAKyN,SAAWA,EAChBzN,KAAK0N,qBAAuBA,EAC5B1N,KAAKsM,QAAUA,EACftM,KAAK8N,kBAAoB9N,KAAKkM,SAC9BlM,KAAK2M,eAAiBA,EACtB3M,KAAK+N,aAAepB,EAChB3M,KAAKyE,YAAYuJ,kBAAkBrB,GAClCR,EACCnM,KAAKyE,YAAYwJ,cAAc9B,EAASkB,GAAGlB,EAASoB,GACpD,GACNvN,KAAKkO,aAAL,GAAAxH,OAAuB1G,KAAKkM,SAAWlM,KAAKkM,SAASgC,aAAe,IAApExH,OAAyE1G,KAAK+N,cAC9E/N,KAAKmO,uBAAyBnO,KAAKkO,aAChCE,MAAM,QACNrH,OAAO,SAAAsH,GAAI,OAAIA,IACfvM,IAAI,SAAAuM,GAAI,OAAIhH,EAAK5C,YAAY6J,qBAAqBD,KAClDE,KAAK,IAERvO,KAAKwO,OAASxO,KAAKyO,YACfzO,KAAKwO,OACPxO,KAAKwH,UAAW,EACNxH,KAAK0O,iBAAiB1O,KAAK0N,sBAIrC1N,KAAKwH,UAAW,GAHhBxH,KAAKwH,UAAW,EAChBxH,KAAKwO,OAASxO,KAAKyE,YAAYkK,aAAa3O,KAAKwN,aAK/CxN,KAAKwH,WACPxH,KAAK0N,qBAAuB1N,KAAKyE,YAAYmK,8EAjEtC5C,EAAOC,EAAQE,GACxB,OAAO,IAAInM,KAAKyE,YAAYuH,EAAOC,EAAQjM,KAAMmM,GAAU,sCAGlDH,EAAOC,EAAQE,GACxB,OAAO,IAAInM,KAAKyE,YAAYuH,EAAOC,EAAQjM,KAAMmM,GAAU,sCAvC3D,OAAO,IAAInM,KAFGA,KAAK6O,kBACJ7O,KAAK8O,mBACW,KAAM,MAAM,qCAG5BjH,GACf,IAAIN,EAAOvH,KAAK+O,SADMC,GAAA,EAAAC,GAAA,EAAAC,OAAApF,EAAA,IAEtB,QAAAqF,EAAAC,EAAmBvH,EAAnBwH,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA0B,KAAfS,EAAeN,EAAAO,MACxBnI,EAAOA,EAAKoI,SAASF,IAHD,MAAAG,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAMtB,OAAO3H,uCAGW2G,GAAc,IAAAnO,EAAAC,KAC1B6H,EAAQqG,EACXE,MAAM,IACNtM,IAAI,SAAAuM,GAAI,OAAItO,EAAK+P,iBAAiBzB,KACrC,OAAIxG,EAAMd,OAAO,SAAA0I,GAAI,OAAKA,IAAM5J,OACvB,KAGF7F,KAAK+P,UAAUlI,kDAGMsG,GAAwB,IAAA7H,EAAAtG,KAC9C6H,EAAQsG,EACXC,MAAM,IACNtM,IAAI,SAAAuM,GAAI,OAAI/H,EAAK0J,uBAAuB3B,KAC3C,OAAIxG,EAAMd,OAAO,SAAA0I,GAAI,OAAKA,IAAM5J,OACvB,KAGF7F,KAAK+P,UAAUlI,gEAwE4C,IAAlD6F,EAAkDuC,UAAApK,OAAA,QAAAiE,IAAAmG,UAAA,GAAAA,UAAA,GAA3BjQ,KAAK0N,qBAC5C,OAAOzK,IAAEiN,QAAQxC,EACd5L,IAAI,SAACiL,EAAKM,GAAN,OAAYN,EACdjL,IAAI,SAAC2D,EAAW8H,GAAZ,OAAkB9H,EAAY,CAAC8H,IAAGF,KAAK,UAC7CtG,OAAO,SAAA0I,GAAI,OAAIA,wCAIlB,OAAOzP,KAAKmQ,8DAIZ,MAAO,CACLtI,MAAO7H,KAAK6H,kDAKd,MAAO,CACLmE,MAAOhM,KAAKgM,MACZC,OAAQ,CACNuB,WAAYxN,KAAKwN,WACjBC,SAAUzN,KAAKyN,SACfC,qBAAsB1N,KAAK0N,qBAC3BpB,QAAStM,KAAKsM,QACdK,eAAgB3M,KAAK2M,gBAEvBT,SAAUlM,KAAKkM,SAAWlM,KAAKkM,SAASkE,YAAc,KACtDjE,SAAUnM,KAAKmM,SACfC,WAAYpM,KAAKoM,kDAmDP,IAAAiE,EAAAC,EAAA/G,EAAAgH,EAAAC,EAAAC,EAENC,GAAQH,EAAA,GAAAtQ,OAAA0Q,EAAA,EAAA1Q,CAAAsQ,EACXxE,EAAK6B,UADMyC,EAAA,GAAApQ,OAAA0Q,EAAA,EAAA1Q,CAAAoQ,EACO,EAAI,KADXpQ,OAAA0Q,EAAA,EAAA1Q,CAAAoQ,EACiB,EAAIO,IAAMC,QAAQ,MADnC5Q,OAAA0Q,EAAA,EAAA1Q,CAAAoQ,EAC0C,EAAIO,IAAME,SAAS,MAD7D7Q,OAAA0Q,EAAA,EAAA1Q,CAAAoQ,EACoE,EAAIO,IAAMG,MAAM,MADpFV,IAAApQ,OAAA0Q,EAAA,EAAA1Q,CAAAsQ,EAEXxE,EAAKiF,UAFMV,EAAA,GAAArQ,OAAA0Q,EAAA,EAAA1Q,CAAAqQ,EAEO,EAAI,KAFXrQ,OAAA0Q,EAAA,EAAA1Q,CAAAqQ,EAEiB,EAAIM,IAAMC,QAAQ,MAFnC5Q,OAAA0Q,EAAA,EAAA1Q,CAAAqQ,EAE0C,EAAIM,IAAME,SAAS,MAF7D7Q,OAAA0Q,EAAA,EAAA1Q,CAAAqQ,EAEoE,EAAIM,IAAMG,MAAM,MAFpFT,IAAArQ,OAAA0Q,EAAA,EAAA1Q,CAAAsQ,EAGX,MAHWhH,EAAA,GAAAtJ,OAAA0Q,EAAA,EAAA1Q,CAAAsJ,EAGF,EAAI,KAHFtJ,OAAA0Q,EAAA,EAAA1Q,CAAAsJ,EAGQ,EAAIqH,IAAMC,QAAQ,MAH1B5Q,OAAA0Q,EAAA,EAAA1Q,CAAAsJ,EAGiC,EAAIqH,IAAME,SAAS,MAHpD7Q,OAAA0Q,EAAA,EAAA1Q,CAAAsJ,EAG2D,EAAIqH,IAAMG,MAAM,MAH3E9Q,OAAA0Q,EAAA,EAAA1Q,CAAAsJ,EAGkF,EAAIqH,IAAMK,OAAO,MAHnG1H,IAAAgH,GAMRW,EAAgBlR,KAAKmN,eACxBrL,IAAI,SAAAiL,GAAG,OAAIA,EAAIf,MACblK,IAAI,SAAAqP,GAAI,OAAIT,EAASS,EAAKC,QAAQD,EAAKE,SACvC9C,KAAK,MACPA,KAAK,MAIF+C,GAHad,EAAA,GAAAvQ,OAAA0Q,EAAA,EAAA1Q,CAAAuQ,EAChBzE,EAAK6B,SAAW,KADA3N,OAAA0Q,EAAA,EAAA1Q,CAAAuQ,EACMzE,EAAKiF,SAAW,KADtBR,GAGsBxQ,KAAKwN,YAIxC+D,GAHSd,EAAA,GAAAxQ,OAAA0Q,EAAA,EAAA1Q,CAAAwQ,EACZ1E,EAAK6B,SAAW,KADJ3N,OAAA0Q,EAAA,EAAA1Q,CAAAwQ,EACU1E,EAAKiF,SAAW,KAD1B/Q,OAAA0Q,EAAA,EAAA1Q,CAAAwQ,EACgC,KAAO,KADvCA,GAGkBzQ,KAAKwO,QACtC,MACE,GAAA9H,OAAG4K,EAAH,SAAA5K,OAA6B6K,EAA7B,MACEL,EAAc9C,MAAM,MAAMtM,IAAI,SAAAiL,GAAG,UAAArG,OAAQkK,IAAMY,MAAMzE,GAApB,OAA6BwB,KAAK,MACnE,gEAI2B,IAAPhB,EAAOkE,EAAPlE,EAAGF,EAAIoE,EAAJpE,EAC3B,GAAIqE,KAAKC,MAAMpE,KAAOA,GAAKmE,KAAKC,MAAMtE,KAAOA,EAC3C,MAAM,IAAIxB,EAAJ,gBAAAnF,OAAqC/D,KAAKC,UAAU,CAAC2K,IAAGF,MAAxD,oBAER,QAAqCvD,IAAjC9J,KAAK0N,qBAAqBL,SAAwDvD,IAApC9J,KAAK0N,qBAAqBL,GAAGE,GAC7E,MAAM,IAAI1B,EAAJ,gBAAAnF,OAAqC/D,KAAKC,UAAU,CAAC2K,IAAGF,MAAxD,mEAIyD,IAAlDK,EAAkDuC,UAAApK,OAAA,QAAAiE,IAAAmG,UAAA,GAAAA,UAAA,GAA3BjQ,KAAK0N,qBAC3C,OAAO1N,KAAK4R,kBAAkBlE,GAAsB7H,OAAS,6CAGvC,IAAP0H,EAAO9D,EAAP8D,EAAGF,EAAI5D,EAAJ4D,EAClB,OAAOrN,KAAK0N,qBAAqBL,GAAGE,uCAIpC,GAAIvN,KAAK2M,eACP,OAAO3M,KAAKyE,YAAYkK,aAAa3O,KAAK2M,gBAG5C,IAAMkF,EAAc7R,KAAK6M,SAASiF,KAAK,SAAAX,GAAI,OAAIA,EAAKC,QAAyB,IAAfD,EAAKE,QACnE,OAAKQ,EAIEA,EAAYT,OAHV,+DAcuBpF,GAAO,IAAAhE,EAAAhI,KACvC,OAAOA,KAAKyE,YAAY2I,KAAKtL,IAAI,SAAAuL,GAAC,OAAIrF,EAAKvD,YAAY6I,QAAQxL,IAAI,SAAAyL,GAAC,OAAKvB,EAAMqB,GAAGE,GAAG6D,iEAGzDpF,EAAOoF,GAAQ,IAAAW,EAAA/R,KAC3C,OAAOA,KAAKyE,YAAY2I,KAAKtL,IAAI,SAAAuL,GAAC,OAAI0E,EAAKtN,YAAY6I,QAAQxL,IAAI,SAAAyL,GACjE,OAAIvB,EAAMqB,GAAGE,GAAG6D,SAAWA,GAIpBW,EAAKrD,iBAAiBqD,EAAKC,+BAA+BhG,EAAO,CAACuB,IAAGF,kEAIjDrB,EAAOiG,GAAa,IAAAC,EAAAlS,KAE3CmS,EADOnG,EAAMiG,EAAY5E,GAAG4E,EAAY1E,GACpB8D,MAAQ,EAClC,OAAOrR,KAAKyE,YAAY2I,KAAKtL,IAAI,SAAAuL,GAAC,OAAI6E,EAAKzN,YAAY6I,QAAQxL,IAAI,SAAAyL,GAAC,OAClEmE,KAAKU,IAAI7E,EAAI0E,EAAY1E,IAAM,GAC5BmE,KAAKU,IAAI/E,EAAI4E,EAAY5E,IAAM,IAC9BrB,EAAMqB,GAAGE,GAAG6D,QACbpF,EAAMqB,GAAGE,GAAG8D,OAAS,GACrBrF,EAAMqB,GAAGE,GAAG8D,OAASc,+DAIKnG,EAAOiG,GAAa,IAAAI,EAAArS,KACnD,OAAOA,KAAKyE,YAAY2I,KAAKtL,IAAI,SAAAuL,GAAC,OAAIgF,EAAK5N,YAAY6I,QAAQxL,IAAI,SAAAyL,GAAC,OAClEmE,KAAKU,IAAI7E,EAAI0E,EAAY1E,IAAM,GAC5BmE,KAAKU,IAAI/E,EAAI4E,EAAY5E,IAAM,IAC9BrB,EAAMqB,GAAGE,GAAG6D,QACbpF,EAAMqB,GAAGE,GAAG8D,MAAQ,+CAIViB,EAAkBL,EAAaM,GAC9C,GAAIvS,KAAKwH,SACP,MAAM,IAAIqE,EAAiB,iCAE7B,GAAI7L,KAAKyN,WAAa6E,EACpB,MAAM,IAAIzG,EAAJ,oCAAAnF,OAAyD4L,EAAzD,4BAAA5L,OAAoG1G,KAAKyN,SAAzG,MAMR,GAJAzN,KAAKwS,yBAAyBP,GAC1BM,GACFvS,KAAKwS,yBAAyBD,IAE3BvS,KAAK0N,qBAAqBuE,EAAY5E,GAAG4E,EAAY1E,GACxD,MAAM,IAAIzB,MAAJ,QAAApF,OAAkB/D,KAAKC,UAAUqP,GAAjC,qEAIHb,GACL,OAAOpR,KAAKyS,WAAWzS,KAAKgM,MAAO,CACjCwB,WAAYxN,KAAKwN,WACjBC,SAAUzN,KAAKyN,SACfC,qBAAsB1N,KAAK0N,qBAC3BpB,SAAS,EACTK,eAAgByE,GACf,CAACxE,OAAQwE,qCAGLa,GAAa,IAAAS,EACpB,GAAIT,EAAYrF,OACd,OAAO5M,KAAK4M,OAAOqF,EAAYrF,QAEjC,IAQM+F,GAReD,EAAA,GAAAzS,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAClB1S,KAAKyE,YAAYmO,6BAA+B5S,KAAK6S,kBADnC5S,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAElB1S,KAAKyE,YAAYqO,8BAAgC9S,KAAK+S,mBAFpC9S,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAGlB1S,KAAKyE,YAAYuO,gCAAkChT,KAAKiT,oBAHtChT,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAIlB1S,KAAKyE,YAAYyO,4BAA8BlT,KAAKmT,iBAJlClT,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAKlB1S,KAAKyE,YAAY2O,6BAA+BpT,KAAKqT,kBALnCpT,OAAA0Q,EAAA,EAAA1Q,CAAAyS,EAMlB1S,KAAKyE,YAAY6O,8BAAgCtT,KAAKuT,mBANpCb,GAQkB1S,KAAKyN,UAC5C,IAAKkF,EACH,MAAM,IAAI9G,EAAJ,4CAAAnF,OAAgE1G,KAAKyN,SAArE,MAER,OAAOkF,EAAea,KAAKxT,KAApB2S,CAA0BV,kCAIjC,IAAKjS,KAAKsM,QACR,MAAM,IAAIR,MAAM,eAGlB,OAAO9L,KAAKkM,gDAIZ,IAAKlM,KAAK8N,gBACR,MAAM,IAAIhC,MAAM,yBAGlB,OAAO9L,KAAKkM,qDAGW,IAAPqB,EAAO7D,EAAP6D,EAAGF,EAAI3D,EAAJ2D,EACnBrN,KAAKyT,iBAAiBzT,KAAKyE,YAAYmO,6BAA8B,CAACrF,IAAGF,MAEzE,IAAMrB,EAAK/L,OAAAkK,EAAA,EAAAlK,CAAA,GACND,KAAKgM,MADC/L,OAAA0Q,EAAA,EAAA1Q,CAAA,GAERoN,EAFQpN,OAAAkK,EAAA,EAAAlK,CAAA,GAGJD,KAAKgM,MAAMqB,GAHPpN,OAAA0Q,EAAA,EAAA1Q,CAAA,GAINsN,EAJMtN,OAAAkK,EAAA,EAAAlK,CAAA,GAKFD,KAAKgM,MAAMqB,GAAGE,GALZ,CAML6D,OAAQpR,KAAKwN,WACbkG,OAAQ1T,KAAKyE,YAAYkP,mBAI/B,OAAO3T,KAAKyS,WAAWzG,EAAO,CAC5BwB,WAAYxN,KAAKwN,WACjBC,SAAUzN,KAAKyE,YAAYqO,8BAC3BpF,qBAAsB1N,KAAK4T,kCAAkC5H,GAC7DM,SAAS,EACTK,eAAgB,MACf,CAACY,IAAGF,mDAGiB,IAAPE,EAAOsG,EAAPtG,EAAGF,EAAIwG,EAAJxG,EACpBrN,KAAKyT,iBAAiBzT,KAAKyE,YAAYqO,8BAA+B,CAACvF,IAAGF,MAE1E,IAAMrB,EAAK/L,OAAAkK,EAAA,EAAAlK,CAAA,GACND,KAAKgM,MADC/L,OAAA0Q,EAAA,EAAA1Q,CAAA,GAERoN,EAFQpN,OAAAkK,EAAA,EAAAlK,CAAA,GAGJD,KAAKgM,MAAMqB,GAHPpN,OAAA0Q,EAAA,EAAA1Q,CAAA,GAINsN,EAJMtN,OAAAkK,EAAA,EAAAlK,CAAA,GAKFD,KAAKgM,MAAMqB,GAAGE,GALZ,CAML6D,OAAQpR,KAAKwN,WACbkG,OAAQ1T,KAAKyE,YAAYqP,oBAIzBtG,EAAaxN,KAAKyE,YAAYkK,aAAa3O,KAAKwN,YACtD,OAAOxN,KAAK+T,WAAW/H,EAAO,CAC5BwB,WAAYA,EACZC,SAAUD,IAAexN,KAAKyE,YAAYmJ,SACtC5N,KAAKyE,YAAYuO,gCACjBhT,KAAKyE,YAAYmO,6BACrBlF,qBAAsBF,IAAexN,KAAKyE,YAAYmJ,SAClD5N,KAAKgU,8BAA8BhI,EAAOwB,GAC1CxN,KAAK4T,kCAAkC5H,GAC3CM,SAAS,EACTK,eAAgB,MACf,CAACY,IAAGF,oDAGkB,IAAPE,EAAO0G,EAAP1G,EAAGF,EAAI4G,EAAJ5G,EACrBrN,KAAKyT,iBAAiBzT,KAAKyE,YAAYuO,gCAAiC,CAACzF,IAAGF,MAE5E,IAAM8D,EAAOnR,KAAKgM,MAAMqB,GAAGE,GAC3B,OAAOvN,KAAKyS,WAAWzS,KAAKgM,MAAO,CACjCwB,WAAYxN,KAAKwN,WACjBC,SAAU0D,EAAKuC,SAAW1T,KAAKyE,YAAYkP,aACvC3T,KAAKyE,YAAYyO,4BACjBlT,KAAKyE,YAAY2O,6BACrB1F,qBAAsB1N,KAAKgS,+BAA+BhS,KAAKgM,MAAO,CAACuB,IAAGF,MAC1Ef,SAAS,EACTK,eAAgB,MACf,CAACY,IAAGF,yCAGE1D,EAAI+J,GAAQ,IAAAQ,EAAAlU,KACfmU,EAAWnU,KAAK6M,SAASiF,KAAK,SAAAX,GAAI,OAAIA,EAAKC,SAAW8C,EAAK1G,YAAc2D,EAAKuC,SAAWA,IACzFU,EAASpU,KAAKgM,MAAMrC,EAAG0D,GAAG1D,EAAG4D,GAC/BvB,EAAK/L,OAAAkK,EAAA,EAAAlK,CAAA,GACJD,KAAKgM,MADD/L,OAAA0Q,EAAA,EAAA1Q,CAAA,GAENkU,EAAS9G,EAFHpN,OAAAkK,EAAA,EAAAlK,CAAA,GAGFD,KAAKgM,MAAMmI,EAAS9G,GAHlBpN,OAAA0Q,EAAA,EAAA1Q,CAAA,GAIJkU,EAAS5G,EAJLtN,OAAAkK,EAAA,EAAAlK,CAAA,GAKAkU,EALA,CAMH/C,OAAQ,KACRsC,OAAQ,WAed,OAXA1H,EAAK/L,OAAAkK,EAAA,EAAAlK,CAAA,GACA+L,EADA/L,OAAA0Q,EAAA,EAAA1Q,CAAA,GAEF0J,EAAG0D,EAFDpN,OAAAkK,EAAA,EAAAlK,CAAA,GAGE+L,EAAMrC,EAAG0D,GAHXpN,OAAA0Q,EAAA,EAAA1Q,CAAA,GAIA0J,EAAG4D,EAJHtN,OAAAkK,EAAA,EAAAlK,CAAA,GAKImU,EALJ,CAMChD,OAAQ+C,EAAS/C,OACjBsC,OAAQS,EAAST,aAIhB1T,KAAKyS,WAAWzG,EAAO,CAC5BwB,WAAYxN,KAAKwN,WACjBC,SAAUzN,KAAKyE,YAAY6O,8BAC3B5F,qBAAsB1N,KAAKqU,iCAAiCrI,EAAOrC,GACnE2C,SAAS,EACTK,eAAgB,MACf,CAACY,EAAG5D,EAAG4D,EAAGF,EAAG1D,EAAG0D,+CAGG,IAAPE,EAAO+G,EAAP/G,EAAGF,EAAIiH,EAAJjH,EAGlB,OAFArN,KAAKyT,iBAAiBzT,KAAKyE,YAAYyO,4BAA6B,CAAC3F,IAAGF,MAEjErN,KAAKuU,WAAW,CAAChH,IAAGF,KAAIrN,KAAKyE,YAAYkP,0DAGzB,IAAPpG,EAAOiH,EAAPjH,EAAGF,EAAImH,EAAJnH,EAGnB,OAFArN,KAAKyT,iBAAiBzT,KAAKyE,YAAY2O,6BAA8B,CAAC7F,IAAGF,MAElErN,KAAKuU,WAAW,CAAChH,IAAGF,KAAIrN,KAAKyE,YAAYqP,4DAGxB,IAAPvG,EAAOkH,EAAPlH,EAAGF,EAAIoH,EAAJpH,EACpBrN,KAAKyT,iBAAiBzT,KAAKyE,YAAY6O,8BAA+B,CAAC/F,IAAGF,MAE1E,IAAMrB,EAAK/L,OAAAkK,EAAA,EAAAlK,CAAA,GACND,KAAKgM,MADC/L,OAAA0Q,EAAA,EAAA1Q,CAAA,GAERoN,EAFQpN,OAAAkK,EAAA,EAAAlK,CAAA,GAGJD,KAAKgM,MAAMqB,GAHPpN,OAAA0Q,EAAA,EAAA1Q,CAAA,GAINsN,EAJMtN,OAAAkK,EAAA,EAAAlK,CAAA,GAKFD,KAAKgM,MAAMqB,GAAGE,GALZ,CAML8D,MAAOrR,KAAKgM,MAAMqB,GAAGE,GAAG8D,MAAQ,QAIhC7D,EAAaxN,KAAKyE,YAAYkK,aAAa3O,KAAKwN,YACtD,OAAOxN,KAAK+T,WAAW/H,EAAO,CAC5BwB,WAAYA,EACZC,SAAUzN,KAAKyE,YAAYuO,gCAC3BtF,qBAAsB1N,KAAKgU,8BAA8BhI,EAAOwB,GAChElB,SAAS,EACTK,eAAgB,MACf,CAACY,IAAGF,4CArVUqH,GACjB,OAAIA,EAAW7M,MACN7H,KAAK2U,mBAAmBD,GAExB1U,KAAK4U,mBAAmBF,iDAIA,IAAR7M,EAAQgN,EAARhN,MACzB,OAAO7H,KAAK+P,UAAUlI,iDAGmD,IAAhDmE,EAAgD8I,EAAhD9I,MAAOC,EAAyC6I,EAAzC7I,OAAQC,EAAiC4I,EAAjC5I,SAAUC,EAAuB2I,EAAvB3I,SAAUC,EAAa0I,EAAb1I,WAI5D,OAHIF,IACFA,EAAWlM,KAAK+U,YAAY7I,IAEvB,IAAIlM,KAAKgM,EAAOC,EAAQC,EAAUC,EAAUC,6CAInD,IAAMJ,EAAQ,GADSgJ,GAAA,EAAAC,GAAA,EAAAC,OAAApL,EAAA,IAEvB,QAAAqL,EAAAC,EAAgBpV,KAAKoN,KAArBiC,OAAAC,cAAA0F,GAAAG,EAAAC,EAAA7F,QAAAC,MAAAwF,GAAA,EAA2B,KAAhB3H,EAAgB8H,EAAAzF,MACzB1D,EAAMqB,GAAK,GADc,IAAAgI,GAAA,EAAAC,GAAA,EAAAC,OAAAzL,EAAA,IAEzB,QAAA0L,EAAAC,EAAgBzV,KAAKsN,QAArB+B,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,GAAA,EAA8B,KAAnB9H,EAAmBiI,EAAA9F,MAC5B1D,EAAMqB,GAAGE,GAAK,CACZA,IAAGF,IACH+D,OAAQ,KACRsC,OAAQ,KACRrC,MAAO,IAPc,MAAAzB,GAAA0F,GAAA,EAAAC,EAAA3F,EAAA,YAAAyF,GAAA,MAAAI,EAAA5F,QAAA4F,EAAA5F,SAAA,WAAAyF,EAAA,MAAAC,KAFJ,MAAA3F,GAAAqF,GAAA,EAAAC,EAAAtF,EAAA,YAAAoF,GAAA,MAAAI,EAAAvF,QAAAuF,EAAAvF,SAAA,WAAAoF,EAAA,MAAAC,GAcvB,OAAOlJ,6CAIP,MAAQ,CACNwB,WAAYxN,KAAK4N,SACjBH,SAAUzN,KAAK4S,6BACfpL,UAAU,EACVgH,OAAQ,KACRd,qBAAsB1N,KAAK0V,6BAC3BpJ,SAAS,wDA8DuB,IAAAqJ,EAAA3V,KAClC,OAAOA,KAAKoN,KAAKtL,IAAI,kBAAM6T,EAAKrI,QAAQxL,IAAI,kBAAM,oDAGvB,IAAA8T,EAAA5V,KAC3B,OAAOA,KAAKoN,KAAKtL,IAAI,kBAAM8T,EAAKtI,QAAQxL,IAAI,kBAAM,eAtShDiK,EACG6B,SAAW,WADd7B,EAEGiF,SAAW,WAFdjF,EAGG8J,QAAU,CAHb9J,EAIG6B,SAJH7B,EAKGiF,UALHjF,EAOG4C,iCAPH5C,EAQI6B,SARJ7B,EAQoBiF,wBARpBjF,EASIiF,SATJjF,EASoB6B,aATpB7B,EAYG4H,aAAe,eAZlB5H,EAaG+H,cAAgB,gBAbnB/H,EAeG6G,6BAA+B,qBAflC7G,EAgBG+G,8BAAgC,sBAhBnC/G,EAiBGiH,gCAAkC,wBAjBrCjH,EAkBGmH,4BAA8B,oBAlBjCnH,EAmBGqH,6BAA+B,qBAnBlCrH,EAoBGuH,8BAAgC,sBApBnCvH,EAsBG+J,wBAA0B,CAtB7B/J,EAsBmC6G,6BAtBnC7G,EAsBsE+G,+BAtBtE/G,EAuBGgK,uBAAyB,CAvB5BhK,EAuBkCmH,4BAvBlCnH,EAuBoEqH,8BAvBpErH,EAwBGiK,+CAxBHjK,EAwBuCgK,yBAxBvChK,EAwBoEuH,gCAxBpEvH,EA0BGqB,KAAO6I,MAAMzK,KAAK,CAAC3F,OAAQ,GAAI,SAAC6J,EAAOrM,GAAR,OAAkBA,IA1BpD0I,EA2BGuB,QAAU2I,MAAMzK,KAAK,CAAC3F,OAAQ,GAAI,SAAC6J,EAAOrM,GAAR,OAAkBA,IA3BvD0I,EA4BGkC,cA5BHlC,EA4BwBqB,KAAKtL,IAAI,SAAAuL,GAAC,OA5BlCtB,EA4B2CuB,QAAQxL,IAAI,SAAAyL,GAAC,SAAA7G,OACvD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK6G,IAD6B7G,OACxB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK2G,QA7B1DtB,EA8BGiC,sCA9BHjC,EA+BI6B,SAAW,oBA/Bf7B,EAgCIiF,SAAW,SAhCfjF,EAkCG+D,gCACF7M,IAAE4D,UAAU5D,IAAEiN,QAnCfnE,EAmC4BqB,KAAKtL,IAAI,SAAAuL,GAAC,OAnCtCtB,EAmC+CuB,QAAQxL,IAAI,SAAAyL,GAAC,MAC5D,IAAA7G,OAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK6G,IAA9B7G,OAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,KAAK2G,IAAM,CAACE,IAAGF,aACzE6I,GAAM,CAAC,CAACtJ,OArCNb,EAqCmB6B,WACrBuI,GAAM,CAAC,CAACvJ,OAtCNb,EAsCmBiF,aAtCnBjF,EAwCGuC,qBAAuBrL,IAAE4D,UAAU5G,OAAOmW,KAxC7CrK,EAwCuD+D,kBAAkBuG,OAAOvU,IAAI,SAAC4N,EAAOrM,GAAR,MACtF,CAACqM,EAAO4G,OAAOC,aAAalT,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,QAzCpD0I,EA0CGiE,uBAAyB/M,IAAE4D,UAAU5G,OAAOmW,KA1C/CrK,EA0CyD+D,kBAAkBuG,OAAOvU,IAAI,SAAC4N,EAAOrM,GAAR,MACxF,CAACiT,OAAOC,aAAalT,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,IA3C7C0I,EA2CsE+D,iBAAiBJ,OA0e9E3D,iCCrhBTyK,2LACK,IAAAzW,EAAAC,KAAA8I,EAIH9I,KAAK2I,MAFPuC,EAFKpC,EAELoC,UAAWuL,EAFN3N,EAEM2N,UAAWC,EAFjB5N,EAEiB4N,SAAUC,EAF3B7N,EAE2B6N,gBAAiBC,EAF5C9N,EAE4C8N,eAAgBC,EAF5D/N,EAE4D+N,MAAOC,EAFnEhO,EAEmEgO,OAAQnH,EAF3E7G,EAE2E6G,SAAUoH,EAFrFjO,EAEqFiO,SAAUC,EAF/FlO,EAE+FkO,SACpGxU,EAHKsG,EAGLtG,SAAU2K,EAHLrE,EAGKqE,eAHL8J,EAK4BzU,EAA5BwC,MAAQE,EALR+R,EAKQ/R,OAAQI,EALhB2R,EAKgB3R,QAkBvB,OAhBA4F,EAAYgM,IAAW,QAAS,aAAc,CAC5CC,cAAeN,EACfO,eAAgBN,EAChBO,WAAY1H,IAAa8G,GAAaC,GACtCY,aAAcP,EACdC,WACAO,sBAAkC,KAAXrS,EACvBsS,qBAAiC,WAAXtS,EACtBuS,qBAAiC,WAAXvS,EACtBwS,oBAAgC,UAAXxS,EACrByS,kBAAmB,CAAC,UAAW,SAAU,eAAe3Q,SAAS1B,GACjEsS,iBAA8B,YAAZtS,EAClBuS,gBAA6B,WAAZvS,EACjBwS,qBAAkC,gBAAZxS,GACrB4F,GAGDd,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWA,EAAW6M,QAAShB,GACjC5J,EAAerL,IAAI,SAAAiL,GAAG,OACrB3C,EAAAC,EAAArJ,cAAA,OAAKyJ,IAAG,OAAA/D,OAASqG,EAAIM,GAAKnC,UAAW,OAClC6B,EAAIf,MAAMlK,IAAI,SAAAqP,GAAI,OACjB/G,EAAAC,EAAArJ,cAACgX,EAAD,CACEvN,IAAG,GAAA/D,OAAKyK,EAAK5D,EAAV,KAAA7G,OAAeyK,EAAK9D,GACvB8D,KAAMA,EACNsF,UAAWA,GAAcC,GAAYE,EAAezF,GACpD1L,UAAWkR,EAAgBxF,GAC3BuF,SAAUE,EAAezF,GACzB3O,SAAUA,EACVmN,SAAU5P,EAAK4I,MAAMgH,SACrBsI,KAAMlY,EAAK4I,MAAMsP,oBArCCvM,cAgElC8K,EAAoB7K,aAAe,CACjCT,UAAW,GACX2L,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVkB,UAAU,OAGNC,6MACJxI,SAAW,WACLrJ,EAAKqC,MAAMlD,WAAaa,EAAKqC,MAAMgH,SACrCrJ,EAAKqC,MAAMgH,SAASrJ,EAAKqC,MAAMwI,MACtB7K,EAAKqC,MAAM+N,UAAYpQ,EAAKqC,MAAMsP,MAC3C3R,EAAKqC,MAAMsP,gFAIN,IAAAnN,EACoF9K,KAAK2I,MAA3FwI,EADErG,EACFqG,KAAMsF,EADJ3L,EACI2L,UAAWhR,EADfqF,EACerF,UAAWiR,EAD1B5L,EAC0B4L,SAA6BpR,EADvDwF,EACoCtI,SAAWwC,MAAQM,QAAWqK,EADlE7E,EACkE6E,SAAUsI,EAD5EnN,EAC4EmN,KAC7EG,EACJ,CAAC,UAAW,SAAU,eAAepR,SAAS1B,IAC3C6L,EAAKE,MAAQ,GACbF,EAAKE,MAAO,EACbF,EAAKE,MAAQ,KACjB,OACEjH,EAAAC,EAAArJ,cAAA,OACEyJ,IAAG,OAAA/D,OAASyK,EAAK5D,EAAd,KAAA7G,OAAmByK,EAAK9D,GAC3BnC,UAAWgM,IAAW,OAAD,SAAAxQ,OAAkByK,EAAKE,OAAS,CAAC5L,YAAWiR,aACjEqB,SAAWpI,GAAYlK,GAAewS,GAAQvB,IAAcD,EAAYzW,KAAK2P,SAAW,MAExFvF,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,QAAS,YAClC9M,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,QAAS,YAClC9M,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,QAAS,YACjC/F,EAAKC,OACJhH,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,SAAD,UAAAxQ,OAAqByK,EAAKC,UACjDgH,GAEc,IAAfjH,EAAKE,MACPjH,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,QAAS,aAClCkB,aA/BU1M,aAkD5ByM,EAAcxM,aAAe,CAC3B8K,WAAW,EACXhR,WAAW,EACXiR,UAAU,GAGGF,QClIT6B,mLACI,IACChH,EAASrR,KAAK2I,MAAd0I,MACP,OAAKA,EAIJjH,EAAAC,EAAArJ,cAAA,KAAGsX,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA0C6R,GAA1C,MACTnO,EAAAC,EAAArJ,cAAA,QACEwX,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAjS,OAAK6R,GAAL,QAChBlH,IARG,YAJ0BuH,iBAsBjCC,mLACI,IACAxH,EAASrR,KAAK2I,MAAd0I,MACN,OAAKA,EAIJjH,EAAAC,EAAArJ,cAAA,KAAGsX,UAAS,oBACTlO,EAAAC,EAAArJ,cAAA,UAAQ8X,EAAGP,GAA2BQ,KAAM,OAAQC,OAAQ,OAAQC,YAAa,IACjF7O,EAAAC,EAAArJ,cAAA,QACEwX,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAjS,OAAK6R,GAAL,QAChBlH,IATG,YAJsBuH,iBAuB7BM,mLACI,IACA7H,EAASrR,KAAK2I,MAAd0I,MACN,OAAKA,EAIJjH,EAAAC,EAAArJ,cAAA,KAAGsX,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAAyC6R,GAAzC,MACTnO,EAAAC,EAAArJ,cAAA,QACEwX,iBAAkB,UAClBC,WAAY,SACZO,OAAQ,OACRC,YAAaV,EACbY,WAAY,SACZT,MAAO,CAACC,SAAQ,GAAAjS,OAAK6R,GAAL,QAChBlH,IAXG,YAJuBuH,iBAyB9BQ,mLAOI,IAAAtQ,EACe9I,KAAK2I,MAApB0I,EADAvI,EACAuI,MAAOnQ,EADP4H,EACO5H,KACPmY,EAAYrZ,KAAKyE,YAAY6U,aAAapY,GAChD,OAAKmY,EAIJjP,EAAAC,EAAArJ,cAACqY,EAAD,CAAWhI,MAAOA,IAHX,YAXiBuH,iBAAvBQ,EACEE,aAAe,CACnBC,cAAelB,EACfmB,OAAUX,EACVY,QAAWP,GAqBAE,QC/FTM,mLACI,IAAA5Q,EACkC9I,KAAK2I,MAAvCrG,EADAwG,EACAxG,KAAMmG,EADNK,EACML,KAAMkR,EADZ7Q,EACY6Q,WAAYC,EADxB9Q,EACwB8Q,OAC/B,OACExP,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACGjB,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,SAAAyF,OAAWpE,EAAX,SAAwBgW,UAAW,cAAA5R,OAC3B6R,GAD2B,KAAA7R,OACD6R,GADC,cAAA7R,OCNpB,GDMoB,KAAAA,OCNpB,GDMoB,kBAAAA,QAGzBiT,EAAWpM,EAAI,EAAIqM,EAAOrM,EAHD,KAAA7G,QAGOiT,EAAWtM,EAAI,EAAIuM,EAAOvM,EAHjC,MAIvCkB,KAAK,MAAO9F,GACb2B,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,SAAAyF,OAAWpE,EAAX,WACH8H,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAS,UAAAnT,OAAYpE,EAAZ,SAAyB2W,YCdjB,GDc0DD,OAAQ,SACxF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAS,UAAAnT,OAAYpE,EAAZ,SAAyByW,KAAM,WAE/C3O,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,SAAAyF,OAAWpE,EAAX,WACH8H,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAS,UAAAnT,OAAYpE,EAAZ,SAAyB2W,YClBjB,GDkB0DD,OAAQ,SACxF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAS,UAAAnT,OAAYpE,EAAZ,SAAyByW,KAAM,mBAhBrBH,iBA8B5BkB,mLAII,IAAAhP,EACyB9K,KAAK2I,MAA9BrG,EADAwI,EACAxI,KAAMyX,EADNjP,EACMiP,OAAQC,EADdlP,EACckP,QACrB,OACE5P,EAAAC,EAAArJ,cAAA,OACG6Y,UAAS,UAAAnT,OAAYpE,EAAZ,KAAAoE,OAAoBqT,GAC7BzB,UAAW0B,EAAUha,KAAKyE,YAAYwV,qBAAkBnQ,WATxC8O,iBAAlBkB,EACEG,qCACS1B,eAA0BA,QAmB3C,IAAM2B,EAAc,SAAChP,EAAD3B,GAA0D,IAA7Cd,EAA6Cc,EAA7Cd,KAAMkR,EAAuCpQ,EAAvCoQ,WAAuCQ,EAAA5Q,EAA3BqQ,cAA2B,IAAAO,EAAlB,CAAC5M,EAAG,EAAGF,EAAG,GAAQ8M,EACtEC,EADsE,SAAAC,GAAA,SAAAD,IAAA,OAAAna,OAAAC,EAAA,EAAAD,CAAAD,KAAAoa,GAAAna,OAAAqa,EAAA,EAAAra,CAAAD,KAAAC,OAAAsa,EAAA,EAAAta,CAAAma,GAAAI,MAAAxa,KAAAiQ,YAAA,OAAAhQ,OAAAwa,EAAA,EAAAxa,CAAAma,EAAAC,GAAApa,OAAAya,EAAA,EAAAza,CAAAma,EAAA,EAAA3P,IAAA,SAAAiF,MAAA,WAGxE,OACEtF,EAAAC,EAAArJ,cAAC2Z,EAAD,CACErY,KAAM4I,EACNzC,KAAMA,EACNkR,WAAYA,EACZC,OAAQA,QAR4DQ,EAAA,CAC3CxB,iBAYjCwB,EAAmBQ,YAAnB,GAAAlU,OAAoCwE,EAApC,cAb4E,IAetE2P,EAfsE,SAAAC,GAAA,SAAAD,IAAA,OAAA5a,OAAAC,EAAA,EAAAD,CAAAD,KAAA6a,GAAA5a,OAAAqa,EAAA,EAAAra,CAAAD,KAAAC,OAAAsa,EAAA,EAAAta,CAAA4a,GAAAL,MAAAxa,KAAAiQ,YAAA,OAAAhQ,OAAAwa,EAAA,EAAAxa,CAAA4a,EAAAC,GAAA7a,OAAAya,EAAA,EAAAza,CAAA4a,EAAA,EAAApQ,IAAA,SAAAiF,MAAA,WAkBjE,IAAAqL,EACmB/a,KAAK2I,MAAxBoR,EADAgB,EACAhB,OAAQC,EADRe,EACQf,QACf,OACE5P,EAAAC,EAAArJ,cAACga,EAAD,CACE1Y,KAAM4I,EACN6O,OAAQA,EACRC,QAASA,QAxB2Da,EAAA,CAerDjC,iBAgBvB,OAhBMiC,EACGI,WAAab,EAatBS,EAASD,YAAc1P,EAEhB2P,GAGHK,EAAYhB,EAAY,YAAa,CACzCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,kWACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,KACxBuM,OAAQ,CAACrM,EAAG,EAAGF,GAAI,MAGf+N,GAAYlB,EAAY,YAAa,CACzCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,qTACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBgO,GAAcnB,EAAY,cAAe,CAC7CzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,0EACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBiO,GAAmBpB,EAAY,mBAAoB,CACvDzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,o0BACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBkO,GAAWrB,EAAY,WAAY,CACvCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,glBACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBmO,GAActB,EAAY,cAAe,CAC7CzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,saACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBoO,GAAWvB,EAAY,WAAY,CACvCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,02BACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBqO,GAAWxB,EAAY,WAAY,CACvCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,+UACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBsO,GAAYzB,EAAY,YAAa,CACzCzR,KAAM2B,EAAAC,EAAArJ,cAAA,QAAMma,EAAE,qQACdxB,WAAY,CAACpM,EAAG,IAAKF,EAAG,OAGpBuO,oLAaI,IAAAC,EAC0B7b,KAAK2I,MAA/B+P,EADAmD,EACAnD,MAAOqB,EADP8B,EACO9B,OAAQC,EADf6B,EACe7B,QACf8B,EAAa9b,KAAKyE,YAAYsX,cAAcrD,GACnD,OACEtO,EAAAC,EAAArJ,cAAC8a,EAAD,CAAY/B,OAAQA,EAAQC,QAASA,WAjBtBpB,iBAAdgD,GACEG,cAAgB,CACpBC,KAAQd,EACRe,KAAQb,GACRc,OAAUb,GACVc,YAAeb,GACfc,IAAOb,GACPc,OAAUb,GACVc,IAAOb,GACPc,IAAOb,GACPtZ,KAAQuZ,QAkBNa,oLAEH,OAAOvc,OAAO6M,OAAO8O,GAAMG,eACxBja,IAAI,SAAAga,GAAU,OAAI1R,EAAAC,EAAArJ,cAAC8a,EAAWb,WAAZ,CAAuBxQ,IAAKqR,EAAWlB,aAAekB,EAAWxZ,gBAH1DsW,iBAM/BgD,GAAMa,YAAcD,GAELZ,UEnKTc,oLAEH,OACEtS,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACGjB,EAAAC,EAAArJ,cAAA,QACEC,GAAE,cACF0b,MDdc,ICedC,ODfc,MCiBhBxS,EAAAC,EAAArJ,cAAA,QACEC,GAAE,SACF0b,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,ODnBQ,ECmBR,KAAAA,ODnBQ,ECmBR,OAEX0D,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,UACHmJ,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,SACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OD1BM,EC0BN,KAAAA,OD1BM,EC0BN,OAEX0D,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,OACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,QAGbnO,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,UACHmJ,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,SACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,OAEXnO,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,OACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,QAGbnO,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,UACHmJ,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,SACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,OAEXnO,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,OACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,QAGbnO,EAAAC,EAAArJ,cAAA,KAAGC,GAAE,UACHmJ,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,SACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,OAEXnO,EAAAC,EAAArJ,cAAA,QACEkK,UAAW,OACXyR,MAAOpE,GACPqE,OAAQrE,GACRD,UAAS,aAAA5R,OAAe6R,GAAf,KAAA7R,OAA4C6R,GAA5C,gBApESK,iBA4ExBiE,8MAWLC,MAAQ,CACNC,cAAehd,EAAK4I,MAAM0I,MAC1B2L,aAAcjd,EAAK4I,MAAM0I,SAG3B4L,cAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGnb,IAAI,SAAAob,GAAC,OAAIC,IAAMC,gGAU3BC,EAAWC,EAAWC,GAAU,IAAAjX,EAAAtG,KAC7CA,KAAK2I,MAAMuP,UAAYlY,KAAK8c,MAAME,eAAiBhd,KAAK8c,MAAMC,eAChES,WAAW,WACTlX,EAAK2W,cACFlW,OAAO,SAAC0W,EAAcP,GAAf,OACL5W,EAAKwW,MAAMC,eAAiBG,GAAKA,GAAK5W,EAAKwW,MAAME,cAC9C1W,EAAKwW,MAAME,cAAgBE,GAAKA,GAAK5W,EAAKwW,MAAMC,gBAErDhW,OAAO,SAAA0W,GAAY,OAAIA,EAAavQ,UACpCpL,IAAI,SAAA2b,GAAY,OAAIA,EAAavQ,QAAQwQ,kBAC3C,oCAIC,IAAArW,EAAArH,KAAA8I,EAIF9I,KAAK2I,MAFR4E,EAFKzE,EAELyE,EAAGF,EAFEvE,EAEFuE,EAAG5H,EAFDqD,EAECrD,UAAWiR,EAFZ5N,EAEY4N,SAAUrF,EAFtBvI,EAEsBuI,MAAOD,EAF7BtI,EAE6BsI,OAAQ2G,EAFrCjP,EAEqCiP,QAASG,EAF9CpP,EAE8CoP,SAAUyF,EAFxD7U,EAEwD6U,aAFxDC,EAAA9U,EAGJ9D,MAHI6Y,EAAAD,EAGI3Y,cAHJ,IAAA4Y,EAGa,OAHbA,EAAAC,EAAAF,EAGqBzY,sBAHrB,IAAA2Y,KAG4CxY,EAH5CsY,EAG4CtY,QAH5CyY,EAK+B/d,KAAK8c,MAApCC,EALAgB,EAKAhB,cAAeC,EALfe,EAKef,aAChBgB,GAAqBL,EAAa3W,SAAS+E,EAAK6B,WAAa+P,EAAa3W,SAAS+E,EAAKiF,UACxFiN,GAAqBD,EAC3B,OACE5T,EAAAC,EAAArJ,cAAA,KAAGsX,UAAS,aAAA5R,OAAmB,IAAJ6G,EAAf,KAAA7G,OAA8B,IAAJ2G,EAA1B,MACTjD,EAAAC,EAAArJ,cAAA,OACE6Y,UAAS,eACT3O,UAAWgM,IAAW,CAACzR,YAAWiR,aAClCqB,QAASA,IAEX3N,EAAAC,EAAArJ,cAAA,KAAGkK,UAAW,iBACXgN,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpW,IAAI,SAAAob,GAAC,OAChC9S,EAAAC,EAAArJ,cAAA,OAAKyJ,IAAKyS,EAAGrD,UAAS,GAAAnT,OAAKW,EAAK5C,YAAYyZ,SAAShB,IAAMiB,QAASjB,GAAK7L,EAAQ,EAAI,GACnFjH,EAAAC,EAAArJ,cAAA,WACEod,IAAK/W,EAAK4V,cAAcC,GACxBmB,cAAe,UACfC,cAAe,MACfpd,KAAM,YACNsK,KAAMuR,EAAgBG,EAAI,EAAI,EAC9BvT,GAAIqT,EAAeE,EAAI,EAAI,EAC3BqB,IAAK,OACLC,YAAa,EACbzF,KAAM,cAGL,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGhS,OAAO,SAAAmW,GAAC,OAAIA,GAAK7L,IAAOvP,IAAI,SAAAob,GAAC,OAClD9S,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,CAAUZ,IAAKyS,GACb9S,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAS,GAAAnT,OAAKW,EAAK5C,YAAYyZ,SAAShB,MAC5C9L,IAAWrF,EAAK6B,SAAWxD,EAAAC,EAAArJ,cAACyd,GAAD,CAAO/F,MAAOzT,EAAQ8U,OAAQ,QAASC,QAAS7U,GAAkB6Y,IAAwB,KACrH5M,IAAWrF,EAAKiF,SAAW5G,EAAAC,EAAArJ,cAACyd,GAAD,CAAO/F,MAAOzT,EAAQ8U,OAAQ,QAASC,QAAS7U,GAAkB8Y,IAAwB,QAGzH3Y,EAAU8E,EAAAC,EAAArJ,cAAC0d,EAAD,CAAgBrN,MAAOA,EAAOnQ,KAAMoE,IAAc,0DA3DtCqD,EAAOmU,GACpC,OAAInU,EAAMuP,UAAYvP,EAAM0I,QAAUyL,EAAMzL,MACnC,CAAC0L,cAAeD,EAAME,aAAcA,aAAcrU,EAAM0I,OAG1D,YAvBQuH,iBAAbiE,GACGJ,YAAcC,GADjBG,GAGEqB,SAAW,CACfS,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,WAyFPlC,GAAKlR,aAAe,CAClBuM,UAAU,GAGG2E,UCrLTmC,4LAQK,IAAAC,EAC6Fjf,KAAKyE,YAAlGya,EADAD,EACAC,gBAAiBC,EADjBF,EACiBE,YAAaC,EAD9BH,EAC8BG,aAAcC,EAD5CJ,EAC4CI,iBAAkBC,EAD9DL,EAC8DK,aAAcC,EAD5EN,EAC4EM,cAEnF,OACEnV,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAAA,QACEC,GAAI,kBACJka,EAAG,qOACH7C,UAAW,cAAA5R,OACI6R,GADJ,KAAA7R,OAC8B6R,GAD9B,cAAA7R,OFjBO,GEmBmB0Y,EAF1B,KAAA1Y,OFjBO,GEmB8D0Y,EAFrE,kBAAA1Y,QAGKwY,EAAgB3R,EAAI,EAAI4R,EAAY5R,EAHzC,KAAA7G,QAG+CwY,EAAgB7R,EAAI,EAAI8R,EAAY9R,EAHnF,MAITkB,KAAK,OAETnE,EAAAC,EAAArJ,cAAA,QACEC,GAAI,mBACJka,EAAG,yjBACH7C,UAAW,cAAA5R,OACI6R,GADJ,KAAA7R,OAC8B6R,GAD9B,cAAA7R,OF1BO,GE4BmB6Y,EAF1B,KAAA7Y,OF1BO,GE4B+D6Y,EAFtE,gCAAA7Y,QAIK2Y,EAAiB9R,EAAI,EAAI+R,EAAa/R,EAJ3C,KAAA7G,QAIiD2Y,EAAiBhS,EAAI,EAAIiS,EAAajS,EAJvF,MAKTkB,KAAK,OAETnE,EAAAC,EAAArJ,cAAA,KAAGC,GAAI,oBACLmJ,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,mBAAoBZ,YFpCd,GEoCuDD,OAAQ,SACrF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,mBAAoBd,KAAM,WAE5C3O,EAAAC,EAAArJ,cAAA,KAAGC,GAAI,oBACLmJ,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,mBAAoBZ,YFxCd,GEwCuDD,OAAQ,SACrF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,mBAAoBd,KAAM,WAE5C3O,EAAAC,EAAArJ,cAAA,KAAGC,GAAI,qBACLmJ,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,oBAAqBZ,YF5Cf,GE4CwDD,OAAQ,SACtF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,oBAAqBd,KAAM,WAE7C3O,EAAAC,EAAArJ,cAAA,KAAGC,GAAI,qBACLmJ,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,oBAAqBZ,YFhDf,GEgDwDD,OAAQ,SACtF5O,EAAAC,EAAArJ,cAAA,OAAK6Y,UAAW,oBAAqBd,KAAM,mBA9CvBH,kBAAxBoG,GACGE,gBAAkB,CAAC3R,EAAG,OAAQF,EAAG,QADpC2R,GAEGG,YAAc,CAAC5R,GAAI,GAAIF,GAAI,IAF9B2R,GAGGI,aAAe,IAHlBJ,GAIGK,iBAAmB,CAAC9R,EAAG,OAAQF,EAAG,QAJrC2R,GAKGM,aAAe,CAAC/R,EAAG,GAAIF,GAAI,IAL9B2R,GAMGO,cAAgB,UA+CnBC,oLAgBK,IAAAC,EACyBzf,KAAKyE,YAA9Bib,EADAD,EACAC,QAASC,EADTF,EACSE,aADT7W,EAEiC9I,KAAK2I,MAAtC6C,EAFA1C,EAEA0C,KAAM7B,EAFNb,EAEMa,GAAIoQ,EAFVjR,EAEUiR,OAAQ7Y,EAFlB4H,EAEkB5H,KAAM2V,EAFxB/N,EAEwB+N,MACzB+I,EAAO,CAACrS,EAAG5D,EAAG4D,EAAI/B,EAAK+B,EAAGF,EAAG1D,EAAG0D,EAAI7B,EAAK6B,GACzCwS,EAAW7f,KAAKyE,YAAYqb,YAAjB,GAAApZ,OAAgCkZ,EAAKrS,EAArC,KAAA7G,OAA0CkZ,EAAKvS,IAC1D0S,EAAgBrO,KAAKsO,KAAKtO,KAAKU,IAAIwN,EAAKrS,GAAKmE,KAAKU,IAAIwN,EAAKvS,IAEjE,OACEjD,EAAAC,EAAArJ,cAAA,OACE6Y,UAAS,UAAAnT,OAAYxF,EAAZ,KAAAwF,OAAoBqT,GAC7BzB,UAAW,cAAA5R,OFnFK,IEoFoB8E,EAAK+B,EAD9B,KAAA7G,OFnFK,IEoFmD8E,EAAK6B,EAD7D,eAAA3G,OAECmZ,EAFD,KAAAnZ,OAEa6R,GAFb,KAAA7R,OAEuC6R,GAFvC,kBAAA7R,OAGIgZ,EAHJ,KAAAhZ,OAGe6R,GAAyBwH,EAHxC,MAAArZ,OAAAzG,OAAA0G,EAAA,EAAA1G,CAIL4W,EAAQ,cAAAnQ,OACG6R,GADH,KAAA7R,OAC6B6R,GAD7B,cAAA7R,OAEDiZ,EAFC,kBAAAjZ,QAGG,GAHH,KAAAA,QAG8B,GAH9B,MAIR,KACJK,OAAO,SAAAuR,GAAS,OAAIA,IAAW/J,KAAK,cAnC1BqK,iBAAd4G,GACGvE,WAAa+D,GADhBQ,GAEGE,QAAUnH,GAFbiH,GAGGG,aAAe,IAHlBH,GAKGM,YAAc,CACnBG,MAAO,EACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,IACTC,OAAQ,IACRC,QAAS,IACTC,OAAQ,GACRC,OAAQ,IAoCZhB,GAAM7T,aAAe,CACnBkL,OAAO,GAGM2I,UCnGTiB,oLACK,IAAA1gB,EAAAC,KAAA8I,EAIH9I,KAAK2I,MAFPuC,EAFKpC,EAELoC,UAAWuL,EAFN3N,EAEM2N,UAAWC,EAFjB5N,EAEiB4N,SAAUC,EAF3B7N,EAE2B6N,gBAAiBC,EAF5C9N,EAE4C8N,eAAgBC,EAF5D/N,EAE4D+N,MAAOC,EAFnEhO,EAEmEgO,OAAQnH,EAF3E7G,EAE2E6G,SAAUoH,EAFrFjO,EAEqFiO,SAAUC,EAF/FlO,EAE+FkO,SACpG2G,EAHK7U,EAGL6U,aAAcnb,EAHTsG,EAGStG,SAAU2K,EAHnBrE,EAGmBqE,eAAgBuT,EAHnC5X,EAGmC4X,eAAgBxI,EAHnDpP,EAGmDoP,SAAUyI,EAH7D7X,EAG6D6X,WAAYpZ,EAHzEuB,EAGyEvB,KAAMlC,EAH/EyD,EAG+EzD,OAE/EL,EAASxC,EAATwC,MAEPkG,EAAYgM,IAAW,QAAS,YAAV,eAAAxQ,OAAsC1B,EAAME,QAAU,WAAa,CACvFiS,cAAeN,EACfO,eAAgBN,EAChBO,WAAY1H,IAAa8G,GAAaC,GACtCY,aAAcP,EACdC,YACC9L,GACH,IAAM0V,EAAWzT,EAAetH,OAC1Bgb,EAAanP,KAAKoP,IAALtG,MAAA9I,KAAIzR,OAAA0G,EAAA,EAAA1G,CAAQkN,EAAerL,IAAI,SAAAiL,GAAG,OAAIA,EAAIf,MAAMnG,YAAY,EAE/E,OACEuE,EAAAC,EAAArJ,cAAA,OACEkK,UAAWA,EACX6V,QAAO,OAAAra,OHhCS,IGgCqBma,EAA9B,KAAAna,OHhCS,IGgCyDka,GACzElI,MAAO,CAACsI,iBAAkBH,EAAaI,cAAeL,GACtDM,oBAAqB,gBACrBnJ,QAAShB,GAET3M,EAAAC,EAAArJ,cAAA,KAAGmgB,WAAU,QACVhU,EAAerL,IAAI,SAAAiL,GAAG,OACrB3C,EAAAC,EAAArJ,cAAA,KAAGmgB,WAAA,OAAAza,OAAiBqG,EAAIM,GAAK5C,IAAG,OAAA/D,OAASqG,EAAIM,IAC1CN,EAAIf,MAAMlK,IAAI,SAAAqP,GAAI,OACjB/G,EAAAC,EAAArJ,cAACogB,GAAD,CACE3W,IAAG,GAAA/D,OAAKyK,EAAK5D,EAAV,KAAA7G,OAAeyK,EAAK9D,GACvB8D,KAAMA,EACNsF,UAAWA,GAAcC,GAAYE,EAAezF,GACpD1L,UAAWkR,EAAgBxF,GAC3BuF,SAAUE,EAAezF,GACzBwM,aAAcA,EACdnb,SAAUA,EACVmN,SAAU5P,EAAK4I,MAAMgH,SACrBsI,KAAMlY,EAAK4I,MAAMsP,KACjBjT,MAAOA,EACPkT,SAAUA,UAMnBA,EACC9N,EAAAC,EAAArJ,cAACqgB,GAAD,CAAgBlU,eAAgBA,EAAgBnI,MAAOA,EAAO2Y,aAAcA,IAC1E,KACHgD,EACCtb,EACEA,EAAOvD,IAAI,SAACwf,EAAOje,GAAR,OACT+G,EAAAC,EAAArJ,cAACugB,GAADthB,OAAAuK,OAAA,CAAOC,IAAKpH,GAAWie,MAGzBlX,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACwgB,GAAD,CAAuBja,KAAMA,EAAMmZ,eAAgBA,KAIrD,aA7DqB9H,iBAyFjC6H,GAAmB9U,aAAe,CAChCT,UAAW,GACX2L,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACV2G,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,UACnCkH,UAAU,EACVyI,YAAY,OAGRc,oLAEF,OACErX,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAAA,OAAKkK,UAAWgM,IAAW,QAAS,aAAcwB,MAAO,CAACgJ,QAAS,SACjEtX,EAAAC,EAAArJ,cAAA,YACEoJ,EAAAC,EAAArJ,cAAC2gB,GAAKlF,YAAN,MACArS,EAAAC,EAAArJ,cAACyd,GAAMhC,YAAP,MACArS,EAAAC,EAAArJ,cAACugB,GAAMtG,WAAP,gBARgCrC,iBAe5C6H,GAAmBhE,YAAcgF,OAE3BG,4LACa,IACRlB,EAAkB1gB,KAAK2I,MAAvB+X,eADQmB,EAEmB7hB,KAAK8hB,qBAAhC1Q,EAFQyQ,EAERzQ,OAAQ2Q,EAFAF,EAEAE,gBACTC,EAAoBD,EACvBjQ,KAAK,SAAAvK,GAAI,OAAIwE,EAAKgK,uBAAuB/O,SAASO,EAAKsG,gBACpDoU,EAAoBF,EACvBjQ,KAAK,SAAAvK,GAAI,OAAIA,EAAKsG,eAAiB9B,EAAKuH,gCAN5B4O,EAQO,CACpBzS,KAAMuS,EAAoB,CACxBxW,KAAMwW,EAAkB9V,SAASC,SACjCxC,GAAIqY,EAAkB7V,UACpB,KACJgW,MAAOF,EAAoB,CACzBzW,KAAMyW,EAAkB/V,SAASC,SACjCxC,GAAIsY,EAAkB9V,UACrB,MAREsD,EARQyS,EAQRzS,KAAM0S,EARED,EAQFC,MAwBb,OAbIzB,IACEjR,IACFA,EAAKjE,KAAOkV,EAAe0B,mBAAmBJ,EAAkB9V,SAASiB,eAAgBsC,EAAKjE,MAC9FiE,EAAK9F,GAAK+W,EAAe0B,mBAAmBJ,EAAkB7U,eAAgBsC,EAAK9F,IACnF8F,EAAKvO,KAAO,QAEVihB,IACFA,EAAM3W,KAAOkV,EAAe0B,mBAAmBH,EAAkB/V,SAASiB,eAAgBgV,EAAM3W,MAChG2W,EAAMxY,GAAK+W,EAAe0B,mBAAmBH,EAAkB9U,eAAgBgV,EAAMxY,IACrFwY,EAAMjhB,KAAO,UAIV,CAACkQ,SAAQ3B,OAAM0S,sDAStB,IANmB,IACZ5a,EAAQvH,KAAK2I,MAAbpB,KAEDwa,EAAkB,CAACxa,GACnB6J,EAAS7J,EAAKoG,WAChB0U,EAAgB9a,EACb8a,EAAcnW,WACnBmW,EAAgBA,EAAcnW,UACZyB,aAAeyD,GAGjC2Q,EAAgBjc,KAAKuc,GAGvB,MAAO,CAACjR,SAAQ2Q,oDAKhB,IADe/hB,KAAK2I,MAAbpB,KAEL,OAAO,KAHF,IAAA+a,EAMuBtiB,KAAKuiB,iBAA5BnR,EANAkR,EAMAlR,OAAQ3B,EANR6S,EAMQ7S,KAAM0S,EANdG,EAMcH,MACrB,IAAK1S,IAAS0S,EACZ,OAAO,KAET,IAAMpI,EAAS3I,IAAWrF,EAAK6B,SAAW,QAAU,QAEhD4U,EAAY,KAAMC,EAAa,KAQnC,OAPIhT,IACF+S,EAAYpY,EAAAC,EAAArJ,cAACugB,GAAD,CAAO9W,IAAK,OAAQe,KAAMiE,EAAKjE,KAAM7B,GAAI8F,EAAK9F,GAAIoQ,OAAQA,EAAQ7Y,KAAM,UAElFihB,IACFM,EAAarY,EAAAC,EAAArJ,cAACugB,GAAD,CAAO9W,IAAK,QAASe,KAAM2W,EAAM3W,KAAM7B,GAAIwY,EAAMxY,GAAIoQ,OAAQA,EAAQ7Y,KAAM,WAGnF,CAACshB,EAAWC,UAzEa7J,iBAiH9B8J,IA/BqC9J,iMAgChC,IAAAmC,EACuC/a,KAAK2I,MAA5CwE,EADA4N,EACA5N,eAAgBnI,EADhB+V,EACgB/V,MAAO2Y,EADvB5C,EACuB4C,aAExB1Y,EAAShC,IAAE0f,OAAO1f,IAAEiN,QAAQ/C,EAAerL,IAAI,SAAAiL,GAAG,OAAIA,EAAIf,MAAMjF,OAAO,SAAAoK,GAAI,OAAIA,EAAKC,YAAW,CAAC,SAAU,WAEhH,OACEhH,EAAAC,EAAArJ,cAAA,KAAGmgB,WAAU,SAAUzI,MAAO,CAACkK,cAAe,SAC3C3d,EAAOnD,IAAI,SAAAqP,GAAI,OACd/G,EAAAC,EAAArJ,cAAC6hB,GAAD,CACEpY,IAAG,GAAA/D,OAAKyK,EAAKC,OAAV,KAAA1K,OAAoByK,EAAKuC,QAC5BvC,KAAMA,EACNnM,MAAOA,EACP2Y,aAAcA,cAbG/E,kBA2BvBkK,8MACJhG,MAAQ,CACNiG,iBAAkB,CAACxV,EAAGjH,EAAKqC,MAAMwI,KAAK5D,EAAGF,EAAG/G,EAAKqC,MAAMwI,KAAK9D,GAC5D2V,SAAU,CAACzV,EAAGjH,EAAKqC,MAAMwI,KAAK5D,EAAGF,EAAG/G,EAAKqC,MAAMwI,KAAK9D,MAGtD4V,iBAAmB9F,IAAMC,8FAUNC,EAAWC,EAAWC,GAAU,IAAAlW,EAAArH,KAC7CA,KAAK8c,MAAMkG,WAAa1F,EAAU0F,UACpCxF,WAAW,WACLnW,EAAK4b,iBAAiB/V,SACxB7F,EAAK4b,iBAAiB/V,QAAQwQ,gBAE/B,oCAIE,IAAA7B,EAC6B7b,KAAK2I,MAAlCwI,EADA0K,EACA1K,KAAMnM,EADN6W,EACM7W,MAAO2Y,EADb9B,EACa8B,aADbI,EAE8B/d,KAAK8c,MAAnCiG,EAFAhF,EAEAgF,iBAAkBC,EAFlBjF,EAEkBiF,SACpBhF,GAAqBL,EAAa3W,SAAS+E,EAAK6B,WAAa+P,EAAa3W,SAAS+E,EAAKiF,UACxFiN,GAAqBD,EAC1B,OACE5T,EAAAC,EAAArJ,cAAA,KAAGsX,UAAS,aAAA5R,OAA4B,IAAbsc,EAASzV,EAAxB,KAAA7G,OAAgD,IAAbsc,EAAS3V,EAA5C,MACVjD,EAAAC,EAAArJ,cAACyd,GAAD,CACE/F,MAAO1T,EAAMC,QAAU,OACvB8U,OAAQ5I,EAAKC,SAAWrF,EAAK6B,SAAW,QAAU,QAClDoM,QAAShV,EAAMG,iBAAmBgM,EAAKC,SAAWrF,EAAK6B,SAAWoQ,EAAoBC,KAExF7T,EAAAC,EAAArJ,cAAA,oBACEod,IAAKpe,KAAKijB,iBACV5E,cAAe,YACfC,cAAe,MACfpd,KAAM,YACNsK,KAAI,GAAA9E,OAA0B,IAArBqc,EAAiBxV,EAAtB,KAAA7G,OAAsD,IAArBqc,EAAiB1V,GACtD1D,GAAE,GAAAjD,OAAkB,IAAbsc,EAASzV,EAAd,KAAA7G,OAAsC,IAAbsc,EAAS3V,GACpCkR,IAAK,OACLC,YAAa,EACbzF,KAAM,+DAvCkBpQ,EAAOmU,GACrC,OAAInU,EAAMwI,KAAK5D,IAAMuP,EAAMkG,SAASzV,GAAK5E,EAAMwI,KAAK9D,IAAMyP,EAAMkG,SAAS3V,EAChE,CAAC0V,iBAAkBjG,EAAMkG,SAAUA,SAAU,CAACzV,EAAG5E,EAAMwI,KAAK5D,EAAGF,EAAG1E,EAAMwI,KAAK9D,IAG/E,YAbiBuL,iBA4DtBsK,8MACJvT,SAAW,WACL3H,EAAKW,MAAMlD,WAAauC,EAAKW,MAAMgH,SACrC3H,EAAKW,MAAMgH,SAAS3H,EAAKW,MAAMwI,MACtBnJ,EAAKW,MAAM+N,UAAY1O,EAAKW,MAAMsP,MAC3CjQ,EAAKW,MAAMsP,gFAIN,IAAAkL,EACiGnjB,KAAK2I,MAAxGwI,EADEgS,EACFhS,KAAMsF,EADJ0M,EACI1M,UAAWhR,EADf0d,EACe1d,UAAWiR,EAD1ByM,EAC0BzM,SAAqB1R,EAD/Cme,EACoC3gB,SAAWwC,MAAQ2K,EADvDwT,EACuDxT,SAAUsI,EADjEkL,EACiElL,KAAMC,EADvEiL,EACuEjL,SAAUyF,EADjFwF,EACiFxF,aACxF,OACEvT,EAAAC,EAAArJ,cAAC2gB,GAAD,CACEpU,EAAG4D,EAAK5D,EACRF,EAAG8D,EAAK9D,EACR5H,UAAWA,EACXiR,SAAUA,EACVrF,MAAOF,EAAKE,MACZD,OAAQD,EAAKC,OACbuM,aAAcA,EACdzF,SAAUA,EACVlT,MAAOA,EACP+S,SAAWpI,GAAYlK,GAAewS,GAAQvB,IAAcD,EAAYzW,KAAK2P,SAAW,cAtBrEiJ,iBAwC3BsK,GAAavX,aAAe,CAC1B8K,WAAW,EACXhR,WAAW,EACXiR,UAAU,EACVwB,UAAU,EACVyF,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,WAGtByP,ICtXAA,GDsXAA,GEhXT2C,mMACK,IAAAta,EAC4B9I,KAAK2I,MADjC0a,EAAAva,EACFwa,gBADE,IAAAD,EACS,MADTA,EACmB1a,EADnB1I,OAAAsjB,EAAA,EAAAtjB,CAAA6I,EAAA,cAOD0a,EAJY,CAChBC,KAAQjN,EACRkN,IAAOjD,IAEkB6C,GAC3B,OAAOlZ,EAAAC,EAAArJ,cAACwiB,EAAa7a,UATK+C,cAmC9B0X,GAAgBzX,aAAe,CAC7BT,UAAW,GACX2L,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACV2G,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,UACnCkH,UAAU,EACVyI,YAAY,GAGCyC,UC/CTO,8MACJhU,SAAW,SAACwB,GACVpR,EAAK4I,MAAMgH,SAAS5P,EAAK4I,MAAMpB,KAAKoI,SAAS,CAACpC,EAAG4D,EAAK5D,EAAGF,EAAG8D,EAAK9D,QAGnE4K,KAAO,WACLlY,EAAK4I,MAAMgH,SAAS5P,EAAK4I,MAAMpB,KAAK+E,QAAUvM,EAAK4I,MAAMpB,KAAK0Q,OAASlY,EAAK4I,MAAMpB,KAAKqc,mBAGzF7M,SAAW,WACThX,EAAK4I,MAAMoO,SAAShX,EAAK4I,MAAMpB,SAGjCoP,gBAAkB,SAAAxF,GAChB,OAAOpR,EAAK4I,MAAMpB,KAAKsc,gBAAgB1S,MAGzCyF,eAAiB,SAAAzF,GACf,QAAiCrH,IAA7B/J,EAAK4I,MAAMmb,eAA4D,OAA7B/jB,EAAK4I,MAAMmb,eACvD,IAAK/jB,EAAK4I,MAAMpB,KAAK+E,QACnB,OAAO,OAGT,GAAIvM,EAAK4I,MAAMpB,KAAKmF,YAAc3M,EAAK4I,MAAMmb,cAC3C,OAAO,EAGX,IAAM3X,EAAWpM,EAAK4I,MAAMpB,KAAK4E,SACjC,QAAKA,IAGEA,EAASoB,IAAM4D,EAAK5D,GAAKpB,EAASkB,IAAM8D,EAAK9D,oFAGrC,IAAA/G,EAAAtG,KACf,QAASA,KAAK2I,MAAMpB,KAAK4F,eAAe2E,KAAK,SAAA/E,GAAG,OAAIA,EAAIf,MAAM8F,KAAK,SAAAX,GAAI,OAAI7K,EAAKsQ,eAAezF,wCAGxF,IAAArI,EACoE9I,KAAK2I,MAAzEpB,EADAuB,EACAvB,KAAMmZ,EADN5X,EACM4X,eAAgB/C,EADtB7U,EACsB6U,aAAc5G,EADpCjO,EACoCiO,SAAUpH,EAD9C7G,EAC8C6G,SAAUuI,EADxDpP,EACwDoP,SAC3D/K,EAAiB5F,EAAK4F,eAK1B,OAJIuT,IACFvT,EAAiBuT,EAAevT,IAIhC/C,EAAAC,EAAArJ,cAAC+iB,GAAD9jB,OAAAuK,OAAA,GACMxK,KAAK2I,MADX,CAEEgO,gBAAiBuB,EAAWlY,KAAK2W,gBAAkB,kBAAM,GACzDC,eAAgBsB,EAAWlY,KAAK4W,eAAiB,kBAAM,GACvDH,UAAWkH,EAAa3W,SAASO,EAAKiG,YACtCkJ,WAAUwB,GAAWlY,KAAKgkB,iBAC1BjN,SAAUA,EAAW/W,KAAK+W,SAAW,KACrCpH,SAAUA,EAAW3P,KAAK2P,SAAW,KACrCsI,KAAMtI,EAAW3P,KAAKiY,KAAO,KAC7B9K,eAAgBA,EAChBuT,eAAgBA,EAChBnZ,KAAMA,EACN2Q,SAAUA,YA1DEU,iBA+EpB+K,GAAMhY,aAAe,CACnBT,UAAW,GACX2L,OAAO,EACPC,QAAQ,EACRE,UAAU,EACV2G,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,UACnCkH,UAAU,OAGN+L,8MACJnH,MAAQ,CACNoH,UAAW,EACXC,qBAAqB,KAyFtBC,kBAAoB,SAAAC,GAClBhd,EAAKid,SAASD,EAAQ,WACpB,GAAIhd,EAAKsB,MAAM4b,SAAU,KAAAC,EACkBnd,EAAKyV,MAAvCoH,EADgBM,EAChBN,UAAWC,EADKK,EACLL,oBACZzD,EAAiBrZ,EAAK5C,YAAYggB,kBAAjB,GAAA/d,OAAsCwd,EAAtC,KAAAxd,OAAmDyd,IAC1E9c,EAAKsB,MAAM4b,SAAS,CAACL,YAAWC,sBAAqBzD,yBAK5DgE,uBAAyB,WACvBrd,EAAK+c,kBAAkB,SAAAtH,GAAK,MAAK,CAC/BoH,WAAYpH,EAAMoH,UAAY,GAAK,QAIvCS,gBAAkB,WAChBtd,EAAK+c,kBAAkB,SAAAtH,GAAK,MAAK,CAC/BoH,WAAYpH,EAAMoH,UAAY,GAAK,QAIvCU,iBAAmB,WACjBvd,EAAK+c,kBAAkB,SAAAtH,GAAK,MAAK,CAC/BqH,qBAAsBrH,EAAMqH,0BAIhCU,eAAiB,WACfxd,EAAK+c,kBAAkB,SAAAtH,GAAK,MAAK,CAC/BoH,WAAYpH,EAAMoH,UAAY,GAAK,EACnCC,qBAAsBrH,EAAMqH,0BAIhCW,MAAQ,WACNzd,EAAK+c,kBAAkB,SAAAtH,GAAK,MAAK,CAC/BoH,UAAW,EACXC,qBAAqB,8EAIhB,IAAApG,EACkC/d,KAAK8c,MAAvCoH,EADAnG,EACAmG,UAAWC,EADXpG,EACWoG,oBAElB,OACE/Z,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CAAMya,KAAM,UAAWC,MAAO,CAC5B,CAACva,IAAK,2BAA4BG,KAAM,OAAQmN,QAAS/X,KAAK0kB,wBAC9D,CAACja,IAAK,mBAAoBG,KAAM,OAAQmN,QAAS/X,KAAK2kB,iBACtD,CAACla,IAAK,kBAAmBG,KAAM,8BAA+BmN,QAAS/X,KAAK4kB,kBAC5E,CAACna,IAAK,gBAAiBG,KAAM,4BAA6BmN,QAAS/X,KAAK6kB,gBACxE,CAACpa,IAAK,OAAQG,KAAM,OAAQmN,QAAS/X,KAAK8kB,MAAOG,UAAWf,IAAcC,4DA5H7Ce,GAAQ,IAAAld,EAAAhI,KACnCmlB,EAA0B,SAAAhY,GAC9B,OAAOnF,EAAKmd,wBAAwBhY,EAAgB+X,IAGhDE,EAAUF,EAAOG,UAAYH,EAAOI,MAAQJ,EAAOK,MACnDC,EAAgBN,EAAOG,YAAcD,EAAU,CACnDC,UAAWH,EAAOG,UAClBC,OAAQJ,EAAOI,MACfC,OAAQL,EAAOK,OACbL,EAKJ,OAJAC,EAAwB/C,mBAAqB,SAACjV,EAAgB8E,GAC5D,OAAOjK,EAAKyd,4BAA4BtY,EAAgB8E,EAAauT,IAGhEL,kDAGsBhY,EAAgB+X,GAAQ,IAAAnT,EAAA/R,KAAA0lB,EACjB1lB,KAAK2lB,wBAAwBxY,EAAgB+X,GAA5EU,EADgDF,EAChDE,YAAaC,EADmCH,EACnCG,eACZC,EAAQ7iB,IAAE8iB,MAAMF,GAGtB,OAFc5iB,IAAE8iB,MAAMH,GAET9jB,IAAI,SAAAkkB,GAAI,MAAK,CACxB3Y,EAAG2Y,EACHha,MAAO8Z,EAAMhkB,IAAI,SAAAmkB,GAAQ,IAAAC,EACJnU,EAAKoU,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAAnFkB,EADkBF,EAClBE,KAAMC,EADYH,EACZG,KACX,OAAOpmB,OAAAkK,EAAA,EAAAlK,CAAA,GACJkN,EAAekZ,GAAMra,MAAMoa,GAD9B,CAEE7Y,EAAG0Y,EAAM5Y,EAAG2Y,6DAMe7Y,EAAgB8E,EAAaiT,GAAQ,IAAAoB,EAClCtmB,KAAK2lB,wBAAwBxY,EAAgB+X,GAA5EU,EADiEU,EACjEV,YAAaC,EADoDS,EACpDT,eACRI,EAAiBhU,EAApB1E,EAAYyY,EAAQ/T,EAAX5E,EAFsDkZ,EAGjDvmB,KAAKmmB,kBAAmB,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBX,GAE1F,MAAO,CAAC3X,EAL8DgZ,EAG/DH,KAEU/Y,EALqDkZ,EAGzDF,sDAKgBlZ,EAAgB+X,GAC7C,IAGIU,EAAaC,EAHXjF,EAAWzT,EAAetH,OAC1Bgb,EAAcnP,KAAKoP,IAALtG,MAAA9I,KAAIzR,OAAA0G,EAAA,EAAA1G,CAAQkN,EAAerL,IAAI,SAAAiL,GAAG,OAAIA,EAAIf,MAAMnG,YAAY,EAQhF,OAPoBqf,EAAbG,WAGJQ,EAAgCjF,EAAhBgF,EAA0B/E,IAE1CgF,EAAgChF,EAAhB+E,EAA6BhF,GAEzC,CAACgF,cAAaC,gEAG+CX,GAAQ,IAExEkB,EAAMC,EAFcJ,EAAoD1c,EAApD0c,KAAMD,EAA8Czc,EAA9Cyc,KAAQH,EAAsCpU,EAAtCoU,eAAgBD,EAAsBnU,EAAtBmU,YActD,OAbkCV,EAA3BG,WAGJe,EAAeJ,EAATK,EAAeJ,IAErBG,EAAeH,EAATI,EAAeL,GALUd,EAAhBI,QAQhBc,EAAOP,EAAiB,EAAIO,GARIlB,EAATK,QAWvBc,EAAOT,EAAc,EAAIS,GAEpB,CAACD,OAAMC,eAzFgBzN,iBAA5BqL,GAOGQ,kBAAoB,CACzB+B,UAAW,KAEXC,UAVExC,GAUcyC,4BAA4B,CAACrB,WAAW,EAAMC,OAAO,EAAOC,OAAO,IACnFoB,UAXE1C,GAWcyC,4BAA4B,CAACrB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IACnFqB,UAZE3C,GAYcyC,4BAA4B,CAACrB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IAClFsB,SAbE5C,GAaayC,4BAA4B,CAACrB,WAAW,EAAOC,OAAO,EAAMC,OAAO,IAClFuB,SAdE7C,GAcayC,4BAA4B,CAACrB,WAAW,EAAMC,OAAO,EAAMC,OAAO,IACjFwB,SAfE9C,GAeayC,4BAA4B,CAACrB,WAAW,EAAOC,OAAO,EAAOC,OAAO,IACnFyB,SAhBE/C,GAgBayC,4BAA4B,CAACrB,WAAW,EAAMC,OAAO,EAAOC,OAAO,KA6IvE5B,UCvPTsD,8MAkCJnK,MAAQ,CACN3P,eAAgBpN,EAAK0E,YAAYyiB,sBAGnCvQ,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGTuQ,QAAU,WACRpnB,EAAKukB,SAAS,SAAAxH,GAAK,MAAK,CACtB3P,eAAgB2P,EAAM3P,iBAAmBpN,EAAK0E,YAAYyiB,mBACtDnnB,EAAK0E,YAAY2iB,2BACjBrnB,EAAK0E,YAAYyiB,yBAGzBG,kBAAoBtnB,EAAK4I,MAAMnG,SAASwC,MAAMI,WAAaP,YAAY9E,EAAKonB,QAAS,KAAQ,uFAE1E9J,EAAWC,EAAWC,GACnCvd,KAAK2I,MAAMnG,SAASwC,MAAMI,aAAeiY,EAAU7a,SAASwC,MAAMI,aAChEpF,KAAK2I,MAAMnG,SAASwC,MAAMI,WACvBpF,KAAKqnB,oBACRrnB,KAAKqnB,kBAAoBxiB,YAAY7E,KAAKmnB,QAAS,MAGjDnnB,KAAKqnB,oBACP7mB,cAAcR,KAAKqnB,mBACnBrnB,KAAKqnB,kBAAoB,sDAO3BrnB,KAAKqnB,oBACP7mB,cAAcR,KAAKqnB,mBACnBrnB,KAAKqnB,kBAAoB,uCAIpB,IAAAve,EAC2B9I,KAAK2I,MAAhCkO,EADA/N,EACA+N,MAAOC,EADPhO,EACOgO,OAAQtU,EADfsG,EACetG,SACf2K,EAAkBnN,KAAK8c,MAAvB3P,eAEP,OACE/C,EAAAC,EAAArJ,cAAC+iB,GAAD,CACElN,MAAOA,EACPC,OAAQA,EACR6G,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,UACnC7D,eAAgBA,EAChBuJ,UAAU,EACVC,gBAAiB3W,KAAK2W,gBACtBC,eAAgB5W,KAAK4W,eACrBvR,OAAQ7C,EAASwC,MAAMK,OAASrF,KAAKyE,YAAYY,YAASyE,EAC1DtH,SAAUA,EACV0V,SAAU1V,EAASwC,MAAMI,WACzBub,WAAYne,EAASwC,MAAMK,gBA7FNqG,aAAvBub,GACGC,mBAAqB,CAC1B,CACE7Z,EAAG,EACHrB,MAAO,CACL,CAACuB,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAK6B,SAAU8F,OAAQ3H,EAAK4H,aAActC,MAAO,GACtE,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAKiF,SAAU0C,OAAQ3H,EAAK4H,aAActC,MAAO,MAXxE4V,GAeGG,2BAA6B,CAClC,CACE/Z,EAAG,EACHrB,MAAO,CACL,CAACuB,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAK6B,SAAU8F,OAAQ3H,EAAK4H,aAActC,MAAO,GACtE,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQ,KAAMsC,OAAQ,KAAMrC,MAAO,GAChD,CAAC9D,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAKiF,SAAU0C,OAAQ3H,EAAK4H,aAActC,MAAO,MAzBxE4V,GA6BG5hB,OAAS,CACd,CAACmG,KAAM,CAAC+B,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAI0M,OAAQ,QAAS7Y,KAAM,SAC9D,CAACsK,KAAM,CAAC+B,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAI0M,OAAQ,QAAS7Y,KAAM,SA2ElE+lB,GAAetb,aAAe,CAC5BT,UAAW,GACX2L,OAAO,EACPC,QAAQ,GAGKmQ,aC9GAtD,oFCFT2D,8MAoBJ3Q,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,2EAGA,IAAA9N,EACiD9I,KAAK2I,MAAtDkO,EADA/N,EACA+N,MAAOC,EADPhO,EACOgO,OAAQ1F,EADftI,EACesI,OAAQ5O,EADvBsG,EACuBtG,SAAUmb,EADjC7U,EACiC6U,aAExC,OACEvT,EAAAC,EAAArJ,cAAC+iB,GAAD,CACElN,MAAOA,EACPC,OAAQA,EACR3J,eAAgBnN,KAAKyE,YAAY8iB,QAAQnW,GACzCsF,UAAU,EACVC,gBAAiB3W,KAAK2W,gBACtBC,eAAgB5W,KAAK4W,eACrBpU,SAAUA,EACVmb,aAAcA,WAxCUjS,aAA1B4b,GACGC,8BACJxb,EAAK6B,SAAW,CACf,CACEP,EAAG,EACHrB,MAAO,CACL,CAACuB,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAK6B,SAAU8F,OAAQ3H,EAAK4H,aAActC,MAAO,sBAI3EtF,EAAKiF,SAAW,CACf,CACE3D,EAAG,EACHrB,MAAO,CACL,CAACuB,EAAG,EAAGF,EAAG,EAAG+D,OAAQrF,EAAKiF,SAAU0C,OAAQ3H,EAAK4H,aAActC,MAAO,WAwChFiW,GAAkB3b,aAAe,CAC/BkL,OAAO,EACPC,QAAQ,GAGKwQ,mBC1CTE,8MAUJ1K,MAAQ,CACN2K,aAAc,KACdlgB,KAAMxH,EAAK4I,MAAMpB,KACjBmZ,eAAgB,QAGlBgH,gBAAkBvK,IAAMC,cAExBzN,SAAW,SAAApI,GACLxH,EAAK4I,MAAMgf,OACb5nB,EAAKukB,SAAS,CAAC/c,SAEfxH,EAAK4I,MAAMgH,SAASpI,MAIxBqc,aAAe,WACb7jB,EAAK4P,SAAS5P,EAAK+c,MAAMvV,KAAKqc,mBAGhC3L,KAAO,WACLlY,EAAK4P,SAAS5P,EAAK+c,MAAMvV,KAAK0Q,WAGhC2P,QAAU,WACR7nB,EAAK4P,SAAS5D,EAAKgD,aAGrB8Y,WAAa,SAAAtgB,GACXxH,EAAKukB,SAAS,CAACmD,aAAclgB,IAASxH,EAAK+c,MAAMvV,KAAO,KAAOA,OAGjEugB,mBAAqB,SAAAvgB,GACnBxH,EAAK8nB,WAAWtgB,MAGlBwgB,uBAAyB,WACvBhoB,EAAK8nB,WAAW9nB,EAAK+c,MAAM2K,aAAa7D,mBAG1CoE,eAAiB,WACfjoB,EAAK8nB,WAAW9nB,EAAK+c,MAAM2K,aAAaxP,WAG1CgQ,aAAe,WACbloB,EAAK8nB,WAAW,SAGlBF,OAAS,WACP,IAAM9f,EAAQ9H,EAAKmoB,mBACfrgB,EAAMhC,QACR9F,EAAK4I,MAAMgf,OAAO9f,MAoBtBsgB,cAAgB,WACdpoB,EAAK4I,MAAMgf,OAAO,aAqBpBS,sBAAwB,WACjBroB,EAAK4I,MAAMvG,KAAKI,SAASsC,gBAG5B/E,EAAK4I,MAAM0f,eAAXpoB,OAAAkK,EAAA,EAAAlK,CAAA,GAA8BF,EAAK4I,MAAMvG,KAAKI,SAA9C,CAAwDsC,iBAAiB,KAFzE/E,EAAK2nB,gBAAgBxa,QAAQob,gBAMjCC,kBAAoB,WAClBxoB,EAAK4I,MAAM0f,eAAXpoB,OAAAkK,EAAA,EAAAlK,CAAA,GAA8BF,EAAK4I,MAAMvG,KAAKI,SAA9C,CAAwDsC,iBAAiB,KACrE/E,EAAKyoB,aACPzoB,EAAK4nB,YAmBTc,uBAAyB,SAAAlf,GAAsB,IAApBmX,EAAoBnX,EAApBmX,eACzB3gB,EAAKukB,SAAS,CAAC5D,sGArEE,IACJgI,EAAa1oB,KAAK2I,MAAxBpB,KAED8E,EADoBrM,KAAK8c,MAAxBvV,KACmBiF,YACpBmc,EAAiBtc,EAAQ7F,UAC7B,SAAAe,GAAI,OAAIA,EAAK4G,yBAA2Bua,EAAUva,yBACpD,OAAIwa,EAAiB,GACnBjoB,QAAQkoB,MAAM,uCACP,IAEUvc,EAAQ5F,MAAMkiB,EAAiB,GACzB7mB,IAAI,SAAAyF,GAAI,OAAIA,EAAK4E,sDASzBkR,EAAWC,GACxBtd,KAAK2I,MAAMpB,OAAS8V,EAAU9V,SAE7BvH,KAAK2I,MAAMpB,OACR8V,EAAU9V,MACXvH,KAAK2I,MAAMpB,KAAK4G,yBAA2BkP,EAAU9V,KAAK4G,yBAG7DnO,KAAKskB,SAAS,CAACmD,aAAc,KAAMlgB,KAAMvH,KAAK2I,MAAMpB,KAAMshB,WAAW,KAGrE7oB,KAAK2I,MAAMvG,MAAQpC,KAAK2I,MAAMvG,KAAKI,SAASsC,kBACzC9E,KAAKwoB,UAAUnL,EAAWC,IAActd,KAAKwoB,aAChDxoB,KAAK2nB,6CAoBuC,IAAxChf,EAAwCsH,UAAApK,OAAA,QAAAiE,IAAAmG,UAAA,GAAAA,UAAA,GAAhCjQ,KAAK2I,MAAOmU,EAAoB7M,UAAApK,OAAA,QAAAiE,IAAAmG,UAAA,GAAAA,UAAA,GAAZjQ,KAAK8c,MAClC6K,EAAUhf,EAAVgf,OACAF,EAAsB3K,EAAtB2K,aAAclgB,EAAQuV,EAARvV,KACrB,QACIogB,IACEF,GACDlgB,IAASoB,EAAMpB,QACbvH,KAAKkoB,mBAAmBriB,SAE3B0B,EAAKC,UACFD,EAAKiG,aAAe7E,EAAMpB,KAAKiG,6CAS/B,IAAA1E,EAGH9I,KAAK2I,MADPvG,EAFK0G,EAEL1G,KAAM0mB,EAFDhgB,EAECggB,gBAAiBC,EAFlBjgB,EAEkBigB,MAAOpL,EAFzB7U,EAEyB6U,aAAcqL,EAFvClgB,EAEuCkgB,UAFvCjL,EAIsC/d,KAAK8c,MAA3C2K,EAJA1J,EAIA0J,aAAclgB,EAJdwW,EAIcxW,KAAMmZ,EAJpB3C,EAIoB2C,eACrBuI,EAAcxB,GAAgBlgB,EAC9B2hB,EAAWvL,EAAa9X,OAAS,EACjC2iB,EAAYxoB,KAAKwoB,YACjBW,IAAmBH,GAAYA,EAAUG,iBACzC3mB,EAAWJ,EAAOA,EAAKI,SAAWsmB,EACnC7K,EAAoBN,EAAa3W,SAAS+E,EAAK6B,UAEpD,OACExD,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,CAAS1Q,MAAO,CAAC2Q,UAAW,WAC1Bjf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACyoB,GAAD,CAAgBliB,KAAMA,EAAMkgB,aAAcA,EAAcI,WAAY7nB,KAAK6nB,cAE3Ezd,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAAC0oB,GAAD,CACEtY,OAAQ6M,EAAoBlS,EAAKiF,SAAWjF,EAAK6B,SACjD4a,WAAW,EACXb,OAAQ3nB,KAAK2I,MAAMgf,OAAS3nB,KAAK2nB,OAAS,KAC1CS,sBAAuBpoB,KAAKooB,sBAC5B7gB,KAAMihB,EAAYjhB,EAAK2E,SAAW3E,EAClC/E,SAAUA,EACVumB,MAAOA,EACPpL,aAAcA,KAGlBvT,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAAC2oB,GAAD,CACEpiB,KAAM0hB,EACNvI,eAAgBA,EAChB/Q,SAAU8X,EAAeznB,KAAK8nB,mBAAqB9nB,KAAK2P,SACxDmU,cAAe9jB,KAAK2I,MAAMgf,OAAS3nB,KAAK2I,MAAMpB,KAAKmF,WACjD1M,KAAK2I,MAAMpB,KAAK+E,QAAUtM,KAAK2I,MAAMpB,KAAK2E,SAASQ,WAAa1M,KAAK2I,MAAMpB,KAAKmF,WAElFiR,aAAcsL,IAAgB1hB,EAAOoW,OAAe7T,EACpDtH,SAAUA,EACV0V,SAAU1V,EAASwC,MAAMI,WACzBub,WAAYne,EAASwC,MAAMK,UAG/B+E,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAAC0oB,GAAD,CACEtY,OAAQ6M,EAAoBlS,EAAK6B,SAAW7B,EAAKiF,SACjDwX,UAAWA,EACXb,OAAQ3nB,KAAK2I,MAAMgf,OAAS3nB,KAAK2nB,OAAS,KAC1CS,sBAAuBpoB,KAAKooB,sBAC5B7gB,KAAMihB,EAAYjhB,EAAK2E,SAAW3E,EAClC/E,SAAUA,EACVumB,MAAOA,EACPpL,aAAcA,KAGlBvT,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAAC4oB,GAAD,CAAqBrF,SAAUvkB,KAAKyoB,4BAIzCzoB,KAAK2I,MAAMgf,QAAUuB,EACpB9e,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAUC,MAAX,CAAiBC,OAAQ,MAAOhF,KAAM,QACpC3a,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MACTtF,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACEC,QAAS7f,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAAClF,WAAYwC,GAAgBznB,KAAK2I,MAAMpB,KAAKC,UAAW2hB,EAAmB,QAAU,UAC9GiB,OAAQjB,EAAmB,SAAW,UACtCjf,QAAO,4BAAAxD,OAA8ByiB,EAAmB,QAAU,UAA3D,KAAAziB,OAAwEyiB,EAAmB,qCAAuC,IACzIkB,QAAS,CAAC,CAAC5f,IAAK,SAAUP,QAASif,EAAmB,QAAU,SAAUgB,UAAU,EAAMpS,QAAS/X,KAAKmoB,eAAgB,CAAE1d,IAAK,WAAYP,QAAS,WAAYogB,UAAU,EAAMC,WAAW,QAG/LngB,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAK2I,MAAMgf,OAAS3nB,KAAK4jB,aAAe5jB,KAAKiY,KAAMgN,WAAYwC,IAAiBznB,KAAK2I,MAAMgf,OAASpgB,EAAKmF,YAAc1M,KAAK2I,MAAMpB,KAAKmF,YAAcnF,EAAK+E,UAApL,YAGpB,KACFtM,KAAK2I,MAAMgf,OAOT,KANFvd,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAUC,MAAX,CAAiBC,OAAQ,MAAOhF,KAAM,SACpC3a,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAK4jB,aAAcqB,WAAYwC,IAAiBlgB,EAAK2E,UAA/E,sBAClB9B,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAK4nB,QAAS3C,WAAYwC,IAAiBlgB,EAAK2E,UAA1E,gBAIxB9B,EAAAC,EAAArJ,cAACwpB,GAAD,CACEjjB,KAAMA,EACNkgB,aAAcA,EACdI,WAAY7nB,KAAK6nB,WACjBzlB,KAAMA,EACN0mB,gBAAiBA,IAElBrB,EACCrd,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,CAASC,UAAW,UAClBjf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,2BACAN,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAUC,MAAX,CAAiBC,OAAQ,QAAShF,KAAM,SACrC0C,EAAajgB,SACZ4C,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWa,MAAO,QAAShb,MAAOqZ,EAAMtB,EAAajZ,QAASmc,MAAO,SAErEvgB,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOqZ,EAAMtB,EAAaja,YAAamd,MAAO3qB,KAAKyE,YAAYmmB,gBAAgBnD,EAAaha,YAEzGrD,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAO+X,EAAahb,UAAWke,MAAO,SACjDvgB,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAKgoB,eAAgB/C,UAAWwC,EAAanb,SAAvE,WAEpBlC,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAUC,MAAX,CAAiBC,OAAQ,MAAOhF,KAAM,SACpC3a,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAK+nB,uBAAwB9C,UAAWwC,EAAavb,UAA/E,sBAClB9B,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CAAWna,MAAOtF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAKioB,cAA/B,sBAGpB,KACJ7d,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACE5L,IAAKpe,KAAK0nB,gBACV0C,OAAQ,oBACRlgB,QAAS,0DACTmgB,QAAS,CACP,CAAC5f,IAAK,MAAOP,QAAS,cAAe6N,QAAS/X,KAAKuoB,kBAAmBsC,SAAS,GAC/E,CAACpgB,IAAK,KAAMP,QAAS,4BAA6BqgB,WAAW,cA7PtD7e,aAAb8b,GACGoD,sCACJ7e,EAAK6G,6BAA+B,iCACpC7G,EAAK+G,8BAAgC,iCACrC/G,EAAKiH,gCAAkC,kCACvCjH,EAAKmH,4BAA8B,8BACnCnH,EAAKqH,6BAA+B,8BACpCrH,EAAKuH,8BAAgC,aA+Q1CkU,GAAK7b,aAAe,CAClBod,OAAK+B,GAAA,GAAA7qB,OAAA0Q,EAAA,EAAA1Q,CAAA6qB,GACF/e,EAAK6B,SAAW,YADd3N,OAAA0Q,EAAA,EAAA1Q,CAAA6qB,GAEF/e,EAAKiF,SAAW,YAFd8Z,IAILnN,aAAc,CAAC5R,EAAK6B,SAAU7B,EAAKiF,eAG/B+Z,oLAUK,IAAAjgB,EACyF9K,KAAK2I,MAA9FpB,EADAuD,EACAvD,KAAM6J,EADNtG,EACMsG,OAAQuM,EADd7S,EACc6S,aAAcoL,EAD5Bje,EAC4Bie,MAAOvmB,EADnCsI,EACmCtI,SAAUgmB,EAD7C1d,EAC6C0d,UAAWb,EADxD7c,EACwD6c,OAAQS,EADhEtd,EACgEsd,sBACjE4C,EAAqBrN,EAAa3W,SAASoK,GAC3C6Z,EAAgB1jB,EAAKiG,aAAe4D,EACpC8Z,EAAY3jB,EAAKiH,SAAW4C,EAElC,OACEhH,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CACE6gB,WAAS,EACTjgB,UAAWgM,IAAW,CAACkU,WAAY7jB,EAAKC,UAAYwjB,GAAsBC,IAAkBzC,IAC5FzD,KAAM,UACNuF,SAAU/iB,EAAKC,UAAY4J,IAAWrF,EAAKiF,SAC3C0Z,MAAOnjB,EAAKC,SAAY0jB,EAAY,QAAU,WAASphB,EACvDkb,MAAO,CACL,CAACva,IAAK,OACJG,KAAMrD,EAAKC,SAAY0jB,EAAY,SAAW,cAAkBD,EAAgB,OAAS,YACzF/gB,QACEE,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACqqB,GAAD,CAAmBvU,QAAM,EAACtU,SAAUA,EAAU4O,OAAQA,EAAQuM,aAAcA,IAC3EoL,EAAM3X,KAGb,CAAC3G,IAAK,eAAgBP,QACpB3C,EAAKC,SACA0jB,EAAY,MAAQ,OAErB1C,EAEIhmB,EAASsC,gBACL,kBAEAsF,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CACEoB,UAAQ,EACRvT,QAAS4P,EACTzc,UAAW,aAHb,UASJ+f,EACIjrB,KAAKyE,YAAYmmB,gBAAgBrjB,EAAKkG,UACtC,yBAIblG,EAAKC,UAAYmgB,GAAUhK,EAAa3W,SAASoK,GAAU,CAC1D3G,IAAK,cAAeP,QAClBE,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,oBACPa,QAAM,EACNC,QAASjpB,EAASsC,gBAClByf,SAAU6D,KAGZ,MACJrhB,OAAO,SAAA2kB,GAAI,OAAIA,aAlEAhgB,aAAnBqf,GACGH,sCACJ7e,EAAK6G,6BAA+B,iCACpC7G,EAAK+G,8BAAgC,iCACrC/G,EAAKiH,gCAAkC,kCACvCjH,EAAKmH,4BAA8B,8BACnCnH,EAAKqH,6BAA+B,8BACpCrH,EAAKuH,8BAAgC,iBA4EpCqY,8MACJ7O,MAAQ,CACN8O,WAAY,KAGdC,aAAe,SAACrnB,EAADiN,GAAqB,IAAhBma,EAAgBna,EAAhBma,WAClBtlB,EAAKge,SAAS,CAACsH,wFAGR,IAAA7Q,EACmE/a,KAAK2I,MAAxEpB,EADAwT,EACAxT,KAAMkgB,EADN1M,EACM0M,aAAcrlB,EADpB2Y,EACoB3Y,KAAM0mB,EAD1B/N,EAC0B+N,gBAAiBjB,EAD3C9M,EAC2C8M,WAAYiE,EADvD/Q,EACuD+Q,SACvDF,EAAc5rB,KAAK8c,MAAnB8O,WAEDG,EAAara,KAAKsa,MAAMzkB,EAAK8E,QAAQxG,OAAS,GAAKimB,GACnDG,EAAehsB,OAAA0G,EAAA,EAAA1G,CAAIsH,EAAK8E,SAC3B5F,MAAM,GAAKslB,EAAaH,GAAcE,EAAU,GAAKC,EAAaH,GAAcE,EAAWA,GAC3FI,UACGC,EAAkBF,EAAaA,EAAapmB,OAAS,GAE3D,OACEuE,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACyoB,GAAD,CAAgBliB,KAAMA,EAAMkgB,aAAcA,EAAcI,WAAYA,KAEtEzd,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACGyC,EAAanqB,IAAI,SAAAsqB,GAAY,OAC5BhiB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,CAAUZ,IAAK2hB,EAAa1f,YACzB0f,EAAa3f,UAAY,IAAM,EAC9BrC,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASkiB,EAAa3f,UAAY,IACvC,KACJrC,EAAAC,EAAArJ,cAAC2oB,GAAD,CACEpiB,KAAM6kB,EACNvV,OAAK,EACLE,SAAU8Q,EACV7Q,SAAUoV,IAAiB3E,EAC3BjlB,SAAUJ,EAAOA,EAAKI,SAAWsmB,OAItCqD,GAAoBA,EAAgB1f,UAAY,IAAM,EACrDrC,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASiiB,EAAgB1f,UAAY,IAC1C,MAENrC,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsrB,GAAA,EAAD,CACEP,WAAYA,EACZH,WAAYA,EACZC,aAAc7rB,KAAK6rB,aACnBU,UAAQ,EACRhC,WAAS,cAlDG7e,aAoE1BigB,GAAYhgB,aAAe,CACzBmgB,SAAU,QAGNU,8MAsCJC,gBAAkB,WACXplB,EAAKqlB,sBAGVrlB,EAAKsB,MAAMkf,WAAWxgB,EAAKsB,MAAMpB,SASnColB,aAAe,WACb,GAAKtlB,EAAKulB,kBAAV,CAGA,IAAMC,EAAoBxlB,EAAKsB,MAAMpB,KAAK8E,QAAQygB,QAAQzlB,EAAKsB,MAAM8e,cAAgBpgB,EAAKsB,MAAMpB,MAChGF,EAAKsB,MAAMkf,WAAWxgB,EAAKsB,MAAMpB,KAAK8E,QAAQwgB,EAAoB,QASpEE,iBAAmB,WACZ1lB,EAAK2lB,uBAGV3lB,EAAKsB,MAAMkf,YAAYxgB,EAAKsB,MAAM8e,cAAgBpgB,EAAKsB,MAAMpB,MAAMgF,sBASrE0gB,cAAgB,WACT5lB,EAAK6lB,oBAGV7lB,EAAKsB,MAAMkf,WAAWxgB,EAAKsB,MAAMpB,KAAK8E,QAAQ,iGA7EX,IAAV8gB,EAAU1jB,EAAV0jB,QACzB,GAAIA,EAAQC,MAAO,KAAAC,EACSF,EAAQC,MAA3BE,EADUD,EACVC,MAAOC,EADGF,EACHE,SACVD,IAAUE,KAAKC,MAAQF,EACzBvtB,KAAKysB,kBACIa,IAAUE,KAAKE,KACxB1tB,KAAKysB,kBACIa,IAAUE,KAAKC,MAASF,EAExBD,IAAUE,KAAKG,OAAUJ,EAEzBD,IAAUE,KAAKG,OAASJ,EACjCvtB,KAAKitB,gBACIK,IAAUE,KAAKE,MACxB1tB,KAAKitB,gBAJLjtB,KAAK+sB,mBAFL/sB,KAAK2sB,6DAmBU,IAAAiB,EACwB5tB,KAAK6tB,YAEhD,OAHmBD,EACZf,oBADYe,EACOE,wDAYV,IAAAC,EAC2B/tB,KAAK6tB,YAAzChB,EADSkB,EACTlB,kBAAmBiB,EADVC,EACUD,cAE1B,OAAOjB,GAAqB,GAAKA,IAAsBiB,gDAWnC,IACbjB,EAAqB7sB,KAAK6tB,YAA1BhB,kBAEP,OAAOA,GAAqB,GAA2B,IAAtBA,6CAajC,OAA6B,IAFD7sB,KAAK6tB,YAA1BhB,mDAYA,IAAAhR,EACsB7b,KAAK2I,MAA3BpB,EADAsU,EACAtU,KAAMkgB,EADN5L,EACM4L,aACNoF,EAAqB7sB,KAAK6tB,YAA1BhB,kBAEP,OACEziB,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CAAMya,KAAM,UAAWC,MAAO,CAC5B,CAACva,IAAK,UAAWG,KAAM,gBAAiBmN,QAAS/X,KAAKysB,gBAAiBxH,UAAWjlB,KAAK0sB,sBACvF,CAACjiB,IAAK,WAAYG,KAAM,WAAYmN,QAAS/X,KAAK2sB,aAAc1H,UAAWjlB,KAAK4sB,mBAChF,CAACniB,IAAK,YAAaP,QAAS2iB,GAAqB,EAArB,GAAAnmB,QAA6B+gB,GAAgBlgB,GAAMkF,UAAnD,KAAA/F,OAAgEa,EAAKkF,WAAcgb,EAAahb,UAAWwY,SAAU1d,EAAKC,UACtJ,CAACiD,IAAK,OAAQG,KAAM,UAAWmN,QAAS/X,KAAK+sB,iBAAkB9H,UAAWjlB,KAAKgtB,uBAC/E,CAACviB,IAAK,QAASG,KAAM,eAAgBmN,QAAS/X,KAAKitB,cAAehI,UAAWjlB,KAAKktB,2DAvEtE,IAAA/J,EACanjB,KAAK2I,MAA3BpB,EADS4b,EACT5b,KAAMkgB,EADGtE,EACHsE,aAIb,MAAO,CAACoF,kBAHkBtlB,EAAK8E,QAAQygB,QAAQrF,GAAgBlgB,GAGpCumB,cAFLvmB,EAAK8E,QAAQxG,OAAS,UA3BnB6F,aAAvB8gB,GACGpW,KAAO,CACZ,OAAQ,QAAS,aAAc,cAAe,OAAQ,OAyG1DoW,GAAiBW,aAAQX,GAAepW,KAAvB+W,CAA6BX,IAE/BhF,UC5jBFwG,GAAkB,SAAAC,GAC3B,IAAMC,EAAWrtB,SAASG,cAAc,YAGxCH,SAASstB,KAAKC,YAAYF,GAC1BA,EAASxe,MAAQue,EACjBC,EAASG,SACTxtB,SAASytB,YAAY,QACrBztB,SAASstB,KAAKI,YAAYL,cCLxBM,8MAWJ1R,MAAQ,CACNlb,UAAW2G,EAAO3G,UAClB6D,UAAW8C,EAAO9C,UAClBxD,aAAcsG,EAAOtG,aACrBG,KAAMmG,EAAOnG,KACbC,SAAUkG,EAAOnG,KAAOmG,EAAOnG,KAAKE,KAAO,KAC3CS,UAAWwF,EAAOxF,UAClBY,UAAW4E,EAAO5E,UAClBK,gBAAiBuE,EAAOvE,mBAuB1ByqB,kBAAoB,SAAA7sB,GAClB7B,EAAKukB,SAAS,CAAC1iB,YAAWK,aAAcsG,EAAOtG,aAAcwD,UAAW8C,EAAO9C,eAGjFtD,QAAU,SAAAC,GACRrC,EAAKukB,SAAS,CAACliB,YAGjBU,SAAW,SAAAC,GACThD,EAAKukB,SAAS,CAACvhB,iBAGjBU,SAAW,SAAAE,GACT5D,EAAKukB,SAAS,CAAC3gB,iBAGjBG,eAAiB,SAAAE,GACfjE,EAAKukB,SAAS,CAACtgB,wGApCfuE,EAAOmmB,UAAU,CACf7sB,UAAW7B,KAAKyuB,kBAChBvsB,aAAclC,KAAKyuB,kBACnB5rB,OAAQ7C,KAAKmC,QACbqB,QAASxD,KAAK8C,SACde,QAAS7D,KAAKyD,SACdS,cAAelE,KAAK8D,gEAKtByE,EAAOomB,YAAY,CACjB9rB,OAAQ7C,KAAKmC,QACbqB,QAASxD,KAAK8C,SACde,QAAS7D,KAAKyD,SACdS,cAAelE,KAAK8D,kDAwBf,IAAAia,EACmF/d,KAAK8c,MAAxFlb,EADAmc,EACAnc,UAAWK,EADX8b,EACW9b,aAAcwD,EADzBsY,EACyBtY,UAAWrD,EADpC2b,EACoC3b,KAAMW,EAD1Cgb,EAC0Chb,UAAWY,EADrDoa,EACqDpa,UAAWK,EADhE+Z,EACgE/Z,gBACjE4qB,EAAe5uB,KAAKyE,YAAYmqB,aACtC,OACExkB,EAAAC,EAAArJ,cAAC4tB,EAAD3uB,OAAAuK,OAAA,GACMxK,KAAK2I,MADX,CAEE/G,UAAWA,EACXK,aAAcA,EACdwD,UAAWA,EACX8C,OAAQA,EACRnG,KAAMA,EACNW,UAAWA,EACXY,UAAWA,EACXK,gBAAiBA,4CAxEH0H,GAAW,IACvBmjB,EADuB,SAAAvoB,GAAA,SAAAuoB,IAAA,OAAA5uB,OAAAC,EAAA,EAAAD,CAAAD,KAAA6uB,GAAA5uB,OAAAqa,EAAA,EAAAra,CAAAD,KAAAC,OAAAsa,EAAA,EAAAta,CAAA4uB,GAAArU,MAAAxa,KAAAiQ,YAAA,OAAAhQ,OAAAwa,EAAA,EAAAxa,CAAA4uB,EAAAvoB,GAAAuoB,EAAA,CACW7uB,MAIxC,OAJM6uB,EACGD,aAAeljB,EAGjBmjB,SARiBnjB,aAAtB8iB,GACGI,aAAe,KAgFjB,IAAME,GAAa,SAAApjB,GACxB,OAAO8iB,GAAcO,aAAarjB,IC9E9BsjB,8MACJC,mBAAqB,CACnB,CAACvf,MAAO,GAAIib,MAAO,WACnB,CAACjb,MAAO,SAAUib,MAAO,UACzB,CAACjb,MAAO,SAAUib,MAAO,UACzB,CAACjb,MAAO,QAASib,MAAO,YAE1BuE,mBAAqB,CACnB,CAACxf,MAAO,OAAQib,MAAO,QACvB,CAACjb,MAAO,OAAQib,MAAO,QACvB,CAACjb,MAAO,SAAUib,MAAO,UACzB,CAACjb,MAAO,cAAeib,MAAO,QAC9B,CAACjb,MAAO,MAAOib,MAAO,OACtB,CAACjb,MAAO,SAAUib,MAAO,UACzB,CAACjb,MAAO,MAAOib,MAAO,OACtB,CAACjb,MAAO,MAAOib,MAAO,OACtB,CAACjb,MAAO,OAAQib,MAAO,WAEzBwE,oBAAsB,CACpB,CAACzf,MAAO,GAAIib,MAAO,QACnB,CAACjb,MAAO,UAAWib,MAAO,WAC1B,CAACjb,MAAO,SAAUib,MAAO,UACzB,CAACjb,MAAO,cAAeib,MAAO,kBAGhCyE,eAAiB,SAAAC,GAAa,IACVrqB,EAAUjF,EAAK4I,MAA1BnG,SAAWwC,MAClB,OACEoF,EAAAC,EAAArJ,cAACsuB,GAAD,CAAgBxY,QAAM,EAACtU,SAAU,CAACwC,MAAM/E,OAAAkK,EAAA,EAAAlK,CAAA,GAAK+E,EAAN,CAAaI,YAAY,GAAUiqB,SAI9EE,qBAAuB,SAAC/qB,EAAD+E,GAAkB,IAAbkiB,EAAaliB,EAAbkiB,QAC1B1rB,EAAK4I,MAAM6mB,eAAe,CAAC1qB,gBAAiB2mB,OAG9CgE,0BAA4B,SAACjrB,EAADiN,GAAkB,IAAbga,EAAaha,EAAbga,QAC/B1rB,EAAK4I,MAAM6mB,eAAe,CAACzqB,oBAAqB0mB,OAGlDiE,0BAA4B,SAAClrB,EAADiF,GAAkB,IAAbgiB,EAAahiB,EAAbgiB,QAC/B1rB,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACG,eAAgBsmB,QAGrDkE,iBAAmB,SAACnrB,EAADkF,GAAkB,IAAb+hB,EAAa/hB,EAAb+hB,QACtB1rB,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACI,WAAYqmB,QAGjDmE,aAAe,SAACprB,EAADqP,GAAkB,IAAb4X,EAAa5X,EAAb4X,QAClB1rB,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACK,OAAQomB,QAG7CoE,mBAAqB,SAACrrB,EAADyP,GAAgB,IAAXvE,EAAWuE,EAAXvE,MACxB3P,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACM,QAASoK,QAG9CogB,kBAAoB,SAACtrB,EAAD8P,GAAgB,IAAX5E,EAAW4E,EAAX5E,MACvB3P,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACE,OAAQwK,QAG7CqgB,kBAAoB,SAACvrB,EAADgQ,GAAgB,IAAX9E,EAAW8E,EAAX9E,MACvB3P,EAAK4I,MAAM6mB,eAAe,CAACxqB,MAAO,CAACC,OAAQyK,8EAGpC,IAAApJ,EAAAtG,KAAAgwB,EAC2DhwB,KAAK2I,MAAhEnG,SAAWsC,EADXkrB,EACWlrB,gBAAiBC,EAD5BirB,EAC4BjrB,oBAAqBC,EADjDgrB,EACiDhrB,MADjDirB,EAEwEjrB,EAAxEC,cAFA,IAAAgrB,EAES,OAFTA,EAEiB/qB,EAAuDF,EAAvDE,OAAQC,EAA+CH,EAA/CG,eAAgBC,EAA+BJ,EAA/BI,WAAYC,EAAmBL,EAAnBK,OAAQC,EAAWN,EAAXM,QAEpE,OACE8E,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,EAAM2D,UAAU,GAAQnnB,MAAO,CACnD,CAACkB,SAAU,UAAWkmB,OAAQ,kBAC5B/lB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACovB,GAAA,EAAD,KACEhmB,EAAAC,EAAArJ,cAACovB,GAAA,EAAKtG,MAAN,KACE1f,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,2BACProB,KAAM,kBACNmpB,QAAS3mB,EACTyf,SAAUje,EAAKipB,wBAGnBnlB,EAAAC,EAAArJ,cAACovB,GAAA,EAAKtG,MAAN,KACE1f,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,uBACProB,KAAM,sBACNmpB,QAAS1mB,EACTwf,SAAUje,EAAKmpB,iCAMzB,CAACxlB,SAAU,QAASkmB,OAAQ,kBAC1B/lB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM6B,WAAS,EAACkF,QAAS,QAASC,cAAe,UAC/ClmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAalH,UAAW,UACrB/iB,EAAK8oB,eAAe,CAAChqB,WAAYJ,EAAMI,eAG5CgF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,EAAM2D,UAAU,GAAQnnB,MAAO,CACnD,CAACkB,SAAU,SAAUkmB,OAAQ,kBAC3B/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KACApmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM6B,WAAS,EAACkF,QAAS,QAASC,cAAe,UAC/ClmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,kBACProB,KAAM,uBACNmpB,QAAStmB,EACTof,SAAUje,EAAKopB,6BAGnBtlB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAACjqB,gBAAgB,MAG1CiF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,YACProB,KAAM,mBACNmpB,QAASrmB,EACTmf,SAAUje,EAAKqpB,oBAGnBvlB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAAChqB,YAAY,MAGtCgF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,SACProB,KAAM,eACNmpB,QAASpmB,EACTkf,SAAUje,EAAKspB,gBAGnBxlB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAAC/pB,QAAQ,MAGlC+E,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAalH,UAAW,UACtBjf,EAAAC,EAAArJ,cAACovB,GAAA,EAAKM,MAAN,KAAYtmB,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,cAGfpE,EAAK4oB,mBAAmBptB,IAAI,SAAA6uB,GAAM,OACjCvmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,CAAU/e,IAAG,gBAAA/D,OAAkBiqB,EAAOjhB,QACpCtF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEqF,OAAK,EACLjG,MAAOgG,EAAOhG,MACdroB,KAAM,eACNoN,MAAOihB,EAAOjhB,MACd+b,QAASxmB,IAAW0rB,EAAOjhB,MAC3B6U,SAAUje,EAAKypB,qBAGnB3lB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAACnqB,OAAQ0rB,EAAOjhB,gBAO/C,CAACzF,SAAU,QAASkmB,OAAQ,kBAC1B/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KACEpmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM6B,WAAS,EAACkF,QAAS,QAASC,cAAe,UAC9ChqB,EAAK2oB,mBAAmBntB,IAAI,SAAA6uB,GAAM,OACjCvmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,CAAU/e,IAAG,gBAAA/D,OAAkBiqB,EAAOjhB,QACpCtF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEqF,OAAK,EACLjG,MAAOgG,EAAOhG,MACdroB,KAAM,eACNoN,MAAOihB,EAAOjhB,MACd+b,QAASvmB,IAAWyrB,EAAOjhB,MAC3B6U,SAAUje,EAAKwpB,qBAGnB1lB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAAClqB,OAAQyrB,EAAOjhB,gBAOjD,CAACzF,SAAU,mBAAoBkmB,OAAQ,kBACrC/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KACEpmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM6B,WAAS,EAACkF,QAAS,QAASC,cAAe,UAC9ChqB,EAAK6oB,oBAAoBrtB,IAAI,SAAA6uB,GAAM,OAClCvmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,CAAU/e,IAAG,iBAAA/D,OAAmBiqB,EAAOjhB,QACrCtF,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAa5T,MAAO,GAClBvS,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEqF,OAAK,EACLjG,MAAOgG,EAAOhG,MACdroB,KAAM,gBACNoN,MAAOihB,EAAOjhB,MACd+b,QAASnmB,IAAYqrB,EAAOjhB,MAC5B6U,SAAUje,EAAKupB,sBAGnBzlB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAaE,QAAS,QAASpH,UAAW,SACvC/iB,EAAK8oB,eAAe,CAAC9pB,QAASqrB,EAAOjhB,kCAhNtChE,aA+RfojB,iNAxDbhS,MAAQ,CACN1a,KAAM,KACNI,SAAU1C,EAAO4E,wBAcnB8qB,eAAiB,SAAAqB,GACfxpB,EAAKid,SAAS,SAAAxH,GAAK,MAAK,CACtBta,SAASvC,OAAAkK,EAAA,EAAAlK,CAAA,GACJ6c,EAAMta,SACNquB,EAFG,CAGN7rB,MAAM/E,OAAAkK,EAAA,EAAAlK,CAAA,GACD6c,EAAMta,SAASwC,MACf6rB,EAAO7rB,eAMlB8rB,KAAO,WACLzpB,EAAKsB,MAAMJ,OAAOinB,eAAenoB,EAAKyV,MAAMta,mFAGrC,IACAA,EAAYxC,KAAK8c,MAAjBta,SAEP,OACE4H,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACEC,QAAS7f,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3hB,GAAI,IAAKE,KAAM,MAAOV,QAAS,aAC/C6a,KAAM,QACNqF,OAAQ,WACRC,QAAS,CACP,CAAC5f,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,OAAQP,QAAS,OAAQohB,UAAU,EAAMvT,QAAS/X,KAAK8wB,OAE/D5mB,QAAS,CAAC6mB,WAAW,EAAM7mB,QAASE,EAAAC,EAAArJ,cAACgwB,GAAD,CAAiBxuB,SAAUA,EAAUgtB,eAAgBxvB,KAAKwvB,uEAxCpE7mB,EAAOmU,GACrC,OAAInU,EAAMvG,MAAQuG,EAAMvG,OAAS0a,EAAM1a,KAC9B,CACLA,KAAMuG,EAAMvG,KACZI,SAAUmG,EAAMvG,KAAKI,UAAY1C,EAAO4E,sBAIrC,UAdYgH,cC3IRojB,iNAxFbhS,mBACE8L,OAAO,GACJ7oB,EAAK0E,YAAYwsB,oCA0BtBC,wBAA0B,WACxBnxB,EAAKukB,SAAS,CAACsE,MAAO,UAGxBjZ,SAAW,SAAAiY,GACT7nB,EAAKukB,SAAS,CAAC/c,KAAMqgB,OAGvBuJ,MAAQ,WACN,IAAMvoB,EAAM7I,EAAK4I,MAAMlH,SAASsI,SAChC,GAAIqnB,UAAUD,MAAO,CACnB,IAAM5pB,EAAOxH,EAAK+c,MAAMvV,KACxB6pB,UAAUD,MAAM,CACdE,MAAK,6BAAA3qB,OAA+Ba,EAAKkF,UAApC,UACLwhB,KAAI,uCAAAvnB,OAAyCa,EAAKkF,UAA9C,UACJ7D,QACC0oB,MAAM,WACPC,GAAsB3oB,GACtB4oB,MAAM,mCAGRD,GAAsB3oB,GACtB4oB,MAAM,qGAID,IAAAzT,EACe/d,KAAK8c,MAApBvV,EADAwW,EACAxW,KAAMqhB,EADN7K,EACM6K,MADN9f,EAEgB9I,KAAK2I,MAArBvG,EAFA0G,EAEA1G,KAAMmG,EAFNO,EAEMP,OAEb,OACE6B,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACywB,GAAD,MACArnB,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACE0H,KAAM9I,EACN7D,KAAM,OACN4M,QAAS3xB,KAAKkxB,wBACd9G,OAAQ,iCACRlgB,QAAO,GAAAxD,OAAKkiB,EAAL,+CACPyB,QAAS,CAAC,CAACngB,QAAS,KAAMohB,UAAU,MAEtClhB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CAAMggB,UAAQ,EAACvF,KAAM,UAAWC,MAAO,CACrC,CAACva,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBwgB,MAAO,QAASkH,QAAQ,EAAMlnB,GAAI,IACzFmnB,KAAI,aAAAnrB,OAAea,EAAK4G,wBACxBkjB,MAAOD,UAAUD,MAAQ,iCAAmC,kCAIpE/mB,EAAAC,EAAArJ,cAAC8wB,GAAD,CAAM1vB,KAAMA,EAAM0mB,gBAAiBvgB,EAAO/F,SAAU+E,KAAMA,EAAMoI,SAAU3P,KAAK2P,uEAxEnF,IACMqT,EADS,IAAI+O,gBAAgB1xB,OAAOoB,SAASuwB,QAC3BC,IAAI,YAC5B,GAAIjP,EAAU,CACZ,IAAIzb,EAAMqhB,EACV,KACErhB,EAAOwE,EAAKmmB,uBAAuBlP,MAEjC4F,EAAQ,8BAEV,MAAOpkB,GACP+C,EAAO,KACPqhB,EAAQ,sCAEV,OAAIA,EACK,CAACrhB,KAAMwE,EAAKgD,SAAU6Z,SAExB,CAACrhB,OAAMqhB,OAAO,GAErB,MAAO,CAACrhB,KAAMwE,EAAKgD,SAAU6Z,OAAO,UAzBpBld,gECHhBymB,8MACJ/T,IAAMjB,IAAMC,+FAGVpd,KAAKoyB,kDAIDpyB,KAAKoe,IAAIlR,SACXmlB,KAAUxB,OAAO7wB,KAAKoe,IAAIlR,oDAIXmQ,GACbA,EAAUiV,OAAStyB,KAAK2I,OAC1B3I,KAAKoyB,8CAIA,IAAAG,EAAAzpB,EACkC9I,KAAK2I,MAAvC2pB,EADAxpB,EACAwpB,KAAM7B,EADN3nB,EACM2nB,QAAS1L,EADfjc,EACeic,KAAMyN,EADrB1pB,EACqB0pB,UAC5B,OACEpoB,EAAAC,EAAArJ,cAAA,OACEod,IAAKpe,KAAKoe,IACVlT,UAAWgM,IAAW,CAAC,KAAM,OAAQ,QAAS,UAAW,UAApCqb,EAAA,CAA+C9B,UAAWA,GAA1DxwB,OAAA0Q,EAAA,EAAA1Q,CAAAsyB,EAAoE9B,IAAYA,GAAhFxwB,OAAA0Q,EAAA,EAAA1Q,CAAAsyB,EAA0FxN,IAASA,GAAnG9kB,OAAA0Q,EAAA,EAAA1Q,CAAAsyB,EAAyG,aAAcC,GAAvHD,IACrBE,uBAAsBH,WAzBL5mB,aAsCzBymB,GAAWxmB,aAAe,CACxB6mB,WAAW,GAGEL,+BCtCFO,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA7yB,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA0yB,GAAA,QAAAG,EAAA5iB,UAAApK,OAAAitB,EAAA,IAAA7c,MAAA4c,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA9iB,UAAA8iB,GAAA,OAAAhzB,EAAAE,OAAAqa,EAAA,EAAAra,CAAAD,MAAA4yB,EAAA3yB,OAAAsa,EAAA,EAAAta,CAAAyyB,IAAAM,KAAAxY,MAAAoY,EAAA,CAAA5yB,MAAA0G,OAAAosB,MACEG,eAAiB,WACflzB,EAAK4I,MAAMsqB,eAAelzB,EAAK4I,MAAMpB,OAFzCxH,EAAA,OAAAE,OAAAwa,EAAA,EAAAxa,CAAAyyB,EAAAC,GAAA1yB,OAAAya,EAAA,EAAAza,CAAAyyB,EAAA,EAAAjoB,IAAA,SAAAiF,MAAA,WAKW,IAAA5G,EACsE9I,KAAK2I,MAA3EvG,EADA0G,EACA1G,KAAM8wB,EADNpqB,EACMoqB,UAAWC,EADjBrqB,EACiBqqB,gBAAiB5rB,EADlCuB,EACkCvB,KAAM6rB,EADxCtqB,EACwCsqB,MAAO9rB,EAD/CwB,EAC+CxB,KAAM+rB,EADrDvqB,EACqDuqB,cAEtDtrB,EAAaorB,EAAgB5rB,EAAK+rB,cAElCC,EAAWxnB,EAAKgJ,YAAYxN,EAAKA,MACjCisB,EAAUN,EAAU3rB,EAAKG,QAAQ,IACjC+rB,EAAUP,EAAU3rB,EAAKG,QAAQ,IACjCgsB,EAAiBH,EAAS/lB,aAAezB,EAAK6B,SAAW4lB,EAAUC,EACnEE,EAAgBD,IAAmBF,EACnCI,EAAgBF,IAAmBD,EACnCI,IAAgBzxB,GAAOoxB,EAAQvyB,KAAOmB,EAAKnB,GAC3C6yB,IAAgB1xB,GAAOqxB,EAAQxyB,KAAOmB,EAAKnB,GAC3C8yB,EAAaxsB,EAAKC,SAAYD,EAAKiH,SAAWzC,EAAK6B,SAAW4lB,EAAUC,EAAW,KACnFvK,EAAW2K,GAAiBC,EAC5BE,EAAYH,GAAiBF,GAAmBG,GAAiBF,EACjEK,GAAeb,IAAUlK,GAAY4K,EACrCI,GAAed,IAAUlK,GAAY2K,EAE3C,OACEzpB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAD,CACEpc,QAAS/X,KAAKizB,eACdva,MAAKzY,OAAAkK,EAAA,EAAAlK,CAAA,GACEmzB,EAAa,CAACzW,MAAO,QAAb,GACTpV,EAAKtG,KAAOoyB,EAAgB,CAACe,gBAAiB,cAAgB,IAEpElpB,UAAWgM,IAAW,CAACkU,UAAW9jB,GAAQ0sB,KAE1C5pB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKE,QAAN,KACIjB,EAOE,KANFhpB,EAAAC,EAAArJ,cAAC2oB,GAAD,CACEze,UAAW,8BACX3D,KAAMgsB,EACN1c,OAAK,EACLrU,SAAUJ,EAAOA,EAAKI,cAAWsH,IAGrCM,EAAAC,EAAArJ,cAACmzB,GAAA,EAAK1J,OAAN,KACKwJ,GAAeC,EAAwB,KAAT,OAChCD,EACC7pB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3B,MAAOqJ,IAAeP,GAAWQ,EAAW,aAAUlqB,GAC1DiqB,IAAeP,EAAUppB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,WAAc,KACnDqxB,EAAgBvpB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,gBAAmB,KAC/CkxB,EAAQlxB,KACT8H,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,QAAS1L,KAAM,OAAQyN,WAAS,EAACF,KAAMkB,EAAQvyB,MAEpE,KACHgzB,GAAeC,EAAc,OAAS,KACtCA,EACC9pB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3B,MAAOqJ,IAAeN,GAAWO,EAAW,aAAUlqB,GAC1DiqB,IAAeN,EAAUrpB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,WAAc,KACnDsxB,EAAgBxpB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,cAAeooB,MAAO,UAAa,KAC/D+I,EAAQnxB,KACT8H,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,QAAS1L,KAAM,OAAQyN,WAAS,EAACF,KAAMmB,EAAQxyB,MAEpE,MAEJmyB,EAYE,KAXFhpB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKK,KAAN,KACGtL,EAAW9e,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,CAACtI,KAAM,OAAQooB,MAAO,SAAUxgB,QAAS,YAAgB,KACjF,IACC3C,EAAKC,SAAgF,KAArE4C,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,CAACtI,KAAM,SAAUooB,MAAO,SAAUxgB,QAAS,SACzE,IACDE,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAAO,QAAAxD,OAAUa,EAAKkI,MAAQ7E,KAAM,SAC1C,IACDR,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASuqB,KAAOltB,EAAKmtB,aAAentB,EAAKotB,eAAenpB,OAAQZ,KAAM,aAC5E,IACA7C,EAAaqC,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASnC,EAAWzF,KAAMsI,KAAM,YAAgB,YAxEnF8nB,EAAA,CAA8BhnB,aA4F9BgnB,GAAS/mB,aAAe,CACtBynB,OAAO,EACP9rB,MAAM,OAGFstB,8MACJ9X,MAAQ,CACN8O,WAAY,KAGdC,aAAe,SAACrnB,EAAD+E,GAAqB,IAAhBqiB,EAAgBriB,EAAhBqiB,WAClBtlB,EAAKge,SAAS,CAACsH,wFAGR,IAAA9gB,EACiG9K,KAAK2I,MAAtGvG,EADA0I,EACA1I,KAAM8wB,EADNpoB,EACMooB,UAAWC,EADjBroB,EACiBqoB,gBAAiBzvB,EADlCoH,EACkCpH,MAAO0vB,EADzCtoB,EACyCsoB,MAAO9rB,EADhDwD,EACgDxD,KAAM2rB,EADtDnoB,EACsDmoB,eAAgBI,EADtEvoB,EACsEuoB,cAAevH,EADrFhhB,EACqFghB,SAC5F,IAAK7rB,OAAO6M,OAAOomB,GAAWrtB,OAC5B,OAAO,KAHF,IAKF+lB,EAAc5rB,KAAK8c,MAAnB8O,WAECG,EAAara,KAAKsa,KAAKtoB,EAAMmC,OAASimB,GACxCF,EAAaG,IACfH,EAAaG,GAEf,IAAME,EAAevoB,EAClB+C,OAAOslB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFI,UAEH,OACE9hB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKrK,MAAN,CAAYpR,MAAO,CAACmc,UAAW,QAASC,UAAW,OAAQC,SAAW3B,EAAoB,aAAZtpB,IAC3EmiB,EAAanqB,IAAI,SAAAyF,GAAI,OACpB6C,EAAAC,EAAArJ,cAACg0B,GAAD,CACEvqB,IAAKlD,EAAKtG,GACVmB,KAAMA,EACN8wB,UAAWA,EACXC,gBAAiBA,EACjB5rB,KAAMA,EACN0rB,eAAgBA,EAChBG,MAAOA,EACP9rB,KAAMA,EACN+rB,cAAeA,OAIpBtH,EAAa,EACZ3hB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsrB,GAAA,EAAD,CACEP,WAAYA,EACZH,WAAYA,EACZC,aAAc7rB,KAAK6rB,aACnBU,UAAQ,EACRhC,WAAS,MAIb,aArDW7e,aAuEvBkpB,GAASjpB,aAAe,CACtBynB,OAAO,EACP9rB,MAAM,EACNwkB,SAAU,IAGG8I,UCnLTK,8MACJC,qBAAuB,WACrBn1B,EAAK4I,MAAMusB,qBAAqBn1B,EAAK4I,MAAMZ,qFAGpC,IAAAe,EAC2D9I,KAAK2I,MAAhEvG,EADA0G,EACA1G,KAAM8wB,EADNpqB,EACMoqB,UAAWiC,EADjBrsB,EACiBqsB,oBAAqBptB,EADtCe,EACsCf,WAAYqrB,EADlDtqB,EACkDsqB,MAEnDgC,IAAiBhzB,GAAO2F,EAAWL,QAAQV,SAAS5E,EAAKnB,IACzDo0B,IAAiBjzB,GAAO2F,EAAWutB,gBAAkBlzB,EAAKnB,GAC1Ds0B,IAAaxtB,EAAWP,UAAWO,EAAWytB,eAAiBpzB,EAAKnB,GACpEw0B,EAAUvC,EAAUnrB,EAAWutB,eAE/BI,EACJtrB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CACEniB,QAASnC,EAAWG,QAAWH,EAAWP,SAAW,WAAtB,SAAAd,OAA4CqB,EAAW4tB,MAAvD,KAAAjvB,OAAgEqB,EAAW6tB,QAAY,UACtHhrB,KAAM,CACJtI,KAAMyF,EAAWG,QAAWH,EAAWP,SAAW,SAAW,OAAU,YACvEuS,OAAQhS,EAAWG,QAAU,aAAU4B,KAK7C,OACEM,EAAAC,EAAArJ,cAACmzB,GAAA,EAAD,CACEpc,QAAS/X,KAAKk1B,qBACdxc,MAAKzY,OAAAkK,EAAA,EAAAlK,CAAA,GACEmzB,EAAa,CAACzW,MAAO,QAAb,GACT5U,EAAW9G,KAAOk0B,EAAsB,CAACf,gBAAiB,cAAgB,KAGhFhqB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKE,QAAN,KACEjqB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAK1J,OAAN,KACErgB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASnC,EAAWzF,OAD7B,MAEE8H,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3B,MAAO2K,EAAiB,aAAUvrB,EAAWI,QAASurB,EAAQnzB,OACpE8wB,EAAQsC,EAAc,MAEvBtC,EAkBE,KAjBFhpB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKK,KAAN,KACGY,EAAiBhrB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,CAACtI,KAAM,OAAQooB,MAAO,SAAUxgB,QAAS,kBAAsB,KAC7F,IACAqrB,EAAanrB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,CAACtI,KAAM,SAAUooB,MAAO,UAAWxgB,QAAS,QACrEnC,EAAWP,SACT4C,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,SAAUV,QAASgpB,EAAUnrB,EAAWytB,cAAgBtC,EAAUnrB,EAAWytB,cAAclzB,KAAOyF,EAAWytB,eACxH,KAEL,IACAztB,EAAWG,UAAYH,EAAWP,SAAW4C,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,CAACtI,KAAM,SAAUooB,MAAO,SAAUxgB,QAAS,SAAa,KAClH,IACAwrB,EACA,IACDtrB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAAO,GAAAxD,OAAKqB,EAAWL,QAAQ7B,OAAxB,YAA0C+E,KAAM,UAC7D,IACDR,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOniB,QAASuqB,KAAO1sB,EAAW2sB,aAAe3sB,EAAW4sB,eAAiB5sB,EAAW8tB,aAAarqB,OAAQZ,KAAM,uBArDpGc,aAuE7BupB,GAAetpB,aAAe,CAC5BynB,OAAO,OAGH0C,8MACJhZ,MAAQ,CACN8O,WAAY,KAGdC,aAAe,SAACrnB,EAAD+E,GAAqB,IAAhBqiB,EAAgBriB,EAAhBqiB,WAClBtlB,EAAKge,SAAS,CAACsH,wFAGR,IAAA9gB,EAC4F9K,KAAK2I,MAAjGvG,EADA0I,EACA1I,KAAM8wB,EADNpoB,EACMooB,UAAWnvB,EADjB+G,EACiB/G,YAAaqvB,EAD9BtoB,EAC8BsoB,MAAO8B,EADrCpqB,EACqCoqB,qBAAsBC,EAD3DrqB,EAC2DqqB,oBAAqBrJ,EADhFhhB,EACgFghB,SACvF,IAAK7rB,OAAO6M,OAAOomB,GAAWrtB,OAC5B,OAAO,KAHF,IAKF+lB,EAAc5rB,KAAK8c,MAAnB8O,WAECG,EAAara,KAAKsa,KAAKjoB,EAAY8B,OAASimB,GAC9CF,EAAaG,IACfH,EAAaG,GAEf,IAAMgK,EAAqBhyB,EACxB0C,OAAOslB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFI,UAEH,OACE9hB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKrK,MAAN,CAAYpR,MAAO,CAACmc,UAAW,QAASC,UAAW,OAAQC,SAAW3B,EAAoB,aAAZtpB,IAC3EisB,EAAmBj0B,IAAI,SAAAiG,GAAU,OAChCqC,EAAAC,EAAArJ,cAACg1B,GAAD,CACEvrB,IAAK1C,EAAW9G,GAChBmB,KAAMA,EACN8wB,UAAWA,EACXnrB,WAAYA,EACZotB,oBAAqBA,EACrBD,qBAAsBA,EACtB9B,MAAOA,OAIZrH,EAAa,EACZ3hB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsrB,GAAA,EAAD,CACEP,WAAYA,EACZH,WAAYA,EACZC,aAAc7rB,KAAK6rB,aACnBU,UAAQ,EACRhC,WAAS,MAIb,aAnDiB7e,aAmE7BoqB,GAAenqB,aAAe,CAC5BynB,OAAO,EACPtH,SAAU,IAGGgK,UC/EAhH,iNAlEbhS,MAAQ,CACNxa,KAAM,GACN2zB,UAAW,OAGbC,iBAAmB,WAAM,IAChB3tB,EAAUxI,EAAK4I,MAAfJ,OADgBwV,EAEGhe,EAAK+c,MAAxBxa,EAFgByb,EAEhBzb,KAAM2zB,EAFUlY,EAEVkY,UACb1tB,EAAO2tB,iBAAiB,CAAC5zB,OAAM2zB,UAAWE,SAASF,EAAW,SAGhEtE,QAAU,WACR5xB,EAAKukB,SAAS,CAAChiB,KAAM,GAAI2zB,UAAW,OAGtCG,SAAW,SAAC5xB,EAAD+E,GAAsB,IAAjBjH,EAAiBiH,EAAjBjH,KAAMoN,EAAWnG,EAAXmG,MACpB3P,EAAKukB,SAALrkB,OAAA0Q,EAAA,EAAA1Q,CAAA,GAAgBqC,EAAOoN,6EAIvB,OACEtF,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACEjF,KAAM,OACNkF,QAAS7f,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQQ,MAAO,SAAU9f,KAAM,UAAWV,QAAS,sBAC5DkgB,OAAQ,oBACRlgB,QACEE,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACovB,GAAA,EAAD,KACEhmB,EAAAC,EAAArJ,cAACovB,GAAA,EAAKM,MAAN,CACEpuB,KAAM,OACN+zB,QAASC,KACT3L,MAAO,OACP4L,YAAa,kBACbhS,SAAUvkB,KAAKo2B,SACfI,UAAQ,EACRC,aAAcz2B,KAAK8c,MAAMxa,OAE3B8H,EAAAC,EAAArJ,cAACovB,GAAA,EAAKM,MAAN,CACEpuB,KAAM,YACN+zB,QAASC,KACT3L,MAAK,GAAAjkB,OAAK1G,KAAK8c,MAAMmZ,UAAhB,yCACLM,YAAa,0CACbhS,SAAUvkB,KAAKo2B,SACfl1B,KAAM,QACNw1B,IAAK,EACL5V,IAAK,EACL2V,aAAcz2B,KAAK8c,MAAMmZ,UACzBO,UAAQ,MAKhBnM,QAAS,CACP,CAAC5f,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,SAAU6gB,UAAU,EAAMphB,QAAS,oBAAqB6N,QAAS/X,KAAKk2B,iBAAkBjR,UAAWjlB,KAAK8c,MAAMxa,OAEtHqvB,QAAS3xB,KAAK2xB,iBAzDSjmB,cCwDhBirB,oLAvDJ,IAAA7tB,EACsE9I,KAAK2I,MAA3EvG,EADA0G,EACA1G,KAAM8wB,EADNpqB,EACMoqB,UAAW0D,EADjB9tB,EACiB8tB,sBAAuB1B,EADxCpsB,EACwCosB,qBAAsBttB,EAD9DkB,EAC8DlB,KACrE,OACEwC,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MACT9C,EAAO,KAAO,MADjB,IACyB,CACrBgvB,EAAsBtvB,KAAKzB,OAA3B,SAAAa,OAA6CkwB,EAAsBtvB,KAAKzB,OAAxE,KAAoF,KACtF+wB,EAAsB3uB,OAAOpC,OAA7B,aAAAa,OAAmDkwB,EAAsB3uB,OAAOpC,OAAhF,KAA4F,MAC1FkB,OAAO,SAAA8vB,GAAK,OAAIA,IAAOtoB,KAAK,SAJhC,gBAMC3G,EACCwC,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAAC81B,GAAD,MACA1sB,EAAAC,EAAArJ,cAAA,WAAKoJ,EAAAC,EAAArJ,cAAA,YAEL,KACJoJ,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,GAAOxjB,MAAO,CAClC,CAACkB,SAAQ,GAAAvD,OAAKkwB,EAAsB3uB,OAAOpC,OAAlC,uBAA+DsqB,OAAQ,kBAC9E/lB,EAAAC,EAAArJ,cAAC+1B,GAAD,CACE30B,KAAMA,EACN8wB,UAAWA,EACXnvB,YAAa6yB,EAAsB3uB,OACnCitB,qBAAsBA,MAG1B,CAACjrB,SAAQ,GAAAvD,OAAKkwB,EAAsBtvB,KAAKzB,OAAhC,wBAA8DsqB,OAAQ,kBAC7E/lB,EAAAC,EAAArJ,cAAC+1B,GAAD,CACE30B,KAAMA,EACN8wB,UAAWA,EACXnvB,YAAa6yB,EAAsBtvB,KACnC4tB,qBAAsBA,MAG1B,CAACjrB,SAAQ,GAAAvD,OAAKkwB,EAAsBpvB,SAAS3B,OAApC,qBAA+DsqB,OAAQ,kBAC9E/lB,EAAAC,EAAArJ,cAAC+1B,GAAD,CACE30B,KAAMA,EACN8wB,UAAWA,EACXnvB,YAAa6yB,EAAsBpvB,SACnC0tB,qBAAsBA,iBAvCHxpB,aCK3BsrB,oLACK,IAAAluB,EAC6E9I,KAAK2I,MAAlFJ,EADAO,EACAP,OAAQnG,EADR0G,EACQ1G,KAAMY,EADd8F,EACc9F,MAAOoE,EADrB0B,EACqB1B,eAAgB6vB,EADrCnuB,EACqCmuB,iBAAkBC,EADvDpuB,EACuDouB,mBAC9D,OACE9sB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKrK,MAAN,CAAYpR,MAAO,CAACmc,UAAW,QAASC,UAAW,SAChD9xB,EAAMlB,IAAI,SAAAq1B,GAAS,OAClB/sB,EAAAC,EAAArJ,cAACo2B,GAAD,CACE3sB,IAAK0sB,EAAUl2B,GACfsH,OAAQA,EACRnG,KAAMA,EACN+0B,UAAWA,EACX/vB,eAAgBA,EAChB6vB,iBAAkBA,EAClBC,mBAAoBA,cAbTxrB,aA8BjB2rB,8MACJC,kBAAoB,WAClBv3B,EAAK4I,MAAMJ,OAAO+uB,mBAAmBv3B,EAAK4I,MAAMvG,KAAKgE,gBAGvDmxB,cAAgB,WACdx3B,EAAK4I,MAAMJ,OAAO+uB,kBAAkBv3B,EAAK4I,MAAMvG,KAAKgE,cAAgBrG,EAAK4I,MAAMwuB,UAAUl2B,IAAalB,EAAK4I,MAAMwuB,UAAUl2B,6EAGpH,IAEHu2B,EAAkBC,EAAqBC,EAAgBC,EAAmBC,EAFvE9sB,EACiF9K,KAAK2I,MAAtFJ,EADAuC,EACAvC,OAAQnG,EADR0I,EACQ1I,KAAM+0B,EADdrsB,EACcqsB,UAAW/vB,EADzB0D,EACyB1D,eAAgB6vB,EADzCnsB,EACyCmsB,iBAAkBC,EAD3DpsB,EAC2DosB,mBA0DlE,OAxDI3uB,GAAUnG,IACRA,EAAKnB,KAAOk2B,EAAUl2B,IACxB02B,EAAoB33B,KAAKs3B,kBACrBl1B,EAAKgE,aACPoxB,EAAmB,QACnBE,EAAiB,CAACG,SAAS,EAAMv1B,KAAM,gBAErCs1B,EADExwB,EACa,eAAAV,OAAkBU,EAAe9E,KAAjC,OAEG,4BAGpBk1B,EAAmB,SACnBE,EAAiB,CAACp1B,KAAM,QACpB40B,GAAsBA,EAAmBrxB,OACT,IAA9BqxB,EAAmBrxB,QACrB+xB,EAAe,GAAAlxB,OAAMwwB,EAAmB,GAAG50B,KAA5B,uBACfm1B,GAAsB,IAEtBG,EAAe,GAAAlxB,OAAMwwB,EAAmBrxB,OAAzB,8BACf4xB,GAAsB,GAItBG,EAFOX,GAAoBA,EAAiBpxB,OACd,IAA5BoxB,EAAiBpxB,OACJ,QAAAa,OAAWuwB,EAAiB,GAAG30B,MAE/B,GAAAoE,OAAMuwB,EAAiBpxB,OAAvB,wBAGC,UAItB8xB,EAAoB33B,KAAKu3B,cACrBnwB,GAAkBA,EAAenG,KAAOk2B,EAAUl2B,IACpDu2B,EAAmB,QACnBE,EAAiB,CAACG,SAAS,EAAMv1B,KAAM,gBACvCs1B,EAAe,eAAAlxB,OAAkBywB,EAAU70B,KAA5B,QACL60B,EAAUrwB,QAIpB0wB,EAAmB,SACnBE,EAAiB,CAACp1B,KAAM,QACpB60B,EAAU/wB,cAAgBhE,EAAKnB,IACjC22B,EAAe,GAAAlxB,OAAMywB,EAAU70B,KAAhB,uBACfm1B,GAAsB,GAEtBG,GADmC,IAA1BT,EAAU/wB,YACJ,GAAAM,OAAMywB,EAAU70B,KAAhB,qBAEA,aAAAoE,OAAgBywB,EAAU70B,QAX3Cs1B,EAAkB,KAClBD,EAAoB,QAiBxBvtB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAD,KACE/pB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKE,QAAN,KACEjqB,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,QAAS1L,KAAM,OAAQuN,KAAM6E,EAAUl2B,KAC5DmJ,EAAAC,EAAArJ,cAACmzB,GAAA,EAAK1J,OAAN,KACG0M,EAAU70B,KACV,IACAiG,GAAUnG,GAAQA,EAAKnB,KAAOk2B,EAAUl2B,GACvCmJ,EAAAC,EAAArJ,cAAC82B,GAAD,CAAUvvB,OAAQA,EAAQnG,KAAMA,EAAM6nB,QAAS7f,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3hB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WACpF,MAENE,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKK,KAAN,KACGpyB,GAAQ+0B,EAAUl2B,KAAOmB,EAAKnB,GAAKmJ,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,KAAOjiB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,OAAQooB,MAAO,UAAlC,MAA0D,KAC7F,IACAtoB,GAAQ+0B,EAAUl2B,KAAOmB,EAAKnB,GAAKmJ,EAAAC,EAAArJ,cAAC82B,GAAD,CAAUvvB,OAAQA,EAAQnG,KAAMA,EAAM6nB,QAAS7f,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3hB,GAAI,KAAKN,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,OAAQooB,MAAOtoB,EAAK21B,YAAc,QAAU,QAAU31B,EAAK21B,YAAc,GAAK,iBAA6B,KACzN,IACAZ,EAAU/wB,YAAcgE,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,KAAOjiB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMuD,SAAO,EAACv1B,KAAM,eAAgBooB,MAAO,UAAlD,SAA6E,KACrG,IACAyM,EAAUrwB,OAASsD,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,KAAOjiB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,SAAUooB,MAAO,UAApC,UAAgE,KACnF,IACDtgB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CACEgF,MAAK,GAAA3qB,OAAKywB,EAAUh0B,wBAA0B,iBAAmB,GAA5D,QAAAuD,OAAqEywB,EAAUa,SAA/E,YAAAtxB,OAAkGywB,EAAUlB,WACjHvL,MAAO,CAAC9L,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASqY,EAAU7zB,OAEtD8G,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CACEhyB,KAAM60B,EAAUh0B,wBAA0B,WAAa,eACvDunB,MAAOyM,EAAUh0B,wBAA0B,cAAW2G,IAEvD,IAAKqtB,EAAUc,OAEjB,IACD7tB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAOzhB,KAAM,SAAUV,QAAO,IAAAxD,OAAMywB,EAAUa,SAAhB,KAAAtxB,OAA4BywB,EAAUlB,aACnE,IACAkB,EAAUe,mBACT9tB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CACEzhB,KAAM,CAACtI,KAAM,UAAWooB,MAAO,UAC/BxgB,QAASitB,EAAUe,mBACnB7G,MAAK,OAAA3qB,OAASywB,EAAUe,mBAAnB,KAAAxxB,OAAyCywB,EAAUgB,gBAAnD,0BAEH,OAGTP,EAAkBxtB,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKE,QAAN,CAAc+D,OAAK,GACpChuB,EAAAC,EAAArJ,cAAA,OAAKkK,UAAU,kBACbd,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQhf,UAAWgM,IAAW,CAACkU,UAAWqM,IAAuB/M,MAAO8M,EAAkBzf,QAAS4f,GACjGvtB,EAAAC,EAAArJ,cAACszB,GAAA,EAASoD,GACTE,KAGW,aArHHlsB,aAqIjB2sB,8MACJvb,MAAQ,CACN1a,KAAMkE,EAAKqC,MAAMvG,KACjBC,SAAUiE,EAAKqC,MAAMvG,KAAKE,KAC1B8B,SAAU,MAcZk0B,eAAiB,SAAA/uB,GAAuB,IAAZmG,EAAYnG,EAArBgvB,OAAS7oB,MAC1BpJ,EAAKge,SAAS,CAACjiB,SAAUqN,OAG3B8oB,eAAiB,SAAA/mB,GAAuB,IAAZ/B,EAAY+B,EAArB8mB,OAAS7oB,MAC1BpJ,EAAKge,SAAS,CAAClgB,SAAUsL,OAG3B+oB,eAAiB,WACfnyB,EAAKqC,MAAMJ,OAAO+vB,eAAehyB,EAAKwW,MAAMza,aAG9Cq2B,eAAiB,WACfpyB,EAAKqC,MAAMJ,OAAOiwB,eAAelyB,EAAKwW,MAAM1Y,UAC5CkC,EAAKge,SAAS,CAAClgB,SAAU,8EAGlB,IAAA2Z,EACsB/d,KAAK8c,MAA3Bza,EADA0b,EACA1b,SAAU+B,EADV2Z,EACU3Z,SADV2W,EAEiB/a,KAAK2I,MAAtBvG,EAFA2Y,EAEA3Y,KAAM6nB,EAFNlP,EAEMkP,QAEb,OACE7f,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACEC,QAASA,EACTlF,KAAM,QACNqF,OAAQ,YACRlgB,QACEE,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACs1B,GAAA,EAAD,CAAO3L,MAAO,OAAQjb,MAAOrN,EAAUkiB,SAAUvkB,KAAKs4B,eAAgBK,OAAQ,CAACzuB,QAAS,SAAU6N,QAAS/X,KAAKy4B,kBAChHruB,EAAAC,EAAArJ,cAAA,WACAoJ,EAAAC,EAAArJ,cAACs1B,GAAA,EAAD,CAAO3L,MAAO,CAACzgB,QAAS9H,EAAK21B,YAAc,kBAAoB,iBAAkBrN,MAAOtoB,EAAK21B,YAAc,QAAU,OAAQroB,MAAOtL,EAAUmgB,SAAUvkB,KAAKw4B,eAAgBG,OAAQ,CAACzuB,QAAS,SAAUwgB,MAAOtoB,EAAK21B,iBAAcjuB,EAAY,QAASiO,QAAS/X,KAAK04B,mBAG1QrO,QAAS,CACP,CAAC5f,IAAK,SAAU0f,UAAU,EAAMjgB,QAAS,gEA7CjBvB,EAAOmU,GACrC,OAAInU,EAAMvG,OAAS0a,EAAM1a,KAChB,CACLA,KAAMuG,EAAMvG,KACZC,SAAUsG,EAAMvG,KAAOuG,EAAMvG,KAAKE,KAAO,MAItC,YAfYoJ,aAiEjBktB,8MACJ9b,MAAQ,CACNza,SAAU,GACV+B,SAAU,GACV+B,YAAY,KAGdmyB,eAAiB,SAAA7uB,GAAuB,IAAZiG,EAAYjG,EAArB8uB,OAAS7oB,MAC1BrI,EAAKid,SAAS,CAACjiB,SAAUqN,OAG3B8oB,eAAiB,SAAA9uB,GAAuB,IAAZgG,EAAYhG,EAArB6uB,OAAS7oB,MAC1BrI,EAAKid,SAAS,CAAClgB,SAAUsL,OAG3BmpB,iBAAmB,SAAAhlB,GAAyB,IAAd4X,EAAc5X,EAAvB0kB,OAAS9M,QAC5BpkB,EAAKid,SAAS,CAACne,WAAYslB,OAG7BqN,MAAQ,WACNzxB,EAAKsB,MAAMJ,OAAOuwB,MAAMzxB,EAAKyV,MAAMza,SAAUgF,EAAKyV,MAAM1Y,SAAUiD,EAAKlB,YACvEkB,EAAKid,SAAS,CAACjiB,SAAU,GAAI+B,SAAU,8EAGhC,IAAA20B,EACkC/4B,KAAK8c,MAAvCza,EADA02B,EACA12B,SAAU+B,EADV20B,EACU30B,SAAU+B,EADpB4yB,EACoB5yB,WAE3B,OACEiE,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACE5L,IAAKpe,KAAKg5B,MACV/O,QAAS7f,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3hB,GAAI,IAAKE,KAAM,UAAWV,QAAS,WACnD6a,KAAM,QACNqF,OAAQ,SACRlgB,QACEE,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACs1B,GAAA,EAAD,CAAO3L,MAAO,OAAQjb,MAAOrN,EAAUkiB,SAAUvkB,KAAKs4B,iBACtDluB,EAAAC,EAAArJ,cAAA,WACAoJ,EAAAC,EAAArJ,cAACs1B,GAAA,EAAD,CAAO3L,MAAO,WAAYjb,MAAOtL,EAAUmgB,SAAUvkB,KAAKw4B,iBAC1DpuB,EAAAC,EAAArJ,cAAA,WACAoJ,EAAAC,EAAArJ,cAACuqB,GAAA,EAAD,CACEZ,MAAO,cACPc,QAAStlB,EACToe,SAAUvkB,KAAK64B,oBAIrBxO,QAAS,CACP,CAAC5f,IAAK,SAAU0f,UAAU,EAAMjgB,QAAS,UACzC,CAACO,IAAK,QAAS6gB,UAAU,EAAMphB,QAAS,SAAU6N,QAAS/X,KAAK84B,iBAhDtDptB,aA2DdutB,8MACJC,OAAS,WACPlxB,EAAKW,MAAMJ,OAAO2wB,kFAIlB,OACE9uB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3hB,GAAI,IAAKE,KAAM,UAAWV,QAAS,UAAW6N,QAAS/X,KAAKk5B,gBAPpDxtB,aAwINojB,iNAvHbwI,kBAAoB,WAClBvlB,EAAKpJ,MAAMJ,OAAO+uB,mBAAmBvlB,EAAKpJ,MAAMvG,KAAKgE,sFAG9C,IAAAyV,EAMH7b,KAAK2I,MAJPJ,EAFKsT,EAELtT,OAAQnG,EAFHyZ,EAEGzZ,KAFH+2B,EAAAtd,EAGL9Y,UAAkBmwB,EAHbiG,EAGOvyB,KAAiB5D,EAHxBm2B,EAGwBn2B,MAAO8D,EAH/BqyB,EAG+BryB,OAAQI,EAHvCiyB,EAGuCjyB,QAASE,EAHhD+xB,EAGgD/xB,eAAgBhB,EAHhE+yB,EAGgE/yB,YAAae,EAH7EgyB,EAG6EhyB,cAH7EiyB,EAAAvd,EAILlY,UAAY2D,EAJP8xB,EAIO9xB,KAAMG,EAJb2xB,EAIa3xB,OAAQD,EAJrB4xB,EAIqB5xB,SAAWyrB,EAJhCpX,EAIgCoX,eAAgBiC,EAJhDrZ,EAIgDqZ,qBACrDlxB,EALK6X,EAKL7X,gBAEWmvB,EAAmBnvB,EAAzB4C,KAEP,OAAKxE,EAKHgI,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACywB,GAAD,MACArnB,EAAAC,EAAArJ,cAACq4B,GAAD,CAAO9wB,OAAQA,IACf6B,EAAAC,EAAArJ,cAACs4B,GAAD,CAAQ/wB,OAAQA,IAChB6B,EAAAC,EAAArJ,cAACmzB,GAAA,EAAKrK,MAAN,CAAYP,UAAQ,GACjBnnB,EACCgI,EAAAC,EAAArJ,cAACo2B,GAAD,CACE7uB,OAAQA,EACR4uB,UAAW/0B,EACXA,KAAMA,EACNgF,eAAgBA,EAChB6vB,iBAAkB7wB,EAClB8wB,mBAAoB/vB,IAEpB,MAELM,EAAO5B,OACNuE,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,kBAAkCjD,EAAO5B,OAAzC,KACAuE,EAAAC,EAAArJ,cAACu4B,GAAD,CAAUn3B,KAAMA,EAAM8wB,UAAWA,EAAWC,gBAAiBA,EAAiBzvB,MAAO+D,EAAQwrB,eAAgBA,KAE7G,KACJ7oB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,mBAAmCpD,EAAKzB,OAAxC,KACAuE,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,GAAOxjB,MAAO,CAClC,CAACkB,SAAQ,GAAAvD,OAAKY,EAAKzB,OAAV,eAA+BsqB,OAAQ,kBAC9C/lB,EAAAC,EAAArJ,cAACu4B,GAAD,CAAUn3B,KAAMA,EAAM8wB,UAAWA,EAAWC,gBAAiBA,EAAiBzvB,MAAO4D,EAAM2rB,eAAgBA,MAE7G,CAAChpB,SAAQ,GAAAvD,OAAKc,EAAS3B,OAAd,eAAmCsqB,OAAQ,kBAClD/lB,EAAAC,EAAArJ,cAACu4B,GAAD,CAAUn3B,KAAMA,EAAM8wB,UAAWA,EAAWC,gBAAiBA,EAAiBzvB,MAAO8D,EAAUyrB,eAAgBA,UAIrH7oB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACw4B,GAAD,CACEp3B,KAAMA,EACN8wB,UAAWA,EACX0D,sBAAuB,CACrB3uB,OAAQjE,EAAgBmE,SACxBb,KAAMtD,EAAgByD,OACtBD,SAAUxD,EAAgBoE,YAE5B8sB,qBAAsBA,EACtBttB,MAAM,KAGVwC,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACw4B,GAAD,CACEp3B,KAAMA,EACN8wB,UAAWA,EACX0D,sBAAuB,CACrB3uB,OAAQjE,EAAgBiE,OACxBX,KAAMtD,EAAgBsD,KACtBE,SAAUxD,EAAgBwD,UAE5B0tB,qBAAsBA,EACtBttB,MAAM,KAGVwC,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,GAAOxjB,MAAO,CAClC,CAACkB,SAAQ,GAAAvD,OAAKI,EAAOjB,OAAZ,iBAAmCsqB,OAAQ,kBAClD/lB,EAAAC,EAAArJ,cAACy4B,GAAD,CACElxB,OAAQA,EACRvF,MAAO8D,EACP1E,KAAMA,EACNgF,eAAgBA,EAChB6vB,iBAAkB7wB,EAClB8wB,mBAAoB/vB,MAGxB,CAAC8C,SAAQ,GAAAvD,OAAKQ,EAAQrB,OAAb,kBAAqCsqB,OAAQ,kBACpD/lB,EAAAC,EAAArJ,cAACy4B,GAAD,CAAUz2B,MAAOkE,EAAS9E,KAAMA,EAAMgF,eAAgBA,MAExD,CAAC6C,SAAQ,GAAAvD,OAAK1D,EAAM6C,OAAX,UAA2BsqB,OAAQ,kBAC1C/lB,EAAAC,EAAArJ,cAACy4B,GAAD,CACElxB,OAAQA,EACRvF,MAAOA,EACPZ,KAAMA,EACNgF,eAAgBA,EAChB6vB,iBAAkB7wB,EAClB8wB,mBAAoB/vB,WArFvBiD,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,uCAfO9kB,gCC5SdguB,oLACK,IAEHC,EAAeC,EAFZ9wB,EACgB9I,KAAK2I,MAArBpB,EADAuB,EACAvB,KAAM6J,EADNtI,EACMsI,OAET7J,EACEA,EAAKsyB,eAAe54B,KAAOmQ,EAAOnQ,IACpC04B,EAAgBpyB,EAAKsyB,eACrBD,EAAuBryB,EAAKuyB,uBACnBvyB,EAAKwyB,eAAe94B,KAAOmQ,EAAOnQ,IAC3C04B,EAAgBpyB,EAAKwyB,eACrBH,EAAuBryB,EAAKyyB,wBAE5BL,EAAgB,KAChBC,EAAuB,OAGzBD,EAAgB,KAChBC,EAAuB,MAEzB,IAAMK,EAAW1yB,GAAQA,EAAKiuB,eAAiBpkB,EAAOnQ,GACtD,OACEmJ,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACG4uB,EAAW7vB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,SAAUooB,MAAO,UAAc,KAAM,IAC7DtgB,EAAAC,EAAArJ,cAAA,QAAM0X,MAAOuhB,EAAW,CAACvP,MAAO,gBAAa5gB,GAC1CsH,EAAO9O,KACPq3B,EACCvvB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACG,IADH,IACSuuB,EACLxvB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACG4uB,EAAQ,IAAAvzB,OAAOizB,EAAcO,WAAcP,EAAcQ,WACzD,IAAI/vB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,+BAAiC,IACjDs3B,GAGHxvB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACGsuB,EAAc1B,MACd,IAFH,IAES0B,EAAcO,UAFvB,IAEmCP,EAAcQ,YAVrD,KAcE,MAEN/vB,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,QAAS1L,KAAM,OAAQuN,KAAMlhB,EAAOnQ,aA1ClCyK,aAqDzB0uB,8MACJC,aAAeC,aAAe,CAC5B,SAAA3xB,GAAK,OAAIA,EAAMD,MAAM6xB,OAAOt5B,IAC5B,SAAA0H,GAAK,OAAIA,EAAMhF,UAAUiD,OACxB,SAAC4zB,EAAQC,GAAT,OAAuBA,EAAUD,OAMpCE,oBAAsBJ,aAAe,CACnC,SAAA3xB,GAAK,OAAIA,EAAMvG,MACf,SAAAuG,GAAK,OAAIA,EAAM5F,WACf,kBAAMhD,EAAKwH,OACV,SAACnF,EAADmH,EAA0BhC,GAAS,IAArB2rB,EAAqB3pB,EAA3B3C,KACH4sB,EAAUN,EAAU3rB,EAAKG,QAAQ,IACjC+rB,EAAUP,EAAU3rB,EAAKG,QAAQ,IACjCmsB,IAAgBzxB,GAAOoxB,EAAQvyB,KAAOmB,EAAKnB,GAC3C6yB,IAAgB1xB,GAAOqxB,EAAQxyB,KAAOmB,EAAKnB,GAIjD,MAAO,CACLuyB,UAASC,UACTI,gBAAeC,gBACf6G,WANiB9G,EAAgB9nB,EAAK6B,SAAWkmB,EAAgB/nB,EAAKiF,SAAW,KAMrEmmB,UALItD,EAAgBJ,EAAUK,EAAgBN,EAAU,UAaxEoH,iBAAmBN,aAAe,CAChC,kBAAMv6B,EAAKwH,OACV,SAAAA,GAAI,OAAIA,EAAOwE,EAAKgJ,YAAYxN,EAAKA,MAAQ,SAMhDszB,oBAAsB,WACpB96B,EAAK4I,MAAMsqB,eAAe,SAG5BtL,OAAS,SAAA9f,GACP9H,EAAK4I,MAAMJ,OAAOuyB,eAAe/6B,EAAKwH,KAAMM,MAiB9CkzB,MAAQ,WACNh7B,EAAK4I,MAAMsqB,eAAe,SAG5B5K,eAAiB,SAAA7lB,GACfzC,EAAK4I,MAAMJ,OAAOinB,eAAehtB,MAGnCw4B,UAAY,SAAAx2B,GACV,IAAMoE,EAAM7I,EAAK4I,MAAMlH,SAASsI,SAChC,GAAIqnB,UAAUD,MAAO,CACnB,IAAM5pB,EAAOxH,EAAKwH,KADC0zB,EAEQl7B,EAAKm7B,YAAzB1H,EAFYyH,EAEZzH,QAASC,EAFGwH,EAEHxH,QAChBrC,UAAUD,MAAM,CACdE,MAAK,kBAAA3qB,OAAoBa,EAAKC,SAAW,SAAW,OAA/C,KAAAd,OAAyD8sB,EAAQlxB,KAAjE,QAAAoE,OAA4E+sB,EAAQnxB,MACzF2rB,KAAI,GAAAvnB,OAAKa,EAAKC,SAAU,kBAAmB,aAAvC,4BAAAd,OAA8E8sB,EAAQlxB,KAAtF,SAAAoE,OAAkG+sB,EAAQnxB,MAC9GsG,QACC0oB,MAAM,WACPC,GAAsB3oB,GACtB4oB,MAAM,mCAGRD,GAAsB3oB,GACtB4oB,MAAM,4BAERhtB,EAAE22B,oBAGJ5D,cAAgB,WAAM,IACbJ,EAAap3B,EAAKm7B,YAAlB/D,UACHA,GACFp3B,EAAK4I,MAAMJ,OAAO+uB,kBAAkBH,EAAUl2B,OAIlDm6B,kBAAoB,WAClBr7B,EAAK4I,MAAMJ,OAAO+uB,mBAAkB,MAGtC+D,mBAAqB,WAAM,IAClB9H,EADkBtzB,OAAAq7B,GAAA,EAAAr7B,CAAAF,GAClBwzB,SACP,SAAA7sB,OAAUlB,iBAAVkB,OAAiDlB,gBAAqCqD,SAAS,KAAO,GAAK,IAA3G,qBAAAnC,OAAkI6sB,EAASplB,4GAtD3I,IAAM5G,EAAOvH,KAAKuH,KACdA,GACFvH,KAAK2I,MAAMsqB,eAAe1rB,gDAK5B,IAAMA,EAAOvH,KAAKuH,KACdA,GACFvH,KAAK2I,MAAMsqB,eAAe1rB,oCAgDrB,IAAAkK,EAAA3G,EAKH9K,KAAK2I,MAHPlH,EAFKqJ,EAELrJ,SAAUW,EAFL0I,EAEK1I,KAAMmG,EAFXuC,EAEWvC,OAAQhB,EAFnBuD,EAEmBvD,KAAM0rB,EAFzBnoB,EAEyBmoB,eAFzBsI,EAAAzwB,EAGL/H,UAAYqE,EAHPm0B,EAGOn0B,eAAsB8rB,EAH7BqI,EAGuB30B,KAHvB40B,EAAA1wB,EAGyCnH,UAAuB83B,EAHhED,EAGqD7zB,UAAmC+zB,EAHxFF,EAGgF/zB,OAC7D0rB,EAJnBroB,EAIL9G,gBAAkB4C,KAEb2sB,EAAYvzB,KAAZuzB,SAEP,IAAKA,EACH,OACEnpB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACE0H,MAAM,EACN3M,KAAM,OACN4M,QAAS3xB,KAAK66B,oBACdzQ,OAAQ,sBACRlgB,QAAS,wGACTmgB,QAAS,CAAC,CAAC5f,IAAK,KAAMP,QAAS,KAAMohB,UAAU,MAPnD,uBAVG,IAAAqQ,EAwByE37B,KAAKk7B,YAA9E/D,EAxBAwE,EAwBAxE,UAAW3D,EAxBXmI,EAwBWnI,QAASC,EAxBpBkI,EAwBoBlI,QAASI,EAxB7B8H,EAwB6B9H,cAAeC,EAxB5C6H,EAwB4C7H,cAAe6G,EAxB3DgB,EAwB2DhB,WAClE,OAAKnH,GAAYC,EAIfrpB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACywB,GAAD,MACArnB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAMC,UAAQ,GACZnf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CAAM6gB,WAAS,EAACpG,KAAM,UAAWuF,UAAQ,EAACtF,MAAO,CAC/C,CAACva,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKmN,QAAS/X,KAAK+6B,MAAOrQ,MAAO,MAAOkH,QAAQ,GACvF,CAACnnB,IAAK,QAASP,QAAS,aAAcU,KAAM,QAASmN,QAAS/X,KAAKg7B,UAAWtwB,GAAI,IAChFmnB,KAAMpwB,EAASsI,SAAU2gB,MAAO,QAASkH,QAAQ,EACjDP,MAAOD,UAAUD,MAAQ,iCAAmC,6BAC9D,CAAC1mB,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,OAAQF,GAAI,IAAKmnB,KAAM7xB,KAAKq7B,qBACxE3Q,MAAO,QAASkH,QAAQ,EAAMP,MAAO,uCAAwCkH,OAAQ,cAG3FnuB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKE,IAAN,KACEpf,EAAAC,EAAArJ,cAACsJ,EAAA,EAAD,CAAM6gB,WAAS,EAACpG,KAAM,UAAWC,MAAO,CACtC,CAACva,IAAK,WAAYP,QAChBE,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACGwoB,EAAgBzpB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3B,MAAO,QAAS9f,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAArJ,cAAC46B,GAAD,CAAkBr0B,KAAMA,EAAM6J,OAAQoiB,KAEvC9I,MAAOmJ,EAAgB,aAAU/pB,GACpC,CAACW,IAAK,WAAYP,QAChBE,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACGyoB,EAAgB1pB,EAAAC,EAAArJ,cAACqrB,GAAA,EAAD,CAAO3B,MAAO,QAAS9f,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAArJ,cAAC46B,GAAD,CAAkBr0B,KAAMA,EAAM6J,OAAQqiB,KAEvC/I,MAAOoJ,EAAgB,aAAUhqB,QAI1CM,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACu4B,GAAD,CACEn3B,KAAMA,EACN6wB,eAAgBA,EAChBvvB,MAAOg4B,EACPxI,UAAWA,EACXC,gBAAiBA,EACjBC,OAAK,EACL9rB,MAAI,EACJ+rB,cAAe9rB,EAAOA,EAAKtG,GAAK,OAEjCw6B,EAAe51B,OACduE,EAAAC,EAAArJ,cAACu4B,GAAD,CACEn3B,KAAMA,EACN6wB,eAAgBA,EAChBvvB,MAAO+3B,EACPvI,UAAWA,EACXC,gBAAiBA,EACjBC,OAAK,EACL9rB,MAAI,EACJ+rB,cAAe9rB,EAAOA,EAAKtG,GAAK,OAEhC,MAENmJ,EAAAC,EAAArJ,cAAC8wB,GAAD,CACE1vB,KAAMA,EACN0mB,gBAAiBvgB,EAAO/F,SACxB20B,UAAWA,EACX9O,eAAgBroB,KAAKqoB,eACrB9gB,KAAMgsB,EACNvK,UAAWzhB,EACXwhB,OAAKtX,EAAA,GAAAxR,OAAA0Q,EAAA,EAAA1Q,CAAAwR,EAAI1F,EAAK6B,SAAW4lB,EAAQlxB,MAA5BrC,OAAA0Q,EAAA,EAAA1Q,CAAAwR,EAAmC1F,EAAKiF,SAAWyiB,EAAQnxB,MAA3DmP,GACLkM,aAAc,CAACgd,GAAY5zB,OAAO,SAAAqK,GAAM,OAAIA,IAC5CuW,OAAQ3nB,KAAK2nB,OACb4P,cAAev3B,KAAKu3B,cACpB6D,kBAAmBp7B,KAAKo7B,kBACxBh0B,eAAgBA,KArEb,kCA9HT,OAAOpH,KAAKq6B,aAAar6B,KAAK2I,2CAuB9B,OAAO3I,KAAK06B,oBAAoB16B,KAAK2I,wCAQrC,OAAO3I,KAAK46B,iBAAiB56B,KAAK2I,cAtCP+C,aA6N/B0uB,GAAmBxuB,YAAWkjB,GAAWsL,SAEnCyB,8MACJjB,iBAAmBN,aAAe,CAChC,SAAA3xB,GAAK,OAAIA,EAAMpB,OACd,SAAAA,GAAI,OAAIA,EAAOwE,EAAKgJ,YAAYxN,EAAKA,MAAQ,+EAMvC,IAAAwT,EACsH/a,KAAK2I,MAA3HsqB,EADAlY,EACAkY,eAAgB1rB,EADhBwT,EACgBxT,KAAMnF,EADtB2Y,EACsB3Y,KAAkBwE,EADxCmU,EAC4BhY,UAAY6D,KADxCk1B,EAAA/gB,EAC+CpX,UAAY2D,EAD3Dw0B,EAC2Dx0B,KAAMG,EADjEq0B,EACiEr0B,OAAiC0rB,EADlGpY,EAC0E/W,gBAAkB4C,KACnG,IAAK3G,OAAO6M,OAAOlG,GAAMf,OACvB,OAAO,KAET,IAAM0tB,EAAWvzB,KAAKuzB,SACtB,OACEnpB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,KACElB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAOC,OAAK,EAAC9C,KAAMzI,KAAK2I,MAAMD,MAAMD,MAClC2B,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,kBAAkCjD,EAAO5B,OAAzC,KACAuE,EAAAC,EAAArJ,cAACu4B,GAAD,CAAUn3B,KAAMA,EAAM8wB,UAAWtsB,EAAMusB,gBAAiBA,EAAiBzvB,MAAO+D,EAAQwrB,eAAgBA,KAE1G7oB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,eAA+BpD,EAAKzB,OAApC,KACAuE,EAAAC,EAAArJ,cAACu4B,GAAD,CAAUn3B,KAAMA,EAAM8wB,UAAWtsB,EAAMusB,gBAAiBA,EAAiBzvB,MAAO4D,EAAM2rB,eAAgBA,MAG1G7oB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAO7C,KAAI,GAAA/B,OAAK1G,KAAK2I,MAAMD,MAAMD,KAAtB,SACT2B,EAAAC,EAAArJ,cAAC+6B,GAAD,CAAkBx0B,KAAMA,EAAMgsB,SAAUA,EAAUN,eAAgBA,uCAtBxE,OAAOjzB,KAAK46B,iBAAiB56B,KAAK2I,cANb+C,aA8CVE,eAAWkjB,GAAW+M,6CC9UtBG,GAAA,CACbC,cC8BoB,eA9BpB,SAAAC,IAAc,IAAAn8B,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAk8B,GAAAl8B,KAKd6C,OAAS,SAAAT,GACPrC,EAAKqC,KAAOA,GALZpC,KAAKoC,KAAOmG,EAAOnG,KACnBmG,EAAOmmB,UAAU,CAAC7rB,OAAQ7C,KAAK6C,wLAQ3BxC,OAAO87B,cAAmD,WAAnC97B,OAAO87B,aAAaC,2CACvC/7B,OAAO87B,aAAaE,gRAKvBr8B,KAAKoC,MAASpC,KAAKoC,KAAKI,SAASuC,qFAGhC/E,KAAKq8B,2BACX,GAAIh8B,OAAO87B,cAAmD,YAAnC97B,OAAO87B,aAAaC,WAC7C,IACEn8B,OAAAq8B,GAAA,EAAAr8B,CAAIk8B,aAAJlmB,MAAAsmB,UAAA91B,MAAAusB,KAAAwJ,IACA,MAAOh4B,GACP9D,QAAQkoB,MAAM,8BAA+BpkB,0HCX/Ci4B,sNACJC,mBAAqBpC,aAAe,CAClC,SAAA3xB,GAAK,OAAIA,EAAMD,MAAM6xB,OAAOt5B,IAC5B,SAAA0H,GAAK,OAAIA,EAAM3E,gBAAgB4C,OAC9B,SAAC0sB,EAAcH,GAAf,OAAmCA,EAAgBG,OAMtDqJ,0BAA4B,WAC1B58B,EAAK4I,MAAMusB,qBAAqB,SAiBlC6F,MAAQ,WACNh7B,EAAK4I,MAAMusB,qBAAqB,SAGlC0H,gBAAkB,SAAAp4B,GAChB,IAAMoE,EAAM7I,EAAK4I,MAAMlH,SAASsI,SAChC,GAAIqnB,UAAUD,MAAO,KACZppB,EADY9H,OAAAq7B,GAAA,EAAAr7B,CAAAF,GACZgI,WACPqpB,UAAUD,MAAM,CACdE,MAAK,kBAAA3qB,OAAoBqB,EAAWG,QAAWH,EAAWP,SAAW,OAAS,OAAU,SAAnF,gBAAAd,OAA0GqB,EAAWzF,MAC1H2rB,KAAI,GAAAvnB,OAAKqB,EAAWG,QAAWH,EAAWP,SAAW,cAAgB,aAAgB,SAAjF,0BAAAd,OAAkHqB,EAAWzF,MACjIsG,QACC0oB,MAAM,WACPC,GAAsB3oB,GACtB4oB,MAAM,mCAGRD,GAAsB3oB,GACtB4oB,MAAM,4BAERhtB,EAAE22B,oBAGJ0B,oBAAsB,WAAM,IACnB90B,EADmB9H,OAAAq7B,GAAA,EAAAr7B,CAAAF,GACnBgI,WACPhI,EAAK4I,MAAMk0B,oBAAoB90B,MAGjC+0B,gBAAkB,WAAM,IACf/0B,EADe9H,OAAAq7B,GAAA,EAAAr7B,CAAAF,GACfgI,WACPhI,EAAK4I,MAAMm0B,gBAAgB/0B,MAG7Bg1B,gBAAkB,WAAM,IACfh1B,EADe9H,OAAAq7B,GAAA,EAAAr7B,CAAAF,GACfgI,WACPhI,EAAK4I,MAAMo0B,gBAAgBh1B,uFAjDT,IACXA,EAAc/H,KAAd+H,WACHA,GACF/H,KAAK2I,MAAMusB,qBAAqBntB,gDAIf,IACZA,EAAc/H,KAAd+H,WACHA,GACF/H,KAAK2I,MAAMusB,qBAAqBntB,oCA0C3B,IAAAe,EAIH9I,KAAK2I,MAFPlH,EAFKqH,EAELrH,SAAUW,EAFL0G,EAEK1G,KAAM6wB,EAFXnqB,EAEWmqB,eACEC,EAHbpqB,EAGL/F,UAAY6D,KAAoC6zB,EAH3C3xB,EAGyBnF,UAAYiD,KAE/BusB,EALNrqB,EAGuD9E,gBAEvD4C,KACAmB,EAAc/H,KAAd+H,WAEP,IAAKA,EACH,OACEqC,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACE0H,MAAM,EACN3M,KAAM,OACN4M,QAAS3xB,KAAK28B,0BACdvS,OAAQ,4BACRlgB,QAAS,oHACTmgB,QAAS,CAAC,CAAC5f,IAAK,KAAMP,QAAS,KAAMohB,UAAU,MAPnD,6BAcJ,IAAM0R,EAAU/5B,IAAEC,QAAQ6E,EAAWL,QAAQ5F,IAAI,SAAAm7B,GAAW,OAAI/J,EAAU+J,KAAe,CACvF,SAAA76B,GAAI,OAAI2F,EAAWm1B,UAAYn1B,EAAWm1B,UAAU96B,EAAKnB,IAAIk8B,OAAS,GACtE,SAAA/6B,GAAI,OAAI2F,EAAWm1B,UAAYn1B,EAAWm1B,UAAU96B,EAAKnB,IAAIm8B,aAAanF,MAAQ,GAClF,MACC,CAAC,OAAQ,OAAQ,SACd7C,IAAiBhzB,GAAO2F,EAAWL,QAAQV,SAAS5E,EAAKnB,IACzDo0B,IAAiBjzB,GAAO2F,EAAWutB,gBAAkBlzB,EAAKnB,GAEhE,OACEmJ,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAUC,MAAX,CAAiBC,OAAQ,QAAShF,KAAM,QACtC3a,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CACEna,MAAO3H,EAAWG,QAAWH,EAAWP,SAAW,WAAtB,GAAAd,OAAsCqB,EAAW4tB,MAAjD,KAAAjvB,OAA0DqB,EAAW6tB,QAAY,UAC9GjL,MAAO5iB,EAAWG,QAAWH,EAAWP,SAAW,SAAW,SAAY,WAE5E4C,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CACEna,MAAO3H,EAAWL,QAAQ7B,OAC1B8kB,MAAO,UAETvgB,EAAAC,EAAArJ,cAAC6oB,GAAA,EAAD,CACEna,MAAO3H,EAAWkuB,UAClBtL,MAAO,6BAGXvgB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM+G,QAAS,SACbjmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAalH,UAAW,QAAQjf,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CAAQC,UAAQ,EAACpS,QAAS/X,KAAK+6B,OAA/B,UAChC3wB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,KACEnmB,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CACEoB,UAAQ,EACR1gB,MAAI,EACJmN,QAAS/X,KAAK48B,gBACdlkB,MAAO,CAACiE,MAAO,QACfjS,GAAI,IACJmnB,KAAMpwB,EAASsI,SACfsnB,MAAOD,UAAUD,MAAQ,iCAAmC,mCAE5D/mB,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,UATd,wBAiCJyF,EAAWG,QAyCT,KAxCFkC,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM+G,QAAS,SACbjmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAalH,UAAW,QACtBjf,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CACEjF,SAAUld,EAAWG,QACrBwQ,MAAO,CAACiE,MAAO,QACf+N,MAAO0K,EAAiB,SAAW,QACnCrd,QAAS/X,KAAK68B,qBAEb90B,EAAWG,QAAU,KAAOkC,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM8yB,EAAiB,YAAc,SACvEA,EAAiB,gBAChBrtB,EAAWG,QACTH,EAAWP,SAAW,sBAAwB,qBAC5C,wBAIV4C,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,KACEnmB,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CACEjF,UAAWoQ,GAAkB2H,EAAQn3B,OAAS,GAAKkC,EAAWG,QAC9DojB,UAAQ,EACR1gB,MAAI,EACJmN,QAAS/X,KAAK88B,gBACdpkB,MAAO,CAACiE,MAAO,QACf+N,MAAOsS,EAAQn3B,QAAU,GAAKwvB,EAAiB,QAAsB,UAEpEttB,EAAWP,SAAY,KACtB4C,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM06B,EAAQn3B,QAAU,EAAKwvB,EAAiB,OAAS,YAAe,SAE7EttB,EAAWG,QACVH,EAAWP,SAAW,WAAa,UAEnCw1B,EAAQn3B,QAAU,EAChBwvB,EAAiB,mBAAqB,kCACpC,kCAOhBjrB,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACGrhB,EAAWG,QACVkC,EAAAC,EAAArJ,cAACyK,EAAA,EAAD,CAAKT,KAAM,CAACuhB,UAAU,EAAM2D,UAAU,GAAQnnB,MAAO,CACnD,CAACkB,SAAU,WAAYkmB,OAAQ,kBAC7B/lB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACtBnzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM5S,OAAP,KACErgB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,KACGzhB,EAAWP,SAAW4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,UAAyC,KAChEpzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,aACApzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,aACApzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,mBACApzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,uBACCz1B,EAAWG,UAAYH,EAAWP,SAAW4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,aAA4C,KACzFz1B,EAAWP,SAAW4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,yBAAwD,OAGnFpzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMI,KAAP,KACGT,EAAQl7B,IAAI,SAAAsP,GACX,IAAMssB,EAAQ31B,EAAWm1B,UAAU9rB,EAAOnQ,IAC1C,OACEmJ,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,CAAW/e,IAAK2G,EAAOnQ,IACpB8G,EAAWP,SACV4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMp6B,MAAQ,EACzB8G,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CACEhyB,KAAM,CAACsc,EAAG,SAAUC,EAAG,cAAeC,EAAG,eAAe4e,EAAMp6B,MAC9DonB,MAAO,CAAC9L,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAAS4e,EAAMp6B,QAElD,MACF,KACJ8G,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMp6B,MACnB8G,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KACEzS,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,OAAQ1L,KAAM,OAAQuN,KAAMlhB,EAAOnQ,KACvDmQ,EAAO9O,MAEV8H,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMP,SAAWO,EAAMC,YAAcD,EAAMP,OAA3C,GAAAz2B,OAAuDg3B,EAAMC,YAA7D,MAAAj3B,OAA6Eg3B,EAAMP,OAAnF,MACb/yB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMN,aAAaQ,eAAeC,QAAQ,IACtD91B,EAAWG,UAAYH,EAAWP,SACjC4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMI,oBAAsB,yBACvCJ,EAAMrK,cACJjpB,EAAAC,EAAArJ,cAACg0B,GAAD,CACE5yB,KAAM,KACN8wB,UAAWA,EACXC,gBAAiBA,EACjB5rB,KAAMkzB,EAAUiD,EAAMrK,eACtBJ,eAAgBA,EAChBG,OAAK,EACL9rB,MAAI,IAEJ,YAEJ,KACHS,EAAWP,SACV4C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAa6gB,EAAMK,gBAAkB,EAAxB,IAAAr3B,OAAgCg3B,EAAMK,iBAAoBL,EAAMK,iBAC3E,YAOhB,CAAC9zB,SAAU,QAASkmB,OAAQ,kBAC1B/lB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACtBnzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM5S,OAAP,KACErgB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,KACEpf,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,CAAkBQ,QAAS,GAA3B,SACA5zB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,CAAkBQ,QAAS,GAA3B,SACA5zB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,eAGHz1B,EAAWk2B,SAASn8B,IAAI,SAAC6zB,EAAOuI,GAAR,OACvB9zB,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,CAAUZ,IAAKyzB,GACb9zB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM5S,OAAP,KACErgB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,KACEpf,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,CAAkBQ,QAAS,GAAmB,YAAfrI,EAAMz0B,KAAqB,cAAgB,KAA1E,SAAsFy0B,EAAMA,SAGhGvrB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMI,KAAP,KACG9H,EAAMwI,SAASr8B,IAAI,SAAAyH,EAA4C60B,GAAc,IAAAC,EAAAp+B,OAAAuJ,EAAA,EAAAvJ,CAAAsJ,EAAxD7B,QAAwD,GAA9C42B,EAA8CD,EAAA,GAAnCE,EAAmCF,EAAA,GAAvB7D,EAAuBjxB,EAAvBixB,OAC/CjzB,EAAOkzB,EAAUD,GACjBgE,EAAaj3B,GAAQA,EAAKC,UAAYD,EAAKiuB,eAAiB8I,EAC5DG,EAAal3B,GAAQA,EAAKC,UAAYD,EAAKiuB,eAAiB+I,EAClE,OACEn0B,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,CAAW/e,IAAK2zB,GACdh0B,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,CAAY3R,UAAWgM,IAAW,kBAAmB,WAAY,CAACwnB,eAAgBF,EAAYG,eAAgBF,KAC3GH,EACCl0B,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,OAAQ1L,KAAM,OAAQuN,KAAMgM,IAChDpL,EAAUoL,GAAWh8B,MAEtB,0BAEN8H,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,CAAY3R,UAAWgM,IAAW,kBAAmB,WAAY,CAACwnB,eAAgBF,EAAYG,eAAgBF,KAC3Gl3B,GAAQA,EAAKC,SAAYD,EAAKiuB,eAAiB8I,EAAY,IAAM,IAAO,KAE3El0B,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,CAAY3R,UAAWgM,IAAW,kBAAmB,WAAY,CAACwnB,eAAgBF,EAAYG,eAAgBF,KAC3GF,EACCn0B,EAAAC,EAAArJ,cAACqK,EAAA,SAAD,KACEjB,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,OAAQ1L,KAAM,OAAQuN,KAAMiM,IAChDrL,EAAUqL,GAAWj8B,MAEtB,0BAEN8H,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,CAAY3R,UAAWgM,IAAW,kBAAmB,WAAY,CAACwnB,eAAgBF,EAAYG,eAAgBF,KAC3Gl3B,GAAQA,EAAKC,SAAYD,EAAKiuB,eAAiB+I,EAAY,IAAM,IAAO,KAE3En0B,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KACGyhB,GAAaC,EACZh3B,EACE6C,EAAAC,EAAArJ,cAACg0B,GAAD,CACE5yB,KAAM,KACN8wB,UAAWA,EACXC,gBAAiBA,EACjB5rB,KAAMA,EACN0rB,eAAgBA,EAChBG,OAAK,EACL9rB,MAAI,IAEJ,kBACF,mBAYxB8C,EAAAC,EAAArJ,cAACq8B,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,GACtBnzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM5S,OAAP,KACErgB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,KACEpf,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,aACApzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMG,WAAP,iBAGJpzB,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMI,KAAP,KACGT,EAAQl7B,IAAI,SAAAsP,GAAM,OACjBhH,EAAAC,EAAArJ,cAACq8B,GAAA,EAAM7T,IAAP,CAAW/e,IAAK2G,EAAOnQ,IACrBmJ,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KACEzS,EAAAC,EAAArJ,cAACuzB,GAAD,CAAY9D,QAAS,OAAQ1L,KAAM,OAAQuN,KAAMlhB,EAAOnQ,KACvDmQ,EAAO9O,MAEV8H,EAAAC,EAAArJ,cAACq8B,GAAA,EAAMxgB,KAAP,KAAazL,EAAO6mB,aAO/B5C,IAAmBttB,EAAWG,QAC7BkC,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAD,CAAM+G,QAAS,SACbjmB,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,CAAalH,UAAW,SAExBjf,EAAAC,EAAArJ,cAACsoB,GAAA,EAAKiH,OAAN,KACEnmB,EAAAC,EAAArJ,cAACgpB,GAAA,EAAD,CACEjF,KAAM,OACNkF,QACE7f,EAAAC,EAAArJ,cAACkpB,GAAA,EAAD,CACEjF,UAAWoQ,EACXlL,UAAQ,EACRvf,MAAI,EACJ8N,MAAO,CAACiE,MAAO,SAEfvS,EAAAC,EAAArJ,cAACszB,GAAA,EAAD,CAAMhyB,KAAM,SACX,oBAGL8nB,OAAQ,mBACRlgB,QAAS,iDACTmgB,QAAS,CACP,CAAC5f,IAAK,MAAOP,QAAS,QAAS6N,QAAS/X,KAAK+8B,gBAAiB5S,UAAU,GACxE,CAAC1f,IAAK,KAAMP,QAAS,sBAAuBqgB,WAAW,SAM/D,yCA9WR,OAAOvqB,KAAK08B,mBAAmB18B,KAAK2I,cAPH+C,cAwZrC+wB,GAAyB7wB,YAAWkjB,GAAW2N,SAEzCmC,oLACK,IAAA9zB,EAIH9K,KAAK2I,MAFPsqB,EAFKnoB,EAELmoB,eAAgBiC,EAFXpqB,EAEWoqB,qBAAsB2H,EAFjC/xB,EAEiC+xB,oBAAqBC,EAFtDhyB,EAEsDgyB,gBAAiBC,EAFvEjyB,EAEuEiyB,gBAAiBh1B,EAFxF+C,EAEwF/C,WAAY3F,EAFpG0I,EAEoG1I,KACvF8wB,EAHbpoB,EAGL/H,UAAY6D,KAAkB5C,EAHzB8G,EAGyB9G,gBAEhC,OAAK/D,OAAO6M,OAAOomB,GAAWrtB,OAI5BuE,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,KACElB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAOC,OAAK,EAAC9C,KAAMzI,KAAK2I,MAAMD,MAAMD,MAClC2B,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACw4B,GAAD,CACEp3B,KAAMA,EACN8wB,UAAWA,EACX0D,sBAAuB,CACrB3uB,OAAQjE,EAAgBmE,SACxBb,KAAMtD,EAAgByD,OACtBD,SAAUxD,EAAgBoE,YAE5B8sB,qBAAsBA,EACtBttB,MAAM,KAGVwC,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,KACEhf,EAAAC,EAAArJ,cAACw4B,GAAD,CACEp3B,KAAMA,EACN8wB,UAAWA,EACX0D,sBAAuB,CACrB3uB,OAAQjE,EAAgBiE,OACxBX,KAAMtD,EAAgBsD,KACtBE,SAAUxD,EAAgBwD,UAE5B0tB,qBAAsBA,EACtBttB,MAAM,MAIZwC,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAO7C,KAAI,GAAA/B,OAAK1G,KAAK2I,MAAMD,MAAMD,KAAtB,SACT2B,EAAAC,EAAArJ,cAAC69B,GAAD,CACE92B,WAAYA,EACZkrB,eAAgBA,EAChBiC,qBAAsBA,EACtB2H,oBAAqBA,EACrBC,gBAAiBA,EACjBC,gBAAiBA,MAvChB,YAPkBrxB,aAqEhBE,eAAWkjB,GAAW8P,KC/d/BE,8MACJhiB,MAAQ,CACNiiB,SAAU,KACVC,eAAgB,QAOlB/L,eAAiB,SAAA8L,GACf,IAAIE,GAEFA,EADEF,EACQh/B,EAAKm/B,eAAeH,GAEvB,GAAAr4B,OAAM3G,EAAK4I,MAAMD,MAAME,IAAIC,SAAS,KAAO9I,EAAK4I,MAAMD,MAAME,IAAInC,MAAM,GAAI,GAAK1G,EAAK4I,MAAMD,MAAME,IAAhG,aAEO7I,EAAK4I,MAAMlH,SAASsI,UAClChK,EAAK4I,MAAM0D,QAAQvG,KAAKm5B,GAEtBl/B,EAAK+c,MAAMiiB,WAAaA,GAG5Bh/B,EAAKukB,SAAS,CAACya,gBAOjB7J,qBAAuB,SAAA8J,GACrB,IAAIG,GAEFA,EADEH,EACcj/B,EAAKq/B,qBAAqBJ,GAE7B,GAAAt4B,OAAM3G,EAAK4I,MAAMD,MAAME,IAAIC,SAAS,KAAO9I,EAAK4I,MAAMD,MAAME,IAAInC,MAAM,GAAI,GAAK1G,EAAK4I,MAAMD,MAAME,IAAhG,aAEO7I,EAAK4I,MAAMlH,SAASsI,UACxChK,EAAK4I,MAAM0D,QAAQvG,KAAKq5B,GAEtBp/B,EAAK+c,MAAMkiB,iBAAmBA,GAGlCj/B,EAAKukB,SAAS,CAAC0a,sBAGjBnC,oBAAsB,SAAA90B,GAAc,IAAAe,EACX/I,EAAK4I,MAArBvG,EAD2B0G,EAC3B1G,KAAMmG,EADqBO,EACrBP,OAETR,EAAWL,QAAQV,SAAS5E,EAAKnB,IACnCsH,EAAO82B,gBAAgBt3B,GAEvBQ,EAAO+2B,eAAev3B,MAI1B+0B,gBAAkB,SAAA/0B,GACChI,EAAK4I,MAAfJ,OAEAu0B,gBAAgB/0B,MAGzBg1B,gBAAkB,SAAAh1B,GACChI,EAAK4I,MAAfJ,OAEAw0B,gBAAgBh1B,kFA3DVR,GACb,SAAAb,OAAU1G,KAAK2I,MAAMD,MAAME,IAAIC,SAAS,KAAO7I,KAAK2I,MAAMD,MAAME,IAAInC,MAAM,GAAI,GAAKzG,KAAK2I,MAAMD,MAAME,IAApG,UAAAlC,OAAgHa,EAAKtG,iDAmBlG8G,GACnB,SAAArB,OAAU1G,KAAK2I,MAAMD,MAAME,IAAIC,SAAS,KAAO7I,KAAK2I,MAAMD,MAAME,IAAInC,MAAM,GAAI,GAAKzG,KAAK2I,MAAMD,MAAME,IAApG,gBAAAlC,OAAsHqB,EAAW9G,+CAyChHoc,GACjBrd,KAAKu/B,0CAA0CliB,GAC/Crd,KAAKw/B,oBAAoBniB,GACzBrd,KAAKy/B,kBAAkBpiB,qEAGiBA,GACxC,IAAMjb,EAAOpC,KAAK2I,MAAMvG,KACnBA,IAGCib,EAAUjb,MAASib,EAAUjb,KAAKgE,cAAiBhE,IAAQA,EAAKgE,cAAgBhE,EAAKI,SAASuC,qBAClGi3B,GAASC,cAAcI,iEAIPhf,GAClB,IAAMjb,EAAOpC,KAAK2I,MAAMvG,KACxB,GAAKA,GAIDib,EAAU1Z,UAAU8D,SAAWzH,KAAK2I,MAAMhF,UAAU8D,UAIpDzH,KAAK8c,MAAMiiB,UAAa/+B,KAAK8c,MAAMiiB,SAASv3B,UAAhD,CAIA,IAAMk4B,EAAwB,IAAIC,IAAItiB,EAAU1Z,UAAU8D,OAAO3F,IAAI,SAAAyF,GAAI,OAAIA,EAAKtG,MAE5E2+B,EADgB5/B,KAAK2I,MAAMhF,UAAU8D,OAAO3F,IAAI,SAAAyF,GAAI,OAAIA,EAAKtG,KAC5B8F,OAAO,SAAA9F,GAAE,OAAKy+B,EAAsBG,IAAI5+B,KAC/E,GAAgC,IAA5B2+B,EAAiB/5B,OAArB,CAIA,IAAM+hB,EAAU5nB,KAAK2I,MAAMhF,UAAUiD,KAAKg5B,EAAiB,IAC3D,GAAqB,IAAjBhY,EAAQnY,KAAY,CACtB,IAAMwtB,EAAcrV,EAAQlgB,QAAQ,KAAOtF,EAAKnB,GAAK2mB,EAAQlgB,QAAQ,GAAMkgB,EAAQlgB,QAAQ,KAAOtF,EAAKnB,GAAK2mB,EAAQlgB,QAAQ,GAAK,KAC3HyvB,EAAYn3B,KAAK2I,MAAM5F,UAAU6D,KAAKq2B,GAC5CjB,GAASC,cAAc6D,OAAO3I,EAAS,eAAAzwB,OAAkBywB,EAAU70B,KAA5B,gCAEpB,IAAjBslB,EAAQnY,MACVzP,KAAKizB,eAAerL,+CAINvK,GAAW,IAAA/W,EAAAtG,KACrBoC,EAAOpC,KAAK2I,MAAMvG,KACxB,GAAKA,GAGApC,KAAK2I,MAAMhF,UAAU8D,OAAO5B,OAAjC,CAGA,IAAMk6B,EAA2B//B,KAAK2I,MAAMhF,UAAU8D,OACnDV,OAAO,SAAAQ,GAAI,OAAIA,EAAKy4B,aAAe59B,EAAKnB,KACxC8F,OAAO,SAAAQ,GACN,IAAM04B,EAAW5iB,EAAU1Z,UAAUiD,KAAKW,EAAKtG,IAC/C,OAAOg/B,GAAYA,EAASD,aAAe59B,EAAKnB,KAEpD,GAAK8+B,EAAyBl6B,OAA9B,CAIA,IAAMQ,EAAa05B,EAAyBj+B,IAAI,SAAAyF,GAC9C,IAAM01B,EAAc11B,EAAKG,QAAQ,KAAOtF,EAAKnB,GAAKsG,EAAKG,QAAQ,GAAMH,EAAKG,QAAQ,KAAOtF,EAAKnB,GAAKsG,EAAKG,QAAQ,GAAK,KAErH,OADkBpB,EAAKqC,MAAM5F,UAAU6D,KAAKq2B,KAGxC9F,EAAkC,IAAtB9wB,EAAWR,OAAeQ,EAAW,GAAK,KAC5D21B,GAASC,cAAc6D,OAAO3I,EAAS,wBAAAzwB,OAA2BywB,EAAU70B,MAArC,6BAAAoE,OAA2Eq5B,EAAyBl6B,QAAU,CACnJq6B,IAAK,YACL/R,KAAI,6BAAAznB,OAA+Bq5B,EAAyBl6B,OAAxD,+CAIC,IAAAwB,EAAArH,KAAA+d,EAC4B/d,KAAK8c,MAAjCiiB,EADAhhB,EACAghB,SAAUC,EADVjhB,EACUihB,eADVl0B,EAE0E9K,KAAK2I,MAA/E/G,EAFAkJ,EAEAlJ,UAAWK,EAFX6I,EAEW7I,aAAcwD,EAFzBqF,EAEyBrF,UAAWrD,EAFpC0I,EAEoC1I,KAAwB8wB,EAF5DpoB,EAE0C/H,UAAY6D,KACvD4sB,EAAUuL,EAAW7L,EAAU6L,EAASr3B,QAAQ,IAAM,KACtD+rB,EAAUsL,EAAW7L,EAAU6L,EAASr3B,QAAQ,IAAM,KACtDmsB,KAAiBzxB,IAAQoxB,IAAWA,EAAQvyB,KAAOmB,EAAKnB,GACxD6yB,KAAiB1xB,IAAQqxB,IAAWA,EAAQxyB,KAAOmB,EAAKnB,GACxDioB,EAAW2K,GAAiBC,EAC5BqM,EAAmBpB,GAAYvL,GAAWC,EAC3CsL,EAASv3B,SAAT,UAAAd,OACWmtB,EAAgB,MAAQL,EAAQlxB,KAD3C,QAAAoE,OACsDotB,EAAgB,MAAQL,EAAQnxB,MACpF4mB,EAAQ,aAAAxiB,OACMmtB,EAAgB,MAAQL,EAAQlxB,KADtC,QAAAoE,OACiDotB,EAAgB,MAAQL,EAAQnxB,MADjF,YAAAoE,OAEKmtB,EAAgB,MAAQL,EAAQlxB,KAFrC,QAAAoE,OAEgDotB,EAAgB,MAAQL,EAAQnxB,MAC3F,4BACE8yB,KAAkB4J,IAAkB58B,IAAQ48B,EAAet3B,QAAQV,SAAS5E,EAAKnB,IACjFm/B,EAAwBpB,EACzBA,EAAex3B,SAAf,qBAAAd,OACsBs4B,EAAe18B,MACnC8yB,EAAc,mBAAA1uB,OACMs4B,EAAe18B,MADrB,uBAAAoE,OAEUs4B,EAAe18B,MAC1C,cACJ,OACE8H,EAAAC,EAAArJ,cAACq/B,EAAA,EAAD,KACEj2B,EAAAC,EAAArJ,cAACs/B,GAAmB7jB,YAApB,MACArS,EAAAC,EAAArJ,cAACooB,EAAA,EAAD,CAASC,UAAW,UAClBjf,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,MAAZ,iBAEA9I,EAaE,KAZDK,IAAiBwD,EAChB2E,EAAAC,EAAArJ,cAACu/B,EAAA,EAAD,CACEpW,UAAQ,EACRC,OAAQ,iCACRlgB,QAASE,EAAAC,EAAArJ,cAAA,0HAGXoJ,EAAAC,EAAArJ,cAACu/B,EAAA,EAAD,CACEnW,OAAQ,0BACRlgB,QAASE,EAAAC,EAAArJ,cAAA,wEAIfoJ,EAAAC,EAAArJ,cAACw/B,EAAD,CAAiBx1B,KAAM,CAACuhB,UAAU,EAAM2D,UAAU,GAAQnnB,MAAO,CAC/DR,EAAO9C,UAAY,CAACwE,SAAU,QAASxB,KAAM,QAAS0nB,OAAQ,kBAC5D/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KAAUpmB,EAAAC,EAAArJ,cAACy/B,GAAD,CAAOxN,eAAgB5rB,EAAK4rB,eAAgBiC,qBAAsB7tB,EAAK6tB,0BAC9E,KACL3sB,EAAO9C,UAAY,CAACwE,SAAUk2B,EAAiB13B,KAAM,OAAQoB,SAAUk1B,EAAQ,QAAAr4B,OAAWq4B,EAAS99B,IAAO,OAAQkvB,OAAQ,kBACxH/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KAAUpmB,EAAAC,EAAArJ,cAAC0/B,GAAD,CAAYn5B,KAAMw3B,EAAU9L,eAAgB5rB,EAAK4rB,oBACxD,KACL1qB,EAAO9C,UAAY,CAACwE,SAAUm2B,EAAuB33B,KAAM,aAAcoB,SAAUm1B,EAAc,cAAAt4B,OAAiBs4B,EAAe/9B,IAAO,aAAckvB,OAAQ,kBAC5J/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KACEpmB,EAAAC,EAAArJ,cAAC2/B,GAAD,CACE54B,WAAYi3B,EACZ9J,qBAAsB7tB,EAAK6tB,qBAC3BjC,eAAgB5rB,EAAK4rB,eACrB4J,oBAAqBx1B,EAAKw1B,oBAC1BC,gBAAiBz1B,EAAKy1B,gBACtBC,gBAAiB11B,EAAK01B,qBAGvB,KACL,CAAC9yB,SAAU,UAAWxB,KAAM,UAAW0nB,OAAQ,kBAC7C/lB,EAAAC,EAAArJ,cAACyK,EAAA,EAAI+kB,KAAL,KAAUpmB,EAAAC,EAAArJ,cAAC4/B,GAAD,YAGdx2B,EAAAC,EAAArJ,cAACypB,EAAA,EAAD,CAAQ/f,GAAI,KAAMgO,MAAO,CAACgS,MAAO,YAAallB,kBApNpCkG,aAiOHE,eAAWkjB,GAAWgQ,KCrOjB+B,QACW,cAA7BxgC,OAAOoB,SAASq/B,UAEe,UAA7BzgC,OAAOoB,SAASq/B,UAEhBzgC,OAAOoB,SAASq/B,SAASp4B,MACvB,2DCXNq4B,IAAS5Q,OACP/lB,EAAAC,EAAArJ,cAACggC,EAAA,EAAD,KACE52B,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,KACElB,EAAAC,EAAArJ,cAACsK,EAAA,EAAD,CAAO7C,KAAMjD,iBACX4E,EAAAC,EAAArJ,cAACigC,GAAD,SAILpgC,SAASC,eAAe,SDkHrB,kBAAmBswB,WACrBA,UAAU8P,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c65fed5f.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, animations: true, arrows: true, numbers: 'obvious'},\r\n    }));\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.orderBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.orderBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = _.flatten(game.rowsAndColumns.map(row => row.cells.filter(isCellAvailable)));\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(_.flatten(rowsAndColumns.map(row => row.cells.filter(cell => cell.player))), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, settings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, names, allowControl, matchGame,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const settings = user ? user.settings : defaultSettings;\r\n  \tconst isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <PlayPlayer\r\n                player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n                canSubmit={false}\r\n                submit={this.props.submit ? this.submit : null}\r\n                changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n                game={canSubmit ? game.previous : game}\r\n                settings={settings}\r\n                names={names}\r\n                allowControl={allowControl}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Board\r\n                game={displayGame}\r\n                transformation={transformation}\r\n                makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n                minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n                  this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n                )}\r\n                allowControl={displayGame === game ? allowControl : undefined}\r\n                settings={settings}\r\n                animated={settings.theme.animations}\r\n                showArrows={settings.theme.arrows}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <PlayPlayer\r\n                player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n                canSubmit={canSubmit}\r\n                submit={this.props.submit ? this.submit : null}\r\n                changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n                game={canSubmit ? game.previous : game}\r\n                settings={settings}\r\n                names={names}\r\n                allowControl={allowControl}\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <BoardTransformation onChange={this.onTransformationChange} />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  render() {\r\n    const {game, player, allowControl, names, settings, canSubmit, submit, changeAutoSubmitMoves} = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const isPlayersTurn = game.nextPlayer === player;\r\n    const playerWon = game.winner === player;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !game.finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={game.finished || player === Game.PLAYER_B}\r\n        color={game.finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: game.finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium settings={settings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            game.finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    settings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Button\r\n                          positive\r\n                          onClick={submit}\r\n                          className={'attention'}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? this.constructor.MOVE_TYPE_NAMES[game.moveType]\r\n                      : 'Waiting for opponent'\r\n                  )\r\n              )\r\n          )},\r\n          !game.finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={settings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  settings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n        {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n        {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: <SettingsContent settings={settings} updateSettings={this.updateSettings} />}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${game.compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play user={user} defaultSettings={client.settings} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDate).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Header, Tab} from \"semantic-ui-react\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\n\r\nclass TournamentsSegment extends Component{\r\n  render() {\r\n    const {user, usersById, chosenTournamentsInfo, selectLiveTournament, mine} = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Header as={'h2'}>\r\n          {mine ? 'My' : 'All'} {[\r\n            chosenTournamentsInfo.live.length ? `live (${chosenTournamentsInfo.live.length})` : null,\r\n          chosenTournamentsInfo.future.length ? `upcoming (${chosenTournamentsInfo.future.length})` : null,\r\n          ].filter(count => count).join(' and ')} tournaments\r\n        </Header>\r\n        {mine ? (\r\n          <Fragment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n          </Fragment>\r\n        ) : null}\r\n        <Tab menu={{pointing: true}} panes={[\r\n          {menuItem: `${chosenTournamentsInfo.future.length} future tournaments`, render: () => (\r\n            <TournamentList\r\n              user={user}\r\n              usersById={usersById}\r\n              tournaments={chosenTournamentsInfo.future}\r\n              selectLiveTournament={selectLiveTournament}\r\n            />\r\n          )},\r\n          {menuItem: `${chosenTournamentsInfo.live.length} running tournaments`, render: () => (\r\n            <TournamentList\r\n              user={user}\r\n              usersById={usersById}\r\n              tournaments={chosenTournamentsInfo.live}\r\n              selectLiveTournament={selectLiveTournament}\r\n            />\r\n          )},\r\n          {menuItem: `${chosenTournamentsInfo.finished.length} past tournaments`, render: () => (\r\n            <TournamentList\r\n              user={user}\r\n              usersById={usersById}\r\n              tournaments={chosenTournamentsInfo.finished}\r\n              selectLiveTournament={selectLiveTournament}\r\n            />\r\n          )},\r\n        ]} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentsSegment.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  chosenTournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  mine: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TournamentsSegment;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport TournamentsSegment from \"./TournamentsSegment\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {live, myLive, finished}, selectLiveGame, selectLiveTournament,\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <LogIn client={client} />\r\n        <LogOut client={client} />\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Header as={'h2'}>All live games ({live.length})</Header>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} tournamentsById={tournamentsById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <TournamentsSegment\r\n            user={user}\r\n            usersById={usersById}\r\n            chosenTournamentsInfo={{\r\n              future: tournamentsInfo.myFuture,\r\n              live: tournamentsInfo.myLive,\r\n              finished: tournamentsInfo.myFinished,\r\n            }}\r\n            selectLiveTournament={selectLiveTournament}\r\n            mine={true}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <TournamentsSegment\r\n            user={user}\r\n            usersById={usersById}\r\n            chosenTournamentsInfo={{\r\n              future: tournamentsInfo.future,\r\n              live: tournamentsInfo.live,\r\n              finished: tournamentsInfo.finished,\r\n            }}\r\n            selectLiveTournament={selectLiveTournament}\r\n            mine={false}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n            {menuItem: `${users.length} users`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={users}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Header, Icon, Label, Menu, Modal, Segment} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  getEditPositionUrl = () => {\r\n    const {gameGame} = this;\r\n    return `${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: 'a',\r\n                href: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'edit', content: 'Edit position', icon: 'edit', as: 'a', href: this.getEditPositionUrl(),\r\n                color: 'green', active: true, title: 'Click to open hotseat with this game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n            ]}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <GameList\r\n            user={user}\r\n            selectLiveGame={selectLiveGame}\r\n            games={myLiveGames}\r\n            usersById={usersById}\r\n            tournamentsById={tournamentsById}\r\n            terse\r\n            live\r\n            currentGameId={game ? game.id : null}\r\n          />\r\n          {otherLiveGames.length ? (\r\n            <GameList\r\n              user={user}\r\n              selectLiveGame={selectLiveGame}\r\n              games={otherLiveGames}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              terse\r\n              live\r\n              currentGameId={game ? game.id : null}\r\n            />\r\n          ) : null}\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {live, myLive}, tournamentsInfo: {byId: tournamentsById}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n          <Segment>\r\n            <Header as={'h2'}>Live games ({live.length})</Header>\r\n            <GameList user={user} usersById={byId} tournamentsById={tournamentsById} games={live} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport TournamentsSegment from \"./TournamentsSegment\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {/*<Segment>*/}\r\n        {/*  <TournamentList*/}\r\n        {/*    user={user}*/}\r\n        {/*    usersById={usersById}*/}\r\n        {/*    currentTournamentId={tournament.id}*/}\r\n        {/*    tournaments={tournamentsInfo.myLive.concat(tournamentsInfo.myFuture)}*/}\r\n        {/*    selectLiveTournament={selectLiveTournament}*/}\r\n        {/*    terse*/}\r\n        {/*  />*/}\r\n        {/*  {(tournamentsInfo.otherLive.length || tournamentsInfo.otherFuture.length) ? (*/}\r\n        {/*    <TournamentList*/}\r\n        {/*      user={user}*/}\r\n        {/*      usersById={usersById}*/}\r\n        {/*      tournaments={tournamentsInfo.otherLive.concat(tournamentsInfo.otherFuture)}*/}\r\n        {/*      selectLiveTournament={selectLiveTournament}*/}\r\n        {/*      terse*/}\r\n        {/*    />*/}\r\n        {/*  ) : null}*/}\r\n        {/*</Segment>*/}\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n        {/*<Play*/}\r\n        {/*  user={user}*/}\r\n        {/*  defaultSettings={client.settings}*/}\r\n        {/*  otherUser={otherUser}*/}\r\n        {/*  changeSettings={this.changeSettings}*/}\r\n        {/*  game={gameGame}*/}\r\n        {/*  matchGame={game}*/}\r\n        {/*  names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}*/}\r\n        {/*  allowControl={[userPlayer].filter(player => player)}*/}\r\n        {/*  submit={this.submit}*/}\r\n        {/*  challengeUser={this.challengeUser}*/}\r\n        {/*  stopChallengeUser={this.stopChallengeUser}*/}\r\n        {/*  challengedUser={challengedUser}*/}\r\n        {/*/>*/}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <TournamentsSegment\r\n              user={user}\r\n              usersById={usersById}\r\n              chosenTournamentsInfo={{\r\n                future: tournamentsInfo.myFuture,\r\n                live: tournamentsInfo.myLive,\r\n                finished: tournamentsInfo.myFinished,\r\n              }}\r\n              selectLiveTournament={selectLiveTournament}\r\n              mine={true}\r\n            />\r\n          </Segment>\r\n          <Segment>\r\n            <TournamentsSegment\r\n              user={user}\r\n              usersById={usersById}\r\n              chosenTournamentsInfo={{\r\n                future: tournamentsInfo.future,\r\n                live: tournamentsInfo.live,\r\n                finished: tournamentsInfo.finished,\r\n              }}\r\n              selectLiveTournament={selectLiveTournament}\r\n              mine={false}\r\n            />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  getLiveTournamentUrl(tournament) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/tournament/${tournament.id}`;\n  }\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = this.getLiveTournamentUrl(liveTournament);\n    } else {\n      tournamentUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n          client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: onlineTournamentLabel, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}