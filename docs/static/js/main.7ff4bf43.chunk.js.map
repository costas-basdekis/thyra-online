{"version":3,"sources":["utils.js","client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/PuzzleList.js","components/Lobby.js","components/Play.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreatePuzzle.js","components/EditPuzzle.js","components/Puzzles.js","components/OpeningsDatabase.js","App.js","serviceWorker.js","index.js"],"names":["copyToClipboard","text","textArea","document","createElement","body","appendChild","value","select","execCommand","removeChild","topicalThemes","from","moment","until","name","override","theme","cells","pieces","scheme","getApplicableSettingsAndNextUpdateDate","settings","on","_getTopicalThemeOverr","arguments","length","undefined","matchingTopicalTheme","find","topicalTheme","isSameOrBefore","isSameOrAfter","nextUpdatedDate","nextTopicalTheme","getTopicalThemeOverrideAndNextUpdateDate","useTopicalTheme","_","merge","applicableSettings","getPuzzleTitle","puzzle","options","type","concat","typeOptions","mateIn","Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","getElementById","newScriptEl","id","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","token","setSettings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","gotPuzzles","puzzlesInfo","puzzles","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotGame","game","filter","oldGame","client","gotDeletedGame","gameId","gotOpeningsDatabase","openingsDatabase","_objectSpread","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","meta","publishDatetime","createdDatetime","err","return","toISOString","preparePuzzles","onPuzzles","gotNonPersonalPuzzles","nonPersonalPuzzles","personalPuzzlesIds","mine","includes","gotPersonalPuzzles","personalPuzzles","other","getItem","password","removeItem","localSettings","parse","e","updateApplicableSettingsTimeout","emit","setInterval","autoSubmitMoves","confirmSubmitMoves","enableNotifications","rotateOpponent","animations","arrows","numbers","_this2","constructor","getDefaultSettings","_utils$getApplicableS","utils","applicableSettingsName","applicableSettingsOverride","clearTimeout","millisecondsUntilUpdate","diff","setTimeout","socket","process","available","callbacks","_i","_arr","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this3","myIndex","findIndex","slice","toConsumableArray","byId","fromPairs","online","offline","readyToPlayMe","challengedUser","_this4","live","finished","myLive","userIds","otherLive","myFinished","otherFinished","moves","data","tournament","_this5","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this6","otherPuzzles","userId","myPuzzles","public","private","isAfter","byGameId","groupBy","puzzlesStats","won","myPublic","myPublicUnattempted","usersStats","attempted","myPrivate","otherSolved","otherUnsolved","otherStarted","otherNotStarted","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","NavigationalTab_objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","missingStatusKeys","join","moveType","availableMovesMatrix","resignedPlayer","nextPlayer","canUndo","resign","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","row","y","cell","x","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","PLAYER_A","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","fullNotation","split","part","MOVE_REVERSE_NOTATION","move","fromMoves","compressedFullNotation","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","game_objectSpread","POSITION_REVERSE_NOTATION","fromPosition","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","func","hasOwnProperty","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","canTakeMoveBack","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this7","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","xs","_ref10","_ref12","_ref13","_this8","getAvailableMoves","getNextGames","getNextFullMoveGames","maxDepth","result","nextGamesLeft","results","lost","undetermined","loseLeaves","winLeaves","_this9","_getProperty","history","_this10","_this11","fullHistory","_this12","moveCount","_this13","chainCount","_this14","_this15","indexOf","previousInHistory","_this16","lastMovesInHistory","_this17","_this18","_this19","_this20","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","_this21","moveNotation","_this22","MOVE_NOTATION_COMPRESSION","_this23","getPositionNotation","_this24","_this25","startingWorkersPositionGame","normalisedPositionNotation","_this26","normalisedPositionNotationAndTransformationName","_this27","allPositionNotations","transformationNameByPositionNotation","_this28","entries","transformationMap","_ref14","_ref15","noTransformation","_ref16","_ref17","transformation","Classic","positionNotation","_this29","keys","sort","reverse","_ref18","_this30","lhs","rhs","_this31","playerCells","playerCell","areCellsNeighbours","_this32","_this33","getAvailableMovesMatrix","_this34","_this35","maximumLevel","_this36","isMoveAvailable","updates","_len","newCells","Array","_key","_newCells","update","state","_state$previous$loseL","_state$previous$winLe","shift","getSearchState","steps","rootState","i","advanceSearchState","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","String","fromCharCode","POSITION_NOTATION","_ref21","_ref22","levelStr","notations","_ref23","_ref24","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref25","_ref27","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","GameClassic","nextGame","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","position","inferMoves","previousRowsAndColumns","fromCoordinates","toCoordinates","isPlaceWorkersMove","buildCoordinates","canBeMissingBuildMove","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","previousCell","error","abs","config","_this37","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","reverseCoordinates","_this38","_this$getTransformati","getTransformationNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this38$getTransforma","getTransformationOldCoordinates","oldX","oldY","_this$getTransformati2","_this$getTransformati3","rowCount","columnCount","_ref19","_ref20","transformationMaxRotations","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","GameHex","Hex","GAME_TYPES","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","translate","gameType","point","getTranslate","getTranslateClassic","getTranslateHex","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","PieceHalloweenWitchHat","PieceHalloweenCauldron","PieceHalloweenBat","PieceHalloweenSpider","PieceHalloweenCat","PieceHalloweenTombstone","PieceHalloweenPumpkin","PieceHalloweenGhost","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","halloween-witch-hat","halloween-cauldron","halloween-bat","halloween-spider","halloween-cat","halloween-tombstone","halloween-pumpkin","halloween-ghost","PieceDefinitions","values","Definitions","BaseCellDefinitions","paths","border","level0","level1","level2","level3","level4","defaultBorder","width","height","defaultBorderHex","center","PI","angle","cos","sin","defineCellDefinitions","CellDefinitionsFor","_PureComponent2","Cell_BaseCellDefinitions","OriginalCellDefinitions","HalloweenCellDefinitions","CellDefinitions","cellDefinitionsStyleMap","CellDefinitionsStyle","original","halloween","Cell","previousLevel","currentLevel","levelsAnimate","React","createRef","prevProps","prevState","snapshot","levelAnimate","current","beginElement","allowControl","_this$props2$theme","_this$props2$theme$ce","_this$props2$theme$pi","_this$props2$theme$ro","_this$state","isPlayerAOpponent","isPlayerBOpponent","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","showArrows","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","thisMoveType","gameWithBuildMove","_move$build","build","thisPlayer","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","animateTransform","translateTo","translateFrom","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","gameGameSelector","createSelector","serializedGame","deserialize","selectLiveGame","usersById","tournamentsById","puzzlesByGameId","terse","currentGameId","tournamentId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","Card","GameList_objectSpread","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","get","GameList","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","TournamentList_objectSpread","TournamentList","visibleTournaments","TournamentList_TournamentCard","PuzzleCard","positionGameSelector","startingPosition","selectPuzzle","gamesById","currentPuzzleId","positionGame","userPuzzle","userIsCreator","userInProgress","userSolvedPuzzle","userMadeMistakes","mistakes","PuzzleList_objectSpread","1","2","3","difficulty","maxDifficulty","title","isMyPuzzle","fromNow","toNow","averagePerfectScore","perfect","imperfect","PuzzleList","visiblePuzzles","PuzzleList_PuzzleCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","perfectStars","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$puzzlesI","selectLivePuzzle","render","components_GameList","puzzlesList","components_PuzzleList","components_CreateTournament","_ref11","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","Play_objectSpread","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","resigning","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","canAnyPlayerSubmit","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","submitAndDisableConfirm","updateSettings","isPlayerControlled","previousGame","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","lastVisibleGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","href","navigator","catch","alert","switchToClassic","switchTo","switchToHex","open","active","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themeCellsOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","Settings_objectSpread","updateAutoSubmitMove","updateConfirmSubmitMoves","updateEnableNotifications","updateThemeUseTopicalTheme","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","updateThemeCells","_this$props$settings","_theme$cells","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","params","playersInfoSelector","userPlayer","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","admin","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","_Game$Classic","_Game$Classic2","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay_objectSpread","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","discard","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","0","4","b","EditPositionBoard","updatePosition","newCell","newPosition","CreatePuzzle","editing","currentStep","tree","onCreatePuzzle","getTree","onDiscardPuzzle","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicatePuzzle","duplicatePuzzle","newPuzzle","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","puzzleResponse","deleteCurrentStep","_this$duplicatePuzzle2","removeStep","editPuzzle","createPuzzle","cleanedPuzzle","updatePuzzle","createOrUpdatePuzzle","discardPuzzle","initialPuzzle","fillGames","prevPuzzles","getMatchingPuzzles","source","puzzleStep","CreatePuzzle_objectSpread","response","treePathStep","oldStep","isArray","getNextTree","nextTree","Puzzles_PuzzleHeader","rowIndex","columnIndex","CreatePuzzle_PuzzleForm","PuzzleForm","editingPosition","convertedValue","valueConversion","newPuzzleToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this4$state","discardPosition","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","EditPuzzle","dismissUrlPuzzleError","components_CreatePuzzle","Puzzles","_this$props$puzzlesIn","components_EditPuzzle","Puzzles_PuzzlePlayer","PuzzlePlayer","puzzleId","getResumedPuzzleGame","submittedGame","wrongMove","askServer","sharePuzzle","resultingGame","userPuzzleStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","invalidPlayerPositions","v","validPlayerResponse","submitPuzzleMove","_ret","success","PuzzleHeader","getDifficultyStars","OpeningsDatabase","selectStep","selectStepIndex","goToStart","selectPathFromUrlPosition","getPathForNewOpeningsDatabase","_this$constructor$get","pastGame","displayPosition","getPathForPositions","positions","_this$props$gamesInfo","pathStep","OpeningsDatabase_OpeningsDatabaseHistoryCard","OpeningsDatabase_OpeningsDatabaseCard","gameIds","OpeningsDatabaseCard","allMoves","winPercentageColourSelector","playerAWinPercentage","getValueByLevel","winPercentageColours","winDiffPercentageIconSelector","previousPlayerAWinPercentage","playerAWinDiffPercentage","winDiffPercentageIcons","winDiffPercentageColourSelector","winDiffPercentageColours","gameCountSizesSelector","gameCountSizes","levels","maxValue","playerBWinPercentage","winPercentageColour","winDiffPercentageIcon","winDiffPercentageColour","gameCountSize","Progress","percent","progress","OpeningsDatabaseHistoryCard","App","liveGame","liveTournament","livePuzzle","gameUrl","tournamentUrl","puzzleUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","subtract","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OpeningsDatabase","components_OnlineTournament","components_Hotseat","components_Puzzles","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"qjBAGaA,EAAkB,SAAAC,GAC7B,IAAMC,EAAWC,SAASC,cAAc,YAGxCD,SAASE,KAAKC,YAAYJ,GAC1BA,EAASK,MAAQN,EACjBC,EAASM,SACTL,SAASM,YAAY,QACrBN,SAASE,KAAKK,YAAYR,IAGfS,EAAgB,CAC3B,CACEC,KAAMC,IAAO,uBACbC,MAAOD,IAAO,uBACdE,KAAM,YACNC,SAAU,CACRC,MAAO,CACLC,MAAO,YACPC,OAAQ,kBACRC,OAAQ,gBA4BHC,EAAyC,SAACC,EAAUC,GAAO,IAAAC,EAtBvB,WAAmB,IAAlBD,EAAkBE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAbZ,MAC/Ce,EAAuBjB,EAAckB,KAAK,SAAAC,GAAY,OAC1DA,EAAalB,KAAKmB,eAAeR,IAAOO,EAAahB,MAAMkB,cAAcT,KAE3E,GAAIK,EACF,MAAO,CACLZ,SAAUY,EAAqBZ,SAC/BiB,gBAAiBL,EAAqBd,MACtCC,KAAMa,EAAqBb,MAI/B,IAAMmB,EAAmBvB,EAAckB,KAAK,SAAAC,GAAY,OACtDA,EAAalB,KAAKoB,cAAcT,KAElC,OAAIW,EACK,CAAClB,SAAU,KAAMiB,gBAAiBC,EAAiBtB,KAAMG,KAAM,MAGjE,CAACC,SAAU,KAAMiB,gBAAiB,KAAMlB,KAAM,MAIXoB,CAAyCZ,GAA5EP,EAD+DQ,EAC/DR,SAAUiB,EADqDT,EACrDS,gBAAiBlB,EADoCS,EACpCT,KAKlC,OAJIO,EAASL,MAAMmB,iBAAmBpB,IACpCM,EAAWe,IAAEC,MAAM,GAAIhB,EAAUN,IAG5B,CAACuB,mBAAoBjB,EAAUW,kBAAiBjB,WAAUD,SAGtDyB,EAAiB,SAAAC,GAC5B,OAAQA,EAAOC,QAAQC,MACrB,IAAK,OACH,sBAAAC,OAAuBH,EAAOC,QAAQG,YAAYC,QACpD,IAAK,YACH,uBAAAF,OAAwBH,EAAOC,QAAQG,YAAYC,QACrD,QACE,MAAO,+OC/Db,IAEMC,aAqBJ,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAFdG,uBAAyB,KAEXH,KA4FdI,eAAiB,WACf,IAAKC,OAAOC,GAAGC,YAKb,OAJAC,cAAcT,EAAKI,wBACnBJ,EAAKI,uBAAyB,KAC9BJ,EAAKU,kBACLC,QAAQC,IAAI,qBAGd,IAAMC,EAAc1D,SAAS2D,eAAe,oBACtCC,EAAc5D,SAASC,cAAc,UAC3C2D,EAAYC,GAAKH,EAAYG,GAC7BD,EAAYpB,KAAOkB,EAAYlB,KAC/BoB,EAAYE,IAAMJ,EAAYI,IAC9BJ,EAAYK,SACZ/D,SAASgE,KAAKC,OAAOL,GACrBJ,QAAQU,KAAK,0CA3GDpB,KAkJdqB,OAAS,WACPhB,OAAOiB,SAASD,QAAO,IAnJXrB,KAsJduB,cAAgB,WACdxB,EAAKyB,UACLzB,EAAK0B,WAAY,EACjB1B,EAAK2B,UAAUC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cAzJjCzB,KA4Jd6B,iBAAmB,WACjB9B,EAAK0B,WAAY,EACjB1B,EAAK+B,cAAe,EACpB/B,EAAKgC,aAAaJ,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0B,cA/JpCzB,KAkKdgC,QAAU,SAAAC,GACJA,IACFlC,EAAKgB,GAAKkB,EAAKlB,GACfhB,EAAKmC,SAAWD,EAAKnE,KACrBiC,EAAKoC,MAAQF,EAAKE,MAClBpC,EAAKqC,YAAYH,EAAK5D,UACtBgE,aAAaC,QAAQ,UAAWvC,EAAKgB,IACrCsB,aAAaC,QAAQ,YAAavC,EAAKmC,UACvCG,aAAaC,QAAQ,aAAcvC,EAAKoC,OACxCE,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUzC,EAAK1B,YAE5D0B,EAAKkC,KAAOA,EACZlC,EAAK0C,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAASK,KACrClC,EAAK2C,SAAS3C,EAAK4C,UAAUC,OAC7B7C,EAAK8C,WAAW9C,EAAK+C,YAAYC,UAhLrB/C,KAmMd0C,SAAW,SAAAE,IACTA,EAAQxD,IAAE4D,QAAQJ,EAAO,CAAC,SAAAX,GAAI,OAAIA,EAAKgB,wBAA0B,EAAI,GAAG,QAAS,YAAa,CAAC,MAAO,OAAQ,UACxGC,QAAQ,SAACjB,EAAMkB,GACnBlB,EAAKmB,KAAOD,EAAQ,IAEtBpD,EAAK4C,UAAY5C,EAAKsD,aAAaT,GACnC7C,EAAKuD,QAAQ3B,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK4C,cAzM/B3C,KAwOduD,SAAW,SAAAC,GACTA,EAAQpE,IAAEqE,OAAOD,EAAO,CAAC,gBAAiB,MAAO,CAAC,OAAQ,SAC1DzD,EAAK2D,UAAY3D,EAAK4D,aAAaH,GACnCzD,EAAK6D,QAAQjC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK2D,cA3O/B1D,KA8Od6D,QAAU,SAAAC,GACR,IAAMN,EAAQzD,EAAK2D,UAAUF,MAAMO,OAAO,SAAAC,GAAO,OAAIA,EAAQjD,KAAO+C,EAAK/C,KAAIpB,OAAO,CAACmE,IACrFG,EAAOV,SAASC,IAhPJxD,KAmPdkE,eAAiB,SAAAC,GACf,IAAMX,EAAQzD,EAAK2D,UAAUF,MAAMO,OAAO,SAAAC,GAAO,OAAIA,EAAQjD,KAAOoD,IACpEF,EAAOV,SAASC,IArPJxD,KAwPdoE,oBAAsB,SAAAC,GACpBtE,EAAKsE,iBAAmBA,EACxBtE,EAAK2D,+VAALY,CAAA,GACKvE,EAAK2D,UADV,CAEEW,iBAAkBtE,EAAKsE,mBAEzBtE,EAAK6D,QAAQjC,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK2D,cA9P/B1D,KA0SduE,eAAiB,SAAAC,GACfA,EAAcpF,IAAEqE,OAAOe,EAAa,CAAC,gBAAiB,cAAe,kBAAmB,MAAO,CAAC,OAAQ,OAAQ,OAAQ,SACxHzE,EAAK0E,gBAAkB1E,EAAK2E,mBAAmBF,GAC/CzE,EAAK4E,cAAchD,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK0E,oBA7SrCzE,KAiVd6C,WAAa,SAAAE,GAAW,IAAA6B,GAAA,EAAAC,GAAA,EAAAC,OAAApG,EAAA,IACtB,QAAAqG,EAAAC,EAAqBjC,EAArBkC,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA8B,KAAnBpF,EAAmBuF,EAAAzH,MAC5BkC,EAAO6F,KAAKC,gBAAkB9F,EAAO6F,KAAKC,gBAAkB1H,IAAO4B,EAAO6F,KAAKC,iBAAmB,KAClG9F,EAAO6F,KAAKE,gBAAkB/F,EAAO6F,KAAKE,gBAAkB3H,IAAO4B,EAAO6F,KAAKE,iBAAmB,MAH9E,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAKtB/B,EAAU3D,IAAEqE,OAAOV,EAAS,CAC1B,SAAAvD,GAAM,OAAIA,EAAO6F,KAAKC,gBAAkB9F,EAAO6F,KAAKC,gBAAgBI,cAAgB,MACpF,SAAAlG,GAAM,OAAIA,EAAO6F,KAAKE,gBAAkB/F,EAAO6F,KAAKE,gBAAgBG,cAAgB,MACpF,MACC,CAAC,OAAQ,OAAQ,SACpB3F,EAAK+C,YAAc/C,EAAK4F,eAAe5C,GACvChD,EAAK6F,UAAUjE,IAAI,SAAAC,GAAQ,OAAIA,EAAS7B,EAAK+C,gBA5VjC9C,KA+Vd6F,sBAAwB,SAAAC,GACtB,IAAMC,EAAqBhG,EAAK+C,YAAYkD,KAAKrE,IAAI,SAAAnC,GAAM,OAAIA,EAAOuB,KACtEhB,EAAK8C,WAAWiD,EAAmB/B,OAAO,SAAAvE,GAAM,OAAKuG,EAAmBE,SAASzG,EAAOuB,MAAKpB,OAAOI,EAAK+C,YAAYkD,QAjWzGhG,KAoWdkG,mBAAqB,SAAAC,GACnB,IAAMJ,EAAqBI,EAAgBxE,IAAI,SAAAnC,GAAM,OAAIA,EAAOuB,KAChEhB,EAAK8C,WAAWsD,EAAgBxG,OAAOI,EAAK+C,YAAYsD,MAAMrC,OAAO,SAAAvE,GAAM,OAAKuG,EAAmBE,SAASzG,EAAOuB,SArWnHf,KAAKe,GAAKsB,aAAagE,QAAQ,YAAc,KAC7CrG,KAAKkC,SAAWG,aAAagE,QAAQ,cAAgB,KACrD,IAAMC,EAAWjE,aAAagE,QAAQ,kBAAoB,KAC1DhE,aAAakE,WAAW,iBACxBvG,KAAKmC,MAAQE,aAAagE,QAAQ,eAAiBC,EACnD,IACIjI,EADEmI,EAAgBnE,aAAagE,QAAQ,kBAAoB,OAE/D,IACEhI,EAAWkE,KAAKkE,MAAMD,GACtB,MAAOE,GACPrI,EAAW,KAEb2B,KAAK2G,gCAAkC,KACvC3G,KAAKoC,YAAY/D,GACZgC,OAAOC,KACVD,OAAOC,GAAK,iBAAO,CACjBhC,GAAI,kBAAMoC,QAAQU,KAAK,8BACvBwF,KAAM,kBAAMlG,QAAQU,KAAK,8BACzBb,aAAa,IAEfF,OAAOC,GAAGC,aAAc,EACxBP,KAAKG,uBAAyB0G,YAAY7G,KAAKI,eAAgB,MAGjEJ,KAAK8B,cAAe,EAEpB9B,KAAK0B,UAAY,GACjB1B,KAAK+B,aAAe,GACpB/B,KAAKyC,OAAS,GACdzC,KAAKsD,QAAU,GACftD,KAAK4D,QAAU,GACf5D,KAAK2E,cAAgB,GACrB3E,KAAK4F,UAAY,GAEjB5F,KAAKS,mFAtDL,MAAO,CACLqG,iBAAiB,EACjBC,oBAAoB,EACpBC,qBAAqB,EACrBhJ,MAAO,CACLmB,iBAAiB,EACjBlB,MAAO,WACPC,OAAQ,OACRC,OAAQ,GACR8I,gBAAgB,EAChBC,YAAY,EACZC,QAAQ,EACRC,QAAS,iEA6CH/I,GAAU,IAAAgJ,EAAArH,KAElBA,KAAK3B,SADHA,EACce,IAAEC,MAAMW,KAAKsH,YAAYC,qBAAsBlJ,GAE/C2B,KAAKsH,YAAYC,qBAJf,IAAAC,EAM0CC,EAA6CzH,KAAK3B,UAAzGiB,EANakI,EAMblI,mBAAoBN,EANPwI,EAMOxI,gBAAiBjB,EANxByJ,EAMwBzJ,SAAUD,EANlC0J,EAMkC1J,KAQtD,GAPAkC,KAAKV,mBAAqBA,EAC1BU,KAAK0H,uBAAyB5J,EAC9BkC,KAAK2H,2BAA6B5J,EAC9BiC,KAAK2G,kCACPiB,aAAa5H,KAAK2G,iCAClB3G,KAAK2G,gCAAkC,MAErC3H,EAAiB,CACnB,IAAM6I,EAA0B7I,EAAgB8I,KAAKlK,OACrDoC,KAAK2G,gCAAkCoB,WAAW,WAChDV,EAAKjF,YAAYiF,EAAKhJ,UACtBgJ,EAAK5E,OAAOd,IAAI,SAAAC,GAAQ,OAAIA,EAASyF,EAAKpF,SACzC4F,yCAKL7H,KAAKgI,OAAS3H,OAAOC,GAAG2H,6BACxBjI,KAAKkI,WAAalI,KAAKgI,OAAOzH,YAC9BP,KAAKyB,WAAY,EACjBzB,KAAKgI,OAAO1J,GAAG,UAAW0B,KAAKuB,eAC/BvB,KAAKgI,OAAO1J,GAAG,aAAc0B,KAAK6B,kBAClC7B,KAAKgI,OAAO1J,GAAG,SAAU0B,KAAKqB,QAE9BrB,KAAKiC,KAAO,KACZjC,KAAKgI,OAAO1J,GAAG,OAAQ0B,KAAKgC,SAE5BhC,KAAK2C,UAAY3C,KAAKqD,aAAa,IACnCrD,KAAKgI,OAAO1J,GAAG,QAAS0B,KAAK0C,UAE7B1C,KAAKqE,iBAAmB,KACxBrE,KAAK0D,UAAY1D,KAAK2D,aAAa,IACnC3D,KAAKgI,OAAO1J,GAAG,QAAS0B,KAAKuD,UAC7BvD,KAAKgI,OAAO1J,GAAG,OAAQ0B,KAAK6D,SAC5B7D,KAAKgI,OAAO1J,GAAG,eAAgB0B,KAAKkE,gBACpClE,KAAKgI,OAAO1J,GAAG,oBAAqB0B,KAAKoE,qBAEzCpE,KAAKyE,gBAAkBzE,KAAK0E,mBAAmB,IAC/C1E,KAAKgI,OAAO1J,GAAG,cAAe0B,KAAKuE,gBAEnCvE,KAAK8C,YAAc9C,KAAK2F,eAAe,IACvC3F,KAAKgI,OAAO1J,GAAG,UAAW0B,KAAK6F,uBAC/B7F,KAAKgI,OAAO1J,GAAG,mBAAoB0B,KAAKkG,oBAExClG,KAAKwB,4CAqBG2G,GACR,QAAAC,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,gBAAiB,aAAlGD,EAAAC,EAAA5J,OAAA2J,IAAgH,CAA3G,IAAMtK,EAAIuK,EAAAD,GACPxG,EAAWuG,EAAUrK,GACvB8D,GACF5B,KAAKlC,GAAMwK,KAAK1G,wCAKVuG,GACV,QAAAI,EAAA,EAAAC,EAAmB,CAAC,YAAa,eAAgB,SAAU,UAAW,UAAW,aAAjFD,EAAAC,EAAA/J,OAAA8J,IAA+F,CAA1F,IAAMzK,EAAI0K,EAAAD,GACP3G,EAAWuG,EAAUrK,GACvB8D,GACFxC,IAAEqJ,KAAKzI,KAAKlC,GAAO8D,sCAMvB5B,KAAKgI,OAAOpB,KAAK,cAAe,CAC9B8B,WAzJa,GA0Jb3H,GAAIf,KAAKe,GACTjD,KAAMkC,KAAKkC,SACXC,MAAOnC,KAAKmC,MACZ9D,SAAU2B,KAAK3B,yCAIbP,EAAMwI,EAAUqC,GACpB3I,KAAKgI,OAAOpB,KAAK,SAAU,CAAC8B,WAlKb,GAkKyB5K,OAAMwI,WAAUqC,gDAIxD3I,KAAKgI,OAAOpB,KAAK,kDAoCJ9I,GACbkC,KAAKgI,OAAOpB,KAAK,kBAAmB9I,0CAGvBwI,GACbtG,KAAKgI,OAAOpB,KAAK,kBAAmBN,0CAGvBjI,GACb2B,KAAKgI,OAAOpB,KAAK,kBAAmBvI,6CAGpBuK,GAChB5I,KAAKgI,OAAOpB,KAAK,uBAAwBgC,wCAY9BhG,GAAO,IACdiG,EADcC,EAAA9I,KAElB,GAAIA,KAAKiC,KAAM,CACb,IAAM8G,EAAUnG,EAAMoG,UAAU,SAAA/G,GAAI,OAAIA,EAAKlB,KAAO+H,EAAK7G,KAAKlB,KAC1DgI,GAAW,GACbF,EAAajG,EAAMqG,MAAM,EAAGF,GAASpJ,OAAOiD,EAAMqG,MAAMF,EAAU,IAClEnG,EAAK,CAAIA,EAAMmG,IAAVpJ,OAAAM,OAAAiJ,EAAA,EAAAjJ,CAAuB4I,KAE5BA,EAAajG,OAGfiG,EAAajG,EAEf,IAAMuG,EAAO/J,IAAEgK,UAAUxG,EAAMjB,IAAI,SAAAM,GAAI,MAAI,CAACA,EAAKlB,GAAIkB,MAC/CoH,EAASzG,EAAMmB,OAAO,SAAA9B,GAAI,OAAIA,EAAKoH,SACnCT,EAAcS,EAAOtF,OAAO,SAAA9B,GAAI,MAAI,EAAC,GAAM6G,EAAK7G,MAAO6G,EAAK7G,KAAKlB,IAAWkF,SAAShE,EAAK2G,eAChG,MAAO,CACLhG,QACAuG,OACA/C,MAAOyC,EACPQ,SACAC,QAAS1G,EAAMmB,OAAO,SAAA9B,GAAI,OAAKA,EAAKoH,SACpCT,cACAW,cAAeX,EAAY7E,OAAO,SAAA9B,GAAI,OAAI6G,EAAK7G,MAAQ6G,EAAK7G,KAAKlB,KAAOkB,EAAK2G,cAC7EY,eAAgBxJ,KAAKiC,MAAQkH,EAAKnJ,KAAKiC,KAAK2G,cAAwB,2CA6B3DpF,GAAO,IAAAiG,EAAAzJ,KACZ0J,EAAOlG,EAAMO,OAAO,SAAAD,GAAI,OAAKA,EAAK6F,WAClCA,EAAWnG,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAK6F,WAC3C,MAAO,CACLnG,QACA2F,KAAM/J,IAAEgK,UAAU5F,EAAM7B,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MAC9C4F,OACAE,OAAQ5J,KAAKiC,KAAOyH,EAAK3F,OAAO,SAAAD,GAAI,OAAIA,EAAK+F,QAAQ5D,SAASwD,EAAKxH,KAAKlB,MAAO,GAC/E+I,UAAW9J,KAAKiC,KAAOyH,EAAK3F,OAAO,SAAAD,GAAI,OAAKA,EAAK+F,QAAQ5D,SAASwD,EAAKxH,KAAKlB,MAAO2I,EACnFC,WACAI,WAAY/J,KAAKiC,KAAO0H,EAAS5F,OAAO,SAAAD,GAAI,OAAIA,EAAK+F,QAAQ5D,SAASwD,EAAKxH,KAAKlB,MAAO,GACvFiJ,cAAehK,KAAKiC,KAAO0H,EAAS5F,OAAO,SAAAD,GAAI,OAAKA,EAAK+F,QAAQ5D,SAASwD,EAAKxH,KAAKlB,MAAO2I,EAC3F1D,KAAMhG,KAAKiC,KAAOuB,EAAMO,OAAO,SAAAD,GAAI,OAAIA,EAAK+F,QAAQ5D,SAASwD,EAAKxH,KAAKlB,MAAO,GAC9EsD,iBAAkBrE,KAAKqE,yDAIZP,EAAMmG,GACnBjK,KAAKgI,OAAOpB,KAAK,oBAAqB,CAAC7F,GAAI+C,EAAK/C,GAAIkJ,mDAGrCC,GACflK,KAAKgI,OAAOpB,KAAK,oBAAqBsD,0CAGzBC,GACbnK,KAAKgI,OAAOpB,KAAK,kBAAmBuD,EAAWpJ,4CAGjCoJ,GACdnK,KAAKgI,OAAOpB,KAAK,mBAAoBuD,EAAWpJ,4CAGlCoJ,GACdnK,KAAKgI,OAAOpB,KAAK,mBAAoBuD,EAAWpJ,4CAGlCoJ,GACdnK,KAAKgI,OAAOpB,KAAK,mBAAoBuD,EAAWpJ,+CAS/ByD,GAAa,IAAA4F,EAAApK,KACxBqK,EAAS7F,EAAYT,OAAO,SAAAoG,GAAU,OAAKA,EAAWG,UACtDZ,EAAOlF,EAAYT,OAAO,SAAAoG,GAAU,OAAIA,EAAWG,UAAYH,EAAWR,WAC1EY,EAAgBF,EAAO1K,OAAO+J,GAC9BC,EAAWnF,EAAYT,OAAO,SAAAoG,GAAU,OAAIA,EAAWR,WAC7D,MAAO,CACLnF,cACA2E,KAAM/J,IAAEgK,UAAU5E,EAAY7C,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MACpDuG,SAAQX,OAAMa,gBAAeZ,WAC7Ba,SAAUxK,KAAKiC,KAAOoI,EAAOtG,OAAO,SAAAoG,GAAU,OAAIA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO,GAC/F6I,OAAQ5J,KAAKiC,KAAOyH,EAAK3F,OAAO,SAAAoG,GAAU,OAAIA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO,GAC3F0J,gBAAiBzK,KAAKiC,KAAOsI,EAAcxG,OAAO,SAAAoG,GAAU,OAAIA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO,GAC7GgJ,WAAY/J,KAAKiC,KAAO0H,EAAS5F,OAAO,SAAAoG,GAAU,OAAIA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO,GACnG2J,YAAa1K,KAAKiC,KAAOyH,EAAK3F,OAAO,SAAAoG,GAAU,OAAKA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO2I,EACjGI,UAAW9J,KAAKiC,KAAOoI,EAAOtG,OAAO,SAAAoG,GAAU,OAAKA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAOsJ,EACjGM,mBAAoB3K,KAAKiC,KAAOsI,EAAcxG,OAAO,SAAAoG,GAAU,OAAKA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAOsJ,EACjHL,cAAehK,KAAKiC,KAAO0H,EAAS5F,OAAO,SAAAoG,GAAU,OAAKA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO4I,EACvG3D,KAAMhG,KAAKiC,KAAOuC,EAAYT,OAAO,SAAAoG,GAAU,OAAIA,EAAWN,QAAQ5D,SAASmE,EAAKnI,KAAKlB,MAAO,yCAIvFvB,GACXQ,KAAKgI,OAAOpB,KAAK,gBAAiBpH,wCAGvBA,GACXQ,KAAKgI,OAAOpB,KAAK,gBAAiBpH,4CAGnBA,EAAQoL,GACvB5K,KAAKgI,OAAOpB,KAAK,sBAAuB,CAAC7F,GAAIvB,EAAOuB,GAAI6J,gDA2B3C7H,GAAS,IAAA8H,EAAA7K,KAChB8K,EAAe9K,KAAKiC,KAAOc,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAOuL,SAAWF,EAAK5I,KAAKlB,KAAMgC,EACtFiI,EAAYhL,KAAKiC,KAAOc,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAOuL,SAAWF,EAAK5I,KAAKlB,KAAM,GACzF,MAAO,CACLgC,UACAkI,OAAQlI,EAAQgB,OAAO,SAAAvE,GAAM,OAAIA,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgBxG,mBACnFoM,QAASnI,EAAQgB,OAAO,SAAAvE,GAAM,OAAKA,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgB6F,YACrFhC,KAAM/J,IAAEgK,UAAUrG,EAAQpB,IAAI,SAAAmC,GAAI,MAAI,CAACA,EAAK/C,GAAI+C,MAChDsH,SAAUpL,KAAKiC,KAAO7C,IAAEiM,QAAQtI,EAAQgB,OAAO,SAAAvE,GAAM,OACnDA,EAAO6F,KAAKlB,SACR3E,EAAOuL,SAAWF,EAAK5I,KAAKlB,IAAO8J,EAAK5I,KAAKqJ,aAAa9L,EAAOuB,KAAO8J,EAAK5I,KAAKqJ,aAAa9L,EAAOuB,IAAIsE,KAAKkG,OACjH,SAAA/L,GAAM,OAAIA,EAAO6F,KAAKlB,SAAU,GACpC6B,KAAMgF,EACNQ,SAAUR,EAAUjH,OAAO,SAAAvE,GAAM,OAAIA,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgBxG,mBACvF2M,oBAAqBT,EAAUjH,OAAO,SAAAvE,GAAM,OAAIA,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgBxG,mBAAqBU,EAAOkM,WAAWC,YACzIC,UAAWZ,EAAUjH,OAAO,SAAAvE,GAAM,OAAKA,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgB6F,YACzF/E,MAAO0E,EACPe,YAAa7L,KAAKiC,KAAO6I,EAAa/G,OAAO,SAAAvE,GAAM,OAAIqL,EAAK5I,KAAKc,QAAQvD,EAAOuB,KAAO8J,EAAK5I,KAAKc,QAAQvD,EAAOuB,IAAIsE,KAAKkG,MAAO,GAChIO,cAAe9L,KAAKiC,KAAO6I,EAAa/G,OAAO,SAAAvE,GAAM,OAAKqL,EAAK5I,KAAKc,QAAQvD,EAAOuB,MAAQ8J,EAAK5I,KAAKc,QAAQvD,EAAOuB,IAAIsE,KAAKkG,MAAOT,EACpIiB,aAAc/L,KAAKiC,KAAO6I,EAAa/G,OAAO,SAAAvE,GAAM,OAAIqL,EAAK5I,KAAKc,QAAQvD,EAAOuB,KAAO8J,EAAK5I,KAAKc,QAAQvD,EAAOuB,IAAIsE,KAAKiF,UAAYO,EAAK5I,KAAKc,QAAQvD,EAAOuB,IAAIsE,KAAKkG,MAAO,GAC/KS,gBAAiBhM,KAAKiC,KAAO6I,EAAa/G,OAAO,SAAAvE,GAAM,OAAKqL,EAAK5I,KAAKc,QAAQvD,EAAOuB,MAAQ8J,EAAK5I,KAAKc,QAAQvD,EAAOuB,IAAIsE,KAAKiF,UAAWQ,YAKnI7G,EAAS,IAAInE,EAC1BO,OAAO4D,OAASA,EAEDnE,yQCtZTmM,uLACSrB,GAAM,IACVsB,EAASlM,KAAKmM,MAAdD,MACP,SAAAvM,OAAUuM,EAAME,IAAIC,SAAS,KAAOH,EAAME,IAAInD,MAAM,GAAI,GAAKiD,EAAME,KAAnEzM,OAAyEiL,EAAI,IAAAjL,OAAOiL,GAAS,sEAGrD,IAAA7K,EAAAC,KAAAsM,EACOtM,KAAKmM,MAA7CI,EADiCD,EACjCC,MAAOC,EAD0BF,EAC1BE,aAAcN,EADYI,EACZJ,MAAO5K,EADKgL,EACLhL,SAC/BmL,EAAY,KACZC,EAAc,KACdC,EAAWT,EAAME,IAwCrB,MAAO,CAACQ,cAtCcL,EACnB5K,IAAI,SAACkL,EAAMC,GAAP,MAAyB,CAACD,EAAMC,KACpC/I,OAAO,SAAAgJ,GAAA,OAAA9M,OAAA+M,EAAA,EAAA/M,CAAA8M,EAAA,QACPpL,IAAI,SAAAsL,EAAwB9J,GAAU,IAAA+J,EAAAjN,OAAA+M,EAAA,EAAA/M,CAAAgN,EAAA,GAAhCJ,EAAgCK,EAAA,GAA1BJ,EAA0BI,EAAA,GACrC,IAAKL,EACH,OAAO,KAGT,IAAMM,EAAKpN,EAAKqN,aAAaP,EAAKjC,MAC9BkC,IAAkBN,IACpBC,EAAYU,GAEd,IAAME,OAA6B3O,IAAlBmO,EAAKQ,SAAyBtN,EAAKqN,aAAaP,EAAKQ,UAAYF,EAC9E7L,EAASgM,SAASC,WAAWF,KAC/BX,EAAcvJ,EACdwJ,EAAWQ,GAGb,IAAMK,EACqB,kBAAlBX,EAAKW,SACR,CAACC,QAASZ,EAAKW,UACfX,EAAKW,SAEX,4VAAOE,CAAA,CACLP,MACGN,EAFL,CAGEW,SACEG,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAKC,KAAN7N,OAAA8N,OAAA,CACEC,IAAKnB,EAAKjC,KACVqD,GAAIC,IACJf,GAAIE,GACAG,EAJN,CAKEW,KAAMtB,EAAKsB,MAAQX,EAASW,YAKnCpK,OAAO,SAAAqK,GAAY,OAAIA,IACH3B,YAAWC,cAAaC,6CAGxC,IAAA0B,EACiDrO,KAAKmM,MAAtDmC,EADAD,EACAC,IAAKC,EADLF,EACKE,KAAMrC,EADXmC,EACWnC,MAAOsC,EADlBH,EACkBG,iBAAkBC,EADpCJ,EACoCI,UADpCC,EAEmD1O,KAAK2O,0CAAxD/B,EAFA8B,EAEA9B,cAAeH,EAFfiC,EAEejC,UAAWC,EAF1BgC,EAE0BhC,YAAaC,EAFvC+B,EAEuC/B,SAE9C,OACEgB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACiB,OAAdnC,EACCkB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAUC,OAAK,EAACnR,KAAMuO,EAAME,IAAKe,GAAIV,KAErC,KACJkB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOjE,KAAM+B,GACXgB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD9O,OAAA8N,OAAA,CACEQ,KAAMA,EACNC,iBAAkBA,GACdF,EAHN,CAIE/B,MAAOK,EACPF,YAAaA,EACb+B,UAAWA,cAvEOO,aA6F9B/C,EAAgBgD,aAAe,CAC7BT,kBAAkB,EAClBhC,aAAc,GAGD0C,sBAAWjD,6lBCzGpBkD,oJAAyBC,QAEzBC,aAoSJ,SAAAA,EAAYC,EAAgBC,EAAQC,EAAUC,EAAUC,GACtD,GADmEzP,OAAAC,EAAA,EAAAD,CAAAD,KAAAqP,IAC9DC,IAAmBC,EACtB,MAAM,IAAIH,MAAM,8DAElBpP,KAAKwP,SAAWA,EAEhBxP,KAAKsP,eAAiBA,EAEtB,IAAMK,EACJ,CAAC,aAAc,WAAY,uBAAwB,UAAW,kBAC7D5L,OAAO,SAAAiK,GAAG,YAAoBtP,IAAhB6Q,EAAOvB,KACxB,GAAI2B,EAAkBlR,OACpB,MAAM,IAAI2Q,MAAJ,kCAAAzP,OAA4CgQ,EAAkBC,KAAK,QAE3E5P,KAAKuP,OAASA,EACdvP,KAAK6P,SAAW7P,KAAKuP,OAAOM,SAC5B7P,KAAK8P,qBAAuB9P,KAAKuP,OAAOO,qBACxC9P,KAAK+P,eAAiB/P,KAAKuP,OAAOQ,eAClC/P,KAAKgQ,WAAahQ,KAAKuP,OAAOS,WAC9BhQ,KAAKiQ,QAAUjQ,KAAKuP,OAAOU,QAC3BjQ,KAAKyP,SAAWA,IAAuBzP,KAAK+P,eAAiB,CAACG,OAAQlQ,KAAK+P,gBAAkBN,GAC7FzP,KAAK0P,WAAaA,EAElB1P,KAAKmQ,OAASnQ,KAAKoQ,YACfpQ,KAAKmQ,OACPnQ,KAAK2J,UAAW,EACN3J,KAAKsH,YAAY+I,iBAAiBrQ,KAAK8P,sBAIjD9P,KAAK2J,UAAW,GAHhB3J,KAAK2J,UAAW,EAChB3J,KAAKmQ,OAASnQ,KAAKsH,YAAYgJ,aAAatQ,KAAKgQ,aAK/ChQ,KAAK2J,WACP3J,KAAK8P,qBAAuB9P,KAAKsH,YAAYiJ,8EA1CtCjB,EAAgBC,EAAQE,GACjC,OAAO,IAAIzP,KAAKsH,YAAYgI,EAAgBC,EAAQvP,KAAMyP,GAAU,sCAG3DH,EAAgBC,EAAQE,GACjC,OAAO,IAAIzP,KAAKsH,YAAYgI,EAAgBC,EAAQvP,KAAMyP,GAAU,sCAhOpE,OAAO,IAAIzP,KAFYA,KAAKwQ,2BACbxQ,KAAKyQ,mBACoB,KAAM,MAAM,qCAGrCxG,GACf,IAAInG,EAAO9D,KAAK0Q,SAGhB,OAFA5M,EAAOA,EAAK6M,UAAU1G,8CAKEqF,GAAgB,IAAAvP,EAAAC,KACxC,GAA8B,IAA1BsP,EAAe7Q,OACjB,MAAM,IAAI2Q,MAAJ,2BAAAzP,OAAqC2P,EAAe7Q,SAE5D,GAAI6Q,EAAe1Q,KAAK,SAAAgS,GAAG,OAAyB,IAArBA,EAAI3S,MAAMQ,SACvC,MAAM,IAAI2Q,MAAJ,2DAER,GAAIE,EAAe1Q,KAAK,SAACgS,EAAKC,GAAN,OAAYD,EAAIC,IAAMA,IAC5C,MAAM,IAAIzB,MAAJ,6BAER,GAAIE,EAAe1Q,KAAK,SAAAgS,GAAG,OAAIA,EAAI3S,MAAMW,KAAK,SAACkS,EAAMC,GAAP,OAAaD,EAAKC,IAAMA,GAAKD,EAAKD,IAAMD,EAAIC,MACxF,MAAM,IAAIzB,MAAJ,qCAMR,GAAIpP,KAAKgR,SAAS1B,EAJe,SAAAwB,GAAI,OAClCA,EAAKG,SAAWlR,EAAKmR,QAAQjL,SAAS6K,EAAKG,SACxCH,EAAKK,SAAWpR,EAAKqR,QAAQnL,SAAS6K,EAAKK,UAG/C,MAAM,IAAI/B,MAAJ,2CAER,GAAIpP,KAAKgR,SAAS1B,EAAgB,SAAAwB,GAAI,OAAK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAG7K,SAAS6K,EAAKO,SACvE,MAAM,IAAIjC,MAAJ,iCAER,IAMIG,EANE+B,EAAetR,KAAKuR,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAKyR,WAAU/S,OACrFgT,EAAezR,KAAKuR,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAK2R,WAAUjT,OAC3F,GAAI6S,EAAe,GAAKG,EAAe,EACrC,MAAM,IAAIrC,MAAJ,wDAAAzP,OACoD2R,EADpD,sBAAA3R,OACqF8R,IAI7F,GAAiB,IADAE,KAAKC,IAALC,MAAAF,KAAI1R,OAAAiJ,EAAA,EAAAjJ,CAAQb,IAAE0S,QAAQxC,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAM0D,IAAI,SAAAmP,GAAI,OAAIA,EAAKO,aAE1F,GAAqB,IAAjBI,EACF,GAAqB,IAAjBH,EACF/B,EAAS,CACPS,WAAYhQ,KAAKwR,SACjB3B,SAAU7P,KAAK+R,6BACfjC,qBAAsB9P,KAAKgS,6BAC3B/B,SAAS,EACTF,eAAgB,WAEb,GAAqB,IAAjBuB,EACT/B,EAAS,CACPS,WAAYhQ,KAAKwR,SACjB3B,SAAU7P,KAAKiS,8BACfnC,qBAAsB9P,KAAKkS,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAEb,CACL,IAAMoC,EAAqBnS,KAAKgR,SAAS1B,EACvC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAKyR,UAAYV,EAAKK,SAAWpR,EAAKqS,eAC1DC,EAAsBrS,KAAKgR,SAAS1B,EACxC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAKyR,UAAYV,EAAKK,SAAWpR,EAAKuS,gBAChE,IAAKH,IAAuBE,EAC1B,MAAM,IAAIjD,MAAJ,2CAERG,EAAS,CACPS,WAAYhQ,KAAK0R,SACjB7B,SAAU7P,KAAK+R,6BACfjC,qBAAsB9P,KAAKkS,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAGf,CACL,GAAqB,IAAjBuB,EACF,MAAM,IAAIlC,MAAJ,4EAER,GAAqB,IAAjBqC,EACFlC,EAAS,CACPS,WAAYhQ,KAAK0R,SACjB7B,SAAU7P,KAAKiS,8BACfnC,qBAAsB9P,KAAKkS,kCAAkC5C,GAC7DW,SAAS,EACTF,eAAgB,UAEb,CACL,IAAMwC,EAAqBvS,KAAKgR,SAAS1B,EACvC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAK2R,UAAYZ,EAAKK,SAAWpR,EAAKqS,eAC1DI,EAAsBxS,KAAKgR,SAAS1B,EACxC,SAAAwB,GAAI,OAAIA,EAAKG,SAAWlR,EAAK2R,UAAYZ,EAAKK,SAAWpR,EAAKuS,gBAChE,IAAKC,IAAuBC,EAC1B,MAAM,IAAIpD,MAAJ,2CAERG,EAAS,CACPS,WAAYhQ,KAAKwR,SACjB3B,SAAU7P,KAAKyS,gCACf3C,qBAAsB9P,KAAK0S,8BAA8BpD,EAAgBtP,KAAKwR,UAC9EvB,SAAS,EACTF,eAAgB,WAIjB,CACL,GAAqB,IAAjBuB,GAAuC,IAAjBG,EACxB,MAAM,IAAIrC,MAAJ,sFAGR,GAAIpP,KAAKgR,SAAS1B,EAAgB,SAAAwB,GAAI,OAAmB,IAAfA,EAAKO,OAAeP,EAAKG,SACjE,MAAM,IAAI7B,MAAJ,qCAGR,GADmBpP,KAAKuR,UAAUjC,EAAgB,SAAAwB,GAAI,OAAmB,IAAfA,EAAKO,OAAeP,EAAKG,SACpExS,OAAS,EACtB,MAAM,IAAI2Q,MAAJ,6BAING,EAFiBnQ,IAAEuT,IAAIvT,IAAE0S,QAAQxC,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAM0D,IAAI,SAAAmP,GAAI,OAAIA,EAAKO,YACvE,IAAM,EACZ,CACPrB,WAAYhQ,KAAKwR,SACjB3B,SAAU7P,KAAKyS,gCACf3C,qBAAsB9P,KAAK0S,8BAA8BpD,EAAgBtP,KAAKwR,UAC9EvB,SAAS,EACTF,eAAgB,MAGT,CACPC,WAAYhQ,KAAK0R,SACjB7B,SAAU7P,KAAKyS,gCACf3C,qBAAsB9P,KAAK0S,8BAA8BpD,EAAgBtP,KAAK0R,UAC9EzB,SAAS,EACTF,eAAgB,MAItB,OAAO,IAAI/P,KAAKsP,EAAgBC,EAAQ,KAAM,MAAM,4CAG9BqD,GAAc,IAAAvL,EAAArH,KAC9BiK,EAAQ2I,EACXC,MAAM,IACNlR,IAAI,SAAAmR,GAAI,OAAIzL,EAAK0L,sBAAsBD,KAC1C,GAAI7I,EAAMlG,OAAO,SAAAiP,GAAI,OAAKA,IAAMvU,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKiT,UAAUhJ,GAAO,GAC7B,MAAOvD,GACP,OAAO1G,KAAKiT,UAAUhJ,GAAO,uDAICiJ,GAAwB,IAAApK,EAAA9I,KAClDiK,EAAQiJ,EACXL,MAAM,IACNlR,IAAI,SAAAmR,GAAI,OAAIhK,EAAKqK,4BAA4BL,KAChD,GAAI7I,EAAMlG,OAAO,SAAAiP,GAAI,OAAKA,IAAMvU,OAC9B,OAAO,KAGT,IACE,OAAOuB,KAAKiT,UAAUhJ,GAAO,GAC7B,MAAOvD,GACP,OAAO1G,KAAKiT,UAAUhJ,GAAO,gDAINqF,GAAgB,IAAA7F,EAAAzJ,KACzC,OAAOZ,IAAE0S,QAAQxC,EAAe3N,IAC9B,SAAAiP,GAAG,OAAIA,EAAI3S,MAAM0D,IACf,SAAAmP,GAAI,OAAIrH,EAAK2J,8BAA8BtC,EAAKO,OAAOP,EAAKG,aAC7DrB,KAAK,iDAGkByD,GAAU,IAAAjJ,EAAApK,KAC9BsP,EAAiBtP,KAAKsT,KAAK3R,IAAI,SAAAkP,GAAC,MAAK,CACzCA,IAAG5S,MAAOmM,EAAKmJ,QAAQ5R,IAAI,SAAAoP,GAAC,OAAAyC,EAAA,CAC1BzC,IAAGF,KAAMzG,EAAKqJ,0BAA0BJ,EAAa,EAAJxC,EAAQE,UAG7D,OAAO/Q,KAAK0T,aAAapE,0DAGW+D,GAAU,IAAAxI,EAAA7K,KACxCsP,EAAiBtP,KAAKsT,KAAK3R,IAAI,SAAAkP,GAAC,MAAK,CACzCA,IAAG5S,MAAO4M,EAAK0I,QAAQ5R,IAAI,SAAAoP,GAAC,OAAAyC,EAAA,CAC1BzC,IAAGF,KAAMhG,EAAK8I,gCAAgCN,EAAa,EAAJxC,EAAQE,UAGnE,OAAO/Q,KAAK0T,aAAapE,6DAGc+D,GACvC,IAEE,OADArT,KAAK4T,+BAA+BP,IAC7B,EACP,MAAM3M,GACN,OAAO,wCAIS4I,GAClB,IAAIgC,EAAe,EAAGG,EAAe,EADH7M,GAAA,EAAAC,GAAA,EAAAC,OAAApG,EAAA,IAElC,QAAAqG,EAAAC,EAAgBhF,KAAKsT,KAArBrO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA2B,KAAhBmM,EAAgBhM,EAAAzH,MAAAuW,GAAA,EAAAC,GAAA,EAAAC,OAAArV,EAAA,IACzB,QAAAsV,EAAAC,EAAgBjU,KAAKuT,QAArBtO,OAAAC,cAAA2O,GAAAG,EAAAC,EAAA9O,QAAAC,MAAAyO,GAAA,EAA8B,KACtB/C,EAAOxB,EADe0E,EAAA1W,OACGW,MAAM8S,GACjCD,EAAKG,SAAWjR,KAAKwR,UACvBV,EAAKK,OAASnR,KAAKoR,QAAQE,EAAe,GAC1CA,GAAgB,GACPR,EAAKG,SAAWjR,KAAK0R,WAC9BZ,EAAKK,OAASnR,KAAKoR,QAAQK,EAAe,GAC1CA,GAAgB,IARK,MAAAjM,GAAAsO,GAAA,EAAAC,EAAAvO,EAAA,YAAAqO,GAAA,MAAAI,EAAAxO,QAAAwO,EAAAxO,SAAA,WAAAqO,EAAA,MAAAC,KAFO,MAAAvO,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAclC,OAAO9E,KAAKkU,mBAAmB5E,yDAiDpBxR,EAAMqW,GAajB,OAZKnU,KAAKoU,eAAetW,KAKvBkC,KAAKlC,GAAQqW,KAORnU,KAAKlC,uCAqHZ,MAAO,CACLmM,MAAOjK,KAAKiK,6CA0BF,IAAAoK,EAAAC,EAAAvH,EAAAwH,EAAAC,EAAAC,EAENC,GAAQH,EAAA,GAAAtU,OAAA0U,EAAA,EAAA1U,CAAAsU,EACXlF,EAAKmC,UADM6C,EAAA,GAAApU,OAAA0U,EAAA,EAAA1U,CAAAoU,EACO,EAAI,KADXpU,OAAA0U,EAAA,EAAA1U,CAAAoU,EACiB,EAAIO,IAAMC,QAAQ,MADnC5U,OAAA0U,EAAA,EAAA1U,CAAAoU,EAC0C,EAAIO,IAAME,SAAS,MAD7D7U,OAAA0U,EAAA,EAAA1U,CAAAoU,EACoE,EAAIO,IAAMG,MAAM,MADpFV,IAAApU,OAAA0U,EAAA,EAAA1U,CAAAsU,EAEXlF,EAAKqC,UAFM4C,EAAA,GAAArU,OAAA0U,EAAA,EAAA1U,CAAAqU,EAEO,EAAI,KAFXrU,OAAA0U,EAAA,EAAA1U,CAAAqU,EAEiB,EAAIM,IAAMC,QAAQ,MAFnC5U,OAAA0U,EAAA,EAAA1U,CAAAqU,EAE0C,EAAIM,IAAME,SAAS,MAF7D7U,OAAA0U,EAAA,EAAA1U,CAAAqU,EAEoE,EAAIM,IAAMG,MAAM,MAFpFT,IAAArU,OAAA0U,EAAA,EAAA1U,CAAAsU,EAGX,MAHWxH,EAAA,GAAA9M,OAAA0U,EAAA,EAAA1U,CAAA8M,EAGF,EAAI,KAHF9M,OAAA0U,EAAA,EAAA1U,CAAA8M,EAGQ,EAAI6H,IAAMC,QAAQ,MAH1B5U,OAAA0U,EAAA,EAAA1U,CAAA8M,EAGiC,EAAI6H,IAAME,SAAS,MAHpD7U,OAAA0U,EAAA,EAAA1U,CAAA8M,EAG2D,EAAI6H,IAAMG,MAAM,MAH3E9U,OAAA0U,EAAA,EAAA1U,CAAA8M,EAGkF,EAAI6H,IAAMI,OAAO,MAHnGjI,IAAAwH,GAMRU,EAAgBjV,KAAKsP,eACxB3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MACb0D,IAAI,SAAAmP,GAAI,OAAI4D,EAAS5D,EAAKG,QAAQH,EAAKO,SACvCzB,KAAK,MACPA,KAAK,MAIFsF,GAHaV,EAAA,GAAAvU,OAAA0U,EAAA,EAAA1U,CAAAuU,EAChBnF,EAAKmC,SAAW,KADAvR,OAAA0U,EAAA,EAAA1U,CAAAuU,EACMnF,EAAKqC,SAAW,KADtB8C,GAGsBxU,KAAKgQ,YAIxCmF,GAHSV,EAAA,GAAAxU,OAAA0U,EAAA,EAAA1U,CAAAwU,EACZpF,EAAKmC,SAAW,KADJvR,OAAA0U,EAAA,EAAA1U,CAAAwU,EACUpF,EAAKqC,SAAW,KAD1BzR,OAAA0U,EAAA,EAAA1U,CAAAwU,EACgC,KAAO,KADvCA,GAGkBzU,KAAKmQ,QACtC,MACE,GAAAxQ,OAAGuV,EAAH,SAAAvV,OAA6BwV,EAA7B,MACEF,EAAcpC,MAAM,MAAMlR,IAAI,SAAAiP,GAAG,UAAAjR,OAAQiV,IAAMQ,MAAMxE,GAApB,OAA6BhB,KAAK,MACnE,gEAI2B,IAAPmB,EAAOsE,EAAPtE,EAAGF,EAAIwE,EAAJxE,EAC3B,GAAIc,KAAK2D,MAAMvE,KAAOA,GAAKY,KAAK2D,MAAMzE,KAAOA,EAC3C,MAAM,IAAI1B,EAAJ,gBAAAxP,OAAqC4C,KAAKC,UAAU,CAACuO,IAAGF,MAAxD,oBAER,QAAqCnS,IAAjCsB,KAAK8P,qBAAqBe,SAAwDnS,IAApCsB,KAAK8P,qBAAqBe,GAAGE,GAC7E,MAAM,IAAI5B,EAAJ,gBAAAxP,OAAqC4C,KAAKC,UAAU,CAACuO,IAAGF,MAAxD,mEAQc,IAAPE,EAAO9D,EAAP8D,EAAGF,EAAI5D,EAAJ4D,EAClB,OAAO7Q,KAAK8P,qBAAqBe,GAAGE,oCAW7BwE,GACP,OAAOvV,KAAKsH,YAAY0J,SAAShR,KAAKsP,eAAgBiG,qCAG9CA,GACR,OAAOvV,KAAKsH,YAAYiK,UAAUvR,KAAKsP,eAAgBiG,uCAqBvD,GAAIvV,KAAK+P,eACP,OAAO/P,KAAKsH,YAAYgJ,aAAatQ,KAAK+P,gBAG5C,IAAMyF,EAAcxV,KAAKgR,SAAS,SAAAF,GAAI,OAAIA,EAAKG,QAAyB,IAAfH,EAAKO,QAC9D,OAAImE,EACKA,EAAYvE,QAGhBjR,KAAKiQ,SAAWjQ,KAAKsH,YAAYmO,aAAazV,KAAKsP,eAAgBtP,KAAKgQ,YACpEhQ,KAAKgQ,WAGP,8CAwDQ0F,EAAkBC,EAAaC,GAC9C,GAAI5V,KAAK2J,SACP,MAAM,IAAIwF,EAAiB,iCAE7B,GAAInP,KAAK6P,WAAa6F,EACpB,MAAM,IAAIvG,EAAJ,oCAAAxP,OAAyD+V,EAAzD,4BAAA/V,OAAoGK,KAAK6P,SAAzG,MAMR,GAJA7P,KAAK6V,yBAAyBF,GAC1BC,GACF5V,KAAK6V,yBAAyBD,IAE3B5V,KAAK8P,qBAAqB6F,EAAY9E,GAAG8E,EAAY5E,GACxD,MAAM,IAAI5B,EAAJ,QAAAxP,OAA6B4C,KAAKC,UAAUmT,GAA5C,qEAIH1E,GACL,OAAOjR,KAAK8V,WAAW9V,KAAKsP,eAAgB,CAC1CU,WAAYhQ,KAAKgQ,WACjBH,SAAU7P,KAAK6P,SACfC,qBAAsB9P,KAAK8P,qBAC3BG,SAAS,EACTF,eAAgBkB,GACf,CAACf,OAAQe,sCAkBJhH,GACR,IAAInG,EAAO9D,KADI+V,GAAA,EAAAC,GAAA,EAAAC,OAAAvX,EAAA,IAEf,QAAAwX,EAAAC,EAAmBlM,EAAnBhF,OAAAC,cAAA6Q,GAAAG,EAAAC,EAAAhR,QAAAC,MAAA2Q,GAAA,EAA0B,KAAf/C,EAAekD,EAAA5Y,MACxBwG,EAAOA,EAAKsS,SAASpD,IAHR,MAAAxN,GAAAwQ,GAAA,EAAAC,EAAAzQ,EAAA,YAAAuQ,GAAA,MAAAI,EAAA1Q,QAAA0Q,EAAA1Q,SAAA,WAAAuQ,EAAA,MAAAC,GAMf,OAAOnS,mCAGA6R,GAAa,IAAAU,EACpB,GAAIV,EAAYzF,OACd,OAAOlQ,KAAKkQ,OAAOyF,EAAYzF,QAEjC,IAQMoG,GAReD,EAAA,GAAApW,OAAA0U,EAAA,EAAA1U,CAAAoW,EAClBrW,KAAKsH,YAAYyK,6BAA+B/R,KAAKuW,kBADnCtW,OAAA0U,EAAA,EAAA1U,CAAAoW,EAElBrW,KAAKsH,YAAY2K,8BAAgCjS,KAAKwW,mBAFpCvW,OAAA0U,EAAA,EAAA1U,CAAAoW,EAGlBrW,KAAKsH,YAAYmL,gCAAkCzS,KAAKyW,oBAHtCxW,OAAA0U,EAAA,EAAA1U,CAAAoW,EAIlBrW,KAAKsH,YAAYoP,4BAA8B1W,KAAK2W,iBAJlC1W,OAAA0U,EAAA,EAAA1U,CAAAoW,EAKlBrW,KAAKsH,YAAYsP,6BAA+B5W,KAAK6W,kBALnC5W,OAAA0U,EAAA,EAAA1U,CAAAoW,EAMlBrW,KAAKsH,YAAYwP,8BAAgC9W,KAAK+W,mBANpCV,GAQkBrW,KAAK6P,UAC5C,IAAKyG,EACH,MAAM,IAAInH,EAAJ,4CAAAxP,OAAgEK,KAAK6P,SAArE,MAER,OAAOyG,EAAeU,KAAKhX,KAApBsW,CAA0BX,kCAIjC,IAAK3V,KAAKiQ,QACR,MAAM,IAAIb,MAAM,eAGlB,OAAOpP,KAAKwP,gDAIZ,IAAKxP,KAAKiX,gBACR,MAAM,IAAI7H,MAAM,yBAGlB,OAAOpP,KAAKwP,qDAGW,IAAPuB,EAAO7D,EAAP6D,EAAGF,EAAI3D,EAAJ2D,EACnB7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAYyK,6BAA8B,CAAChB,IAAGF,MAEzE,IAAMvB,EAAiBtP,KAAKsH,YAAY6P,YAAYnX,KAAKsP,eAAgB,CACvEyB,IAAGF,IACHI,OAAQjR,KAAKgQ,WACbmB,OAAQnR,KAAKsH,YAAY8K,eAE3B,OAAOpS,KAAK8V,WAAWxG,EAAgB,CACrCU,WAAYhQ,KAAKgQ,WACjBH,SAAU7P,KAAKsH,YAAY2K,8BAC3BnC,qBAAsB9P,KAAKsH,YAAY4K,kCAAkC5C,GACzEW,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,mDAGiB,IAAPE,EAAOqG,EAAPrG,EAAGF,EAAIuG,EAAJvG,EACpB7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAY2K,8BAA+B,CAAClB,IAAGF,MAE1E,IAAMvB,EAAiBtP,KAAKsH,YAAY6P,YAAYnX,KAAKsP,eAAgB,CACvEyB,IAAGF,IACHI,OAAQjR,KAAKgQ,WACbmB,OAAQnR,KAAKsH,YAAYgL,gBAErBtC,EAAahQ,KAAKsH,YAAYgJ,aAAatQ,KAAKgQ,YACtD,OAAOhQ,KAAKqX,WAAW/H,EAAgB,CACrCU,WAAYA,EACZH,SAAUG,IAAehQ,KAAKsH,YAAYkK,SACtCxR,KAAKsH,YAAYmL,gCACjBzS,KAAKsH,YAAYyK,6BACrBjC,qBAAsBE,IAAehQ,KAAKsH,YAAYkK,SAClDxR,KAAKsH,YAAYoL,8BAA8BpD,EAAgBU,GAC/DhQ,KAAKsH,YAAY4K,kCAAkC5C,GACvDW,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,oDAGkB,IAAPE,EAAOuG,EAAPvG,EAAGF,EAAIyG,EAAJzG,EACrB7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAYmL,gCAAiC,CAAC1B,IAAGF,MAE5E,IAAMC,EAAO9Q,KAAKsP,eAAeuB,GAAG5S,MAAM8S,GAC1C,OAAO/Q,KAAK8V,WAAW9V,KAAKsP,eAAgB,CAC1CU,WAAYhQ,KAAKgQ,WACjBH,SAAUiB,EAAKK,SAAWnR,KAAKsH,YAAY8K,aACvCpS,KAAKsH,YAAYoP,4BACjB1W,KAAKsH,YAAYsP,6BACrB9G,qBAAsB9P,KAAKsH,YAAYiQ,+BAA+BvX,KAAKsP,eAAgB,CAACyB,IAAGF,MAC/FZ,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,yCAGE1D,EAAIgE,GAAQ,IAAAqG,EAAAC,EAAAzX,KACf0X,EAAW1X,KAAKgR,SAAS,SAAAF,GAAI,OAAIA,EAAKG,SAAWwG,EAAKzH,YAAcc,EAAKK,SAAWA,IACpFwG,EAAS3X,KAAKsP,eAAenC,EAAG0D,GAAG5S,MAAMkP,EAAG4D,GAC5CzB,GAAiBkI,EAAAxX,KAAKsH,aAAY6P,YAAjBtF,MAAA2F,EAAA,CAA6BxX,KAAKsP,gBAAlC3P,OAAqD,CAC1E,CAACoR,EAAG2G,EAAS3G,EAAGF,EAAG6G,EAAS7G,EAAGI,OAAQ,KAAME,OAAQ,MACrD,CAACJ,EAAG4G,EAAO5G,EAAGF,EAAG8G,EAAO9G,EAAGI,OAAQyG,EAASzG,OAAQE,OAAQuG,EAASvG,WAEvE,OAAOnR,KAAK8V,WAAWxG,EAAgB,CACrCU,WAAYhQ,KAAKgQ,WACjBH,SAAU7P,KAAKsH,YAAYwP,8BAC3BhH,qBAAsB9P,KAAKsH,YAAYsQ,iCAAiCtI,EAAgBnC,GACxF8C,SAAS,EACTF,eAAgB,MACf,CAACgB,EAAG5D,EAAG4D,EAAGF,EAAG1D,EAAG0D,+CAGG,IAAPE,EAAO8G,EAAP9G,EAAGF,EAAIgH,EAAJhH,EAGlB,OAFA7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAYoP,4BAA6B,CAAC3F,IAAGF,MAEjE7Q,KAAK8X,WAAW,CAAC/G,IAAGF,KAAI7Q,KAAKsH,YAAY8K,0DAGzB,IAAPrB,EAAOgH,EAAPhH,EAAGF,EAAIkH,EAAJlH,EAGnB,OAFA7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAYsP,6BAA8B,CAAC7F,IAAGF,MAElE7Q,KAAK8X,WAAW,CAAC/G,IAAGF,KAAI7Q,KAAKsH,YAAYgL,4DAGxB,IAAPvB,EAAOiH,EAAPjH,EAAGF,EAAImH,EAAJnH,EACpB7Q,KAAKkX,iBAAiBlX,KAAKsH,YAAYwP,8BAA+B,CAAC/F,IAAGF,MAE1E,IAAMvB,EAAiBtP,KAAKsH,YAAY6P,YAAYnX,KAAKsP,eAAgB,CACvEyB,IAAGF,IAAGQ,MAAOrR,KAAKsP,eAAeuB,GAAG5S,MAAM8S,GAAGM,MAAQ,IAEjDrB,EAAahQ,KAAKsH,YAAYgJ,aAAatQ,KAAKgQ,YACtD,OAAOhQ,KAAKqX,WAAW/H,EAAgB,CACrCU,WAAYA,EACZH,SAAU7P,KAAKsH,YAAYmL,gCAC3B3C,qBAAsB9P,KAAKsH,YAAYoL,8BAA8BpD,EAAgBU,GACrFC,SAAS,EACTF,eAAgB,MACf,CAACgB,IAAGF,kDAIP,OAAI7Q,KAAK2J,SACA,GAGFvK,IAAE0S,QAAQ9R,KAAK8P,qBACnBnO,IAAI,SAACsW,EAAIpH,GAAL,OAAWoH,EACbtW,IAAI,SAACuG,EAAW6I,GAAZ,MAAkB,CAACA,EAAGF,EAAG3I,KAC7BnE,OAAO,SAAAmU,GAAA,OAAAjY,OAAA+M,EAAA,EAAA/M,CAAAiY,EAAA,QACPvW,IAAI,SAAAwW,GAAA,IAAAC,EAAAnY,OAAA+M,EAAA,EAAA/M,CAAAkY,EAAA,SAAU,CAACpH,EAAXqH,EAAA,GAAavH,EAAbuH,EAAA,gDAGI,IAAAC,EAAArY,KACb,OAAOA,KAAKsY,oBAAoB3W,IAAI,SAAAqR,GAAI,OAAIqF,EAAKjC,SAASpD,oDAGT,IAA9BhD,EAA8BxR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjBwB,KAAKgQ,WACrC,OAAIhQ,KAAKgQ,aAAeA,EACf,CAAChQ,MAGHZ,IAAE0S,QAAQ9R,KAAKuY,eAAe5W,IAAI,SAAAmC,GAAI,OAAIA,EAAK0U,qBAAqBxI,6CAG9DyI,GAA2B,IAAjBjJ,EAAiBhR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAC5Bka,EAAS1Y,KAAK2J,SAAY3J,KAAKmQ,SAAWnQ,KAAKgQ,WAAa,MAAQ,OAAU,KACpF,OAAOwD,EAAA,CACL1P,KAAM9D,KACN0Y,OAAQA,EACRC,cAAe3Y,KAAKwY,uBACpBI,QAAS,CACPrN,IAAgB,QAAXmN,EACLG,KAAiB,SAAXH,EACNI,cAAc,KAEXtJ,GAAYA,EAASuJ,WAAa,CACrCC,UAAqB,QAAVN,EAAkB,CAAC1Y,MAAQ,IACpC,CACF+Y,WAAuB,SAAXL,EAAoB,CAAC1Y,MAAQ,IAZ7C,CAcEwP,WACAvF,MAAO,KACPwO,6CAhgBU,IAAAQ,EAAAjZ,KACZ,OAAOA,KAAKkZ,aAAa,WAAY,kBAAOD,EAAKzJ,SAAWyJ,EAAKzJ,SAAS2J,QAAU,IACjFpV,OAAO,SAAAD,GAAI,OAAKA,EAAKmM,UACrBtQ,OAAO,CAACsZ,gDAGW,IAAAG,EAAApZ,KACtB,OAAOA,KAAKkZ,aAAa,qBAAsB,kBAAME,EAAKD,QAAQC,EAAKD,QAAQ1a,OAAS,yCAGxE,IAAA4a,EAAArZ,KAChB,OAAOA,KAAKkZ,aAAa,eAAgB,kBAAMG,EAAK7J,SAAW6J,EAAK7J,SAAS8J,YAAc,IAAI3Z,OAAO0Z,uCAExF,IAAAE,EAAAvZ,KACd,OAAOA,KAAKkZ,aAAa,aAAc,kBAAKK,EAAK/J,SAAY+J,EAAK7J,WAAa6J,EAAK/J,SAASgK,UAAY,EAAID,EAAK/J,SAASgK,UAAa,uCAEzH,IAAAC,EAAAzZ,KACf,OAAOA,KAAKkZ,aAAa,cAAe,kBAAKO,EAAKjK,SAAWiK,EAAKjK,SAASkK,WAAa,EAAI,kCAElF,IAAAC,EAAA3Z,KACV,OAAOA,KAAKkZ,aAAa,SAAU,kBAAKS,EAAKnK,SAAWmK,EAAKnK,SAASvF,MAAMtK,OAAO,CAACga,EAAKlK,WAAa,gDAE/E,IAAAmK,EAAA5Z,KACvB,OAAOA,KAAKkZ,aAAa,sBAAuB,kBAAKU,EAAKN,YACvDrQ,MAAM2Q,EAAKN,YAAYO,QAAQD,EAAKE,mBAAqB,GACzDnY,IAAI,SAAAmC,GAAI,OAAIA,EAAK2L,0CAEX,IAAAsK,EAAA/Z,KACT,OAAOA,KAAKkZ,aAAa,QAAS,kBAAKa,EAAKD,kBACxCC,EAAKD,kBAAkBlP,KAAKjL,OAAO,CAACoa,EAAKC,qBACzC,wCAGW,IAAAC,EAAAja,KACf,OAAOA,KAAKkZ,aAAa,cAAe,kBAAMe,EAAKzK,SAAWyK,EAAKzK,SAASQ,WAAaX,EAAKmC,gDAE7E,IAAA0I,EAAAla,KACjB,OAAOA,KAAKkZ,aAAa,gBAAiB,kBAAMgB,EAAK1K,SAAW0K,EAAK1K,SAASK,SAAW,+CAErE,IAAAsK,EAAAna,KACpB,OAAOA,KAAKkZ,aAAa,mBAAoB,mBAAQiB,EAAK3K,gDAEzC,IAAA4K,EAAApa,KAAC,OAAOA,KAAKkZ,aAAa,gBAAiB,kBAAMkB,EAAKrK,eACrEqK,EAAK9S,YAAY+S,uBAAuBD,EAAKrK,gBAC5CqK,EAAK3K,SACJ2K,EAAK9S,YAAYgT,cAAcF,EAAK3K,SAASoB,GAAGuJ,EAAK3K,SAASsB,GAC9D,0CAEa,IAAAwJ,EAAAva,KACjB,OAAOA,KAAKkZ,aAAa,gBAAiB,oBAAAvZ,OAAS4a,EAAK/K,SAAW+K,EAAK/K,SAASoD,aAAe,IAAtDjT,OAA2D4a,EAAKC,+DAE/E,IAAAC,EAAAza,KAC3B,OAAOA,KAAKkZ,aAAa,0BAA2B,kBAAMuB,EAAK7H,aAC5DC,MAAM,QACN9O,OAAO,SAAA+O,GAAI,OAAIA,IACfnR,IAAI,SAAAmR,GAAI,OAAI2H,EAAKnT,YAAYoT,0BAA0B5H,KACvDlD,KAAK,+CAEa,IAAA+K,EAAA3a,KACrB,OAAOA,KAAKkZ,aAAa,oBAAqB,kBAAMyB,EAAKrT,YAAYsT,oBAAoBD,EAAKrL,sEAE9D,IAAAuL,EAAA7a,KAChC,OAAOA,KAAKkZ,aAAa,+BAAgC,WACvD,OAAI2B,EAAK1B,QAAQ1a,OAAS,EACjB,KAEFoc,EAAK1B,QAAQ,+EAGgC,IAAA2B,EAAA9a,KACtD,OAAOA,KAAKkZ,aAAa,qDAAsD,WAC7E,OAAK4B,EAAKC,4BAGHD,EAAKC,4BAA4BC,2BAF/B,0DAKoB,IAAAC,EAAAjb,KAC/B,OAAOA,KAAKkZ,aAAa,8BAA+B,WAEtD,OAF4DjZ,OAAA+M,EAAA,EAAA/M,CACvBgb,EAAKC,gDADkB,gFAKV,IAAAC,EAAAnb,KACpD,OAAOA,KAAKkZ,aAAa,mDAAoD,WAC3E,IAAM8B,EAA6BG,EAAKC,qBAAqB,GAC7D,MAAO,CAACJ,EAA6BG,EAAKE,qCAAsCL,mEAGzC,IAAAM,EAAAtb,KACzC,OAAOA,KAAKkZ,aAAa,wCAAyC,kBAChE9Z,IAAEgK,UAAUnJ,OAAOsb,QAAQD,EAAKhU,YAAYkU,mBAC3C7Z,IAAI,SAAA8Z,GAAA,IAAAC,EAAAzb,OAAA+M,EAAA,EAAA/M,CAAAwb,EAAA,SAA4B,CAA5BC,EAAA,GAAAA,EAAA,IAAqDJ,EAAKhU,YAAYqU,oBAC1Eha,IAAI,SAAAia,GAAA,IAAAC,EAAA5b,OAAA+M,EAAA,EAAA/M,CAAA2b,EAAA,GAAE9d,EAAF+d,EAAA,GAAQC,EAARD,EAAA,SAA4B,CAACxM,EAAK0M,QAAQ7H,mBAAmB4H,EAAeR,EAAKhM,iBAAiB0M,iBAAkBle,qDAIlG,IAAAme,EAAAjc,KACzB,OAAOA,KAAKkZ,aAAa,wBAAyB,kBAChDjZ,OAAOic,KAAKD,EAAKZ,sCAAsCc,OAAOC,wDAKzCtM,GACvB,OAAO1Q,IAAE0S,QAAQhC,EACdnO,IAAI,SAACiP,EAAKC,GAAN,OAAYD,EACdjP,IAAI,SAACuG,EAAW6I,GAAZ,OAAkB7I,EAAY,CAAC6I,IAAGF,KAAK,UAC7C9M,OAAO,SAAAiP,GAAI,OAAIA,2CASQ,IAAR/I,EAAQoS,EAARpS,MAClB,OAAOjK,KAAKiT,UAAUhJ,sDAGU,IAAAqS,EAAAtc,KAChC,OAAOA,KAAKsT,KAAK3R,IAAI,SAAAkP,GAAC,MAAK,CACzBA,IAAG5S,MAAOqe,EAAK/I,QAAQ5R,IAAI,SAAAoP,GAAC,MAAK,CAC/BA,IAAGF,IAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,sDAM1C,MAAQ,CACNnB,WAAYhQ,KAAKwR,SACjB3B,SAAU7P,KAAK+R,6BACfjC,qBAAsB9P,KAAKgS,6BAC3B/B,SAAS,EACTF,eAAgB,+CAyCID,GACtB,OAAO9P,KAAKsY,kBAAkBxI,GAAsBrR,OAAS,mCAO/C6Q,EAAgBiG,GAC9B,OAAOjG,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAMW,KAAK2W,KAAY3W,KAAK,SAAAkS,GAAI,OAAIA,sCAG1DxB,EAAgBiG,GAC/B,OAAOnW,IAAE0S,QAAQxC,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAM8F,OAAOwR,iDAWpCgH,EAAKC,GAC7B,MAAM,IAAIpN,MAAM,6EAGEE,EAAgB2B,GAAQ,IAAAwL,EAAAzc,KACpC0c,EAAc1c,KAAKuR,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAWA,GAAyB,IAAfH,EAAKO,QAC1F,QAAKqL,EAAYje,QAGUuB,KAAKuR,UAAUjC,EAAgB,SAAAwB,GAAI,OAC7C,IAAfA,EAAKO,OACFqL,EAAY9d,KAAK,SAAA+d,GAAU,OAAIF,EAAKG,mBAAmB9L,EAAM6L,OAGxCle,OAAS,uDAoBD,IAAAoe,EAAA7c,KAClC,OAAOA,KAAKsT,KAAK3R,IAAI,kBAAMkb,EAAKtJ,QAAQ5R,IAAI,kBAAM,oDAGvB,IAAAmb,EAAA9c,KAC3B,OAAOA,KAAKsT,KAAK3R,IAAI,kBAAMmb,EAAKvJ,QAAQ5R,IAAI,kBAAM,gEAGX2N,GACvC,OAAOtP,KAAK+c,wBAAwBzN,EAAgB,SAAAwB,GAAI,OAAKA,EAAKG,+DAG/B3B,EAAgB2B,GAAQ,IAAA+L,EAAAhd,KAC3D,OAAOA,KAAK+c,wBAAwBzN,EAAgB,SAAAwB,GAClD,OAAIA,EAAKG,SAAWA,GAIb+L,EAAK3M,iBAAiB2M,EAAKzF,+BAA+BjI,EAAgBwB,6DAI/CxB,EAAgBqG,GAAa,IAAAsH,EAAAjd,KAC3D0X,EAAWpI,EAAeqG,EAAY9E,GAAG5S,MAAM0X,EAAY5E,GAC3DmM,EAAexF,EAASrG,MAAQ,EACtC,OAAOrR,KAAK+c,wBAAwBzN,EAAgB,SAAAwB,GAAI,OACtDmM,EAAKL,mBAAmB9L,EAAM6E,KAC1B7E,EAAKG,QACNH,EAAKO,OAAS,GACdP,EAAKO,OAAS6L,GACbD,EAAK5M,iBAAiB4M,EAAKrF,iCAAiCqF,EAAK9F,YAALtF,MAAAoL,EAAI,CAAa3N,GAAb3P,OAAgC,CAClG,CAACoR,EAAG2G,EAAS3G,EAAGF,EAAG6G,EAAS7G,EAAGI,OAAQ,KAAME,OAAQ,MACrD,CAACJ,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQyG,EAASzG,OAAQE,OAAQuG,EAASvG,WAC/DL,+DAIgCxB,EAAgBqG,GAAa,IAAAwH,EAAAnd,KAC7D0X,EAAWpI,EAAeqG,EAAY9E,GAAG5S,MAAM0X,EAAY5E,GACjE,OAAO/Q,KAAK+c,wBAAwBzN,EAAgB,SAAAwB,GAAI,OACtDqM,EAAKP,mBAAmB9L,EAAM6E,KAC1B7E,EAAKG,QACNH,EAAKO,MAAQ,IACX8L,EAAK1H,aAAa0H,EAAKhG,YAALtF,MAAAsL,EAAI,CAAa7N,GAAb3P,OAAgC,CACzD,CAACoR,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAOP,EAAKO,MAAQ,MACzC8L,EAAK7M,aAAaoH,EAASzG,2DAIJ3B,EAAgB8N,GAC7C,OAAO9N,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAM0D,IAAIyb,yCA6B9B9N,GAA6B,IAC9C,IAAM+N,EAAU,GAD8BC,EAAA9e,UAAAC,OAAV8e,EAAU,IAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVF,EAAUE,EAAA,GAAAjf,UAAAif,GAE9C,QAAArV,EAAA,EAAAsV,EAAqBH,EAArBnV,EAAAsV,EAAAjf,OAAA2J,IAA+B,CAA1B,IAAMuV,EAAMD,EAAAtV,GACfiV,EAAQM,EAAO9M,GAAKwM,EAAQM,EAAO9M,IAAM,GACzCwM,EAAQM,EAAO9M,GAAG8M,EAAO5M,GAAK4M,EAEhC,OAAOrO,EAAe3N,IAAI,SAAAiP,GAAG,OAAKyM,EAAQzM,EAAIC,GAAb2C,EAAA,GAC5B5C,EAD4B,CAE/B3S,MAAO2S,EAAI3S,MAAM0D,IAAI,SAAAmP,GAAI,OAAKuM,EAAQvM,EAAKD,GAAGC,EAAKC,GAAtByC,EAAA,GACxB1C,EADwB,GAExBuM,EAAQvM,EAAKD,GAAGC,EAAKC,IAF8BD,MAFPF,+CAqM3BgN,GACxB,GAAqB,OAAjBA,EAAMlF,OAAiB,CAEzB,GADAhY,QAAQC,IAAI,aAAcid,EAAMlF,OAAQ,OAAQkF,EAAMnF,SAAU,SAC5DmF,EAAMpO,SAAU,CAClB,GAAqB,QAAjBoO,EAAMlF,OAAkB,CAEL,IAAAmF,EAArB,GADAD,EAAMpO,SAASoJ,QAAQC,MAAO,EAC1B+E,EAAM5E,WACR6E,EAAAD,EAAMpO,SAASuJ,YAAWzQ,KAA1BuJ,MAAAgM,EAAA5d,OAAAiJ,EAAA,EAAAjJ,CAAkC2d,EAAM5E,gBAErC,IAAqB,SAAjB4E,EAAMlF,OAOf,MAAM,IAAItJ,MAAJ,mBAAAzP,OAA6Bie,EAAMlF,OAAnC,MAJgB,IAAAoF,EAFtBF,EAAMpO,SAASoJ,QAAQrN,KAAM,EAEzBqS,EAAM7E,aACR+E,EAAAF,EAAMpO,SAASwJ,WAAU1Q,KAAzBuJ,MAAAiM,EAAA7d,OAAAiJ,EAAA,EAAAjJ,CAAiC2d,EAAM7E,aAK3C,OAAO6E,EAAMpO,SAEb,OAAOoO,EAGX,GAAIA,EAAMnF,UAAY,EAGpB,OADAmF,EAAMhF,QAAQE,cAAe,EACzB8E,EAAMpO,UACRoO,EAAMpO,SAASoJ,QAAQE,cAAe,EAC/B8E,EAAMpO,WAEb9O,QAAQC,IAAI,YACLid,GAGX,IAAKA,EAAMjF,cAAcla,OAAQ,CAC/B,GAAImf,EAAMhF,QAAQrN,IAEhB,OADAqS,EAAMlF,OAAS,MACRkF,EACF,GAAIA,EAAMhF,QAAQE,aACvB,OAAI8E,EAAMpO,UACRoO,EAAMpO,SAASoJ,QAAQE,cAAe,EAC/B8E,EAAMpO,WAEb9O,QAAQC,IAAI,YACLid,GAEJ,GAAIA,EAAMhF,QAAQC,KAEvB,OADA+E,EAAMlF,OAAS,OACRkF,EAGT,MADAld,QAAQC,IAAIid,GACN,IAAIxO,MAAM,qEAGlB,OADiBwO,EAAMjF,cAAcoF,QACrBC,eAAeJ,EAAMnF,SAAW,EAAGmF,mDAGtBA,GAE7B,IAFgD,IAAZK,EAAYzf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACxC0f,EAAYN,EACTM,EAAU1O,UACf0O,EAAYA,EAAU1O,SAExB,IAAK,IAAI2O,EAAI,EAAIA,EAAIF,GACM,OAArBC,EAAUxF,OADayF,IAI3BP,EAAQ5d,KAAKoe,mBAAmBR,GAGlC,OAAOA,WAr6BLvO,EACGmC,SAAW,WADdnC,EAEGqC,SAAW,WAFdrC,EAGG6B,QAAU,CAHb7B,EAIGmC,SAJHnC,EAKGqC,UALHrC,EAOGiB,iCAPHjB,EAQImC,SARJnC,EAQoBqC,wBARpBrC,EASIqC,SATJrC,EASoBmC,aATpBnC,EAYG+C,aAAe,eAZlB/C,EAaGiD,cAAgB,gBAbnBjD,EAcG+B,QAAU,CAdb/B,EAcmB+C,aAdnB/C,EAcsCiD,eAdtCjD,EAgBG0C,6BAA+B,qBAhBlC1C,EAiBG4C,8BAAgC,sBAjBnC5C,EAkBGoD,gCAAkC,wBAlBrCpD,EAmBGqH,4BAA8B,oBAnBjCrH,EAoBGuH,6BAA+B,qBApBlCvH,EAqBGyH,8BAAgC,sBArBnCzH,EAuBGgP,yBAA2B,CAvB9BhP,EAuBoC0C,6BAvBpC1C,EAuBuEoD,iCAvBvEpD,EAwBGiP,wBAA0B,CAxB7BjP,EAwBmC0C,6BAxBnC1C,EAwBsE4C,+BAxBtE5C,EAyBGkP,uBAAyB,CAzB5BlP,EAyBkCqH,4BAzBlCrH,EAyBoEuH,8BAzBpEvH,EA0BGmP,+CA1BHnP,EA0BuCkP,yBA1BvClP,EA0BoEyH,gCA1BpEzH,EA4BGiE,KAAOkK,MAAM7f,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA5BpDkM,EA6BGkE,QAAUiK,MAAM7f,KAAK,CAACc,OAAQ,GAAI,SAACnB,EAAO6F,GAAR,OAAkBA,IA7BvDkM,EA8BGiL,cA9BHjL,EA8BwBiE,KAAK3R,IAAI,SAAAkP,GAAC,OA9BlCxB,EA8B2CkE,QAAQ5R,IAAI,SAAAoP,GAAC,SAAApR,OACvD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKoR,IAD6BpR,OACxB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKkR,QA/B1DxB,EAgCGgL,2CAhCHhL,EAiCImC,SAAW,oBAjCfnC,EAkCIqC,SAAW,SAlCfrC,EAoCG0D,2BACF3T,IAAEgK,UAAUhK,IAAE0S,QArCfzC,EAqC4BiE,KAAK3R,IAAI,SAAAkP,GAAC,OArCtCxB,EAqC+CkE,QAAQ5R,IAAI,SAAAoP,GAAC,MAC5D,IAAApR,OAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKoR,IAA9BpR,OAAmC,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKkR,IAAM,CAACE,IAAGF,aACzE4N,GAAM,CAAC,CAACvO,OAvCNb,EAuCmBmC,WACrBkN,GAAM,CAAC,CAACxO,OAxCNb,EAwCmBqC,aAxCnBrC,EA0CGqL,0BAA4Btb,IAAEgK,UAAUnJ,OAAOic,KA1ClD7M,EA0C4D0D,uBAAuBoJ,OAAOxa,IAAI,SAACrE,EAAO6F,GAAR,MAChG,CAAC7F,EAAOqhB,OAAOC,aAAazb,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,QA3CpDkM,EA4CG8D,4BAA8B/T,IAAEgK,UAAUnJ,OAAOic,KA5CpD7M,EA4C8D0D,uBAAuBoJ,OAAOxa,IAAI,SAACrE,EAAO6F,GAAR,MAClG,CAACwb,OAAOC,aAAazb,EAAQ,GAAK,GAAKA,EAAcA,EAAQ,GAAd,IA7C7CkM,EA6CsE0D,sBAAsBzV,OA7C5F+R,EA+CGwP,kBAAoBzf,IAAEgK,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGzH,IACrD,SAAA0P,GAAK,MAAI,CAACA,EAAOjS,IAAEgK,UAAU,CAAC,KAhD5BiG,EAgDuCmC,SAhDvCnC,EAgDsDqC,UAAU/P,IAChE,SAAAsP,GAAM,MAAI,CAACA,EAAD,GAAAtR,OAAY0R,EAAZ,KAAA1R,OAAqBsR,WAjD/B5B,EAkDGoE,0BAA4BrU,IAAEgK,UAAUhK,IAAE0S,QAAQ7R,OAAOsb,QAlD5DlM,EAkDyEwP,mBAAmBld,IAC9F,SAAAmd,GAAA,IAAAC,EAAA9e,OAAA+M,EAAA,EAAA/M,CAAA6e,EAAA,GAAEE,EAAFD,EAAA,GAAYE,EAAZF,EAAA,UAA2B9e,OAAOsb,QAAQ0D,GAAWtd,IACnD,SAAAud,GAAA,IAAAC,EAAAlf,OAAA+M,EAAA,EAAA/M,CAAAif,EAAA,GAAEE,EAAFD,EAAA,SAA2B,CAA3BA,EAAA,GAAsC,CAAC9N,MAAOgO,SAASL,GAAW/N,OAAsB,SAAdmO,EAAuB,KAAOA,UApDxG/P,EAqDGiQ,kCAAoClgB,IAAEgK,UAAUhK,IAAE0S,QAAQ7R,OAAOsb,QArDpElM,EAqDiFwP,mBAAmBld,IACtG,SAAA4d,GAAA,IAAIN,EAAJhf,OAAA+M,EAAA,EAAA/M,CAAAsf,EAAA,aAAmBtf,OAAOsb,QAAQ0D,GAAWtd,IAC3C,SAAA6d,GAAA,OAAAvf,OAAA+M,EAAA,EAAA/M,CAAAuf,EAAA,WAA8B7d,IAAI,SAAC0R,EAAUlQ,GAAX,MAAqB,CAACkQ,EAAUsL,OAAOC,aAAa,GAAKzb,OAvD3FkM,EAwDG+D,8BAAgChU,IAAEgK,UAAUnJ,OAAOsb,QAxDtDlM,EAwDmEwP,mBAAmBld,IACxF,SAAA8d,GAAA,IAAAC,EAAAzf,OAAA+M,EAAA,EAAA/M,CAAAwf,EAAA,GAAET,EAAFU,EAAA,GAAYT,EAAZS,EAAA,SAA2B,CAACV,EAAU5f,IAAEgK,UAAUnJ,OAAOsb,QAAQ0D,GAAWtd,IAC1E,SAAAge,GAAA,IAAAC,EAAA3f,OAAA+M,EAAA,EAAA/M,CAAA0f,EAAA,GAAEP,EAAFQ,EAAA,GAAavM,EAAbuM,EAAA,SAA2B,CAACR,EA1D5B/P,EA0D4CiQ,kCAAkCjM,WA1D9EhE,EA2DGsE,gCAAkCvU,IAAEgK,UAAUnJ,OAAOsb,QA3DxDlM,EA2DqEiQ,mCAAmC3d,IAC1G,SAAAke,GAAA,IAAAC,EAAA7f,OAAA+M,EAAA,EAAA/M,CAAA4f,EAAA,GAAExM,EAAFyM,EAAA,SAAoC,CAApCA,EAAA,GA5DEzQ,EA4D4DoE,0BAA0BJ,WA62BtF0M,0NAmG4CC,GAC9C,IAAM5E,EAAuB4E,EAAS5E,qBADkB6E,GAAA,EAAAC,GAAA,EAAAC,OAAAzhB,EAAA,IAExD,QAAA0hB,EAAAC,EAAuBjF,EAAvBnW,OAAAC,cAAA+a,GAAAG,EAAAC,EAAAlb,QAAAC,MAAA6a,GAAA,EAA6C,KAAlCK,EAAkCF,EAAA9iB,MACrCwG,EAAO9D,KAAKsH,YAAYsM,+BAA+B0M,GACtDrW,EAASjK,KAAKugB,WAAWzc,GAAzBmG,MACP,GAAIA,EACF,MAAO,CAACqW,WAAUrW,UANkC,MAAAzE,GAAA0a,GAAA,EAAAC,EAAA3a,EAAA,YAAAya,GAAA,MAAAI,EAAA5a,QAAA4a,EAAA5a,SAAA,WAAAya,EAAA,MAAAC,GASxD,MAAO,CAACG,SAAU,KAAMrW,MAAO,yCAGtB+V,GACT,IA0DI/V,EA1DEuW,EAAyBxgB,KAAKsP,eAC9BA,EAAiB0Q,EAAS1Q,eAC5BmR,EAAkB,KAAMC,EAAgB,KAAMC,GAAqB,EACnEC,EAAmB,KAAMC,GAAwB,EAJlCC,GAAA,EAAAC,GAAA,EAAAC,OAAAtiB,EAAA,IAKnB,QAAAuiB,EAAAC,EAAgBlhB,KAAKsH,YAAYgM,KAAjCrO,OAAAC,cAAA4b,GAAAG,EAAAC,EAAA/b,QAAAC,MAAA0b,GAAA,EAAuC,KAA5BjQ,EAA4BoQ,EAAA3jB,MAAA6jB,GAAA,EAAAC,GAAA,EAAAC,OAAA3iB,EAAA,IACrC,QAAA4iB,EAAAC,EAAgBvhB,KAAKsH,YAAYiM,QAAjCtO,OAAAC,cAAAic,GAAAG,EAAAC,EAAApc,QAAAC,MAAA+b,GAAA,EAA0C,KAA/BpQ,EAA+BuQ,EAAAhkB,MAClCkkB,EAAehB,EAAuB3P,GAAG5S,MAAM8S,GAC/CD,EAAOxB,EAAeuB,GAAG5S,MAAM8S,GAErC,GAAIyQ,EAAavQ,SAAWH,EAAKG,OAAQ,CACvC,GAAIuQ,EAAavQ,QAAUH,EAAKG,OAC9B,MAAO,CAAChH,MAAO,KAAMwX,MAAO,CAAC,mCAAoCD,EAAc1Q,IAC1E,GAAI0Q,EAAavQ,OAAQ,CAC9B,GAAIwP,EACF,MAAO,CAACxW,MAAO,KAAMwX,MAAO,CAAC,+BAAgCD,EAAcf,IAE7EA,EAAkB,CAAC1P,IAAGF,SACjB,KAAIC,EAAKG,OAcd,MAAO,CAAChH,MAAO,KAAMwX,MAAO,CAAC,yCAA0CD,EAAc1Q,IAbrF,GAAI4P,EAAe,CACjB,IAAIG,EAOF,MAAO,CAAC5W,MAAO,KAAMwX,MAAO,CAAC,6BAA8B3Q,EAAM4P,IANjE,GAAIC,EACF,MAAO,CAAC1W,MAAO,KAAMwX,MAAO,CAAC,mCAAoC3Q,EAAM2P,EAAiBC,IAE1FC,GAAqB,EACrBF,EAAkBC,EAKtBA,EAAgB,CAAC3P,IAAGF,MAMxB,GAAI2Q,EAAanQ,MAAQ,GAAKP,EAAKO,MAAQ,EAAG,CAC5C,GAAIsP,EACF,MAAO,CAAC1W,MAAO,KAAMwX,MAAO,CAAC,kDAAmDD,EAAc1Q,EAAM2P,EAAiBC,IAEvHG,GAAwB,EAE1B,GAAIW,EAAanQ,QAAUP,EAAKO,MAAO,CACrC,GAAIuP,EACF,MAAO,CAAC3W,MAAO,KAAMwX,MAAO,CAAC,gCAAiCD,EAAc1Q,EAAM8P,IAEpF,GAAIY,EAAanQ,QAAWP,EAAKO,MAAQ,EACvC,MAAO,CAACpH,MAAO,KAAMwX,MAAO,CAAC,oCAAqCD,EAAc1Q,IAElF8P,EAAmB,CAAC7P,IAAGF,OA5CU,MAAArL,GAAA4b,GAAA,EAAAC,EAAA7b,EAAA,YAAA2b,GAAA,MAAAI,EAAA9b,QAAA8b,EAAA9b,SAAA,WAAA2b,EAAA,MAAAC,KALpB,MAAA7b,GAAAub,GAAA,EAAAC,EAAAxb,EAAA,YAAAsb,GAAA,MAAAI,EAAAzb,QAAAyb,EAAAzb,SAAA,WAAAsb,EAAA,MAAAC,GAqDnB,IAAKP,IAAoBC,EACvB,MAAO,CAACzW,MAAO,KAAMwX,MAAO,CAAC,gDAAiDhB,EAAiBC,IAEjG,IAAKG,IAA0BD,EAC7B,MAAO,CAAC3W,MAAO,KAAMwX,MAAO,CAAC,+CAAiDZ,EAAuBD,IAIrG3W,EADE4W,EACM,CAACJ,EAAiBC,GAElB,CAACD,EAAiBC,EAAeE,GAE3C,IACE5gB,KAAK2Q,UAAU1G,GACf,MAAOvD,GACP,GAAIA,aAAayI,EACf,MAAO,CAAClF,MAAO,KAAMwX,MAAO,CAAC,yBAA0BxX,IAEzD,MAAMvD,EAER,MAAO,CAACuD,QAAOwX,MAAO,mDAvLElF,EAAKC,GAC7B,OACE7K,KAAK+P,IAAInF,EAAIxL,EAAIyL,EAAIzL,IAAM,GACxBY,KAAK+P,IAAInF,EAAI1L,EAAI2L,EAAI3L,IAAM,sDAmBC8Q,GAAQ,IAAAC,EAAA5hB,KACnC6hB,EAA0B,SAAAvS,GAC9B,OAAOsS,EAAKC,wBAAwBvS,EAAgBqS,IAEtDE,EAAwBlM,YAAc,SAACrG,EAAgBqG,GACrD,OAAOiM,EAAKE,4BAA4BxS,EAAgBqG,EAAagM,IAGvE,IAAMI,EAAUJ,EAAOK,UAAYL,EAAOM,MAAQN,EAAOO,MACnDC,EAAgBR,EAAOK,YAAcD,EAAU,CACnDC,UAAWL,EAAOK,UAClBC,OAAQN,EAAOM,MACfC,OAAQP,EAAOO,OACbP,EAKJ,OAJAE,EAAwBO,mBAAqB,SAAC9S,EAAgBqG,GAC5D,OAAOiM,EAAKE,4BAA4BxS,EAAgBqG,EAAawM,IAGhEN,kDAGsBvS,EAAgBqS,GAAQ,IAAAU,EAAAriB,KAAAsiB,EACjBtiB,KAAKuiB,sCAAsCjT,EAAgBqS,GAA1Fa,EADgDF,EAChDE,YAAaC,EADmCH,EACnCG,eACZC,EAAQtjB,IAAEujB,MAAMF,GAGtB,OAFcrjB,IAAEujB,MAAMH,GAET7gB,IAAI,SAAAihB,GAAI,MAAK,CACxB/R,EAAG+R,EACH3kB,MAAOykB,EAAM/gB,IAAI,SAAAkhB,GAAQ,IAAAC,EACJT,EAAKU,gCAAiC,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBd,GAAjGqB,EADkBF,EAClBE,KAAMC,EADYH,EACZG,KACX,OAAOzP,EAAA,GACJlE,EAAe2T,GAAMhlB,MAAM+kB,GAD9B,CAEEjS,EAAG8R,EAAMhS,EAAG+R,6DAMetT,EAAgBqG,EAAagM,GAAQ,IAAAuB,EAClCljB,KAAKuiB,sCAAsCjT,EAAgBqS,GAA1Fa,EADiEU,EACjEV,YAAaC,EADoDS,EACpDT,eACRI,EAAiBlN,EAApB5E,EAAY6R,EAAQjN,EAAX9E,EAFsDsS,EAGjDnjB,KAAK+iB,gCAAiC,CAACF,OAAMD,QAAO,CAACJ,cAAaC,kBAAiBd,GAExG,MAAO,CAAC5Q,EAL8DoS,EAG/DH,KAEUnS,EALqDsS,EAGzDF,oEAK8B3T,EAAgBqS,GAC3D,IAGIa,EAAaC,EAHXW,EAAW9T,EAAe7Q,OAC1B4kB,EAAc1R,KAAKC,IAALC,MAAAF,KAAI1R,OAAAiJ,EAAA,EAAAjJ,CAAQqP,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAMQ,YAAY,EAQhF,OAPoBkjB,EAAbK,WAGJS,EAAgCW,EAAhBZ,EAA0Ba,IAE1CZ,EAAgCY,EAAhBb,EAA6BY,GAEzC,CAACZ,cAAaC,8EAG6Dd,GAAQ,IAEtFqB,EAAMC,EAF4BJ,EAAoDS,EAApDT,KAAMD,EAA8CU,EAA9CV,KAAQH,EAAsCc,EAAtCd,eAAgBD,EAAsBe,EAAtBf,YAcpE,OAbkCb,EAA3BK,WAGJgB,EAAeJ,EAATK,EAAeJ,IAErBG,EAAeH,EAATI,EAAeL,GALUjB,EAAhBM,QAQhBe,EAAOP,EAAiB,EAAIO,GARIrB,EAATO,QAWvBe,EAAOT,EAAc,EAAIS,GAEpB,CAACD,OAAMC,eAhGQ5T,GAApB0Q,EAQGyD,2BAA6B,EARhCzD,EAWGvE,kBAAoB,CACzBiI,UAAW,KACXC,UAbE3D,EAac4D,4BAA4B,CAAC3B,WAAW,EAAMC,OAAO,EAAOC,OAAO,IACnF0B,UAdE7D,EAcc4D,4BAA4B,CAAC3B,WAAW,EAAOC,OAAO,EAAMC,OAAO,IACnF2B,UAfE9D,EAec4D,4BAA4B,CAAC3B,WAAW,EAAMC,OAAO,EAAMC,OAAO,IAClF4B,SAhBE/D,EAgBa4D,4BAA4B,CAAC3B,WAAW,EAAOC,OAAO,EAAMC,OAAO,IAClF6B,SAjBEhE,EAiBa4D,4BAA4B,CAAC3B,WAAW,EAAMC,OAAO,EAAMC,OAAO,IACjF8B,SAlBEjE,EAkBa4D,4BAA4B,CAAC3B,WAAW,EAAOC,OAAO,EAAOC,OAAO,IACnF+B,SAnBElE,EAmBa4D,4BAA4B,CAAC3B,WAAW,EAAMC,OAAO,EAAOC,OAAO,KAnBhFnC,EAqBGpE,iBArBHoE,EAqB2B4D,4BAA4B,CAAC3B,WAAY,EAAOC,OAAO,EAAOC,OAAO,IAsKtG7S,EAAK0M,QAAUgE,MAETmE,kMACsB3H,EAAKC,GAC7B,OACE7K,KAAK+P,IAAInF,EAAIxL,EAAIyL,EAAIzL,IAAM,GACxBY,KAAK+P,IAAInF,EAAI1L,EAAI2L,EAAI3L,IAAM,IAK5B0L,EAAIxL,IAAMyL,EAAIzL,IAEPwL,EAAIxL,EAAI,IAAM,EAChByL,EAAI3L,GAAK0L,EAAI1L,EAEb2L,EAAI3L,GAAK0L,EAAI1L,WAdJxB,GAkBtBA,EAAK8U,IAAMD,EAEX7U,EAAK+U,WAAa,CAAC/U,EAAK0M,QAAS1M,EAAK8U,KAEtC9jB,OAAOgP,KAAOA,EAMCA,iCCloCTgV,4LACK,IAAAtkB,EAAAC,KAAAsM,EAIHtM,KAAKmM,MAFPsC,EAFKnC,EAELmC,UAAW6V,EAFNhY,EAEMgY,UAAWC,EAFjBjY,EAEiBiY,SAAUC,EAF3BlY,EAE2BkY,gBAAiBC,EAF5CnY,EAE4CmY,eAAgBC,EAF5DpY,EAE4DoY,MAAOC,EAFnErY,EAEmEqY,OAAQvO,EAF3E9J,EAE2E8J,SAAUwO,EAFrFtY,EAEqFsY,SAAUC,EAF/FvY,EAE+FuY,SACpGxmB,EAHKiO,EAGLjO,SAAUiR,EAHLhD,EAGKgD,eAHLwV,EAK4BzmB,EAA5BL,MAAQG,EALR2mB,EAKQ3mB,OAAQiJ,EALhB0d,EAKgB1d,QAkBvB,OAhBAqH,EAAYsW,IAAW,QAAS,aAAc,CAC5CC,cAAeN,EACfO,eAAgBN,EAChBO,WAAY9O,IAAakO,GAAaC,GACtCY,aAAcP,EACdC,WACAO,sBAAkC,KAAXjnB,EACvBknB,qBAAiC,WAAXlnB,EACtBmnB,qBAAiC,WAAXnnB,EACtBonB,oBAAgC,UAAXpnB,EACrBqnB,kBAAmB,CAAC,UAAW,SAAU,eAAevf,SAASmB,GACjEqe,iBAA8B,YAAZre,EAClBse,gBAA6B,WAAZte,EACjBue,qBAAkC,gBAAZve,GACrBqH,GAGDd,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWA,EAAWmX,QAAShB,GACjCtV,EAAe3N,IAAI,SAAAiP,GAAG,OACrBjD,EAAAC,EAAAzQ,cAAA,OAAK6Q,IAAG,OAAArO,OAASiR,EAAIC,GAAKpC,UAAW,OAClCmC,EAAI3S,MAAM0D,IAAI,SAAAmP,GAAI,OACjBnD,EAAAC,EAAAzQ,cAAC0oB,GAAD,CACE7X,IAAG,GAAArO,OAAKmR,EAAKC,EAAV,KAAApR,OAAemR,EAAKD,GACvBC,KAAMA,EACNwT,UAAWA,GAAcC,GAAYE,EAAe3T,GACpD5I,UAAWsc,EAAgB1T,GAC3ByT,SAAUE,EAAe3T,GACzBzS,SAAUA,EACV+X,SAAUrW,EAAKoM,MAAMiK,SACrB0P,KAAM/lB,EAAKoM,MAAM2Z,oBArCC9W,cAgElCqV,GAAoBpV,aAAe,CACjCR,UAAW,GACXiW,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVkB,UAAU,OAGNC,8MACJ5P,SAAW,WACL/O,EAAK8E,MAAMjE,WAAab,EAAK8E,MAAMiK,SACrC/O,EAAK8E,MAAMiK,SAAS/O,EAAK8E,MAAM2E,MACtBzJ,EAAK8E,MAAMoY,UAAYld,EAAK8E,MAAM2Z,MAC3Cze,EAAK8E,MAAM2Z,gFAIN,IAAAzX,EACoFrO,KAAKmM,MAA3F2E,EADEzC,EACFyC,KAAMwT,EADJjW,EACIiW,UAAWpc,EADfmG,EACenG,UAAWqc,EAD1BlW,EAC0BkW,SAA6Bnd,EADvDiH,EACoChQ,SAAWL,MAAQoJ,QAAWgP,EADlE/H,EACkE+H,SAAU0P,EAD5EzX,EAC4EyX,KAC7EG,EACJ,CAAC,UAAW,SAAU,eAAehgB,SAASmB,IAC3C0J,EAAKO,MAAQ,GACbP,EAAKO,MAAO,EACbP,EAAKO,MAAQ,KACjB,OACE1D,EAAAC,EAAAzQ,cAAA,OACE6Q,IAAG,OAAArO,OAASmR,EAAKC,EAAd,KAAApR,OAAmBmR,EAAKD,GAC3BpC,UAAWsW,IAAW,OAAD,SAAAplB,OAAkBmR,EAAKO,OAAS,CAACnJ,YAAWqc,aACjEqB,SAAWxP,GAAYlO,GAAe4d,GAAQvB,IAAcD,EAAYtkB,KAAKoW,SAAW,MAExFzI,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,QAAS,YAClCpX,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,QAAS,YAClCpX,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,QAAS,YACjCjU,EAAKG,OACJtD,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,SAAD,UAAAplB,OAAqBmR,EAAKG,UACjDgV,GAEc,IAAfnV,EAAKO,MACP1D,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,QAAS,aAClCkB,aA/BUjX,aAkD5BgX,GAAc/W,aAAe,CAC3BqV,WAAW,EACXpc,WAAW,EACXqc,UAAU,GAGGF,UC/HF6B,GAAY,SAACC,EAAUC,GAClC,OAAOC,GAAaF,EAAbE,CAAuBD,IAGnBC,GAAe,SAAAF,GAC1B,GAAIA,IAAa9W,EAAK0M,QACpB,OAAOuK,GACF,GAAIH,IAAa9W,EAAK8U,IAC3B,OAAOoC,GAGT,MAAM,IAAInX,MAAJ,8BAAAzP,OAAwCwmB,EAAWA,EAAS7e,YAAYxJ,KAAOqoB,EAA/E,OAGKG,GAAsB,SAAAF,GACjC,MAAQ,CACNrV,EArBoB,IAqBjBqV,EAAMrV,EACTF,EAtBoB,IAsBjBuV,EAAMvV,IAIA0V,GAAkB,SAAAH,GAC7B,MAAQ,CACNrV,EA5BoB,IA4BjBqV,EAAMrV,EACTF,EA7BoB,KA6BhBuV,EAAMvV,GAAKuV,EAAMrV,EAAI,IAAM,EAAI,KAAQ,QC3BzCyV,oLACI,IACCnV,EAASrR,KAAKmM,MAAdkF,MACP,OAAKA,EAIJ1D,EAAAC,EAAAzQ,cAAA,KAAGspB,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA0C+mB,GAA1C,MACT/Y,EAAAC,EAAAzQ,cAAA,QACEwpB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAnnB,OAAK+mB,GAAL,QAChBrV,IARG,YAJ0B0V,iBAsBjCC,oLACI,IACA3V,EAASrR,KAAKmM,MAAdkF,MACN,OAAKA,EAIJ1D,EAAAC,EAAAzQ,cAAA,KAAGspB,UAAS,oBACT9Y,EAAAC,EAAAzQ,cAAA,UAAQ8pB,EAAGP,GAA2BQ,KAAM,OAAQC,OAAQ,OAAQC,YAAa,IACjFzZ,EAAAC,EAAAzQ,cAAA,QACEwpB,iBAAkB,UAClBC,WAAY,SACZC,MAAO,CAACC,SAAQ,GAAAnnB,OAAK+mB,GAAL,QAChBrV,IATG,YAJsB0V,iBAuB7BM,oLACI,IACAhW,EAASrR,KAAKmM,MAAdkF,MACN,OAAKA,EAIJ1D,EAAAC,EAAAzQ,cAAA,KAAGspB,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAAyC+mB,GAAzC,MACT/Y,EAAAC,EAAAzQ,cAAA,QACEwpB,iBAAkB,UAClBC,WAAY,SACZO,OAAQ,OACRC,YAAaV,EACbY,WAAY,SACZT,MAAO,CAACC,SAAQ,GAAAnnB,OAAK+mB,GAAL,QAChBrV,IAXG,YAJuB0V,iBAyB9BQ,oLAOI,IAAAjb,EACetM,KAAKmM,MAApBkF,EADA/E,EACA+E,MAAO3R,EADP4M,EACO5M,KACP8nB,EAAYxnB,KAAKsH,YAAYmgB,aAAa/nB,GAChD,OAAK8nB,EAIJ7Z,EAAAC,EAAAzQ,cAACqqB,EAAD,CAAWnW,MAAOA,IAHX,YAXiB0V,iBAAvBQ,GACEE,aAAe,CACnBC,cAAelB,GACfmB,OAAUX,GACVY,QAAWP,IAqBAE,UC/FTM,oLACI,IAAAvb,EACkCtM,KAAKmM,MAAvCrO,EADAwO,EACAxO,KAAM8M,EADN0B,EACM1B,KAAMkd,EADZxb,EACYwb,WAAYC,EADxBzb,EACwByb,OAC/B,OACEpa,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGjB,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,SAAwB2oB,UAAW,cAAA9mB,OAC3B+mB,GAD2B,KAAA/mB,OACD+mB,GADC,cAAA/mB,OFJpB,GEIoB,KAAAA,OFJpB,GEIoB,kBAAAA,QAGzBmoB,EAAW/W,EAAI,EAAIgX,EAAOhX,EAHD,KAAApR,QAGOmoB,EAAWjX,EAAI,EAAIkX,EAAOlX,EAHjC,MAIvCjB,KAAK,MAAOhF,GACb+C,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACH6P,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAS,UAAAroB,OAAY7B,EAAZ,SAAyBspB,YFZjB,GEY0DD,OAAQ,SACxFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAS,UAAAroB,OAAY7B,EAAZ,SAAyBopB,KAAM,WAE/CvZ,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,SAAApB,OAAW7B,EAAX,WACH6P,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAS,UAAAroB,OAAY7B,EAAZ,SAAyBspB,YFhBjB,GEgB0DD,OAAQ,SACxFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAS,UAAAroB,OAAY7B,EAAZ,SAAyBopB,KAAM,mBAhBrBH,iBA8B5BkB,oLAII,IAAA5Z,EACyBrO,KAAKmM,MAA9BrO,EADAuQ,EACAvQ,KAAMoqB,EADN7Z,EACM6Z,OAAQC,EADd9Z,EACc8Z,QACrB,OACExa,EAAAC,EAAAzQ,cAAA,OACG6qB,UAAS,UAAAroB,OAAY7B,EAAZ,KAAA6B,OAAoBuoB,GAC7BzB,UAAW0B,EAAUnoB,KAAKsH,YAAY8gB,qBAAkB1pB,WATxCqoB,iBAAlBkB,GACEG,qCACS1B,eAA0BA,QAmB3C,IAAM2B,GAAc,SAAC5Z,EAAD1B,GAA0D,IAA7CnC,EAA6CmC,EAA7CnC,KAAMkd,EAAuC/a,EAAvC+a,WAAuCQ,EAAAvb,EAA3Bgb,cAA2B,IAAAO,EAAlB,CAACvX,EAAG,EAAGF,EAAG,GAAQyX,EACtEC,EADsE,SAAAC,GAAA,SAAAD,IAAA,OAAAtoB,OAAAC,EAAA,EAAAD,CAAAD,KAAAuoB,GAAAtoB,OAAAwoB,EAAA,EAAAxoB,CAAAD,KAAAC,OAAAyoB,EAAA,EAAAzoB,CAAAsoB,GAAA1W,MAAA7R,KAAAxB,YAAA,OAAAyB,OAAA0oB,EAAA,EAAA1oB,CAAAsoB,EAAAC,GAAAvoB,OAAA2oB,EAAA,EAAA3oB,CAAAsoB,EAAA,EAAAva,IAAA,SAAA1Q,MAAA,WAGxE,OACEqQ,EAAAC,EAAAzQ,cAAC0rB,GAAD,CACE/qB,KAAM2Q,EACN7D,KAAMA,EACNkd,WAAYA,EACZC,OAAQA,QAR4DQ,EAAA,CAC3CxB,iBAYjCwB,EAAmBO,YAAnB,GAAAnpB,OAAoC8O,EAApC,cAb4E,IAetEsa,EAfsE,SAAAC,GAAA,SAAAD,IAAA,OAAA9oB,OAAAC,EAAA,EAAAD,CAAAD,KAAA+oB,GAAA9oB,OAAAwoB,EAAA,EAAAxoB,CAAAD,KAAAC,OAAAyoB,EAAA,EAAAzoB,CAAA8oB,GAAAlX,MAAA7R,KAAAxB,YAAA,OAAAyB,OAAA0oB,EAAA,EAAA1oB,CAAA8oB,EAAAC,GAAA/oB,OAAA2oB,EAAA,EAAA3oB,CAAA8oB,EAAA,EAAA/a,IAAA,SAAA1Q,MAAA,WAkBjE,IAAA2rB,EACmBjpB,KAAKmM,MAAxB+b,EADAe,EACAf,OAAQC,EADRc,EACQd,QACf,OACExa,EAAAC,EAAAzQ,cAAC+rB,GAAD,CACEprB,KAAM2Q,EACNyZ,OAAQA,EACRC,QAASA,QAxB2DY,EAAA,CAerDhC,iBAgBvB,OAhBMgC,EACGI,WAAaZ,EAatBQ,EAASD,YAAcra,EAEhBsa,GAGHK,GAAYf,GAAY,YAAa,CACzCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,kWACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,KACxBkX,OAAQ,CAAChX,EAAG,EAAGF,GAAI,MAGfyY,GAAYjB,GAAY,YAAa,CACzCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,qTACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB0Y,GAAclB,GAAY,cAAe,CAC7Czd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,0EACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB2Y,GAAmBnB,GAAY,mBAAoB,CACvDzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,o0BACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB4Y,GAAWpB,GAAY,WAAY,CACvCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,glBACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB6Y,GAAcrB,GAAY,cAAe,CAC7Czd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,saACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB8Y,GAAWtB,GAAY,WAAY,CACvCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,02BACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpB+Y,GAAWvB,GAAY,WAAY,CACvCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,+UACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBgZ,GAAYxB,GAAY,YAAa,CACzCzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,qQACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBiZ,GAAyBzB,GAAY,yBAA0B,CACnEzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,4rBACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBkZ,GAAyB1B,GAAY,yBAA0B,CACnEzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,2pCACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBmZ,GAAoB3B,GAAY,oBAAqB,CACzDzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,2gDACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,KACxBkX,OAAQ,CAAChX,EAAG,EAAGF,EAAG,OAGdoZ,GAAuB5B,GAAY,uBAAwB,CAC/Dzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,+wDACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBqZ,GAAoB7B,GAAY,oBAAqB,CACzDzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,4kDACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBsZ,GAA0B9B,GAAY,0BAA2B,CACrEzd,KAAM+C,EAAAC,EAAAzQ,cAAA,SACLwQ,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,gJACR1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,2IACR1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,2/FAETvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,KACxBkX,OAAQ,CAAChX,EAAG,GAAIF,EAAG,MAGfuZ,GAAwB/B,GAAY,wBAAyB,CACjEzd,KAAM+C,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAE,83DACdvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpBwZ,GAAsBhC,GAAY,sBAAuB,CAC7Dzd,KAAM+C,EAAAC,EAAAzQ,cAAA,SACJwQ,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,6RACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,2PACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,uMACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,mRACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,uMACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,oxDAEXvB,WAAY,CAAC/W,EAAG,IAAKF,EAAG,OAGpByZ,oLAqBI,IAAAC,EAC0BvqB,KAAKmM,MAA/B0a,EADA0D,EACA1D,MAAOqB,EADPqC,EACOrC,OAAQC,EADfoC,EACepC,QACfqC,EAAaxqB,KAAKsH,YAAYmjB,cAAc5D,GACnD,OACElZ,EAAAC,EAAAzQ,cAACqtB,EAAD,CAAYtC,OAAQA,EAAQC,QAASA,WAzBtBpB,iBAAduD,GACEG,cAAgB,CACpBC,KAAQtB,GACRuB,KAAQrB,GACRsB,OAAUrB,GACVsB,YAAerB,GACfsB,IAAOrB,GACPsB,OAAUrB,GACVsB,IAAOrB,GACPsB,IAAOrB,GACP3nB,KAAQ4nB,GACRqB,sBAAuBpB,GACvBqB,qBAAsBpB,GACtBqB,gBAAiBpB,GACjBqB,mBAAoBpB,GACpBqB,gBAAiBpB,GACjBqB,sBAAuBpB,GACvBqB,oBAAqBpB,GACrBqB,kBAAmBpB,QAkBjBqB,oLAEH,OAAOzrB,OAAO0rB,OAAOrB,GAAMG,eACxB9oB,IAAI,SAAA6oB,GAAU,OAAI7c,EAAAC,EAAAzQ,cAACqtB,EAAWrB,WAAZ,CAAuBnb,IAAKwc,EAAW1B,aAAe0B,EAAW1sB,gBAH1DipB,iBAM/BuD,GAAMsB,YAAcF,GAELpB,UChOTuB,oLAoCI,IAAAvf,EACetM,KAAKmM,MAApBrO,EADAwO,EACAxO,KAAMguB,EADNxf,EACMwf,MACb,OACEne,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGjB,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,WAAyB2Q,UAAW,eACtCqd,EAAMC,QAETpe,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoB2Q,UAAW,UACjCqd,EAAME,QAETre,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoB2Q,UAAW,UACjCqd,EAAMG,QAETte,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoB2Q,UAAW,UACjCqd,EAAMI,QAETve,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoB2Q,UAAW,UACjCqd,EAAMK,QAETxe,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAE,QAAApB,OAAU7B,EAAV,MAAoB2Q,UAAW,UACjCqd,EAAMM,gBAxDiBrF,iBAA5B8E,GACGQ,cACL1e,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACE+pB,KAAM,cACNoF,MHXgB,IGYhBC,OHZgB,MGclB5e,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,SAAU4a,EAAC,QAAA1pB,OHdV,IGcU,KAAAA,OHdV,IGcU,MAAAA,OHdV,IGcU,OAAAA,OHZP,EGYO,KAAAA,OHZP,EGYO,KAAAA,OAAiI+mB,GAAjI,KAAA/mB,OAAmL+mB,GAAnL,MAAA/mB,OAAsO+mB,GAAtO,QAR5BmF,GAWGW,iBACL7e,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACE+pB,KAAM,cACNoF,MHrBgB,IGsBhBC,OHtBgB,MGwBlB5e,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,SAAU4a,EAAC,eAAA1pB,OACrB,WACH,IAAM8sB,EAAa,EAAbA,EAAmB,EACzB,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpB9qB,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAIwO,KAAK+a,GAAK,IACnC/qB,IAAI,SAAAgrB,GACH,IACM5b,EAAI0b,EADK/F,GACM/U,KAAKib,IAAID,GACxB9b,EAAI4b,EAFK/F,GAEM/U,KAAKkb,IAAIF,GAC9B,SAAAhtB,OAAUoR,EAAV,KAAApR,OAAekR,KAEhBjB,KAAK,KAVL,GADqB,mBAAAjQ,OAatB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGyc,UAAUza,IAAI,SAAAwB,GAAK,OAAIA,EAAQ,EAAIwO,KAAK+a,GAAK,IAAG/qB,IAAI,SAAAgrB,GAAK,SAAAhtB,OAAO,GAAAgS,KAAKib,IAAID,GAA4D,IAAM,EAAlF,KAAAhtB,OAAuF,GAAAgS,KAAKkb,IAAIF,GAA4D,IAAM,KAAKhtB,OAAO,KAbpO,kBAyDlC,IAAMmtB,GAAwB,SAACre,EAAW3Q,EAAMguB,GAAU,IAClDiB,EADkD,SAAAC,GAAA,SAAAD,IAAA,OAAA9sB,OAAAC,EAAA,EAAAD,CAAAD,KAAA+sB,GAAA9sB,OAAAwoB,EAAA,EAAAxoB,CAAAD,KAAAC,OAAAyoB,EAAA,EAAAzoB,CAAA8sB,GAAAlb,MAAA7R,KAAAxB,YAAA,OAAAyB,OAAA0oB,EAAA,EAAA1oB,CAAA8sB,EAAAC,GAAA/sB,OAAA2oB,EAAA,EAAA3oB,CAAA8sB,EAAA,EAAA/e,IAAA,SAAA1Q,MAAA,WAGpD,OACEqQ,EAAAC,EAAAzQ,cAAC8vB,GAAD,CAAqBnvB,KAAMA,EAAMguB,MAAOA,QAJUiB,EAAA,CACvBhG,iBASjC,OAFAgG,EAAmBjE,YAAcra,EAE1Bse,GAGHG,GAA0BJ,GAAsB,0BAA2B,WAAY,CAC3Ff,OAAQF,GAAoBQ,cAC5BL,OACEre,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,cACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OHnGY,EGmGZ,KAAAA,OHnGY,EGmGZ,OAGbssB,OACEte,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,SACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OH5GU,EG4GV,KAAAA,OH5GU,EG4GV,OAEXgO,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,OACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,QAIfwF,OACEve,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,SACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,OAEX/Y,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,OACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,QAIfyF,OACExe,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,SACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,OAEX/Y,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,OACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,QAIf0F,OACEze,EAAAC,EAAAzQ,cAAA,SACEwQ,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,SACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,OAEX/Y,EAAAC,EAAAzQ,cAAA,QACEsR,UAAW,OACX6d,MAAO5F,GACP6F,OAAQ7F,GACRD,UAAS,aAAA9mB,OAAe+mB,GAAf,KAAA/mB,OAA4C+mB,GAA5C,UAMXyG,GAA2BL,GAAsB,2BAA4B,YAAa,CAC9Ff,OAAQF,GAAoBQ,cAC5BL,OACEre,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,OAAQgY,UAAW,cAAe4C,EAAG,kiKAExD4C,OACEte,EAAAC,EAAAzQ,cAAA,KAAGsR,UAAW,OAAQgY,UAAW,oCAC/B9Y,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,+IACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,wIACT1b,EAAAC,EAAAzQ,cAAA,QAAMksB,EAAG,g+FAGb6C,OACEve,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,OAAQgY,UAAW,gCAAiC4C,EAAG,s3BAE1E8C,OACExe,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,OAAQgY,UAAW,oCAAqC4C,EAAG,s0BAE9E+C,OACEze,EAAAC,EAAAzQ,cAAA,QAAMsR,UAAW,OAAQgY,UAAW,8BAA+B4C,EAAG,khBAIpE+D,oLAOH,OAAOntB,OAAO0rB,OAAO3rB,KAAKsH,YAAY+lB,yBACnC1rB,IAAI,SAAA2rB,GAAoB,OACtB3f,EAAAC,EAAAzQ,cAACmwB,EAAD,CAAsBtf,IAAKsf,EAAqBxE,aAAewE,EAAqBxvB,gBAT9DipB,iBAAxBqG,GACGC,wBAA0B,CAC/BE,SAAYL,GACZM,UAAaL,QAUXM,8MAGL7P,MAAQ,CACN8P,cAAe3tB,EAAKoM,MAAMkF,MAC1Bsc,aAAc5tB,EAAKoM,MAAMkF,SAG3Buc,cAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGjsB,IAAI,SAAAwc,GAAC,OAAI0P,IAAMC,gGAU3BC,EAAWC,EAAWC,GAAU,IAAA5mB,EAAArH,KAC7CA,KAAKmM,MAAM4Z,UAAY/lB,KAAK4d,MAAM+P,eAAiB3tB,KAAK4d,MAAM8P,eAChE3lB,WAAW,WACTV,EAAKumB,cACF7pB,OAAO,SAACmqB,EAAc/P,GAAf,OACL9W,EAAKuW,MAAM8P,eAAiBvP,GAAKA,GAAK9W,EAAKuW,MAAM+P,cAC9CtmB,EAAKuW,MAAM+P,cAAgBxP,GAAKA,GAAK9W,EAAKuW,MAAM8P,gBAErD3pB,OAAO,SAAAmqB,GAAY,OAAIA,EAAaC,UACpCxsB,IAAI,SAAAusB,GAAY,OAAIA,EAAaC,QAAQC,kBAC3C,oCAIC,IAAAtlB,EAAA9I,KAAAqO,EAIFrO,KAAKmM,MAFR4E,EAFK1C,EAEL0C,EAAGF,EAFExC,EAEFwC,EAAG3I,EAFDmG,EAECnG,UAAWqc,EAFZlW,EAEYkW,SAAUlT,EAFtBhD,EAEsBgD,MAAOJ,EAF7B5C,EAE6B4C,OAAQ2U,EAFrCvX,EAEqCuX,QAASG,EAF9C1X,EAE8C0X,SAAUsI,EAFxDhgB,EAEwDggB,aAAclI,EAFtE9X,EAEsE8X,SAFtEmI,EAAAjgB,EAGJrQ,MAHIuwB,EAAAD,EAGIrwB,aAHJ,IAAAswB,EAGY,WAHZA,EAAAC,EAAAF,EAGwBpwB,cAHxB,IAAAswB,EAGiC,OAHjCA,EAAAC,EAAAH,EAGyCrnB,sBAHzC,IAAAwnB,KAGgErnB,EAHhEknB,EAGgElnB,QAHhEsnB,EAK+B1uB,KAAK4d,MAApC8P,EALAgB,EAKAhB,cAAeC,EALfe,EAKef,aAChBgB,GAAqBN,EAAapoB,SAASoJ,EAAKmC,WAAa6c,EAAapoB,SAASoJ,EAAKqC,UACxFkd,GAAqBD,EACpBzI,EAAYQ,GAAoBP,EAAU,CAACpV,IAAGF,MACpD,OACClD,EAAAC,EAAAzQ,cAAA,KAAGspB,UAAS,aAAA9mB,OAAeumB,EAAUnV,EAAzB,KAAApR,OAA8BumB,EAAUrV,EAAxC,MACTlD,EAAAC,EAAAzQ,cAAA,KAAGsR,UAAW,iBACXsX,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGpkB,IAAI,SAAAwc,GAAC,OAChCxQ,EAAAC,EAAAzQ,cAAA,OAAK6Q,IAAKmQ,EAAG6J,UAAS,SAAAroB,OAAW1B,EAAX,KAAA0B,OAAoBwe,GAAK0Q,QAAS1Q,GAAK9M,EAAQ,EAAI,GACvE1D,EAAAC,EAAAzQ,cAAA,WACE2xB,IAAKhmB,EAAK8kB,cAAczP,GACxB4Q,cAAe,UACfC,cAAe,MACftvB,KAAM,YACN/B,KAAM+vB,EAAgBvP,EAAI,EAAI,EAC9BhR,GAAIwgB,EAAexP,EAAI,EAAI,EAC3B8Q,IAAK,OACLC,YAAa,EACbhI,KAAM,cAGL,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGnjB,OAAO,SAAAoa,GAAC,OAAIA,GAAK9M,IAAO1P,IAAI,SAAAwc,GAAC,OAClDxQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,CAAUZ,IAAKmQ,GACbxQ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAS,SAAAroB,OAAW1B,EAAX,KAAA0B,OAAoBwe,KACjClN,IAAW5B,EAAKmC,SAAW7D,EAAAC,EAAAzQ,cAACgyB,GAAD,CAAOtI,MAAO3oB,EAAQgqB,OAAQ,QAASC,QAASlhB,GAAkB0nB,IAAwB,KACrH1d,IAAW5B,EAAKqC,SAAW/D,EAAAC,EAAAzQ,cAACgyB,GAAD,CAAOtI,MAAO3oB,EAAQgqB,OAAQ,QAASC,QAASlhB,GAAkB2nB,IAAwB,QAGzHxnB,EAAUuG,EAAAC,EAAAzQ,cAACiyB,GAAD,CAAgB/d,MAAOA,EAAO3R,KAAM0H,IAAc,MAE/DuG,EAAAC,EAAAzQ,cAAA,OACE6qB,UAAS,SAAAroB,OAAW1B,EAAX,WACTwQ,UAAWsW,IAAW,CAAC7c,YAAWqc,aAClCqB,QAASA,wDA5DczZ,EAAOyR,GACpC,OAAIzR,EAAM4Z,UAAY5Z,EAAMkF,QAAUuM,EAAMvM,MACnC,CAACqc,cAAe9P,EAAM+P,aAAcA,aAAcxhB,EAAMkF,OAG1D,YAfQ0V,iBAAb0G,GACG7B,YAAcwB,GA0FvBK,GAAKxe,aAAe,CAClB8W,UAAU,GAGG0H,UC3ST4B,4LAQK,IAAA7X,EAC6FxX,KAAKsH,YAAlGgoB,EADA9X,EACA8X,gBAAiBC,EADjB/X,EACiB+X,YAAaC,EAD9BhY,EAC8BgY,aAAcC,EAD5CjY,EAC4CiY,iBAAkBC,EAD9DlY,EAC8DkY,aAAcC,EAD5EnY,EAC4EmY,cAEnF,OACEhiB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAA,QACE4D,GAAI,kBACJsoB,EAAG,qOACH5C,UAAW,cAAA9mB,OACI+mB,GADJ,KAAA/mB,OAC8B+mB,GAD9B,cAAA/mB,OJfO,GIiBmB6vB,EAF1B,KAAA7vB,OJfO,GIiB8D6vB,EAFrE,kBAAA7vB,QAGK2vB,EAAgBve,EAAI,EAAIwe,EAAYxe,EAHzC,KAAApR,QAG+C2vB,EAAgBze,EAAI,EAAI0e,EAAY1e,EAHnF,MAITjB,KAAK,OAETjC,EAAAC,EAAAzQ,cAAA,QACE4D,GAAI,mBACJsoB,EAAG,yjBACH5C,UAAW,cAAA9mB,OACI+mB,GADJ,KAAA/mB,OAC8B+mB,GAD9B,cAAA/mB,OJxBO,GI0BmBgwB,EAF1B,KAAAhwB,OJxBO,GI0B+DgwB,EAFtE,gCAAAhwB,QAIK8vB,EAAiB1e,EAAI,EAAI2e,EAAa3e,EAJ3C,KAAApR,QAIiD8vB,EAAiB5e,EAAI,EAAI6e,EAAa7e,EAJvF,MAKTjB,KAAK,OAETjC,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAI,oBACL4M,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,mBAAoBZ,YJlCd,GIkCuDD,OAAQ,SACrFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,mBAAoBd,KAAM,WAE5CvZ,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAI,oBACL4M,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,mBAAoBZ,YJtCd,GIsCuDD,OAAQ,SACrFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,mBAAoBd,KAAM,WAE5CvZ,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAI,qBACL4M,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,oBAAqBZ,YJ1Cf,GI0CwDD,OAAQ,SACtFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,oBAAqBd,KAAM,WAE7CvZ,EAAAC,EAAAzQ,cAAA,KAAG4D,GAAI,qBACL4M,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,oBAAqBZ,YJ9Cf,GI8CwDD,OAAQ,SACtFxZ,EAAAC,EAAAzQ,cAAA,OAAK6qB,UAAW,oBAAqBd,KAAM,mBA9CvBH,kBAAxBsI,GACGC,gBAAkB,CAACve,EAAG,OAAQF,EAAG,QADpCwe,GAEGE,YAAc,CAACxe,GAAI,GAAIF,GAAI,IAF9Bwe,GAGGG,aAAe,IAHlBH,GAIGI,iBAAmB,CAAC1e,EAAG,OAAQF,EAAG,QAJrCwe,GAKGK,aAAe,CAAC3e,EAAG,GAAIF,GAAI,IAL9Bwe,GAMGM,cAAgB,UA+CnBC,oLAgBK,IAAAC,EACyB7vB,KAAKsH,YAA9BwoB,EADAD,EACAC,QAASC,EADTF,EACSE,aADTzjB,EAEiCtM,KAAKmM,MAAtCxO,EAFA2O,EAEA3O,KAAMwP,EAFNb,EAEMa,GAAI+a,EAFV5b,EAEU4b,OAAQxoB,EAFlB4M,EAEkB5M,KAAMglB,EAFxBpY,EAEwBoY,MACzB5c,EAAO,CAACiJ,EAAG5D,EAAG4D,EAAIpT,EAAKoT,EAAGF,EAAG1D,EAAG0D,EAAIlT,EAAKkT,GACzCmf,EAAWhwB,KAAKsH,YAAY2oB,YAAjB,GAAAtwB,OAAgCmI,EAAKiJ,EAArC,KAAApR,OAA0CmI,EAAK+I,IAC1Dqf,EAAgBve,KAAKwe,KAAKxe,KAAK+P,IAAI5Z,EAAKiJ,GAAKY,KAAK+P,IAAI5Z,EAAK+I,IAEjE,OACElD,EAAAC,EAAAzQ,cAAA,OACE6qB,UAAS,UAAAroB,OAAYD,EAAZ,KAAAC,OAAoBuoB,GAC7BzB,UAAW,cAAA9mB,OJjFK,IIkFoBhC,EAAKoT,EAD9B,KAAApR,OJjFK,IIkFmDhC,EAAKkT,EAD7D,eAAAlR,OAECqwB,EAFD,KAAArwB,OAEa+mB,GAFb,KAAA/mB,OAEuC+mB,GAFvC,kBAAA/mB,OAGImwB,EAHJ,KAAAnwB,OAGe+mB,GAAyBwJ,EAHxC,MAAAvwB,OAAAM,OAAAiJ,EAAA,EAAAjJ,CAILykB,EAAQ,cAAA/kB,OACG+mB,GADH,KAAA/mB,OAC6B+mB,GAD7B,cAAA/mB,OAEDowB,EAFC,kBAAApwB,QAGG,GAHH,KAAAA,QAG8B,GAH9B,MAIR,KACJoE,OAAO,SAAA0iB,GAAS,OAAIA,IAAW7W,KAAK,cAnC1BmX,iBAAd6I,GACGzG,WAAakG,GADhBO,GAEGE,QAAUpJ,GAFbkJ,GAGGG,aAAe,IAHlBH,GAKGK,YAAc,CACnBG,MAAO,EACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,IACTC,OAAQ,IACRC,QAAS,IACTC,OAAQ,GACRC,OAAQ,IAoCZf,GAAM3gB,aAAe,CACnByV,OAAO,GAGMkL,UCnGTgB,oLACK,IAAA7wB,EAAAC,KAAAsM,EAIHtM,KAAKmM,MAFPsC,EAFKnC,EAELmC,UAAW6V,EAFNhY,EAEMgY,UAAWC,EAFjBjY,EAEiBiY,SAAUC,EAF3BlY,EAE2BkY,gBAAiBC,EAF5CnY,EAE4CmY,eAAgBC,EAF5DpY,EAE4DoY,MAAOC,EAFnErY,EAEmEqY,OAAQvO,EAF3E9J,EAE2E8J,SAAUwO,EAFrFtY,EAEqFsY,SAAUC,EAF/FvY,EAE+FuY,SACpGwJ,EAHK/hB,EAGL+hB,aAAchwB,EAHTiO,EAGSjO,SAAUiR,EAHnBhD,EAGmBgD,eAAgBwM,EAHnCxP,EAGmCwP,eAAgBiK,EAHnDzZ,EAGmDyZ,SAAU8K,EAH7DvkB,EAG6DukB,WAAY/sB,EAHzEwI,EAGyExI,KAAMqD,EAH/EmF,EAG+EnF,OAAQgf,EAHvF7Z,EAGuF6Z,SAEvFnoB,EAASK,EAATL,MAEPyQ,EAAYsW,IAAW,QAAS,YAAV,eAAAplB,OAAsC3B,EAAMG,QAAU,WAAa,CACvF6mB,cAAeN,EACfO,eAAgBN,EAChBO,WAAY9O,IAAakO,GAAaC,GACtCY,aAAcP,EACdC,YACCpW,GACH,IAAM2U,EAAW9T,EAAe7Q,OAC1B4kB,EAAa1R,KAAKC,IAALC,MAAAF,KAAI1R,OAAAiJ,EAAA,EAAAjJ,CAAQqP,EAAe3N,IAAI,SAAAiP,GAAG,OAAIA,EAAI3S,MAAMQ,YAAY,EAE/E,OACEkP,EAAAC,EAAAzQ,cAAA,OACEsR,UAAWA,EACXqiB,QAAO,OAAAnxB,OL9BS,IK8BqB0jB,EAA9B,KAAA1jB,OL9BS,IK8ByDyjB,GACzEyD,MAAO,CAACkK,iBAAkB1N,EAAa2N,cAAe5N,GACtD6N,oBAAqB,gBACrBrL,QAAShB,GAETjX,EAAAC,EAAAzQ,cAAA,KAAG+zB,WAAU,QACV5hB,EAAe3N,IAAI,SAAAiP,GAAG,OACrBjD,EAAAC,EAAAzQ,cAAA,KAAG+zB,WAAA,OAAAvxB,OAAiBiR,EAAIC,GAAK7C,IAAG,OAAArO,OAASiR,EAAIC,IAC1CD,EAAI3S,MAAM0D,IAAI,SAAAmP,GAAI,OACjBnD,EAAAC,EAAAzQ,cAACg0B,GAAD,CACEnjB,IAAG,GAAArO,OAAKmR,EAAKC,EAAV,KAAApR,OAAemR,EAAKD,GACvBsV,SAAUA,EACVrV,KAAMA,EACNwT,UAAWA,GAAcC,GAAYE,EAAe3T,GACpD5I,UAAWsc,EAAgB1T,GAC3ByT,SAAUE,EAAe3T,GACzBud,aAAcA,EACdhwB,SAAUA,EACV+X,SAAUrW,EAAKoM,MAAMiK,SACrB0P,KAAM/lB,EAAKoM,MAAM2Z,KACjB9nB,MAAOA,EACP+nB,SAAUA,UAMnBA,EACCpY,EAAAC,EAAAzQ,cAACi0B,GAAD,CAAgBjL,SAAUA,EAAU7W,eAAgBA,EAAgBtR,MAAOA,EAAOqwB,aAAcA,IAC9F,KACHwC,EACC1pB,EACEA,EAAOxF,IAAI,SAAC0vB,EAAOluB,GAAR,OACTwK,EAAAC,EAAAzQ,cAACm0B,GAADrxB,OAAA8N,OAAA,CAAOC,IAAK7K,GAAWkuB,MAGzB1jB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACo0B,GAAD,CAAuBztB,KAAMA,EAAMgY,eAAgBA,KAIrD,aA9DqBiL,iBA2FjC6J,GAAmB3hB,aAAe,CAChCR,UAAW,GACXiW,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVwJ,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCqU,UAAU,EACV8K,YAAY,OAGRW,oLAEF,OACE7jB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAWsW,IAAW,QAAS,aAAc8B,MAAO,CAAC4K,QAAS,SACjE9jB,EAAAC,EAAAzQ,cAAA,YACEwQ,EAAAC,EAAAzQ,cAACu0B,GAAK9F,YAAN,MACAje,EAAAC,EAAAzQ,cAACgyB,GAAMvD,YAAP,MACAje,EAAAC,EAAAzQ,cAACm0B,GAAMnI,WAAP,gBARgCpC,iBAe5C6J,GAAmBhF,YAAc4F,OAE3BG,4LACa,IACR7V,EAAkB9b,KAAKmM,MAAvB2P,eADQ8V,EAEmB5xB,KAAK6xB,qBAAhC5gB,EAFQ2gB,EAER3gB,OAAQ6gB,EAFAF,EAEAE,gBACTC,EAAoBD,EACvBlzB,KAAK,SAAAkF,GAAI,OAAIuL,EAAKkP,uBAAuBtY,SAASnC,EAAKkuB,gBACpDC,EAAoBH,EACvBlzB,KAAK,SAAAkF,GAAI,OAAIA,EAAKkuB,eAAiB3iB,EAAKyH,gCAN5Bob,EAQO,CACpBlf,KAAM+e,EAAoB,CACxBp0B,KAAMo0B,EAAkBviB,SAASC,SACjCtC,GAAI4kB,EAAkBtiB,UACpB,KACJ0iB,MAAOF,EAAoB,CACzBt0B,KAAMs0B,EAAkBziB,SAASC,SACjCtC,GAAI8kB,EAAkBxiB,UACrB,MAREuD,EARQkf,EAQRlf,KAAMmf,EARED,EAQFC,MAwBb,OAbIrW,IACE9I,IACFA,EAAKrV,KAAOme,EAAesG,mBAAmB2P,EAAkBviB,SAASF,eAAgB0D,EAAKrV,MAC9FqV,EAAK7F,GAAK2O,EAAesG,mBAAmB2P,EAAkBziB,eAAgB0D,EAAK7F,IACnF6F,EAAKtT,KAAO,QAEVyyB,IACFA,EAAMx0B,KAAOme,EAAesG,mBAAmB6P,EAAkBziB,SAASF,eAAgB6iB,EAAMx0B,MAChGw0B,EAAMhlB,GAAK2O,EAAesG,mBAAmB6P,EAAkB3iB,eAAgB6iB,EAAMhlB,IACrFglB,EAAMzyB,KAAO,UAIV,CAACuR,SAAQ+B,OAAMmf,sDAStB,IANmB,IACZruB,EAAQ9D,KAAKmM,MAAbrI,KAEDguB,EAAkB,CAAChuB,GACnBmN,EAASnN,EAAKsuB,WAChBC,EAAgBvuB,EACbuuB,EAAc7iB,WACnB6iB,EAAgBA,EAAc7iB,UACZ4iB,aAAenhB,GAGjC6gB,EAAgBxpB,KAAK+pB,GAGvB,MAAO,CAACphB,SAAQ6gB,oDAKhB,IADe9xB,KAAKmM,MAAbrI,KAEL,OAAO,KAHF,IAAAwuB,EAMuBtyB,KAAKuyB,iBAA5BthB,EANAqhB,EAMArhB,OAAQ+B,EANRsf,EAMQtf,KAAMmf,EANdG,EAMcH,MACrB,IAAKnf,IAASmf,EACZ,OAAO,KAET,IAAMjK,EAASjX,IAAW5B,EAAKmC,SAAW,QAAU,QAEhDghB,EAAY,KAAMC,EAAa,KAQnC,OAPIzf,IACFwf,EAAY7kB,EAAAC,EAAAzQ,cAACm0B,GAAD,CAAOtjB,IAAK,OAAQrQ,KAAMqV,EAAKrV,KAAMwP,GAAI6F,EAAK7F,GAAI+a,OAAQA,EAAQxoB,KAAM,UAElFyyB,IACFM,EAAa9kB,EAAAC,EAAAzQ,cAACm0B,GAAD,CAAOtjB,IAAK,QAASrQ,KAAMw0B,EAAMx0B,KAAMwP,GAAIglB,EAAMhlB,GAAI+a,OAAQA,EAAQxoB,KAAM,WAGnF,CAAC8yB,EAAWC,UAzEa1L,iBAiH9B2L,IA/BqC3L,iMAgChC,IAAAkC,EACiDjpB,KAAKmM,MAAtDga,EADA8C,EACA9C,SAAU7W,EADV2Z,EACU3Z,eAAgBtR,EAD1BirB,EAC0BjrB,MAAOqwB,EADjCpF,EACiCoF,aAElCnwB,EAASkB,IAAEqE,OAAO0iB,EAAS5U,UAAUjC,EAAgB,SAAAwB,GAAI,OAAIA,EAAKG,SAAS,CAAC,SAAU,WAE5F,OACEtD,EAAAC,EAAAzQ,cAAA,KAAG+zB,WAAU,SAAUrK,MAAO,CAAC8L,cAAe,SAC3Cz0B,EAAOyD,IAAI,SAAAmP,GAAI,OACdnD,EAAAC,EAAAzQ,cAACy1B,GAAD,CACE5kB,IAAG,GAAArO,OAAKmR,EAAKG,OAAV,KAAAtR,OAAoBmR,EAAKK,QAC5BgV,SAAUA,EACVrV,KAAMA,EACN9S,MAAOA,EACPqwB,aAAcA,cAdGtH,kBA6BvB8L,8MACJjV,MAAQ,CACNkV,iBAAkB,CAAC/hB,EAAG1J,EAAK8E,MAAM2E,KAAKC,EAAGF,EAAGxJ,EAAK8E,MAAM2E,KAAKD,GAC5DyP,SAAU,CAACvP,EAAG1J,EAAK8E,MAAM2E,KAAKC,EAAGF,EAAGxJ,EAAK8E,MAAM2E,KAAKD,MAGtDkiB,iBAAmBlF,IAAMC,8FAUNC,EAAWC,EAAWC,GAAU,IAAAnlB,EAAA9I,KAC7CA,KAAK4d,MAAM0C,WAAa0N,EAAU1N,UACpCvY,WAAW,WACLe,EAAKiqB,iBAAiB5E,SACxBrlB,EAAKiqB,iBAAiB5E,QAAQC,gBAE/B,oCAIE,IAAA7D,EACuCvqB,KAAKmM,MAA5Cga,EADAoE,EACApE,SAAUrV,EADVyZ,EACUzZ,KAAM9S,EADhBusB,EACgBvsB,MAAOqwB,EADvB9D,EACuB8D,aADvBK,EAE8B1uB,KAAK4d,MAAnCkV,EAFApE,EAEAoE,iBAAkBxS,EAFlBoO,EAEkBpO,SACpBqO,GAAqBN,EAAapoB,SAASoJ,EAAKmC,WAAa6c,EAAapoB,SAASoJ,EAAKqC,UACxFkd,GAAqBD,EACpBqE,EAActM,GAAoBP,EAAU7F,GAC5C2S,EAAgBvM,GAAoBP,EAAU2M,GACpD,OACEnlB,EAAAC,EAAAzQ,cAAA,KAAGspB,UAAS,aAAA9mB,OAAeqzB,EAAYjiB,EAA3B,KAAApR,OAAgCqzB,EAAYniB,EAA5C,MACVlD,EAAAC,EAAAzQ,cAACgyB,GAAD,CACEtI,MAAO7oB,EAAME,QAAU,OACvBgqB,OAAQpX,EAAKG,SAAW5B,EAAKmC,SAAW,QAAU,QAClD2W,QAASnqB,EAAMiJ,iBAAmB6J,EAAKG,SAAW5B,EAAKmC,SAAWmd,EAAoBC,KAExFjhB,EAAAC,EAAAzQ,cAAA,oBACE2xB,IAAK9uB,KAAK+yB,iBACVhE,cAAe,YACfC,cAAe,MACftvB,KAAM,YACN/B,KAAI,GAAAgC,OAAKszB,EAAcliB,EAAnB,KAAApR,OAAwBszB,EAAcpiB,GAC1C1D,GAAE,GAAAxN,OAAKqzB,EAAYjiB,EAAjB,KAAApR,OAAsBqzB,EAAYniB,GACpCoe,IAAK,OACLC,YAAa,EACbhI,KAAM,+DAzCkB/a,EAAOyR,GACrC,OAAIzR,EAAM2E,KAAKC,IAAM6M,EAAM0C,SAASvP,GAAK5E,EAAM2E,KAAKD,IAAM+M,EAAM0C,SAASzP,EAChE,CAACiiB,iBAAkBlV,EAAM0C,SAAUA,SAAU,CAACvP,EAAG5E,EAAM2E,KAAKC,EAAGF,EAAG1E,EAAM2E,KAAKD,IAG/E,YAbiBkW,iBA+DtBmM,8MACJ9c,SAAW,WACL3M,EAAK0C,MAAMjE,WAAauB,EAAK0C,MAAMiK,SACrC3M,EAAK0C,MAAMiK,SAAS3M,EAAK0C,MAAM2E,MACtBrH,EAAK0C,MAAMoY,UAAY9a,EAAK0C,MAAM2Z,MAC3Crc,EAAK0C,MAAM2Z,gFAIN,IAAAqN,EAGHnzB,KAAKmM,MADPga,EAFKgN,EAELhN,SAAUrV,EAFLqiB,EAEKriB,KAAMwT,EAFX6O,EAEW7O,UAAWpc,EAFtBirB,EAEsBjrB,UAAWqc,EAFjC4O,EAEiC5O,SAAqBvmB,EAFtDm1B,EAE2C90B,SAAWL,MAAQoY,EAF9D+c,EAE8D/c,SAAU0P,EAFxEqN,EAEwErN,KAAMC,EAF9EoN,EAE8EpN,SAAUsI,EAFxF8E,EAEwF9E,aAE/F,OACE1gB,EAAAC,EAAAzQ,cAACu0B,GAAD,CACEvL,SAAUA,EACVpV,EAAGD,EAAKC,EACRF,EAAGC,EAAKD,EACR3I,UAAWA,EACXqc,SAAUA,EACVlT,MAAOP,EAAKO,MACZJ,OAAQH,EAAKG,OACbod,aAAcA,EACdtI,SAAUA,EACV/nB,MAAOA,EACP4nB,SAAWxP,GAAYlO,GAAe4d,GAAQvB,IAAcD,EAAYtkB,KAAKoW,SAAW,cAzBrE2Q,iBA4C3BmM,GAAajkB,aAAe,CAC1BqV,WAAW,EACXpc,WAAW,EACXqc,UAAU,EACVwB,UAAU,EACVsI,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,WAGtBkf,ICjYAA,GDiYAA,GE3XTwC,mMACK,IAAA9mB,EAC4BtM,KAAKmM,MADjCknB,EAAA/mB,EACFgnB,gBADE,IAAAD,EACS,MADTA,EACmBlnB,EADnBlM,OAAAszB,EAAA,EAAAtzB,CAAAqM,EAAA,cAODknB,EAJY,CAChBC,KAAQpP,GACRqP,IAAO9C,IAEkB0C,GAC3B,OAAO3lB,EAAAC,EAAAzQ,cAACq2B,EAAarnB,UATK6C,cAoC9BokB,GAAgBnkB,aAAe,CAC7BR,UAAW,GACXiW,OAAO,EACPC,QAAQ,EACRL,WAAW,EACXO,UAAU,EACVwJ,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCqU,UAAU,EACV8K,YAAY,GAGCuC,UCjDTO,8MACJvd,SAAW,SAACtF,GAAS,IAAAxE,EAC8BvM,EAAKoM,MAAxCmD,EADKhD,EACZxI,KAAOwL,eAAiBwM,EADZxP,EACYwP,eAC3BA,IACFhL,EAAOgL,EAAenG,YAAYrG,EAAgBwB,IAEpD/Q,EAAKoM,MAAMiK,SAASrW,EAAKoM,MAAMrI,KAAKsS,SAAS,CAACrF,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,QAGnEiV,KAAO,WACL/lB,EAAKoM,MAAMiK,SAASrW,EAAKoM,MAAMrI,KAAKmM,QAAUlQ,EAAKoM,MAAMrI,KAAKgiB,OAAS/lB,EAAKoM,MAAMrI,KAAK8vB,mBAGzFhP,SAAW,WACT7kB,EAAKoM,MAAMyY,SAAS7kB,EAAKoM,MAAMrI,SAGjC0gB,gBAAkB,SAAA1T,GAAQ,IAAAzC,EACyBtO,EAAKoM,MAAxCmD,EADUjB,EACjBvK,KAAOwL,eAAiBwM,EADPzN,EACOyN,eAI/B,OAHIA,IACFhL,EAAOgL,EAAenG,YAAYrG,EAAgBwB,IAE7C/Q,EAAKoM,MAAMrI,KAAKsZ,gBAAgBtM,MAGzC2T,eAAiB,SAAA3T,GAAQ,IAAAmY,EAC0BlpB,EAAKoM,MAAxCmD,EADS2Z,EAChBnlB,KAAOwL,eAAiBwM,EADRmN,EACQnN,eAI/B,GAHIA,IACFhL,EAAOgL,EAAenG,YAAYrG,EAAgBwB,SAEnBpS,IAA7BqB,EAAKoM,MAAM0nB,eAA4D,OAA7B9zB,EAAKoM,MAAM0nB,eACvD,IAAK9zB,EAAKoM,MAAMrI,KAAKmM,QACnB,OAAO,OAGT,GAAIlQ,EAAKoM,MAAMrI,KAAK4V,YAAc3Z,EAAKoM,MAAM0nB,cAC3C,OAAO,EAGX,IAAMpkB,EAAW1P,EAAKoM,MAAMrI,KAAK2L,SACjC,QAAKA,IAGEA,EAASsB,IAAMD,EAAKC,GAAKtB,EAASoB,IAAMC,EAAKD,oFAIpD,QAAS7Q,KAAKmM,MAAMrI,KAAKkN,SAAShR,KAAKykB,iDAGhC,IAAA8F,EACoEvqB,KAAKmM,MAAzErI,EADAymB,EACAzmB,KAAMgY,EADNyO,EACMzO,eAAgBuS,EADtB9D,EACsB8D,aAAczJ,EADpC2F,EACoC3F,SAAUxO,EAD9CmU,EAC8CnU,SAAU2P,EADxDwE,EACwDxE,SAC3DzW,EAAiBxL,EAAKwL,eAK1B,OAJIwM,IACFxM,EAAiBwM,EAAexM,IAIhC3B,EAAAC,EAAAzQ,cAAC22B,GAAD7zB,OAAA8N,OAAA,GACM/N,KAAKmM,MADX,CAEEqY,gBAAiBuB,EAAW/lB,KAAKwkB,gBAAkB,kBAAM,GACzDC,eAAgBsB,EAAW/lB,KAAKykB,eAAiB,kBAAM,GACvDH,UAAW+J,EAAapoB,SAASnC,EAAKkM,YACtCuU,WAAUwB,GAAW/lB,KAAK+zB,iBAC1BnP,SAAUA,EAAW5kB,KAAK4kB,SAAW,KACrCxO,SAAUA,EAAWpW,KAAKoW,SAAW,KACrC0P,KAAM1P,EAAWpW,KAAK8lB,KAAO,KAC7BxW,eAAgBA,EAChBwM,eAAgBA,EAChBhY,KAAMA,EACNqiB,SAAUriB,EAAKwD,YACfye,SAAUA,YAvEEgB,iBA4FpB4M,GAAM1kB,aAAe,CACnBR,UAAW,GACXiW,OAAO,EACPC,QAAQ,EACRE,UAAU,EACVwJ,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCqU,UAAU,OAGNiO,8MACJpW,MAAQ,CACNqW,UAAW,EACXC,qBAAqB,KASvBC,kBAAoB,SAAAC,GACjB/sB,EAAKgtB,SAASD,EAAQ,WACpB,GAAI/sB,EAAK8E,MAAMmoB,SAAU,KAAAC,EACkBltB,EAAKuW,MAAvCqW,EADgBM,EAChBN,UAAWC,EADKK,EACLL,oBACZpY,EAAiBzU,EAAK8E,MAAMga,SAAS3K,kBACvCnU,EAAK8E,MAAMga,SAAS3K,kBAApB,GAAA7b,OAAyCs0B,EAAzC,KAAAt0B,OAAsDu0B,IACtD,KACJ7sB,EAAK8E,MAAMmoB,SAAS,CAACL,YAAWC,sBAAqBpY,yBAK5D0Y,uBAAyB,WACvBntB,EAAK8sB,kBAAkB,SAAAvW,GAAK,MAAK,CAC/BqW,WAAYrW,EAAMqW,UAAY5sB,EAAK8E,MAAMga,SAAS3C,2BAA6B,GAAKnc,EAAK8E,MAAMga,SAAS3C,iCAI5GiR,gBAAkB,WAChBptB,EAAK8sB,kBAAkB,SAAAvW,GAAK,MAAK,CAC/BqW,WAAYrW,EAAMqW,UAAY,GAAK5sB,EAAK8E,MAAMga,SAAS3C,iCAI3DkR,iBAAmB,WACjBrtB,EAAK8sB,kBAAkB,SAAAvW,GAAK,MAAK,CAC/BsW,qBAAsBtW,EAAMsW,0BAIhCS,eAAiB,WACfttB,EAAK8sB,kBAAkB,SAAAvW,GAAK,MAAK,CAC/BqW,WAAYrW,EAAMqW,UAAY5sB,EAAK8E,MAAMga,SAAS3C,2BAA6B,GAAKnc,EAAK8E,MAAMga,SAAS3C,2BACxG0Q,qBAAsBtW,EAAMsW,0BAIhCU,MAAQ,WACNvtB,EAAK8sB,kBAAkB,SAAAvW,GAAK,MAAK,CAC/BqW,UAAW,EACXC,qBAAqB,wFA9CNnG,EAAWC,EAAWC,GACnCF,EAAU5H,WAAanmB,KAAKmM,MAAMga,UACpCnmB,KAAK40B,yCAgDA,IAAAlG,EACkC1uB,KAAK4d,MAAvCqW,EADAvF,EACAuF,UAAWC,EADXxF,EACWwF,oBAGlB,OAFmBl0B,KAAKmM,MAAjBga,SAEO3K,kBAKZ7N,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMgnB,KAAM,UAAWC,MAAO,CAC5B,CAAC9mB,IAAK,2BAA4BG,KAAM,OAAQyX,QAAS5lB,KAAKw0B,wBAC9D,CAACxmB,IAAK,mBAAoBG,KAAM,OAAQyX,QAAS5lB,KAAKy0B,iBACtD,CAACzmB,IAAK,kBAAmBG,KAAM,8BAA+ByX,QAAS5lB,KAAK00B,kBAC5E,CAAC1mB,IAAK,gBAAiBG,KAAM,4BAA6ByX,QAAS5lB,KAAK20B,gBACxE,CAAC3mB,IAAK,OAAQG,KAAM,OAAQyX,QAAS5lB,KAAK40B,MAAOG,UAAWd,IAAcC,MATrE,YA7DqBnN,iBAqFnB4M,MC3LTqB,8MAkCJpX,MAAQ,CACNtO,eAAgBvP,EAAKuH,YAAY2tB,sBAGnCzQ,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGTyQ,QAAU,WACRn1B,EAAKs0B,SAAS,SAAAzW,GAAK,MAAK,CACtBtO,eAAgBsO,EAAMtO,iBAAmBvP,EAAKuH,YAAY2tB,mBACtDl1B,EAAKuH,YAAY6tB,2BACjBp1B,EAAKuH,YAAY2tB,yBAGzBG,kBAAoBr1B,EAAKoM,MAAM9N,SAASL,MAAMkJ,WAAaL,YAAY9G,EAAKm1B,QAAS,KAAQ,uFAE1EnH,EAAWC,EAAWC,GACnCjuB,KAAKmM,MAAM9N,SAASL,MAAMkJ,aAAe6mB,EAAU1vB,SAASL,MAAMkJ,aAChElH,KAAKmM,MAAM9N,SAASL,MAAMkJ,WACvBlH,KAAKo1B,oBACRp1B,KAAKo1B,kBAAoBvuB,YAAY7G,KAAKk1B,QAAS,MAGjDl1B,KAAKo1B,oBACP50B,cAAcR,KAAKo1B,mBACnBp1B,KAAKo1B,kBAAoB,sDAO3Bp1B,KAAKo1B,oBACP50B,cAAcR,KAAKo1B,mBACnBp1B,KAAKo1B,kBAAoB,uCAIpB,IAAA9oB,EAC2BtM,KAAKmM,MAAhCuY,EADApY,EACAoY,MAAOC,EADPrY,EACOqY,OAAQtmB,EADfiO,EACejO,SACfiR,EAAkBtP,KAAK4d,MAAvBtO,eAEP,OACE3B,EAAAC,EAAAzQ,cAAC22B,GAAD,CACE3N,SAAU9W,EAAK0M,QACf2I,MAAOA,EACPC,OAAQA,EACR0J,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgBA,EAChBiV,UAAU,EACVC,gBAAiBxkB,KAAKwkB,gBACtBC,eAAgBzkB,KAAKykB,eACrBtd,OAAQ9I,EAASL,MAAMmJ,OAASnH,KAAKsH,YAAYH,YAASzI,EAC1DL,SAAUA,EACV0nB,SAAU1nB,EAASL,MAAMkJ,WACzB2pB,WAAYxyB,EAASL,MAAMmJ,gBA9FN6H,aAAvBgmB,GACGC,mBAAqB,CAC1B,CACEpkB,EAAG,EACH5S,MAAO,CACL,CAAC8S,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,GACtE,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,MAXxE2jB,GAeGG,2BAA6B,CAClC,CACEtkB,EAAG,EACH5S,MAAO,CACL,CAAC8S,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,GACtE,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ,KAAME,OAAQ,KAAME,MAAO,GAChD,CAACN,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,MAzBxE2jB,GA6BG7tB,OAAS,CACd,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIqX,OAAQ,QAASxoB,KAAM,SAC9D,CAAC/B,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAIqX,OAAQ,QAASxoB,KAAM,SA4ElEs1B,GAAe/lB,aAAe,CAC5BR,UAAW,GACXiW,OAAO,EACPC,QAAQ,GAGKqQ,aC/GArB,qFCFT0B,8MAoBJ7Q,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,2EAGA,IAAAnY,EACqEtM,KAAKmM,MAA1Ega,EADA7Z,EACA6Z,SAAUzB,EADVpY,EACUoY,MAAOC,EADjBrY,EACiBqY,OAAQ1T,EADzB3E,EACyB2E,OAAQ3R,EADjCgN,EACiChN,mBAAoB+uB,EADrD/hB,EACqD+hB,aAE5D,OACE1gB,EAAAC,EAAAzQ,cAAC22B,GAAD,CACEpP,MAAOA,EACPC,OAAQA,EACRrV,eAAgBtP,KAAKsH,YAAYguB,QAAQrkB,GACzCsT,UAAU,EACVC,gBAAiBxkB,KAAKwkB,gBACtBC,eAAgBzkB,KAAKykB,eACrBpmB,SAAUiB,EACV+uB,aAAcA,EACdlI,SAAUA,WAzCcnX,aAA1BqmB,GACGC,8BACJjmB,EAAKmC,SAAW,CACf,CACEX,EAAG,EACH5S,MAAO,CACL,CAAC8S,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,aAAcf,MAAO,sBAI3EhC,EAAKqC,SAAW,CACf,CACEb,EAAG,EACH5S,MAAO,CACL,CAAC8S,EAAG,EAAGF,EAAG,EAAGI,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,aAAcf,MAAO,WA0ChFgkB,GAAkBpmB,aAAe,CAC/ByV,OAAO,EACPC,QAAQ,GAGK0Q,uCC/DTE,8MAWJ3X,MAAQ,CACNnc,UAAWwC,EAAOxC,UAClByG,UAAWjE,EAAOiE,UAClBpG,aAAcmC,EAAOnC,aACrBG,KAAMgC,EAAOhC,KACbC,SAAU+B,EAAOhC,KAAOgC,EAAOhC,KAAKnE,KAAO,KAC3C6E,UAAWsB,EAAOtB,UAClBe,UAAWO,EAAOP,UAClBe,gBAAiBR,EAAOQ,gBACxB3B,YAAamB,EAAOnB,eAyBtB0yB,kBAAoB,SAAA/zB,GAClB1B,EAAKs0B,SAAS,CAAC5yB,YAAWK,aAAcmC,EAAOnC,aAAcoG,UAAWjE,EAAOiE,eAGjFlG,QAAU,SAAAC,GACRlC,EAAKs0B,SAAS,CAACpyB,YAGjBS,SAAW,SAAAC,GACT5C,EAAKs0B,SAAS,CAAC1xB,iBAGjBY,SAAW,SAAAG,GACT3D,EAAKs0B,SAAS,CAAC3wB,iBAGjBa,eAAiB,SAAAE,GACf1E,EAAKs0B,SAAS,CAAC5vB,uBAGjB5B,WAAa,SAAAC,GACX/C,EAAKs0B,SAAS,CAACvxB,oGA1CfmB,EAAOwxB,UAAU,CACf/zB,UAAW1B,KAAKw1B,kBAChBzzB,aAAc/B,KAAKw1B,kBACnB/yB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACdoB,cAAe3E,KAAKuE,eACpBqB,UAAW5F,KAAK6C,4DAKlBoB,EAAOyxB,YAAY,CACjBjzB,OAAQzC,KAAKgC,QACbsB,QAAStD,KAAK0C,SACdkB,QAAS5D,KAAKuD,SACdoB,cAAe3E,KAAKuE,eACpBqB,UAAW5F,KAAK6C,8CA4BX,IAAA6rB,EACgG1uB,KAAK4d,MAArGnc,EADAitB,EACAjtB,UAAWK,EADX4sB,EACW5sB,aAAcoG,EADzBwmB,EACyBxmB,UAAWjG,EADpCysB,EACoCzsB,KAAMU,EAD1C+rB,EAC0C/rB,UAAWe,EADrDgrB,EACqDhrB,UAAWe,EADhEiqB,EACgEjqB,gBAAiB3B,EADjF4rB,EACiF5rB,YAClF6yB,EAAe31B,KAAKsH,YAAYquB,aACtC,OACEhoB,EAAAC,EAAAzQ,cAACw4B,EAAD11B,OAAA8N,OAAA,GACM/N,KAAKmM,MADX,CAEE1K,UAAWA,EACXK,aAAcA,EACdoG,UAAWA,EACXjE,OAAQA,EACRhC,KAAMA,EACNU,UAAWA,EACXe,UAAWA,EACXe,gBAAiBA,EACjB3B,YAAaA,4CAhFCkM,GAAW,IACvB4mB,EADuB,SAAAvuB,GAAA,SAAAuuB,IAAA,OAAA31B,OAAAC,EAAA,EAAAD,CAAAD,KAAA41B,GAAA31B,OAAAwoB,EAAA,EAAAxoB,CAAAD,KAAAC,OAAAyoB,EAAA,EAAAzoB,CAAA21B,GAAA/jB,MAAA7R,KAAAxB,YAAA,OAAAyB,OAAA0oB,EAAA,EAAA1oB,CAAA21B,EAAAvuB,GAAAuuB,EAAA,CACW51B,MAIxC,OAJM41B,EACGD,aAAe3mB,EAGjB4mB,SARiB5mB,aAAtBumB,GACGI,aAAe,KAwFjB,IAAME,GAAa,SAAA7mB,GACxB,OAAOumB,GAAcO,aAAa9mB,yBCvF9B+mB,8MACJjH,IAAMjB,IAAMC,+FAGV9tB,KAAKg2B,kDAIDh2B,KAAK8uB,IAAIX,SACX8H,KAAUtY,OAAO3d,KAAK8uB,IAAIX,oDAIXJ,GACbA,EAAUmI,OAASl2B,KAAKmM,OAC1BnM,KAAKg2B,8CAIA,IAAAG,EAAA7pB,EACkCtM,KAAKmM,MAAvC+pB,EADA5pB,EACA4pB,KAAME,EADN9pB,EACM8pB,QAASvB,EADfvoB,EACeuoB,KAAMwB,EADrB/pB,EACqB+pB,UAC5B,OACE1oB,EAAAC,EAAAzQ,cAAA,OACE2xB,IAAK9uB,KAAK8uB,IACVrgB,UAAWsW,IAAW,CAAC,KAAM,OAAQ,QAAS,UAAW,UAApCoR,EAAA,CAA+CC,UAAWA,GAA1Dn2B,OAAA0U,EAAA,EAAA1U,CAAAk2B,EAAoEC,IAAYA,GAAhFn2B,OAAA0U,EAAA,EAAA1U,CAAAk2B,EAA0FtB,IAASA,GAAnG50B,OAAA0U,EAAA,EAAA1U,CAAAk2B,EAAyG,aAAcE,GAAvHF,IACrBG,uBAAsBJ,WAzBLlnB,aAsCzB+mB,GAAW9mB,aAAe,CACxBonB,WAAW,GAGEN,0kBCpCR,IAAMQ,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA12B,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAu2B,GAAA,QAAAjZ,EAAA9e,UAAAC,OAAAi4B,EAAA,IAAAlZ,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiZ,EAAAjZ,GAAAjf,UAAAif,GAAA,OAAA1d,EAAAE,OAAAwoB,EAAA,EAAAxoB,CAAAD,MAAAy2B,EAAAx2B,OAAAyoB,EAAA,EAAAzoB,CAAAs2B,IAAAI,KAAA9kB,MAAA4kB,EAAA,CAAAz2B,MAAAL,OAAA+2B,MACEE,iBAAmBC,aAAe,CAChC,SAAA1qB,GAAK,OAAIA,EAAMrI,KAAKA,OACnB,SAAAgzB,GAAc,OAAIznB,EAAK0M,QAAQgb,YAAYD,KAHhD/2B,EASEi3B,eAAiB,WACfj3B,EAAKoM,MAAM6qB,eAAej3B,EAAKoM,MAAMrI,OAVzC/D,EAAA,OAAAE,OAAA0oB,EAAA,EAAA1oB,CAAAs2B,EAAAC,GAAAv2B,OAAA2oB,EAAA,EAAA3oB,CAAAs2B,EAAA,EAAAvoB,IAAA,SAAA1Q,MAAA,WAaW,IAAAgP,EAC2GtM,KAAKmM,MAAhHlK,EADAqK,EACArK,KAAM3C,EADNgN,EACMhN,mBAAoB23B,EAD1B3qB,EAC0B2qB,UAAWC,EADrC5qB,EACqC4qB,gBAAiBC,EADtD7qB,EACsD6qB,gBAAiBrzB,EADvEwI,EACuExI,KAAMszB,EAD7E9qB,EAC6E8qB,MAAO1tB,EADpF4C,EACoF5C,KAAM2tB,EAD1F/qB,EAC0F+qB,cAE3FltB,EAAa+sB,EAAgBpzB,EAAKwzB,cAElCC,EAAWv3B,KAAKu3B,SAChBC,EAAUP,EAAUnzB,EAAK+F,QAAQ,IACjC4tB,EAAUR,EAAUnzB,EAAK+F,QAAQ,IACjC6tB,EAAiBH,EAASvnB,aAAeX,EAAKmC,SAAWgmB,EAAUC,EACnEE,EAAgBD,IAAmBF,EACnCI,EAAgBF,IAAmBD,EACnCI,IAAgB51B,GAAOu1B,EAAQz2B,KAAOkB,EAAKlB,GAC3C+2B,IAAgB71B,GAAOw1B,EAAQ12B,KAAOkB,EAAKlB,GAC3Cg3B,EAAaj0B,EAAK6F,SAAY7F,EAAKqM,SAAWd,EAAKmC,SAAWgmB,EAAUC,EAAW,KACnFO,EAAWH,GAAiBC,EAC5BG,EAAYJ,GAAiBF,GAAmBG,GAAiBF,EACjEM,GAAed,IAAUY,GAAYF,EACrCK,GAAef,IAAUY,GAAYH,EACrC90B,EAAUo0B,EAAgBrzB,EAAK/C,KAAO,GAE5C,OACE4M,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAD,CACEnqB,GAAIC,IACJf,GAAE,SAAAxN,OAAWmE,EAAK/C,IAClB6kB,QAAS5lB,KAAKg3B,eACdnQ,MAAKwR,GAAA,GACEjB,EAAa,CAAC9K,MAAO,QAAb,GADV,GAECxoB,EAAK/C,KAAOs2B,EAAgB,CAACiB,gBAAiB,cAAgB,IAEpE7pB,UAAWsW,IAAW,CAACwT,UAAW7uB,GAAQuuB,KAE1CtqB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,KACIpB,EAOE,KANFzpB,EAAAC,EAAAzQ,cAACs7B,GAAD,CACEhqB,UAAW,8BACX3K,KAAMyzB,EACN7S,OAAK,EACLrmB,SAAUiB,IAGdqO,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKM,OAAN,KACKR,GAAeC,EAAwB,KAAT,OAChCD,EACCvqB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAOb,IAAeP,GAAWS,EAAW,aAAUv5B,GAC1Dq5B,IAAeP,EAAU7pB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,WAAc,KACnD65B,EAAgBhqB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,gBAAmB,KAC/C05B,EAAQ15B,KACT6P,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,QAASvB,KAAM,OAAQwB,WAAS,EAACH,KAAMsB,EAAQz2B,MAEpE,KACHm3B,GAAeC,EAAc,OAAS,KACtCA,EACCxqB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAOb,IAAeN,GAAWQ,EAAW,aAAUv5B,GAC1Dq5B,IAAeN,EAAU9pB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,WAAc,KACnD85B,EAAgBjqB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,cAAe86B,MAAO,UAAa,KAC/DnB,EAAQ35B,KACT6P,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,QAASvB,KAAM,OAAQwB,WAAS,EAACH,KAAMuB,EAAQ12B,MAEpE,MAEJq2B,EAeAjtB,EAAawD,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,YAAgB,KAd1CR,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKW,KAAN,KACGf,EAAWrqB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,CAACrQ,KAAM,OAAQ86B,MAAO,SAAUnrB,QAAS,YAAgB,KACjF,IACC3J,EAAK6F,SAAgF,KAArEgE,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,CAACrQ,KAAM,SAAU86B,MAAO,SAAUnrB,QAAS,SACzE,IACDE,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAO,QAAA9N,OAAUmE,EAAKkP,MAAQ7E,KAAM,SAC1C,IACDR,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAS7P,IAAOkG,EAAKk1B,aAAel1B,EAAKm1B,eAAet7B,OAAQwQ,KAAM,aAC5E,IACAhE,EAAawD,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAStD,EAAWrM,KAAMqQ,KAAM,YAAgB,KACpE,IACApL,EAAQtE,OAASkP,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAO,GAAA9N,OAAKoD,EAAQtE,OAAb,YAA+B0P,KAAM,WAAgB,UArFnG,CAAAH,IAAA,WAAAkrB,IAAA,WAMI,OAAOl5B,KAAK42B,iBAAiB52B,KAAKmM,WANtCoqB,EAAA,CAA8BvnB,aA6G9BunB,GAAStnB,aAAe,CACtBmoB,OAAO,EACP1tB,MAAM,OAGFyvB,8MACJvb,MAAQ,CACNwb,WAAY,KAGdC,aAAe,SAAC3yB,EAADqG,GAAqB,IAAhBqsB,EAAgBrsB,EAAhBqsB,WAClB/xB,EAAKgtB,SAAS,CAAC+E,wFAGR,IAAA/qB,EAC+IrO,KAAKmM,MAApJ7M,EADA+O,EACA/O,mBAAoB2C,EADpBoM,EACoBpM,KAAMg1B,EAD1B5oB,EAC0B4oB,UAAWC,EADrC7oB,EACqC6oB,gBAAiBC,EADtD9oB,EACsD8oB,gBAAiB3zB,EADvE6K,EACuE7K,MAAO4zB,EAD9E/oB,EAC8E+oB,MAAO1tB,EADrF2E,EACqF3E,KAAMstB,EAD3F3oB,EAC2F2oB,eAAgBK,EAD3GhpB,EAC2GgpB,cAAeiC,EAD1HjrB,EAC0HirB,SAAUld,EADpI/N,EACoI+N,QAC3I,IAAKnc,OAAO0rB,OAAOsL,GAAWx4B,OAC5B,OAAO,KAHF,IAKF26B,EAAcp5B,KAAK4d,MAAnBwb,WAECG,EAAa5nB,KAAK6nB,KAAKh2B,EAAM/E,OAAS66B,GACxCF,EAAaG,IACfH,EAAaG,GAEf,IAAIE,EAAej2B,EAChByF,OAAOswB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GAKtF,OAJIld,IACFqd,EAAeA,EAAard,WAI5BzO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,CAAY7S,MAAO,CAAC8S,UAAW,QAASC,UAAW,OAAQC,SAAWzC,EAAoB,aAAZ14B,IAC3E+6B,EAAa93B,IAAI,SAAAmC,GAAI,OACpB6J,EAAAC,EAAAzQ,cAAC28B,GAAD,CACE9rB,IAAKlK,EAAK/C,GACVkB,KAAMA,EACNg1B,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjBrzB,KAAMA,EACNkzB,eAAgBA,EAChBI,MAAOA,EACP1tB,KAAMA,EACN2tB,cAAeA,EACf/3B,mBAAoBA,OAIzBi6B,EAAa,EACZ5rB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC+8B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcr5B,KAAKq5B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAzDWprB,aA8EvBmqB,GAASlqB,aAAe,CACtBmoB,OAAO,EACP1tB,MAAM,EACN4vB,SAAU,GACVld,SAAS,GAGI+c,oBC1IAtD,iNAlEbjY,MAAQ,CACN9f,KAAM,GACNu8B,UAAW,OAGbC,iBAAmB,WAAM,IAChBr2B,EAAUlE,EAAKoM,MAAflI,OADgByqB,EAEG3uB,EAAK6d,MAAxB9f,EAFgB4wB,EAEhB5wB,KAAMu8B,EAFU3L,EAEV2L,UACbp2B,EAAOq2B,iBAAiB,CAACx8B,OAAMu8B,UAAWhb,SAASgb,EAAW,SAGhEE,QAAU,WACRx6B,EAAKs0B,SAAS,CAACv2B,KAAM,GAAIu8B,UAAW,OAGtCG,SAAW,SAAC9zB,EAADqG,GAAsB,IAAjBjP,EAAiBiP,EAAjBjP,KAAMR,EAAWyP,EAAXzP,MACpByC,EAAKs0B,SAALp0B,OAAA0U,EAAA,EAAA1U,CAAA,GAAgBnC,EAAOR,6EAIvB,OACEqQ,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACE5F,KAAM,OACN6F,QAAS/sB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ/B,MAAO,SAAUzqB,KAAM,UAAWV,QAAS,sBAC5DmtB,OAAQ,oBACRntB,QACEE,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAD,KACEntB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEj9B,KAAM,OACNk9B,QAASC,KACTC,MAAO,OACPC,YAAa,kBACb7G,SAAUt0B,KAAKw6B,SACfY,UAAQ,EACRC,aAAcr7B,KAAK4d,MAAM9f,OAE3B6P,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEj9B,KAAM,YACNk9B,QAASC,KACTC,MAAK,GAAAv7B,OAAKK,KAAK4d,MAAMyc,UAAhB,yCACLc,YAAa,0CACb7G,SAAUt0B,KAAKw6B,SACf96B,KAAM,QACN47B,IAAK,EACL1pB,IAAK,EACLypB,aAAcr7B,KAAK4d,MAAMyc,UACzBe,UAAQ,MAKhBG,QAAS,CACP,CAACvtB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,SAAUwtB,UAAU,EAAM/tB,QAAS,oBAAqBmY,QAAS5lB,KAAKs6B,iBAAkBvF,UAAW/0B,KAAK4d,MAAM9f,OAEtHy8B,QAASv6B,KAAKu6B,iBAzDSvrB,ykBCAzBysB,8MACJC,qBAAuB,WACrB37B,EAAKoM,MAAMuvB,qBAAqB37B,EAAKoM,MAAMhC,qFAGpC,IAAAmC,EAC2DtM,KAAKmM,MAAhElK,EADAqK,EACArK,KAAMg1B,EADN3qB,EACM2qB,UAAW0E,EADjBrvB,EACiBqvB,oBAAqBxxB,EADtCmC,EACsCnC,WAAYitB,EADlD9qB,EACkD8qB,MAEnDwE,IAAiB35B,GAAOkI,EAAWN,QAAQ5D,SAAShE,EAAKlB,IACzD86B,IAAiB55B,GAAOkI,EAAW2xB,gBAAkB75B,EAAKlB,GAC1Dg7B,IAAa5xB,EAAWR,UAAWQ,EAAW6xB,eAAiB/5B,EAAKlB,GACpEk7B,EAAUhF,EAAU9sB,EAAW2xB,eAE/BI,EACJvuB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACElrB,QAAStD,EAAWG,QAAWH,EAAWR,SAAW,WAAtB,SAAAhK,OAA4CwK,EAAWgyB,MAAvD,KAAAx8B,OAAgEwK,EAAWiyB,QAAY,UACtHjuB,KAAM,CACJrQ,KAAMqM,EAAWG,QAAWH,EAAWR,SAAW,SAAW,OAAU,YACvEue,OAAQ/d,EAAWG,QAAU,aAAU5L,KAK7C,OACEiP,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAD,CACEnqB,GAAIC,IACJf,GAAE,eAAAxN,OAAiBwK,EAAWpJ,IAE9B8lB,MAAKwV,GAAA,GACEjF,EAAa,CAAC9K,MAAO,QAAb,GADV,GAECniB,EAAWpJ,KAAO46B,EAAsB,CAACrD,gBAAiB,cAAgB,KAGhF3qB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,KACE7qB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKM,OAAN,KACE/qB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAStD,EAAWrM,OAD7B,MAEE6P,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAOiD,EAAiB,aAAUn9B,EAAW+O,QAASwuB,EAAQn+B,OACpEs5B,EAAQ8E,EAAc,MAEvB9E,EAkBE,KAjBFzpB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKW,KAAN,KACG6C,EAAiBjuB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,CAACrQ,KAAM,OAAQ86B,MAAO,SAAUnrB,QAAS,kBAAsB,KAC7F,IACAsuB,EAAapuB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,CAACrQ,KAAM,SAAU86B,MAAO,UAAWnrB,QAAS,QACrEtD,EAAWR,SACTgE,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,SAAUV,QAASwpB,EAAU9sB,EAAW6xB,cAAgB/E,EAAU9sB,EAAW6xB,cAAcl+B,KAAOqM,EAAW6xB,eACxH,KAEL,IACA7xB,EAAWG,UAAYH,EAAWR,SAAWgE,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,CAACrQ,KAAM,SAAU86B,MAAO,SAAUnrB,QAAS,SAAa,KAClH,IACAyuB,EACA,IACDvuB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAO,GAAA9N,OAAKwK,EAAWN,QAAQpL,OAAxB,YAA0C0P,KAAM,UAC7D,IACDR,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAS7P,IAAOuM,EAAW6uB,aAAe7uB,EAAW8uB,eAAiB9uB,EAAW5E,iBAAiB5H,OAAQwQ,KAAM,uBAvDxGa,aAyE7BysB,GAAexsB,aAAe,CAC5BmoB,OAAO,OAGHkF,8MACJ1e,MAAQ,CACNwb,WAAY,KAGdC,aAAe,SAAC3yB,EAADqG,GAAqB,IAAhBqsB,EAAgBrsB,EAAhBqsB,WAClB/xB,EAAKgtB,SAAS,CAAC+E,wFAGR,IAAA/qB,EAC4FrO,KAAKmM,MAAjGlK,EADAoM,EACApM,KAAMg1B,EADN5oB,EACM4oB,UAAWzyB,EADjB6J,EACiB7J,YAAa4yB,EAD9B/oB,EAC8B+oB,MAAOsE,EADrCrtB,EACqCqtB,qBAAsBC,EAD3DttB,EAC2DstB,oBAAqBrC,EADhFjrB,EACgFirB,SACvF,IAAKr5B,OAAO0rB,OAAOsL,GAAWx4B,OAC5B,OAAO,KAHF,IAKF26B,EAAcp5B,KAAK4d,MAAnBwb,WAECG,EAAa5nB,KAAK6nB,KAAKh1B,EAAY/F,OAAS66B,GAC9CF,EAAaG,IACfH,EAAaG,GAEf,IAAMgD,EAAqB/3B,EACxByE,OAAOswB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFld,UAEH,OACEzO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,CAAY7S,MAAO,CAAC8S,UAAW,QAASC,UAAW,OAAQC,SAAWzC,EAAoB,aAAZ14B,IAC3E69B,EAAmB56B,IAAI,SAAAwI,GAAU,OAChCwD,EAAAC,EAAAzQ,cAACq/B,GAAD,CACExuB,IAAK7D,EAAWpJ,GAChBkB,KAAMA,EACNg1B,UAAWA,EACX9sB,WAAYA,EACZwxB,oBAAqBA,EACrBD,qBAAsBA,EACtBtE,MAAOA,OAIZmC,EAAa,EACZ5rB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC+8B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcr5B,KAAKq5B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAnDiBprB,aAmE7BstB,GAAertB,aAAe,CAC5BmoB,OAAO,EACPkC,SAAU,IAGGgD,ikBChJR,IAAMG,GAAb,SAAAjG,GAAA,SAAAiG,IAAA,IAAAhG,EAAA12B,EAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAy8B,GAAA,QAAAnf,EAAA9e,UAAAC,OAAAi4B,EAAA,IAAAlZ,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAiZ,EAAAjZ,GAAAjf,UAAAif,GAAA,OAAA1d,EAAAE,OAAAwoB,EAAA,EAAAxoB,CAAAD,MAAAy2B,EAAAx2B,OAAAyoB,EAAA,EAAAzoB,CAAAw8B,IAAA9F,KAAA9kB,MAAA4kB,EAAA,CAAAz2B,MAAAL,OAAA+2B,MACEgG,qBAAuB7F,aAAe,CACpC,SAAA1qB,GAAK,OAAIA,EAAM3M,OAAOm9B,iBAAiBrc,WACtC,SAAAA,GAAQ,OAAIjR,EAAK0M,QAAQnI,+BAA+B0M,KAH7DvgB,EASE68B,aAAe,WACb78B,EAAKoM,MAAMywB,aAAa78B,EAAKoM,MAAM3M,SAVvCO,EAAA,OAAAE,OAAA0oB,EAAA,EAAA1oB,CAAAw8B,EAAAjG,GAAAv2B,OAAA2oB,EAAA,EAAA3oB,CAAAw8B,EAAA,EAAAzuB,IAAA,SAAA1Q,MAAA,WAwBW,IAAAgP,EAC2EtM,KAAKmM,MAAhFlK,EADAqK,EACArK,KAAM3C,EADNgN,EACMhN,mBAAoB23B,EAD1B3qB,EAC0B2qB,UAAW4F,EADrCvwB,EACqCuwB,UAAWr9B,EADhD8M,EACgD9M,OAAQs9B,EADxDxwB,EACwDwwB,gBACzDC,EAAe/8B,KAAK+8B,aACpBC,EAAah9B,KAAKg9B,WAElBf,EAAUhF,EAAUz3B,EAAOuL,QAC3BkyB,IAAkBh7B,GAAQzC,EAAOuL,SAAW9I,EAAKlB,GACjD+C,EAAO+4B,EAAUr9B,EAAO6F,KAAKlB,QAC7BqzB,EAAU1zB,EAAOmzB,EAAUnzB,EAAK+F,QAAQ,IAAM,KAC9C4tB,EAAU3zB,EAAOmzB,EAAUnzB,EAAK+F,QAAQ,IAAM,KAC9CqzB,IAAmBF,GAAcA,EAAW33B,KAAKiF,UAAY0yB,EAAW33B,KAAKkG,IAC7E4xB,IAAqBH,GAAcA,EAAW33B,KAAKkG,IACnD6xB,IAAqBJ,KAAgBA,EAAW33B,KAAKg4B,SAC3D,OACE1vB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAD,CACEnqB,GAAIC,IACJf,GAAE,WAAAxN,OAAaH,EAAOuB,IACtB6kB,QAAS5lB,KAAK48B,aACd/V,MAAKyW,GAAA,GACC99B,EAAOuB,KAAO+7B,EAAkB,CAACxE,gBAAiB,cAAgB,KAGxE3qB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,KACE7qB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKM,OAAN,KACGjxB,EAAqBjI,IAExBmO,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKW,KAAN,KACEprB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,CACJrQ,KAAM,CAACy/B,EAAG,gBAAiBC,EAAG,cAAeC,EAAG,iBAAiBj+B,EAAO6F,KAAKq4B,YAC7E9E,MAAO,CAAC2E,EAAG,QAASC,EAAG,SAAUC,EAAG,OAAOj+B,EAAO6F,KAAKq4B,aAEzDjwB,QAAO,GAAA9N,OAAKH,EAAO6F,KAAKq4B,WAAjB,KAAA/9B,OAA+BH,EAAO6F,KAAKs4B,eAClDC,MAAO,CAACL,EAAG,OAAQC,EAAG,SAAUC,EAAG,QAAQj+B,EAAO6F,KAAKq4B,cAEzD/vB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,OAAQV,QAAO,MAAA9N,OAAQs8B,EAAQn+B,QAC3Co/B,EACCvvB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACIxqB,KAAM,CAACrQ,KAAM,OAAQ86B,MAAOwE,EAAmB,SAAW,SAC1D3vB,QAAS2vB,EAAgB,YAAAz9B,OAAeq9B,EAAW33B,KAAKg4B,SAA/B,cAAsD,YAEjFF,EACFxvB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACIxqB,KAAM,CAACrQ,KAAM,SAAU86B,MAAOwE,EAAmB,SAAW,SAC5D3vB,QAAS2vB,EAAgB,eAAAz9B,OAAiBq9B,EAAW33B,KAAKg4B,SAAjC,aAAuD,YAElFD,EACFzvB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACIxqB,KAAM,CAACrQ,KAAM,cAAe86B,MAAO,UACnCnrB,QAAO,GAAA9N,OAAKq9B,EAAW33B,KAAKg4B,SAArB,eAET,KACHp7B,GAAQzC,EAAOq+B,WACdlwB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KACE3O,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgBxG,iBAC9C,CAAChB,KAAM,QAAS86B,MAAO,SACvBp5B,EAAO6F,KAAK4F,OACR,CAACnN,KAAM,QAAS86B,MAAO,UAAY,CAAC96B,KAAM,IAAK86B,MAAO,OAEhEnrB,QACEjO,EAAO6F,KAAK4F,QAAUzL,EAAO6F,KAAKC,gBAAgBxG,iBAC9CU,EAAO6F,KAAKC,gBAAgBw4B,UAC5Bt+B,EAAO6F,KAAK4F,OACRzL,EAAO6F,KAAKC,gBAAgBy4B,QAAU,YAIlDpwB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,WACNV,QAASjO,EAAO6F,KAAKC,gBAAgBw4B,YAGxCt+B,EAAOkM,YAAclM,EAAOkM,WAAWC,UACtCgC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,OACNV,QAAO,GAAA9N,OAA+C,OAA1CH,EAAOkM,WAAWsyB,oBAA+Bx+B,EAAOkM,WAAWsyB,oBAAsB,mBAA9F,MAAAr+B,OAAqHH,EAAOkM,WAAWuyB,QAAvI,KAAAt+B,OAAkJH,EAAOkM,WAAWwyB,UAApK,KAAAv+B,OAAiLH,EAAOkM,WAAWC,UAAnM,KACPiyB,MAAK,GAAAj+B,OAA+C,OAA1CH,EAAOkM,WAAWsyB,oBAAlB,GAAAr+B,OAAoDH,EAAOkM,WAAWsyB,oBAAtE,uBAAiH,mBAAtH,MAAAr+B,OAA6IH,EAAOkM,WAAWuyB,QAA/J,4BAAAt+B,OAAiMH,EAAOkM,WAAWwyB,UAAnN,oBAAAv+B,OAA+OH,EAAOkM,WAAWC,UAAjQ,gBAEL,KACH7H,EACCq5B,GAAoBF,EAClBtvB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,OACNV,QAAO,GAAA9N,OAAK63B,EAAUA,EAAQ15B,KAAO,UAA9B,QAAA6B,OAA8C83B,EAAUA,EAAQ35B,KAAO,WAC9E8/B,MAAK,qBAAAj+B,OAAuB63B,EAAUA,EAAQ15B,KAAO,UAAhD,QAAA6B,OAAgE83B,EAAUA,EAAQ35B,KAAO,aAGhG6P,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,OAAQV,QAAS,sBAE9B,KACJE,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMi5B,EACNpY,QAAM,EACNtmB,SAAUiB,SAtHxB,CAAA0O,IAAA,eAAAkrB,IAAA,WAMI,OAAOl5B,KAAK08B,qBAAqB18B,KAAKmM,SAN1C,CAAA6B,IAAA,aAAAkrB,IAAA,WAamB,IAAA7qB,EACQrO,KAAKmM,MAArBlK,EADQoM,EACRpM,KAAMzC,EADE6O,EACF7O,OACb,OAAKyC,GAGAzC,GAGEyC,EAAKc,QAAQvD,EAAOuB,KALlB,SAhBb07B,EAAA,CAAgCztB,aAyI1BmvB,8MACJvgB,MAAQ,CACNwb,WAAY,KAGdC,aAAe,SAAC3yB,EAADqG,GAAqB,IAAhBqsB,EAAgBrsB,EAAhBqsB,WAClB/xB,EAAKgtB,SAAS,CAAC+E,wFAGR,IAAAnQ,EAIHjpB,KAAKmM,MAFPlI,EAFKglB,EAELhlB,OAAQhC,EAFHgnB,EAEGhnB,KAAwBg1B,EAF3BhO,EAEStmB,UAAYwG,KAAoC0zB,EAFzD5T,EAEuCvlB,UAAYyF,KACxDpG,EAHKkmB,EAGLlmB,QAAS65B,EAHJ3T,EAGI2T,aAAcE,EAHlB7T,EAGkB6T,gBAAiBxD,EAHnCrQ,EAGmCqQ,SAE1C,IAAKr5B,OAAO0rB,OAAOsL,GAAWx4B,OAC5B,OAAO,KANF,IAQF26B,EAAcp5B,KAAK4d,MAAnBwb,WAECG,EAAa5nB,KAAK6nB,KAAKz2B,EAAQtE,OAAS66B,GAC1CF,EAAaG,IACfH,EAAaG,GAEf,IAAM6E,EAAiBr7B,EACpBkG,OAAOswB,EAAaH,GAAcE,GAAWC,EAAaH,GAAcE,EAAWA,GACnFld,UAEH,OACEzO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,CAAY7S,MAAO,CAAC8S,UAAW,QAASC,UAAW,SAChDwE,EAAez8B,IAAI,SAAAnC,GAAM,OACxBmO,EAAAC,EAAAzQ,cAACkhC,GAAD,CACErwB,IAAKxO,EAAOuB,GACZkB,KAAMA,EACNg1B,UAAWA,EACX4F,UAAWA,EACXr9B,OAAQA,EACRo9B,aAAcA,EACdE,gBAAiBA,EACjBx9B,mBAAoB2E,EAAO3E,wBAIhCi6B,EAAa,EACZ5rB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC+8B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcr5B,KAAKq5B,aACnBc,UAAQ,EACRC,WAAS,MAIb,aAvDaprB,aAsEzBmvB,GAAWlvB,aAAe,CACxBqqB,SAAU,IAGGzD,UAAWsI,IClNpBG,oLACK,IAAAhyB,EAC6EtM,KAAKmM,MAAlFlI,EADAqI,EACArI,OAAQhC,EADRqK,EACQrK,KAAMW,EADd0J,EACc1J,MAAO4G,EADrB8C,EACqB9C,eAAgB+0B,EADrCjyB,EACqCiyB,iBAAkBC,EADvDlyB,EACuDkyB,mBAC9D,OACE7wB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,CAAY7S,MAAO,CAAC8S,UAAW,QAASC,UAAW,SAChDh3B,EAAMjB,IAAI,SAAA88B,GAAS,OAClB9wB,EAAAC,EAAAzQ,cAACuhC,GAAD,CACE1wB,IAAKywB,EAAU19B,GACfkD,OAAQA,EACRhC,KAAMA,EACNw8B,UAAWA,EACXj1B,eAAgBA,EAChB+0B,iBAAkBA,EAClBC,mBAAoBA,cAbTxvB,aA8BjB2vB,8MACJC,kBAAoB,WAClB7+B,EAAKoM,MAAMlI,OAAO26B,mBAAmB7+B,EAAKoM,MAAMlK,KAAK2G,gBAGvDi2B,cAAgB,WACd9+B,EAAKoM,MAAMlI,OAAO26B,kBAAkB7+B,EAAKoM,MAAMlK,KAAK2G,cAAgB7I,EAAKoM,MAAMsyB,UAAU19B,IAAahB,EAAKoM,MAAMsyB,UAAU19B,6EAGpH,IASH+9B,EAAkBC,EAAqBC,EAAgBC,EAAmBC,EATvE7wB,EAIHrO,KAAKmM,MAFPlI,EAFKoK,EAELpK,OAAQhC,EAFHoM,EAEGpM,KAAMw8B,EAFTpwB,EAESowB,UAFTU,EAAA9wB,EAGL1L,UAAY6G,EAHP21B,EAGO31B,eAA8B+0B,EAHrCY,EAGuBv2B,YAAgD41B,EAHvEW,EAGuD51B,cAE9D,OAAKtF,GAAWhC,GAASw8B,EAAUp1B,QAK/BpH,EAAKlB,KAAO09B,EAAU19B,IACxBk+B,EAAoBj/B,KAAK4+B,kBACrB38B,EAAK2G,aACPk2B,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAMthC,KAAM,gBAErCohC,EADE11B,EACa,eAAA7J,OAAkB6J,EAAe1L,KAAjC,OAEG,4BAGpBghC,EAAmB,SACnBE,EAAiB,CAAClhC,KAAM,QACpB0gC,GAAsBA,EAAmB//B,OACT,IAA9B+/B,EAAmB//B,QACrBygC,EAAe,GAAAv/B,OAAM6+B,EAAmB,GAAG1gC,KAA5B,uBACfihC,GAAsB,IAEtBG,EAAe,GAAAv/B,OAAM6+B,EAAmB//B,OAAzB,8BACfsgC,GAAsB,GAItBG,EAFOX,GAAoBA,EAAiB9/B,OACd,IAA5B8/B,EAAiB9/B,OACJ,QAAAkB,OAAW4+B,EAAiB,GAAGzgC,MAE/B,GAAA6B,OAAM4+B,EAAiB9/B,OAAvB,wBAGC,UAItBwgC,EAAoBj/B,KAAK6+B,cACrBr1B,GAAkBA,EAAezI,KAAO09B,EAAU19B,IACpD+9B,EAAmB,QACnBE,EAAiB,CAACI,SAAS,EAAMthC,KAAM,gBACvCohC,EAAe,eAAAv/B,OAAkB8+B,EAAU3gC,KAA5B,SAEfghC,EAAmB,SACnBE,EAAiB,CAAClhC,KAAM,QACpB2gC,EAAU71B,cAAgB3G,EAAKlB,IACjCm+B,EAAe,GAAAv/B,OAAM8+B,EAAU3gC,KAAhB,uBACfihC,GAAsB,GAEtBG,GADmC,IAA1BT,EAAU71B,YACJ,GAAAjJ,OAAM8+B,EAAU3gC,KAAhB,qBAEA,aAAA6B,OAAgB8+B,EAAU3gC,QAM7C6P,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACElsB,UAAWsW,IAAW,CAACwT,UAAWwG,IAClCnG,MAAOkG,EACPlZ,QAASqZ,GAETtxB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAASmG,GACTE,IA9DI,YAfqBlwB,aA0FlC2vB,GAAsB9I,GAAW8I,iBAE3BU,oLACK,IAAApW,EAC2BjpB,KAAKmM,MAAhClI,EADAglB,EACAhlB,OAAQhC,EADRgnB,EACQhnB,KAAMw8B,EADdxV,EACcwV,UAErB,OACE9wB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAD,KACEzqB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,KACE7qB,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,QAASvB,KAAM,OAAQqB,KAAMuI,EAAU19B,KAC5D4M,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKM,OAAN,KACG+F,EAAU3gC,KACV,IACAmG,GAAUhC,GAAQA,EAAKlB,KAAO09B,EAAU19B,GACvC4M,EAAAC,EAAAzQ,cAACmiC,GAAD,CAAUr7B,OAAQA,EAAQhC,KAAMA,EAAMy4B,QAAS/sB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WACpF,MAENE,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKW,KAAN,KACG92B,GAAQw8B,EAAU19B,KAAOkB,EAAKlB,GAAK4M,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,KAAOhrB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,OAAQ86B,MAAO,UAAlC,MAA0D,KAC7F,IACA32B,GAAQw8B,EAAU19B,KAAOkB,EAAKlB,GAAK4M,EAAAC,EAAAzQ,cAACmiC,GAAD,CAAUr7B,OAAQA,EAAQhC,KAAMA,EAAMy4B,QAAS/sB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,KAAKN,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,OAAQ86B,MAAO32B,EAAKs9B,YAAc,QAAU,QAAUt9B,EAAKs9B,YAAc,GAAK,iBAA6B,KACzN,IACAd,EAAU71B,YAAc+E,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,KAAOhrB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAMuG,SAAO,EAACthC,KAAM,eAAgB86B,MAAO,UAAlD,SAA6E,KACrG,IACA6F,EAAUp1B,OAASsE,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,KAAOhrB,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,SAAU86B,MAAO,UAApC,UAAgE,KACnF,IACDjrB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACEiF,MAAK,GAAAj+B,OAAK8+B,EAAUx7B,wBAA0B,iBAAmB,GAA5D,QAAAtD,OAAqE8+B,EAAUe,SAA/E,YAAA7/B,OAAkG8+B,EAAUpE,WACjHzB,MAAO,CAAC2E,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASgB,EAAUr7B,OAEtDuK,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CACE/6B,KAAM2gC,EAAUx7B,wBAA0B,WAAa,eACvD21B,MAAO6F,EAAUx7B,wBAA0B,cAAWvE,IAEvD,IAAK+/B,EAAUgB,OAEjB,IACD9xB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,SAAUV,QAAO,IAAA9N,OAAM8+B,EAAUe,SAAhB,KAAA7/B,OAA4B8+B,EAAUpE,aACnE,IACAoE,EAAUiB,mBACT/xB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,CAACrQ,KAAM,UAAW86B,MAAO,UAC/BnrB,QAASgxB,EAAUiB,mBACnB9B,MAAK,OAAAj+B,OAAS8+B,EAAUiB,mBAAnB,KAAA//B,OAAyC8+B,EAAUkB,gBAAnD,0BAEH,KACLlB,EAAUnzB,cAAgBmzB,EAAUnzB,aAAaK,UAChDgC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,SACNV,QAAO,GAAA9N,OAAK8+B,EAAUnzB,aAAas0B,aAA5B,YAAAjgC,OAA8C8+B,EAAUnzB,aAAa2yB,QAArE,KAAAt+B,OAAgF8+B,EAAUnzB,aAAa4yB,UAAvG,KAAAv+B,OAAoH8+B,EAAUnzB,aAAaK,UAA3I,KACPiyB,MAAK,GAAAj+B,OAAK8+B,EAAUnzB,aAAas0B,aAA5B,0BAAAjgC,OAAiE8+B,EAAUnzB,aAAa2yB,QAAxF,6BAAAt+B,OAA2H8+B,EAAUnzB,aAAa4yB,UAAlJ,oBAAAv+B,OAA8K8+B,EAAUnzB,aAAaK,UAArM,iBAEL,OAGP1H,GAAUhC,GAAQw8B,EAAUp1B,OAASsE,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,CAAcqH,OAAK,GACvDlyB,EAAAC,EAAAzQ,cAAA,OAAKsR,UAAU,kBACbd,EAAAC,EAAAzQ,cAAC2iC,GAAD,CAAqBrB,UAAWA,MAElB,aAzDHzvB,aAyEjB+wB,8MACJniB,MAAQ,CACN3b,KAAMoF,EAAK8E,MAAMlK,KACjBC,SAAUmF,EAAK8E,MAAMlK,KAAKnE,KAC1BwI,SAAU,MAcZ05B,eAAiB,SAAAjzB,GAAuB,IAAZzP,EAAYyP,EAArBkzB,OAAS3iC,MAC1B+J,EAAKgtB,SAAS,CAACnyB,SAAU5E,OAG3B4iC,eAAiB,SAAA7qB,GAAuB,IAAZ/X,EAAY+X,EAArB4qB,OAAS3iC,MAC1B+J,EAAKgtB,SAAS,CAAC/tB,SAAUhJ,OAG3B6iC,eAAiB,WACf94B,EAAK8E,MAAMlI,OAAO+7B,eAAe34B,EAAKuW,MAAM1b,aAG9Ck+B,eAAiB,WACf/4B,EAAK8E,MAAMlI,OAAOi8B,eAAe74B,EAAKuW,MAAMtX,UAC5Ce,EAAKgtB,SAAS,CAAC/tB,SAAU,8EAGlB,IAAAooB,EACsB1uB,KAAK4d,MAA3B1b,EADAwsB,EACAxsB,SAAUoE,EADVooB,EACUpoB,SADVikB,EAEiBvqB,KAAKmM,MAAtBlK,EAFAsoB,EAEAtoB,KAAMy4B,EAFNnQ,EAEMmQ,QAEb,OACE/sB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEC,QAASA,EACT7F,KAAM,QACN+F,OAAQ,YACRntB,QACEE,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC89B,GAAA,EAAD,CAAOC,MAAO,OAAQ59B,MAAO4E,EAAUoyB,SAAUt0B,KAAKggC,eAAgBK,OAAQ,CAAC5yB,QAAS,SAAUmY,QAAS5lB,KAAKmgC,kBAChHxyB,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAC89B,GAAA,EAAD,CAAOC,MAAO,CAACztB,QAASxL,EAAKs9B,YAAc,kBAAoB,iBAAkB3G,MAAO32B,EAAKs9B,YAAc,QAAU,OAAQjiC,MAAOgJ,EAAUguB,SAAUt0B,KAAKkgC,eAAgBG,OAAQ,CAAC5yB,QAAS,SAAUmrB,MAAO32B,EAAKs9B,iBAAc7gC,EAAY,QAASknB,QAAS5lB,KAAKogC,mBAG1Q7E,QAAS,CACP,CAACvtB,IAAK,SAAUsyB,UAAU,EAAM7yB,QAAS,gEA7CjBtB,EAAOyR,GACrC,OAAIzR,EAAMlK,OAAS2b,EAAM3b,KAChB,CACLA,KAAMkK,EAAMlK,KACZC,SAAUiK,EAAMlK,KAAOkK,EAAMlK,KAAKnE,KAAO,MAItC,YAfYkR,aAiEVuxB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA33B,EAAA7I,OAAAC,EAAA,EAAAD,CAAAD,KAAAugC,GAAA,QAAAG,EAAAliC,UAAAC,OAAAi4B,EAAA,IAAAlZ,MAAAkjB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAjK,EAAAiK,GAAAniC,UAAAmiC,GAAA,OAAA73B,EAAA7I,OAAAwoB,EAAA,EAAAxoB,CAAAD,MAAAygC,EAAAxgC,OAAAyoB,EAAA,EAAAzoB,CAAAsgC,IAAA5J,KAAA9kB,MAAA4uB,EAAA,CAAAzgC,MAAAL,OAAA+2B,MACE9Y,MAAQ,CACN1b,SAAU,GACVoE,SAAU,GACVqC,YAAY,GAJhBG,EAOEk3B,eAAiB,SAAA/yB,GAAuB,IAAZ3P,EAAY2P,EAArBgzB,OAAS3iC,MAC1BwL,EAAKurB,SAAS,CAACnyB,SAAU5E,KAR7BwL,EAWEo3B,eAAiB,SAAAhzB,GAAuB,IAAZ5P,EAAY4P,EAArB+yB,OAAS3iC,MAC1BwL,EAAKurB,SAAS,CAAC/tB,SAAUhJ,KAZ7BwL,EAeE83B,iBAAmB,SAAAxpB,GAAyB,IAAdypB,EAAczpB,EAAvB6oB,OAASY,QAC5B/3B,EAAKurB,SAAS,CAAC1rB,WAAYk4B,KAhB/B/3B,EAmBEg4B,MAAQ,WACNh4B,EAAKqD,MAAMlI,OAAO68B,MAAMh4B,EAAK8U,MAAM1b,SAAU4G,EAAK8U,MAAMtX,SAAUwC,EAAKH,YACvEG,EAAKurB,SAAS,CAACnyB,SAAU,GAAIoE,SAAU,MArB3CwC,EAAA,OAAA7I,OAAA0oB,EAAA,EAAA1oB,CAAAsgC,EAAAC,GAAAvgC,OAAA2oB,EAAA,EAAA3oB,CAAAsgC,EAAA,EAAAvyB,IAAA,SAAA1Q,MAAA,WAwBW,IAAAyjC,EACkC/gC,KAAK4d,MAAvC1b,EADA6+B,EACA7+B,SAAUoE,EADVy6B,EACUz6B,SAAUqC,EADpBo4B,EACoBp4B,WAE3B,OACEgF,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACE3L,IAAK9uB,KAAKghC,MACVtG,QAAS/sB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,IAAKE,KAAM,UAAWV,QAAS,SAAUwzB,MAAO,SACpEpM,KAAM,QACN+F,OAAQ,SACRntB,QACEE,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC89B,GAAA,EAAD,CAAOC,MAAO,OAAQ59B,MAAO4E,EAAUoyB,SAAUt0B,KAAKggC,iBACtDryB,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAC89B,GAAA,EAAD,CAAOC,MAAO,WAAY59B,MAAOgJ,EAAUguB,SAAUt0B,KAAKkgC,iBAC1DvyB,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,cACP2F,QAASl4B,EACT2rB,SAAUt0B,KAAK4gC,oBAIrBrF,QAAS,CACP,CAACvtB,IAAK,SAAUsyB,UAAU,EAAM7yB,QAAS,UACzC,CAACO,IAAK,QAASwtB,UAAU,EAAM/tB,QAAS,SAAUmY,QAAS5lB,KAAK8gC,cAhD1EP,EAAA,CAA2BvxB,aA2DdmyB,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA53B,EAAAxJ,OAAAC,EAAA,EAAAD,CAAAD,KAAAmhC,GAAA,QAAAG,EAAA9iC,UAAAC,OAAAi4B,EAAA,IAAAlZ,MAAA8jB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA7K,EAAA6K,GAAA/iC,UAAA+iC,GAAA,OAAA93B,EAAAxJ,OAAAwoB,EAAA,EAAAxoB,CAAAD,MAAAqhC,EAAAphC,OAAAyoB,EAAA,EAAAzoB,CAAAkhC,IAAAxK,KAAA9kB,MAAAwvB,EAAA,CAAArhC,MAAAL,OAAA+2B,MACE8K,OAAS,WACP/3B,EAAK0C,MAAMlI,OAAOu9B,UAFtB/3B,EAAA,OAAAxJ,OAAA0oB,EAAA,EAAA1oB,CAAAkhC,EAAAC,GAAAnhC,OAAA2oB,EAAA,EAAA3oB,CAAAkhC,EAAA,EAAAnzB,IAAA,SAAA1Q,MAAA,WAMI,OACEqQ,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,IAAKE,KAAM,UAAWV,QAAS,UAAWmY,QAAS5lB,KAAKwhC,aAPzEL,EAAA,CAA4BnyB,aA0Jb6mB,iNAzIb+I,kBAAoB,WAClBx0B,EAAK+B,MAAMlI,OAAO26B,mBAAmBx0B,EAAK+B,MAAMlK,KAAK2G,sFAG9C,IAAAiC,EAAA7K,KAAAmzB,EAOHnzB,KAAKmM,MALPlI,EAFKkvB,EAELlvB,OAAQhC,EAFHkxB,EAEGlxB,KAFHw/B,EAAAtO,EAGLxwB,UAAkBs0B,EAHbwK,EAGOt4B,KAAiBvG,EAHxB6+B,EAGwB7+B,MAAOyG,EAH/Bo4B,EAG+Bp4B,OAAQC,EAHvCm4B,EAGuCn4B,QAASE,EAHhDi4B,EAGgDj4B,eAAgBZ,EAHhE64B,EAGgE74B,YAAaW,EAH7Ek4B,EAG6El4B,cAH7Em4B,EAAAvO,EAILzvB,UAAkBm5B,EAJb6E,EAIOv4B,KAAiBS,EAJxB83B,EAIwB93B,OAAQE,EAJhC43B,EAIgC53B,UAAWC,EAJ3C23B,EAI2C33B,WAAYC,EAJvD03B,EAIuD13B,cAAgBgtB,EAJvE7D,EAIuE6D,eAAgB0E,EAJvFvI,EAIuFuI,qBAJvFiG,EAAAxO,EAKLrwB,YAAcgJ,EALT61B,EAKS71B,cAAe/I,EALxB4+B,EAKwB5+B,QAASgJ,EALjC41B,EAKiC51B,aAAcC,EAL/C21B,EAK+C31B,gBAAiBH,EALhE81B,EAKgE91B,YAAuBsrB,EALvFwK,EAK6Ev2B,SAClF3G,EANK0uB,EAML1uB,gBAEWyyB,EAAmBzyB,EAAzB0E,KAEP,OAAKlH,EAKH0L,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,CAAYM,UAAQ,GACjB/3B,EACC0L,EAAAC,EAAAzQ,cAACuhC,GAAD,CACEz6B,OAAQA,EACRw6B,UAAWx8B,EACXA,KAAMA,EACNuH,eAAgBA,EAChB+0B,iBAAkB31B,EAClB41B,mBAAoBj1B,IAEpB,KACHuC,EAAcrN,OACbkP,EAAAC,EAAAzQ,cAACkhC,GAAD,CACEp8B,KAAMA,EACNg1B,UAAWA,EACX4F,UAAWA,EACXr9B,OAAQsM,EAAc,GACtB8wB,aAAc58B,KAAKmM,MAAMy1B,iBACzB9E,gBAAiB,KACjBx9B,mBAAoB2E,EAAO3E,qBAE3B,MAENqO,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,UAAWktB,MAAO,gBAAiBpG,MAAOlrB,EAAQgvB,MAAO,SAC/D,CAAC5qB,IAAK,aAAcktB,MAAO,mBAAoBpG,MAAOhrB,EAAW8uB,MAAO,SACxE,CAAC5qB,IAAK,UAAWktB,MAAO,gBAAiBpG,MAAO/qB,GAChD,CAACiE,IAAK,aAAcktB,MAAO,mBAAoBpG,MAAO9qB,IACtDjG,OAAO,SAAAuT,GAAA,OAAAA,EAAEwd,MAAiBr2B,SAAQkD,IAAI,SAAAkW,GAAA,IAAE7J,EAAF6J,EAAE7J,IAAKktB,EAAPrjB,EAAOqjB,MAAOpG,EAAdjd,EAAcid,MAAO8D,EAArB/gB,EAAqB+gB,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAAC2kC,GAAD,CACE7/B,KAAMA,EACNg1B,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjB3zB,MAAOsxB,EACPkC,eAAgBA,EAChB13B,mBAAoB2E,EAAO3E,4BAKlCyD,EAAW4K,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACVltB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAQ,WACnC,IAAIw1B,EAAc,CAChB,CAAC/zB,IAAK,gBAAiBktB,MAAO,kBAAmBpG,MAAO/oB,EAAc6sB,MAAO,SAC7E,CAAC5qB,IAAK,oBAAqBktB,MAAO,cAAepG,MAAO9oB,GACxD,CAACgC,IAAK,eAAgBktB,MAAO,iBAAkBpG,MAAOjpB,IACtD9H,OAAO,SAAAgU,GAAA,OAAAA,EAAE+c,MAAiBr2B,SAM5B,OALKsjC,EAAYtjC,SACfsjC,EAAc,CACZ,CAAC/zB,IAAK,UAAWktB,MAAO,UAAWpG,MAAO/xB,KAGvCg/B,EAX4B,GAYhCpgC,IAAI,SAAAqW,GAAA,IAAEhK,EAAFgK,EAAEhK,IAAKktB,EAAPljB,EAAOkjB,MAAOpG,EAAd9c,EAAc8c,MAAO8D,EAArB5gB,EAAqB4gB,MAArB,MACL,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC5Gl0B,EAAAC,EAAAzQ,cAAC6kC,GAAD,CAAYpF,aAAc/xB,EAAKsB,MAAMy1B,iBAAkB7+B,QAAS+xB,WAI5D,KACdnnB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC8kC,GAAD,MACAt0B,EAAAC,EAAAzQ,cAAA,WAAKwQ,EAAAC,EAAAzQ,cAAA,WACLwQ,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,UAAWktB,MAAO,kCAAmCpG,MAAOrwB,EAAgBgG,gBAAiBmuB,MAAO,SAC1G,CAAC5qB,IAAK,aAAcktB,MAAO,uCAAwCpG,MAAOrwB,EAAgBkG,mBAAoBiuB,MAAO,SACrH,CAAC5qB,IAAK,UAAWktB,MAAO,sBAAuBpG,MAAOrwB,EAAgBsF,YACtE,CAACiE,IAAK,aAAcktB,MAAO,yBAA0BpG,MAAOrwB,EAAgBuF,gBAC5EjG,OAAO,SAAAmU,GAAA,OAAAA,EAAE4c,MAAiBr2B,SAAQkD,IAAI,SAAAugC,GAAA,IAAEl0B,EAAFk0B,EAAEl0B,IAAKktB,EAAPgH,EAAOhH,MAAOpG,EAAdoN,EAAcpN,MAAO8D,EAArBsJ,EAAqBtJ,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAACglC,GAAD,CACElgC,KAAMA,EACNg1B,UAAWA,EACXzyB,YAAaswB,EACb4G,qBAAsBA,WAK9B/tB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,SAAUktB,MAAO,eAAgBpG,MAAOzrB,EAAQuvB,MAAO,SAC7D,CAAC5qB,IAAK,UAAWktB,MAAO,gBAAiBpG,MAAOxrB,GAChD,CAAC0E,IAAK,MAAOktB,MAAO,YAAapG,MAAOlyB,IACxCmB,OAAO,SAAAoU,GAAA,OAAAA,EAAE2c,MAAiBr2B,SAAQkD,IAAI,SAAAyW,GAAA,IAAEpK,EAAFoK,EAAEpK,IAAKktB,EAAP9iB,EAAO8iB,MAAOpG,EAAd1c,EAAc0c,MAAO8D,EAArBxgB,EAAqBwgB,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAACilC,GAAD,CACEn+B,OAAQA,EACRrB,MAAOkyB,EACP7yB,KAAMA,EACNuH,eAAgBA,EAChB+0B,iBAAkB31B,EAClB41B,mBAAoBj1B,YApGvBoE,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,uCAhBOrzB,ykBClUdszB,8MAUJ1kB,MAAQ,CACN2kB,aAAc,KACdz+B,KAAM/D,EAAKoM,MAAMrI,KACjBgY,eAAgB,QAGlB0mB,gBAAkB3U,IAAMC,cAExB1X,SAAW,SAAAtS,GACL/D,EAAKoM,MAAMs2B,OACb1iC,EAAKs0B,SAAS,CAACvwB,SAEf/D,EAAKoM,MAAMiK,SAAStS,GAElB/D,EAAKoM,MAAMu2B,yBACb3iC,EAAKoM,MAAMu2B,wBAAwB5+B,MAIvC8vB,aAAe,WACb7zB,EAAKqW,SAASrW,EAAK6d,MAAM9Z,KAAK8vB,mBAGhC9N,KAAO,WACL/lB,EAAKqW,SAASrW,EAAK6d,MAAM9Z,KAAKgiB,WAGhC6c,QAAU,WACR5iC,EAAKqW,SAASrW,EAAK6d,MAAM9Z,KAAKwD,YAAYoJ,aAG5CkyB,WAAa,SAAA9+B,GACX,IAAMy+B,EAAez+B,IAAS/D,EAAK6d,MAAM9Z,KAAO,KAAOA,EACvD/D,EAAKs0B,SAAS,CAACkO,iBACXxiC,EAAKoM,MAAM02B,sBACb9iC,EAAKoM,MAAM02B,qBAAqBN,MAIpCO,mBAAqB,SAAAh/B,GACnB/D,EAAK6iC,WAAW9+B,MAGlBi/B,uBAAyB,WACvBhjC,EAAK6iC,WAAW7iC,EAAK6d,MAAM2kB,aAAa3O,mBAG1CoP,eAAiB,WACfjjC,EAAK6iC,WAAW7iC,EAAK6d,MAAM2kB,aAAazc,WAG1Cmd,aAAe,WACbljC,EAAK6iC,WAAW,SAGlBH,OAAS,WACP,IAAMx4B,EAAQlK,EAAKmjC,mBACfj5B,EAAMxL,QACRsB,EAAKoM,MAAMs2B,OAAOx4B,EAAOlK,EAAK6d,MAAM9Z,SAoBxCq/B,cAAgB,WACdpjC,EAAKoM,MAAMs2B,OAAO,aAwBpBW,sBAAwB,WACjBrjC,EAAKoM,MAAMlI,OAAO3E,mBAAmBwH,gBAGxC/G,EAAKoM,MAAMk3B,eAAXC,GAAA,GAA8BvjC,EAAKoM,MAAMlK,KAAK5D,SAA9C,CAAwDyI,iBAAiB,KAFzE/G,EAAKyiC,gBAAgBrU,QAAQoV,gBAMjCC,kBAAoB,WAClBzjC,EAAKoM,MAAMk3B,eAAXC,GAAA,GAA8BvjC,EAAKoM,MAAMlK,KAAK5D,SAA9C,CAAwDyI,iBAAiB,KACrE/G,EAAK0jC,aACP1jC,EAAK0iC,YAmBTiB,uBAAyB,SAAA32B,GAAsB,IAApB+O,EAAoB/O,EAApB+O,eACzB/b,EAAKs0B,SAAS,CAACvY,sGAxEE,IACJ6nB,EAAa3jC,KAAKmM,MAAxBrI,KAEDqV,EADoBnZ,KAAK4d,MAAxB9Z,KACmBwV,YACpBsqB,EAAiBzqB,EAAQnQ,UAC7B,SAAAlF,GAAI,OAAIA,EAAKoP,yBAA2BywB,EAAUzwB,yBACpD,OAAI0wB,EAAiB,GACnBljC,QAAQ+gB,MAAM,uCACP,IAEUtI,EAAQlQ,MAAM26B,EAAiB,GACzBjiC,IAAI,SAAAmC,GAAI,OAAIA,EAAK2L,sDASzBse,EAAWC,GACxBhuB,KAAKmM,MAAMrI,OAASiqB,EAAUjqB,SAE7B9D,KAAKmM,MAAMrI,OACRiqB,EAAUjqB,MACX9D,KAAKmM,MAAMrI,KAAKwD,cAAgBymB,EAAUjqB,KAAKwD,aAC/CtH,KAAKmM,MAAMrI,KAAKoP,yBAA2B6a,EAAUjqB,KAAKoP,wBAC1DlT,KAAKmM,MAAMrI,KAAKkY,mBAAqB+R,EAAUjqB,KAAKkY,oBAGvDhc,KAAK4iC,WAAW,MAChB5iC,KAAKq0B,SAAS,CAACvwB,KAAM9D,KAAKmM,MAAMrI,KAAM+/B,WAAW,MAGjD7jC,KAAKmM,MAAMlI,OAAO3E,mBAAmBwH,kBAClC9G,KAAKyjC,UAAU1V,EAAWC,IAAchuB,KAAKyjC,aAChDzjC,KAAKyiC,6CAoBuC,IAAxCt2B,EAAwC3N,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCwB,KAAKmM,MAAOyR,EAAoBpf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZwB,KAAK4d,MAClC6kB,EAAUt2B,EAAVs2B,OACAF,EAAsB3kB,EAAtB2kB,aAAcz+B,EAAQ8Z,EAAR9Z,KACrB,QACI2+B,IACEF,GACDz+B,IAASqI,EAAMrI,QACb9D,KAAKkjC,mBAAmBzkC,SAE3BqF,EAAK6F,UACF7F,EAAKkM,aAAe7D,EAAMrI,KAAKkM,6CAS/B,IAAA1D,EAGHtM,KAAKmM,MADPlI,EAFKqI,EAELrI,OAAQ6/B,EAFHx3B,EAEGw3B,MAAOzV,EAFV/hB,EAEU+hB,aAAc0V,EAFxBz3B,EAEwBy3B,UAAWC,EAFnC13B,EAEmC03B,SAA4B/M,EAF/D3qB,EAE6C3J,UAAYwG,KAFzDulB,EAIsC1uB,KAAK4d,MAA3C2kB,EAJA7T,EAIA6T,aAAcz+B,EAJd4qB,EAIc5qB,KAAMgY,EAJpB4S,EAIoB5S,eACrBmoB,EAAc1B,GAAgBz+B,EAC9Bk0B,EAAW3J,EAAa5vB,OAAS,EACjCglC,EAAYzjC,KAAKyjC,YACjBS,IAAmBH,GAAYA,EAAUG,iBACzCtV,EAAoBP,EAAapoB,SAASoJ,EAAKmC,UAC/CvB,GAAWsyB,IAAiBviC,KAAKmM,MAAMs2B,OAAS3+B,EAAK4V,WAAa1Z,KAAKmM,MAAMrI,KAAK4V,WAAa5V,EAAKmM,SACpGk0B,IAAkBnkC,KAAKmM,MAAMs2B,QAAWF,IAAgBz+B,EAAK0L,UAE9D40B,EACJz2B,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGjB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACknC,GAAD,CACEpzB,OAAQ2d,EAAoBvf,EAAKmC,SAAWnC,EAAKqC,SACjD4yB,WAAYP,EAAY9M,EAAU8M,EAAUl6B,QAAQ+kB,EAAoB,EAAI,IAAM,KAClF6U,UAAWA,EACXc,mBAAoBd,EACpBxzB,QAASA,EACTk0B,YAAaA,EACb1B,OAAQziC,KAAKmM,MAAMs2B,OAASziC,KAAKyiC,OAAS,KAC1C3c,KAAM9lB,KAAKmM,MAAMs2B,OAASziC,KAAK4zB,aAAe5zB,KAAK8lB,KACnD0e,SAAUxkC,KAAK4zB,aACfwP,sBAAuBpjC,KAAKojC,sBAC5Bt/B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3BwkC,MAAOA,EACPzV,aAAcA,KAGlB1gB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACknC,GAAD,CACEpzB,OAAQ2d,EAAoBvf,EAAKqC,SAAWrC,EAAKmC,SACjD8yB,WAAYP,EAAY9M,EAAU8M,EAAUl6B,QAAQ+kB,EAAoB,EAAI,IAAM,KAClF6U,WAAW,EACXc,mBAAoBd,EACpBxzB,QAASA,EACTk0B,YAAaA,EACb1B,OAAQziC,KAAKmM,MAAMs2B,OAASziC,KAAKyiC,OAAS,KAC1C3c,KAAM9lB,KAAKmM,MAAMs2B,OAASziC,KAAK4zB,aAAe5zB,KAAK8lB,KACnD0e,SAAUxkC,KAAK4zB,aACfwP,sBAAuBpjC,KAAKojC,sBAC5Bt/B,KAAMA,EACNxE,mBAAoB2E,EAAO3E,mBAC3BwkC,MAAOA,EACPzV,aAAcA,KAGlB1gB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACsnC,GAAD,CAAgB3gC,KAAMA,EAAMy+B,aAAcA,EAAcK,WAAY5iC,KAAK4iC,cAE3Ej1B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACunC,GAAD,CAAqBpQ,SAAUt0B,KAAK0jC,uBAAwBvd,SAAUriB,EAAKwD,eAE5E08B,GAGAW,EACHh3B,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMmgC,EACNnoB,eAAgBA,EAChB1F,SAAUmsB,EAAeviC,KAAK8iC,mBAAqB9iC,KAAKoW,SACxDyd,cAAeoQ,IAAgBngC,EAC7B9D,KAAKmM,MAAMs2B,OAASziC,KAAKmM,MAAMrI,KAAK4V,WAClC1Z,KAAKmM,MAAMrI,KAAKmM,QAAUjQ,KAAKmM,MAAMrI,KAAK0L,SAASkK,WAAa1Z,KAAKmM,MAAMrI,KAAK4V,WAEhF,EACJ2U,aAAc4V,IAAgBngC,EAAOuqB,OAAe3vB,EACpDL,SAAU4F,EAAO3E,mBACjBymB,SAAU9hB,EAAO3E,mBAAmBtB,MAAMkJ,WAC1C2pB,WAAY5sB,EAAO3E,mBAAmBtB,MAAMmJ,SAIhD,OACEwG,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,CAAShU,MAAO,CAAC+d,UAAW,WAC1Bj3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,EAAC6K,QAAS,QAASD,UAAW,UAC1Cj3B,EAAAC,EAAAzQ,cAAC2nC,GAAA,EAAD,CAAY72B,GAAI8rB,KAAKE,IAAK8K,SAAU,KAClCp3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,KAAcZ,GACdz2B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,KAAcL,IAEhBh3B,EAAAC,EAAAzQ,cAAC2nC,GAAA,EAAD,CAAY72B,GAAIg3B,WAAUC,SAAU,KAClCv3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,UACtBj3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACunC,GAAD,CAAqBpQ,SAAUt0B,KAAK0jC,uBAAwBvd,SAAUriB,EAAKwD,eAE7EqG,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACG0K,GAEHh3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACsnC,GAAD,CAAgB3gC,KAAMA,EAAMy+B,aAAcA,EAAcK,WAAY5iC,KAAK4iC,cAE3Ej1B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,OAAQsnB,UAAW9kB,EAAS2V,QAAS5lB,KAAKmM,MAAMs2B,OAASziC,KAAK4zB,aAAe5zB,KAAK8lB,OAC5GnY,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,iBAAkBsnB,SAAU9kB,IAAYk0B,EAAave,QAAS5lB,KAAK4zB,kBAInGjmB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaG,WAAW,EAAOP,UAAW,UACvCR,OAMVpkC,KAAKmM,MAAMs2B,QAAUzK,EACpBrqB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAU1L,MAAX,CAAiB2L,OAAQ,MAAOxQ,KAAM,QACpClnB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MACTqQ,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEC,QAAS/sB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAACvL,WAAYwN,GAAgBviC,KAAKmM,MAAMrI,KAAK6F,UAAWu6B,EAAmB,QAAU,UAC9GtJ,OAAQsJ,EAAmB,SAAW,UACtCz2B,QAAO,4BAAA9N,OAA8BukC,EAAmB,QAAU,UAA3D,KAAAvkC,OAAwEukC,EAAmB,qCAAuC,IACzI3I,QAAS,CAAC,CAACvtB,IAAK,SAAUP,QAASy2B,EAAmB,QAAU,SAAU5D,UAAU,EAAM1a,QAAS5lB,KAAKmjC,eAAgB,CAAEn1B,IAAK,WAAYP,QAAS,WAAY63B,UAAU,EAAMlL,WAAW,QAG/LzsB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAKmM,MAAMs2B,OAASziC,KAAK4zB,aAAe5zB,KAAK8lB,KAAMiP,UAAW9kB,GAAxF,YAGpB,KACFjQ,KAAKmM,MAAMs2B,OAOT,KANF90B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAU1L,MAAX,CAAiB2L,OAAQ,MAAOxQ,KAAM,SACpClnB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAK4zB,aAAcmB,UAAWoP,GAAxD,sBAClBx2B,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAK2iC,QAAS5N,WAAYwN,IAAiBz+B,EAAK0L,UAA1E,gBAIvB+yB,EACC50B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,CAAS+J,UAAW,UAClBj3B,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,2BACAN,EAAAC,EAAAzQ,cAACioC,GAAA,EAAU1L,MAAX,CAAiB2L,OAAQ,QAASxQ,KAAM,SACrC0N,EAAa54B,SACZgE,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAWxM,MAAO,QAASt7B,MAAOwmC,EAAMvB,EAAapyB,QAAS+qB,MAAO,SAErEvtB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOwmC,EAAMvB,EAAavyB,YAAakrB,MAAOl7B,KAAKsH,YAAYi+B,gBAAgBhD,EAAa1yB,YAEzGlC,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOilC,EAAa/oB,UAAW0hB,MAAO,SACjDvtB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAKgjC,eAAgBjO,UAAWwN,EAAatyB,SAAvE,WAEpBtC,EAAAC,EAAAzQ,cAACioC,GAAA,EAAU1L,MAAX,CAAiB2L,OAAQ,MAAOxQ,KAAM,SACpClnB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAK+iC,uBAAwBhO,UAAWwN,EAAa/yB,UAA/E,sBAClB7B,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CAAW9nC,MAAOqQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAKijC,cAA/B,sBAGpB,KACJt1B,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACE3L,IAAK9uB,KAAKwiC,gBACV5H,OAAQ,oBACRntB,QAAS,0DACT8tB,QAAS,CACP,CAACvtB,IAAK,MAAOP,QAAS,cAAemY,QAAS5lB,KAAKwjC,kBAAmBgC,SAAS,GAC/E,CAACx3B,IAAK,KAAMP,QAAS,4BAA6B2sB,WAAW,cAjTtDprB,aAAbszB,GACGiD,sCACJl2B,EAAK0C,6BAA+B,iCACpC1C,EAAK4C,8BAAgC,iCACrC5C,EAAKoD,gCAAkC,kCACvCpD,EAAKqH,4BAA8B,8BACnCrH,EAAKuH,6BAA+B,8BACpCvH,EAAKyH,8BAAgC,aAsU1CwrB,GAAKrzB,aAAe,CAClB60B,OAAK2B,GAAA,GAAAxlC,OAAA0U,EAAA,EAAA1U,CAAAwlC,GACFp2B,EAAKmC,SAAW,YADdvR,OAAA0U,EAAA,EAAA1U,CAAAwlC,GAEFp2B,EAAKqC,SAAW,YAFd+zB,IAILpX,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,WAGrC4wB,GAAOzM,GAAWyM,QAEZoD,8MAUJC,wBAA0B,WACxBt+B,EAAK8E,MAAMs2B,SACXp7B,EAAK8E,MAAMlI,OAAO2hC,eAAlBtC,GAAA,GAAqCj8B,EAAK8E,MAAMlK,KAAK5D,SAArD,CAA+D0I,oBAAoB,8EAG5E,IAAAsH,EAIHrO,KAAKmM,MAFPrI,EAFKuK,EAELvK,KAAMmN,EAFD5C,EAEC4C,OAAQod,EAFThgB,EAESggB,aAAcyV,EAFvBz1B,EAEuBy1B,MAAOxkC,EAF9B+O,EAE8B/O,mBAAoB8jC,EAFlD/0B,EAEkD+0B,sBAAuBkB,EAFzEj2B,EAEyEi2B,WAC9Eb,EAHKp1B,EAGLo1B,UAAWc,EAHNl2B,EAGMk2B,mBAAoBt0B,EAH1B5B,EAG0B4B,QAASk0B,EAHnC91B,EAGmC81B,YAAa1B,EAHhDp0B,EAGgDo0B,OAAQ3c,EAHxDzX,EAGwDyX,KAAM0e,EAH9Dn2B,EAG8Dm2B,SAE/DqB,EAAqBxX,EAAapoB,SAASgL,GAC3C60B,EAAevB,EAAqBzgC,EAAK0L,SAAW1L,EACpDiiC,EAAgBD,EAAa91B,aAAeiB,EAC5C+0B,EAAYF,EAAa31B,SAAWc,EACpCtH,EAAWm8B,EAAan8B,SAE9B,OACEgE,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CACEo4B,WAAS,EACTx3B,UAAWsW,IAAW,CAACwT,WAAY5uB,GAAYk8B,GAAsBE,IAAkBtC,IACvF5O,KAAM,UACNyQ,SAAU37B,GAAYsH,IAAW5B,EAAKqC,SACtCknB,MAAOjvB,EAAYq8B,EAAY,QAAU,WAAStnC,EAClDo2B,MAAO,CACL,CAAC9mB,IAAK,OACJG,KAAMxE,EAAYq8B,EAAY,SAAW,cAAkBD,EAAgB,OAAS,YACpFt4B,QACEE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC+oC,GAAD,CACE/f,SAAUriB,EAAKwD,YACfqd,QAAM,EACNrlB,mBAAoBA,EACpB2R,OAAQA,EACRod,aAAcA,IAEfyV,EAAM7yB,KAGb,CAACjD,IAAK,eAAgBP,QACpB9D,EACKq8B,EAAY,MAAQ,OAErBvC,EAEInkC,EAAmBwH,gBACf,kBAEA6G,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGtP,EAAmByH,mBAClB4G,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACE5F,KAAM,OACN6F,QACE/sB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEa,UAAQ,EACR/sB,UAAW,aAFb,aAOFmsB,OAAQ,cACRntB,QACEE,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAMjC,QAAP,oDAEE7qB,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMA,EACN6gB,QAAM,EACNtmB,SAAUiB,EACVymB,UAAQ,EACR8K,YAAU,KAIhB0K,QAAS,CACP,CAACvtB,IAAK,kBAAmBP,QAAS,kBAAmBmY,QAAS5lB,KAAK2lC,yBACnE,CAAC33B,IAAK,SAAUsyB,UAAU,EAAM7yB,QAAS,UACzC,CAACO,IAAK,KAAMwtB,UAAU,EAAM/tB,QAAS,SAAUmY,QAAS6c,MAI5D90B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEa,UAAQ,EACR/sB,UAAW,YACXmX,QAAS6c,GAHX,UAQDoD,GAAsB51B,EACrBtC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG,OAAOjB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,OAAQsnB,UAAW9kB,EAAS2V,QAASE,KAEvE,MAIVigB,EAEIF,GAAsB51B,EAElBtC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG5O,KAAKsH,YAAYi+B,gBAAgBO,EAAaj2B,UAC9C,OAAOlC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,OAAQsnB,UAAW9kB,EAAS2V,QAASE,KAGzE9lB,KAAKsH,YAAYi+B,gBAAgBO,EAAaj2B,UATzC,eAAAlQ,OAWMmkC,EAAMz0B,EAAKiB,aAAaW,MAIpDhB,IAAWk0B,GAAgB4B,EAIxB,KAJwC,CAC1C/3B,IAAK,iBAAkBP,QACrBE,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,iBAAkBmY,QAAS4e,MAGxD76B,GAAY84B,GAAUpU,EAAapoB,SAASgL,GAAU,CACrDjD,IAAK,cAAeP,QAClBE,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,oBACPiL,QAAM,EACNtF,QAASvhC,EAAmBwH,gBAC5BwtB,SAAU8O,KAGZ,KACJz5B,GAAY26B,GAAcA,EAAWj7B,OAAS,CAC5C2E,IAAK,YAAaP,QAChBE,EAAAC,EAAAzQ,cAAC2iC,GAAD,CAAqBrB,UAAW6F,KAEhC,MACJvgC,OAAO,SAAAqiC,GAAI,OAAIA,aA7IAp3B,aAAnB02B,GACGH,sCACJl2B,EAAK0C,6BAA+B,iCACpC1C,EAAK4C,8BAAgC,iCACrC5C,EAAKoD,gCAAkC,kCACvCpD,EAAKqH,4BAA8B,8BACnCrH,EAAKuH,6BAA+B,8BACpCvH,EAAKyH,8BAAgC,aA8J1C4uB,GAAa7P,GAAW6P,gNAGtB9nB,MAAQ,CACNwb,WAAY,KAGdC,aAAe,SAAC3yB,EAAD2O,GAAqB,IAAhB+jB,EAAgB/jB,EAAhB+jB,WAClBtwB,EAAKurB,SAAS,CAAC+E,wFAGR,IAAAnQ,EAC8EjpB,KAAKmM,MAAnFrI,EADAmlB,EACAnlB,KAAMxE,EADN2pB,EACM3pB,mBAAoBijC,EAD1BtZ,EAC0BsZ,aAAcK,EADxC3Z,EACwC2Z,WAAYtJ,EADpDrQ,EACoDqQ,SAAU9e,EAD9DyO,EAC8DzO,aAC9D4e,EAAcp5B,KAAK4d,MAAnBwb,WAEDG,EAAa5nB,KAAK6nB,MAAM11B,EAAKqV,QAAQ1a,OAAS,GAAK66B,GACnDG,EAAex5B,OAAAiJ,EAAA,EAAAjJ,CAAI6D,EAAKqV,SAC3BlQ,MAAM,GAAKswB,EAAaH,GAAcE,EAAU,GAAKC,EAAaH,GAAcE,EAAWA,GAC3Fld,UACGiqB,EAAkB5M,EAAaA,EAAah7B,OAAS,GAE3D,OACEkP,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACsnC,GAAD,CAAgB3gC,KAAMA,EAAMy+B,aAAcA,EAAcK,WAAYA,KAEtEj1B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACGR,EAAa93B,IAAI,SAAAmkC,GAAY,OAC5Bn4B,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,CAAUZ,IAAK83B,EAAapsB,YACzBosB,EAAatsB,UAAY,IAAM,EAC9B7L,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASq4B,EAAatsB,UAAY,IACvC,KACJ7L,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMgiC,EACNphB,OAAK,EACLE,SAAUge,EACV/d,SAAUihB,IAAiBvD,EAC3BlkC,SAAUiB,IAEXkb,EACC7M,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,SACXkN,EAAa9rB,mBAAmBrY,IAAI,SAAAsL,GAAA,IAAE8D,EAAF9D,EAAE8D,EAAGF,EAAL5D,EAAK4D,EAAL,OAAA5D,EAAQiD,OACzC,IAD2D,GAAAvQ,OAClD,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKoR,IADwBpR,OACnBkR,EAAI,KAAKjB,KAAK,MAE1D,QAGPy2B,GAAoBA,EAAgB7sB,UAAY,IAAM,EACrD7L,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAAS44B,EAAgB7sB,UAAY,IAC1C,MAEN7L,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC+8B,GAAA,EAAD,CACEX,WAAYA,EACZH,WAAYA,EACZC,aAAcr5B,KAAKq5B,aACnBc,UAAQ,EACRC,WAAS,cAxDGprB,cA2EdC,aAAe,CACzBqqB,SAAU,GACV9e,cAAc,OAGV8rB,8MA4CJC,gBAAkB,WACX98B,EAAK+8B,sBAGV/8B,EAAK0C,MAAMy2B,WAAWn5B,EAAK0C,MAAMrI,SASnC2iC,aAAe,WACb,GAAKh9B,EAAKi9B,kBAAV,CAGA,IAAMC,EAAoBl9B,EAAK0C,MAAMrI,KAAKqV,QAAQU,QAAQpQ,EAAK0C,MAAMo2B,cAAgB94B,EAAK0C,MAAMrI,MAChG2F,EAAK0C,MAAMy2B,WAAWn5B,EAAK0C,MAAMrI,KAAKqV,QAAQwtB,EAAoB,QAGpEC,aAAe,WAAM,IACZC,EAA+Bp9B,EAAKq9B,YAApCD,4BACPp9B,EAAK0C,MAAMy2B,WAAWn5B,EAAK0C,MAAMrI,KAAKqV,QAAQ0tB,OAShDE,iBAAmB,WACZt9B,EAAKu9B,uBAGVv9B,EAAK0C,MAAMy2B,YAAYn5B,EAAK0C,MAAMo2B,cAAgB94B,EAAK0C,MAAMrI,MAAMgW,sBAGrEmtB,0BAA4B,WAC1Bx9B,EAAK0C,MAAMy2B,WAAWn5B,EAAK0C,MAAMo2B,aAAazoB,sBAShDotB,cAAgB,WACTz9B,EAAK09B,oBAGV19B,EAAK0C,MAAMy2B,WAAWn5B,EAAK0C,MAAMrI,KAAKqV,QAAQ,iGA5FX,IAAViuB,EAAUl6B,EAAVk6B,QACzB,GAAIA,EAAQC,MAAO,KAAAC,EACSF,EAAQC,MAA3BE,EADUD,EACVC,MAAOC,EADGF,EACHE,SACVD,IAAUE,KAAKC,MAAQF,EACzBxnC,KAAKumC,kBACIgB,IAAUE,KAAKE,KACxB3nC,KAAKumC,kBACIgB,IAAUE,KAAKC,MAASF,EAExBD,IAAUE,KAAKG,OAAUJ,EAEzBD,IAAUE,KAAKG,OAASJ,EACjCxnC,KAAKknC,gBACIK,IAAUE,KAAKE,MACxB3nC,KAAKknC,gBAJLlnC,KAAK+mC,mBAFL/mC,KAAKymC,6DAyBU,IAAAoB,EACwB7nC,KAAK8mC,YAEhD,OAHmBe,EACZlB,oBADYkB,EACOC,wDAYV,IAAAC,EAC2B/nC,KAAK8mC,YAAzCH,EADSoB,EACTpB,kBAAmBmB,EADVC,EACUD,cAE1B,OAAOnB,GAAqB,GAAKA,IAAsBmB,gDAgBnC,IACbnB,EAAqB3mC,KAAK8mC,YAA1BH,kBAEP,OAAOA,GAAqB,GAA2B,IAAtBA,6CAiBjC,OAA6B,IAFD3mC,KAAK8mC,YAA1BH,mDAYA,IAAApc,EACsBvqB,KAAKmM,MAA3BrI,EADAymB,EACAzmB,KAAMy+B,EADNhY,EACMgY,aADNyF,EAEkDhoC,KAAK8mC,YAAvDH,EAFAqB,EAEArB,kBAAmBE,EAFnBmB,EAEmBnB,4BAE1B,OACEl5B,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMgnB,KAAM,UAAWC,MAAK,CAC1B,CAAC9mB,IAAK,UAAWG,KAAM,gBAAiByX,QAAS5lB,KAAKumC,gBAAiBxR,UAAW/0B,KAAKwmC,uBAD7D7mC,OAAAM,OAAAiJ,EAAA,EAAAjJ,CAEtB0mC,GAAqB,EAAI,CAC3B,CAAC34B,IAAK,WAAYG,KAAM,WAAYyX,QAAS5lB,KAAKymC,aAAc1R,UAAW/0B,KAAK0mC,mBAChF,CAAC14B,IAAK,YAAaP,QAASk5B,GAAqB,EAArB,GAAAhnC,QAA6B4iC,GAAgBz+B,GAAM0V,UAAnD,KAAA7Z,OAAgEmE,EAAK0V,WAAc+oB,EAAa/oB,UAAWub,SAAUjxB,EAAK6F,UACtJ,CAACqE,IAAK,OAAQG,KAAM,UAAWyX,QAAS5lB,KAAK+mC,iBAAkBhS,UAAW/0B,KAAKgnC,wBAC7E,CACF,CAACh5B,IAAK,eAAgBP,QAAO,aAAA9N,OAAeknC,EAAf,KAAAlnC,OAA8CmE,EAAK0V,WAAaoM,QAAS5lB,KAAK4mC,gBAPnF,CAS1B,CAAC54B,IAAK,QAASG,KAAM,eAAgByX,QAAS5lB,KAAKknC,cAAenS,UAAW/0B,KAAKmnC,qBATxDlnC,OAAAiJ,EAAA,EAAAjJ,CAUtB0mC,GAAqB,EAAI,GAAK,CAChC,CAAC34B,IAAK,WAAYP,QAAO,aAAA9N,OAAe4iC,EAAa/oB,UAA5B,KAAA7Z,OAAyCknC,GAA+B9R,UAAU,GAC3G,CAAC/mB,IAAK,OAAQG,KAAM,UAAWyX,QAAS5lB,KAAKinC,0BAA2BlS,SAAUwN,EAAa/oB,WAAa,4CAxFlH,IALgB,IAAA2Z,EACanzB,KAAKmM,MAA3BrI,EADSqvB,EACTrvB,KAAMy+B,EADGpP,EACHoP,aACPoE,EAAoB7iC,EAAKqV,QAAQU,QAAQ0oB,GAAgBz+B,GAC3D+iC,EAA8BF,EAC9BsB,EAAW1F,GACyB,IAAjCsE,GAAsCoB,GAC3CA,EAAWA,EAASnuB,kBACpB+sB,EAA8B/iC,EAAKqV,QAAQU,QAAQouB,GAIrD,MAAO,CAACtB,oBAAmBmB,cAFLhkC,EAAKqV,QAAQ1a,OAAS,EAEFooC,sCAnCjB73B,aAAvBs3B,GACGpqB,KAAO,CACZ,OAAQ,QAAS,aAAc,cAAe,OAAQ,OAgI1DoqB,GAAiBc,aAAQd,GAAepqB,KAAvBkrB,CAA6Bd,IAE/BhE,2OCzmBAzM,iNAzHbjY,+VACE2kB,aAAc,KACd9gB,OAAO,GACJ1hB,EAAKuH,YAAY4gC,oCA4BtBC,wBAA0B,WACxBpoC,EAAKs0B,SAAS,CAAC5S,MAAO,UAGxBrL,SAAW,SAAAusB,GACT5iC,EAAKs0B,SAAS,CAACvwB,KAAM6+B,OAGvByF,MAAQ,WACN,IAAMh8B,EAAM/L,OAAOiB,SAAS+mC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAMtkC,EAAO/D,EAAK6d,MAAM9Z,KACxBwkC,UAAUF,MAAM,CACdxK,MAAK,6BAAAj+B,OAA+BmE,EAAK0V,UAApC,UACLxc,KAAI,uCAAA2C,OAAyCmE,EAAK0V,UAA9C,UACJpN,QACCm8B,MAAM,WACP9gC,EAAsB2E,GACtBo8B,MAAM,mCAGR/gC,EAAsB2E,GACtBo8B,MAAM,+BAIV3F,qBAAuB,SAAAN,GACrBxiC,EAAKs0B,SAAS,CAACkO,oBAGjBkG,gBAAkB,WAChB1oC,EAAK2oC,SAASr5B,EAAK0M,YAGrB4sB,YAAc,WACZ5oC,EAAK2oC,SAASr5B,EAAK8U,QAGrBukB,SAAW,SAAAviB,GACTpmB,EAAKs0B,SAAS,CACZkO,aAAc,KACdz+B,KAAMqiB,EAASzV,SACf+Q,OAAO,6EAIF,IAAAiN,EAC6B1uB,KAAK4d,MAAlC9Z,EADA4qB,EACA5qB,KAAM2d,EADNiN,EACMjN,MAAO8gB,EADb7T,EACa6T,aACbtgC,EAAQjC,KAAKmM,MAAblK,KAEP,OACE0L,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,KAAMnnB,EACNoT,KAAM,OACN0F,QAASv6B,KAAKmoC,wBACdvN,OAAQ,iCACRntB,QAAO,GAAA9N,OAAK8hB,EAAL,+CACP8Z,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAEjD7tB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMy3B,UAAQ,EAACzQ,KAAM,UAAWC,MAAO,CACrC,CAAC9mB,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBmrB,MAAO,QAASiQ,QAAQ,EAAM56B,GAAI,IACzFo6B,KAAI,aAAA1oC,QAAgB4iC,GAAgBz+B,GAAMoP,wBAC1C0qB,MAAO0K,UAAUF,MAAQ,iCAAmC,6BAC9D,CAACp6B,IAAK,oBAAqBG,KAAM,WAAYV,QAAS,qBAAsBmrB,MAAO,QAASiQ,QAAQ,EAAM56B,GAAI,IAC5Go6B,KAAI,+BAAA1oC,QAAkC4iC,GAAgBz+B,GAAMoP,wBAC5D0qB,MAAO0K,UAAUF,MAAQ,iCAAmC,4BAA6BnI,OAAQ,eAIzGtyB,EAAAC,EAAAzQ,cAAC2rC,GAAD,CACE7mC,KAAMA,EACN6B,KAAMA,EACNsS,SAAUpW,KAAKoW,SACfysB,qBAAsB7iC,KAAK6iC,sBAE3Bl1B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ/U,QAAS5lB,KAAKyoC,gBAAiBh7B,QAAS,oBAAqBsnB,SAAUjxB,EAAKwD,cAAgB+H,EAAK0M,UACzGpO,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ/U,QAAS5lB,KAAK2oC,YAAal7B,QAAS,gBAAiBsnB,SAAUjxB,EAAKwD,cAAgB+H,EAAK8U,mEAvGvG,IACM7D,EADS,IAAIyoB,gBAAgB1oC,OAAOiB,SAAS0nC,QAC3B9P,IAAI,YAC5B,GAAI5Y,EAAU,CACZ,IAAIxc,EAAM2d,EACV,IAKIA,GAJF3d,EAAOuL,EAAK0M,QAAQktB,2BAA2B3oB,IAIrC,KAFA,6BAIV,MAAO5Z,GACP5C,EAAO,KACP2d,EAAQ,sCAEV,OAAK3d,EAGE,CAACA,OAAM2d,OAAO,GAFZ,CAAC3d,KAAMuL,EAAK0M,QAAQrL,SAAU+Q,SAIvC,MAAO,CAAC3d,KAAMuL,EAAK0M,QAAQrL,SAAU+Q,OAAO,UA5B5BzS,ykBCDhBk6B,8MACJC,mBAAqB,CACnB,CAAC7rC,MAAO,GAAI49B,MAAO,WACnB,CAAC59B,MAAO,SAAU49B,MAAO,UACzB,CAAC59B,MAAO,SAAU49B,MAAO,UACzB,CAAC59B,MAAO,QAAS49B,MAAO,SACxB,CAAC59B,MAAO,YAAa49B,MAAO,gBAE9BkO,kBAAoB,CAClB,CAAC9rC,MAAO,WAAY49B,MAAO,YAC3B,CAAC59B,MAAO,YAAa49B,MAAO,gBAE9BmO,mBAAqB,CACnB,CAAC/rC,MAAO,OAAQ49B,MAAO,QACvB,CAAC59B,MAAO,OAAQ49B,MAAO,QACvB,CAAC59B,MAAO,SAAU49B,MAAO,UACzB,CAAC59B,MAAO,cAAe49B,MAAO,QAC9B,CAAC59B,MAAO,MAAO49B,MAAO,OACtB,CAAC59B,MAAO,SAAU49B,MAAO,UACzB,CAAC59B,MAAO,MAAO49B,MAAO,OACtB,CAAC59B,MAAO,MAAO49B,MAAO,OACtB,CAAC59B,MAAO,OAAQ49B,MAAO,QACvB,CAAC59B,MAAO,sBAAuB49B,MAAO,wBACtC,CAAC59B,MAAO,qBAAsB49B,MAAO,uBACrC,CAAC59B,MAAO,gBAAiB49B,MAAO,kBAChC,CAAC59B,MAAO,mBAAoB49B,MAAO,qBACnC,CAAC59B,MAAO,gBAAiB49B,MAAO,kBAChC,CAAC59B,MAAO,sBAAuB49B,MAAO,wBACtC,CAAC59B,MAAO,oBAAqB49B,MAAO,sBACpC,CAAC59B,MAAO,kBAAmB49B,MAAO,uBAEpCoO,oBAAsB,CACpB,CAAChsC,MAAO,GAAI49B,MAAO,QACnB,CAAC59B,MAAO,UAAW49B,MAAO,WAC1B,CAAC59B,MAAO,SAAU49B,MAAO,UACzB,CAAC59B,MAAO,cAAe49B,MAAO,kBAGhCqO,eAAiB,SAAAC,GAAa,IACVxrC,EAAU+B,EAAKoM,MAA1B9N,SAAWL,MAClB,OACE2P,EAAAC,EAAAzQ,cAACssC,GAAD,CAAgB9kB,QAAM,EAACtmB,SAAU,CAACL,MAAM0rC,GAAA,GAAK1rC,EAAN,CAAakJ,YAAY,GAAUsiC,SAI9EG,qBAAuB,SAACjjC,EAADqG,GAAkB,IAAb8zB,EAAa9zB,EAAb8zB,QAC1B9gC,EAAKoM,MAAMy5B,eAAe,CAAC9+B,gBAAiB+5B,OAG9C+I,yBAA2B,SAACljC,EAAD2O,GAAkB,IAAbwrB,EAAaxrB,EAAbwrB,QAC9B9gC,EAAKoM,MAAMy5B,eAAe,CAAC7+B,mBAAoB85B,OAGjDgJ,0BAA4B,SAACnjC,EAADuG,GAAkB,IAAb4zB,EAAa5zB,EAAb4zB,QAC/B9gC,EAAKoM,MAAMy5B,eAAe,CAAC5+B,oBAAqB65B,OAGlDiJ,2BAA6B,SAACpjC,EAADwG,GAAkB,IAAb2zB,EAAa3zB,EAAb2zB,QAChC9gC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACmB,gBAAiB0hC,QAGtDkJ,0BAA4B,SAACrjC,EAAD0Q,GAAkB,IAAbypB,EAAazpB,EAAbypB,QAC/B9gC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACiJ,eAAgB45B,QAGrDmJ,iBAAmB,SAACtjC,EAAD4Q,GAAkB,IAAbupB,EAAavpB,EAAbupB,QACtB9gC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACkJ,WAAY25B,QAGjDoJ,aAAe,SAACvjC,EAADmR,GAAkB,IAAbgpB,EAAahpB,EAAbgpB,QAClB9gC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACmJ,OAAQ05B,QAG7CqJ,mBAAqB,SAACxjC,EAADqR,GAAgB,IAAXza,EAAWya,EAAXza,MACxByC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACoJ,QAAS9J,QAG9C6sC,kBAAoB,SAACzjC,EAADsR,GAAgB,IAAX1a,EAAW0a,EAAX1a,MACvByC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACG,OAAQb,QAG7C8sC,kBAAoB,SAAC1jC,EAADwR,GAAgB,IAAX5a,EAAW4a,EAAX5a,MACvByC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACE,OAAQZ,QAG7C+sC,iBAAmB,SAAC3jC,EAADw7B,GAAgB,IAAX5kC,EAAW4kC,EAAX5kC,MACtByC,EAAKoM,MAAMy5B,eAAe,CAAC5nC,MAAO,CAACC,MAAOX,8EAGnC,IAAA+J,EAAArH,KAAAsM,EACmItM,KAAKmM,MADxIm+B,EAAAh+B,EACAjO,SAAWyI,EADXwjC,EACWxjC,gBAAiBC,EAD5BujC,EAC4BvjC,mBAAoBC,EADhDsjC,EACgDtjC,oBAAqBhJ,EADrEssC,EACqEtsC,MAAQ0J,EAD7E4E,EAC6E5E,uBAAwBC,EADrG2E,EACqG3E,2BACrGxI,EAA6GnB,EAA7GmB,gBAFAorC,EAE6GvsC,EAA5FC,aAFjB,IAAAssC,EAEyB,WAFzBA,EAAAC,EAE6GxsC,EAAxEE,cAFrC,IAAAssC,EAE8C,OAF9CA,EAEsDrsC,EAAuDH,EAAvDG,OAAQ8I,EAA+CjJ,EAA/CiJ,eAAgBC,EAA+BlJ,EAA/BkJ,WAAYC,EAAmBnJ,EAAnBmJ,OAAQC,EAAWpJ,EAAXoJ,QAEzG,OACEuG,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,EAAMsQ,UAAU,GAAQl+B,MAAO,CACnD,CAACiB,SAAU,UAAWq0B,OAAQ,kBAC5Bl0B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAD,KACEntB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,2BACPp9B,KAAM,kBACN+iC,QAAS/5B,EACTwtB,SAAUjtB,EAAKsiC,wBAGnBh8B,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,yCACPp9B,KAAM,qBACN+iC,QAAS95B,EACTutB,SAAUjtB,EAAKuiC,4BAGnBj8B,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,uBACPp9B,KAAM,sBACN+iC,QAAS75B,EACTstB,SAAUjtB,EAAKwiC,iCAMzB,CAACr8B,SAAU,QAASq0B,OAAQ,kBAC1Bl0B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMkM,WAAS,EAACpB,QAAS,QAAS6F,cAAe,UAC/C/8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,UACrBv9B,EAAKkiC,eAAe,CAACriC,WAAYlJ,EAAMkJ,eAG5CyG,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,mCACPp9B,KAAM,wBACN+iC,QAAS1hC,EACTm1B,SAAUjtB,EAAKyiC,8BAGnBn8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCl9B,EACCiG,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGlH,EACDiG,EAAAC,EAAAzQ,cAAA,WACCkK,EAAKkiC,eAAe5hC,EAA2B3J,QAEhD,OAGR2P,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,EAAMsQ,UAAU,GAAQl+B,MAAO,CACnD,CAACiB,SAAU,SAAUq0B,OAAQ,kBAC3Bl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KACA10B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMkM,WAAS,EAACpB,QAAS,QAAS6F,cAAe,UAC/C/8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,kBACPp9B,KAAM,uBACN+iC,QAAS55B,EACTqtB,SAAUjtB,EAAK0iC,6BAGnBp8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACtiC,gBAAgB,MAG1C0G,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,YACPp9B,KAAM,mBACN+iC,QAAS35B,EACTotB,SAAUjtB,EAAK2iC,oBAGnBr8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACriC,YAAY,MAGtCyG,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACEhG,MAAO,SACPp9B,KAAM,eACN+iC,QAAS15B,EACTmtB,SAAUjtB,EAAK4iC,gBAGnBt8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACpiC,QAAQ,MAGlCwG,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,UACtBj3B,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,KAAYptB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,cAGf5G,EAAKgiC,mBAAmB1nC,IAAI,SAAAgpC,GAAM,OACjCh9B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,CAAUjsB,IAAG,gBAAArO,OAAkBgrC,EAAOrtC,QACpCqQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACE0J,OAAK,EACL1P,MAAOyP,EAAOzP,MACdp9B,KAAM,eACNR,MAAOqtC,EAAOrtC,MACdujC,QAAS3iC,IAAWysC,EAAOrtC,MAC3Bg3B,SAAUjtB,EAAK+iC,qBAGnBz8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACrrC,OAAQysC,EAAOrtC,gBAO/C,CAACkQ,SAAU,QAASq0B,OAAQ,kBAC1Bl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KACE10B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMkM,WAAS,EAACpB,QAAS,QAAS6F,cAAe,UAC/C/8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,UACtBj3B,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,KAAYptB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,aAGf5G,EAAK+hC,kBAAkBznC,IAAI,SAAAgpC,GAAM,OAChCh9B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,CAAUjsB,IAAG,eAAArO,OAAiBgrC,EAAOrtC,QACnCqQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACE0J,OAAK,EACL1P,MAAOyP,EAAOzP,MACdp9B,KAAM,cACNR,MAAOqtC,EAAOrtC,MACdujC,QAAS5iC,IAAU0sC,EAAOrtC,MAC1Bg3B,SAAUjtB,EAAKgjC,oBAGnB18B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACtrC,MAAO0sC,EAAOrtC,YAI1CqQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,UACtBj3B,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,KAAYptB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,eAGf5G,EAAK8hC,mBAAmBxnC,IAAI,SAAAgpC,GAAM,OACjCh9B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,CAAUjsB,IAAG,gBAAArO,OAAkBgrC,EAAOrtC,QACpCqQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACE0J,OAAK,EACL1P,MAAOyP,EAAOzP,MACdp9B,KAAM,eACNR,MAAOqtC,EAAOrtC,MACdujC,QAAS1iC,IAAWwsC,EAAOrtC,MAC3Bg3B,SAAUjtB,EAAK8iC,qBAGnBx8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACprC,OAAQwsC,EAAOrtC,gBAOjD,CAACkQ,SAAU,mBAAoBq0B,OAAQ,kBACrCl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KACE10B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMkM,WAAS,EAACpB,QAAS,QAAS6F,cAAe,UAC9CrjC,EAAKiiC,oBAAoB3nC,IAAI,SAAAgpC,GAAM,OAClCh9B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,CAAUjsB,IAAG,iBAAArO,OAAmBgrC,EAAOrtC,QACrCqQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa1Y,MAAO,GAClB3e,EAAAC,EAAAzQ,cAAC+jC,GAAA,EAAD,CACE0J,OAAK,EACL1P,MAAOyP,EAAOzP,MACdp9B,KAAM,gBACNR,MAAOqtC,EAAOrtC,MACdujC,QAASz5B,IAAYujC,EAAOrtC,MAC5Bg3B,SAAUjtB,EAAK6iC,sBAGnBv8B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAa5O,QAAS,QAASwO,UAAW,SACvCv9B,EAAKkiC,eAAe,CAACniC,QAASujC,EAAOrtC,kCA/RtC0R,aAwXf6mB,iNAhEbjY,MAAQ,CACN3b,KAAM,KACN5D,SAAUyB,EAAOyH,wBAcnBq+B,eAAiB,SAAAjoB,GACf7U,EAAKurB,SAAS,SAAAzW,GAAK,MAAK,CACtBvf,SAASqrC,GAAA,GACJ9rB,EAAMvf,SADH,GAEHsf,EAFG,CAGN3f,MAAM0rC,GAAA,GACD9rB,EAAMvf,SAASL,MADf,GAEA2f,EAAO3f,eAMlB6sC,KAAO,WACL/hC,EAAKqD,MAAMlI,OAAO2hC,eAAe98B,EAAK8U,MAAMvf,mFAGrC,IACAA,EAAY2B,KAAK4d,MAAjBvf,SACA4F,EAAUjE,KAAKmM,MAAflI,OAEP,OACE0J,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEC,QAAS/sB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,IAAKE,KAAM,MAAOV,QAAS,aAC/ConB,KAAM,QACN+F,OAAQ,WACRW,QAAS,CACP,CAACvtB,IAAK,SAAUP,QAAS,UACzB,CAACO,IAAK,OAAQP,QAAS,OAAQ+tB,UAAU,EAAM5V,QAAS5lB,KAAK6qC,OAE/Dp9B,QAAS,CAACq9B,WAAW,EAAMr9B,QACzBE,EAAAC,EAAAzQ,cAAC4tC,GAAD,CACE1sC,SAAUA,EACVunC,eAAgB5lC,KAAK4lC,eACrBl+B,uBAAwBzD,EAAOyD,uBAC/BC,2BAA4B1D,EAAO0D,mFA9CbwE,EAAOyR,GACrC,OAAIzR,EAAMlK,MAAQkK,EAAMlK,OAAS2b,EAAM3b,KAC9B,CACLA,KAAMkK,EAAMlK,KACZ5D,SAAU8N,EAAMlI,OAAO5F,UAIpB,UAdY2Q,cC/SjBg8B,oLACK,IAEHC,EAAeC,EAFZ5+B,EACgBtM,KAAKmM,MAArBrI,EADAwI,EACAxI,KAAMmN,EADN3E,EACM2E,OAETnN,EACEA,EAAKqnC,eAAepqC,KAAOkQ,EAAOlQ,IACpCkqC,EAAgBnnC,EAAKqnC,eACrBD,EAAuBpnC,EAAKsnC,uBACnBtnC,EAAKunC,eAAetqC,KAAOkQ,EAAOlQ,IAC3CkqC,EAAgBnnC,EAAKunC,eACrBH,EAAuBpnC,EAAKwnC,wBAE5BL,EAAgB,KAChBC,EAAuB,OAGzBD,EAAgB,KAChBC,EAAuB,MAEzB,IAAMK,EAAWznC,GAAQA,EAAKk4B,eAAiB/qB,EAAOlQ,GACtD,OACE4M,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG28B,EAAW59B,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,SAAU86B,MAAO,UAAc,KAAM,IAC7DjrB,EAAAC,EAAAzQ,cAAA,QAAM0pB,MAAO0kB,EAAW,CAAC3S,MAAO,gBAAal6B,GAC1CuS,EAAOnT,KACPmtC,IAAkBnnC,EAAKwzB,aACtB3pB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG,IADH,IACSs8B,EACLv9B,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG28B,EAAQ,IAAA5rC,OAAOsrC,EAAcO,WAAcP,EAAcQ,WACzD,IAAI99B,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,+BAAiC,IACjDotC,GAGHv9B,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGq8B,EAAcxL,MACd,IAFH,IAESwL,EAAcO,UAFvB,IAEmCP,EAAcQ,YAVrD,KAcE,MAEN99B,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,QAASvB,KAAM,OAAQqB,KAAMjlB,EAAOlQ,aA1ClCiO,aAqDzB08B,8MACJ9tB,MAAQ,CACN2kB,aAAc,QAGhBoJ,aAAe9U,aAAe,CAC5B,SAAA1qB,GAAK,OAAIA,EAAMD,MAAM0/B,OAAO7qC,IAC5B,SAAAoL,GAAK,OAAIA,EAAMzI,UAAUyF,OACxB,SAAChF,EAAQ04B,GAAT,OAAuBA,EAAU14B,OAMpC0nC,oBAAsBhV,aAAe,CACnC,SAAA1qB,GAAK,OAAIA,EAAMlK,MACf,SAAAkK,GAAK,OAAIA,EAAMxJ,WACf,kBAAM5C,EAAK+D,OACV,SAAC7B,EAAD8K,EAA0BjJ,GAAS,IAArBmzB,EAAqBlqB,EAA3B5D,KACHquB,EAAUP,EAAUnzB,EAAK+F,QAAQ,IACjC4tB,EAAUR,EAAUnzB,EAAK+F,QAAQ,IACjCguB,IAAgB51B,GAAOu1B,EAAQz2B,KAAOkB,EAAKlB,GAC3C+2B,IAAgB71B,GAAOw1B,EAAQ12B,KAAOkB,EAAKlB,GAIjD,MAAO,CACLy2B,UAASC,UACTI,gBAAeC,gBACfgU,WANiBjU,EAAgBxoB,EAAKmC,SAAWsmB,EAAgBzoB,EAAKqC,SAAW,KAMrE+sB,UALI5G,EAAgBJ,EAAUK,EAAgBN,EAAU,UAaxEZ,iBAAmBC,aAAe,CAChC,kBAAM92B,EAAK+D,OACV,SAAAA,GAAI,OAAIA,EAAOuL,EAAK0M,QAAQgb,YAAYjzB,EAAKA,MAAQ,SAMxDioC,oBAAsB,WACpBhsC,EAAKoM,MAAM6qB,eAAe,SAG5ByL,OAAS,SAAAx4B,GACPlK,EAAKoM,MAAMlI,OAAO+nC,eAAejsC,EAAK+D,KAAMmG,MAiB9CgiC,MAAQ,WACNlsC,EAAKoM,MAAM6qB,eAAe,SAG5BqM,eAAiB,SAAAhlC,GACf0B,EAAKoM,MAAMlI,OAAO2hC,eAAevnC,MAGnC6tC,UAAY,SAAAxlC,GACV,IAAM0F,EAAM/L,OAAOiB,SAAS+mC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAMtkC,EAAO/D,EAAK+D,KADCqoC,EAEQpsC,EAAKqsC,YAAzB5U,EAFY2U,EAEZ3U,QAASC,EAFG0U,EAEH1U,QAChB6Q,UAAUF,MAAM,CACdxK,MAAK,kBAAAj+B,OAAoBmE,EAAK6F,SAAW,SAAW,OAA/C,KAAAhK,OAAyD63B,EAAQ15B,KAAjE,QAAA6B,OAA4E83B,EAAQ35B,MACzFd,KAAI,GAAA2C,OAAKmE,EAAK6F,SAAU,kBAAmB,aAAvC,4BAAAhK,OAA8E63B,EAAQ15B,KAAtF,SAAA6B,OAAkG83B,EAAQ35B,MAC9GsO,QACCm8B,MAAM,WACP9gC,EAAsB2E,GACtBo8B,MAAM,mCAGR/gC,EAAsB2E,GACtBo8B,MAAM,4BAER9hC,EAAE2lC,oBAGJxN,cAAgB,WAAM,IACbJ,EAAa1+B,EAAKqsC,YAAlB3N,UACHA,GACF1+B,EAAKoM,MAAMlI,OAAO26B,kBAAkBH,EAAU19B,OAIlDurC,kBAAoB,WAClBvsC,EAAKoM,MAAMlI,OAAO26B,mBAAkB,MAGtCiE,qBAAuB,SAAAN,GACrBxiC,EAAKs0B,SAAS,CAACkO,oBAGjBgK,iBAAmB,WACjB9kC,GAAuB1H,EAAK6d,MAAM2kB,cAAgBxiC,EAAK6d,MAAM9Z,MAAMkY,kBACnEwsB,MAAM,yHA1DN,IAAM1kC,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKmM,MAAM6qB,eAAelzB,gDAK5B,IAAMA,EAAO9D,KAAK8D,KACdA,GACF9D,KAAKmM,MAAM6qB,eAAelzB,oCAoDrB,IAAAuR,EAAAhH,EAKHrO,KAAKmM,MAHP7K,EAFK+M,EAEL/M,SAAU2C,EAFLoK,EAEKpK,OAAQhC,EAFboM,EAEapM,KAAM6B,EAFnBuK,EAEmBvK,KAAMkzB,EAFzB3oB,EAEyB2oB,eAFzBmI,EAAA9wB,EAGL1L,UAAY6G,EAHP21B,EAGO31B,eAAsBytB,EAH7BkI,EAGuBh2B,KAHvBqjC,EAAAn+B,EAGyC3K,UAAuB+oC,EAHhED,EAGqD1iC,UAAmC4iC,EAHxFF,EAGgF5iC,OAC7DstB,EAJnB7oB,EAIL5J,gBAAkB0E,KAAgDguB,EAJ7D9oB,EAIqCvL,YAAcsI,SAEnDm3B,EAAgBviC,KAAK4d,MAArB2kB,aACAhL,EAAYv3B,KAAZu3B,SAEP,IAAKA,EACH,OACE5pB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,MAAM,EACN/T,KAAM,OACN0F,QAASv6B,KAAK+rC,oBACdnR,OAAQ,sBACRntB,QAAS,wGACT8tB,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAPnD,uBAXG,IAAAmR,EAyByE3sC,KAAKosC,YAA9E3N,EAzBAkO,EAyBAlO,UAAWjH,EAzBXmV,EAyBWnV,QAASC,EAzBpBkV,EAyBoBlV,QAASI,EAzB7B8U,EAyB6B9U,cAAeC,EAzB5C6U,EAyB4C7U,cAAegU,EAzB3Da,EAyB2Db,WAClE,IAAKtU,IAAYC,EACf,OAAO,KAGT,IAAMmV,EACJj/B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC2iC,GAAD,CAAqBrB,UAAWx8B,IAChC0L,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAC2kC,GAAD,CACE7/B,KAAMA,EACN+0B,eAAgBA,EAChBxzB,MAAOkpC,EAAY/sC,OAAO8sC,GAC1BxV,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,OAAK,EACL1tB,MAAI,EACJ2tB,cAAevzB,EAAOA,EAAK/C,GAAK,KAChCqb,SAAS,EACT9c,mBAAoB2E,EAAO3E,sBAI3B6K,EAAarG,EAAOozB,EAAgBpzB,EAAKwzB,cAAgB,KACzDv0B,EAAUe,GAAOqzB,EAAgBrzB,EAAK/C,KAAY,GAExD,OACE4M,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC0vC,GAAD,MACAl/B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMo4B,WAAS,EAACpR,KAAM,UAAWyQ,UAAQ,EAACxQ,MAAO,CAC/C,CAAC9mB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKyX,QAAS5lB,KAAKisC,MAAOrT,MAAO,MAAOiQ,QAAQ,GACvF,CAAC76B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAASyX,QAAS5lB,KAAKksC,UAAWj+B,GAAIC,IAChFf,GAAI7L,EAASgM,SAAUsrB,MAAO,QAASiQ,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,6BAC9D,CAACp6B,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,UAAWF,GAAIC,IAC3Df,GAAE,qBAAAxN,QAAwB4iC,GAAgBhL,GAAUrkB,wBAA0B0lB,MAAO,QAASiQ,QAAQ,EACtGjL,MAAO,uCAAwCqC,OAAQ,UACzDn8B,GAAQA,EAAK6F,SAAW,CAACqE,IAAK,oBAAqBG,KAAM,WAAYV,QAAS,qBAAsBmrB,MAAO,QAASiQ,QAAQ,EAAM56B,GAAIC,IACpIf,GAAE,+BAAAxN,QAAkC4iC,GAAgBhL,GAAUrkB,wBAC9D0qB,MAAO0K,UAAUF,MAAQ,iCAAmC,4BAA6BnI,OAAQ,UAAY,KAC9Gh+B,GAAQA,EAAK6qC,MAAS,CAAC9+B,IAAK,OAAQP,QAAS,gBAAiBU,KAAM,OAAQF,GAAIC,IAC/Ef,GAAE,2BAAAxN,QAA8B4iC,GAAgBhL,GAAUvb,iBAAxD,YAAArc,OAAmFmE,EAAOA,EAAK/C,GAAK,IAAM63B,MAAO,QAASiQ,QAAQ,EACpIjL,MAAO,8CAA+CqC,OAAQ,UAAY,KAC3Eh+B,GAAQA,EAAK6qC,MAAS,CAAC9+B,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBmrB,MAAO,QAASiQ,QAAQ,EAClHjL,MAAO,0CAA2ChY,QAAS5lB,KAAKusC,kBAAoB,MACtFxoC,OAAO,SAAAqiC,GAAI,OAAIA,OAEnBz4B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMo4B,WAAS,EAACpR,KAAM,UAAWC,MAAO,CACtC,CAAC9mB,IAAK,WAAYP,QAChBE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGipB,EAAgBlqB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,QAASzqB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAAzQ,cAAC4vC,GAAD,CAAkBjpC,KAAMA,EAAMmN,OAAQumB,KAEvCoB,MAAOf,EAAgB,aAAUn5B,GACpC,CAACsP,IAAK,WAAYP,QAChBE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGkpB,EAAgBnqB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,QAASzqB,KAAM,OAAQV,QAAS,OAAW,KAC1EE,EAAAC,EAAAzQ,cAAC4vC,GAAD,CAAkBjpC,KAAMA,EAAMmN,OAAQwmB,KAEvCmB,MAAOd,EAAgB,aAAUp5B,GACpCyL,EAAa,CAAC6D,IAAK,aAAcP,QAC/BE,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAS7/B,GAAE,eAAAxN,OAAiBwK,EAAWpJ,KACrC4M,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,YADd,IAC6BqM,EAAWrM,MAEvCmQ,GAAI,QAAU,MACjBlK,OAAO,SAAAqiC,GAAI,OAAIA,OAElBrjC,EAAQtE,OACPkP,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMo4B,WAAS,EAACpR,KAAM,UAAWC,MAAO/xB,EAAQpB,IAAI,SAAAnC,GAAM,MAAK,CAC7DwO,IAAKxO,EAAOuB,GAAI0M,QACdE,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAS7/B,GAAE,WAAAxN,OAAaH,EAAOuB,KAC7B4M,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CACE/6B,KAAM,CAACy/B,EAAG,gBAAiBC,EAAG,cAAeC,EAAG,iBAAiBj+B,EAAO6F,KAAKq4B,YAC7E9E,MAAO,CAAC2E,EAAG,QAASC,EAAG,SAAUC,EAAG,OAAOj+B,EAAO6F,KAAKq4B,cAExD,IACAj2B,EAAqBjI,UAK5B,MAENmO,EAAAC,EAAAzQ,cAAC2nC,GAAA,EAAD,CAAY72B,GAAIg3B,WAAUC,SAAU,KACjC0H,GAEHj/B,EAAAC,EAAAzQ,cAAC2rC,GAAD,CACE7mC,KAAMA,EACNw8B,UAAWA,EACX4E,eAAgBrjC,KAAKqjC,eACrBv/B,KAAMyzB,EACNwM,UAAWjgC,EACXggC,OAAKzuB,EAAA,GAAApV,OAAA0U,EAAA,EAAA1U,CAAAoV,EAAIhG,EAAKmC,SAAWgmB,EAAQ15B,MAA5BmC,OAAA0U,EAAA,EAAA1U,CAAAoV,EAAmChG,EAAKqC,SAAW+lB,EAAQ35B,MAA3DuX,GACLgZ,aAAc,CAACyd,GAAY/nC,OAAO,SAAAkN,GAAM,OAAIA,IAC5CwxB,OAAQziC,KAAKyiC,OACb5D,cAAe7+B,KAAK6+B,cACpByN,kBAAmBtsC,KAAKssC,kBACxB9iC,eAAgBA,EAChBq5B,qBAAsB7iC,KAAK6iC,sBAE3Bl1B,EAAAC,EAAAzQ,cAAC2nC,GAAA,EAAD,CAAY72B,GAAI8rB,KAAKE,IAAK8K,SAAU,KACjC6H,kCA5OT,OAAO5sC,KAAK2rC,aAAa3rC,KAAKmM,2CAuB9B,OAAOnM,KAAK6rC,oBAAoB7rC,KAAKmM,wCAQrC,OAAOnM,KAAK42B,iBAAiB52B,KAAKmM,cA1CP6C,aA4Q/B08B,GAAmBx8B,YAAW2mB,GAAW6V,SAEnCuB,8MACJrW,iBAAmBC,aAAe,CAChC,SAAA1qB,GAAK,OAAIA,EAAMrI,OACd,SAAAA,GAAI,OAAIA,EAAOuL,EAAK0M,QAAQgb,YAAYjzB,EAAKA,MAAQ,+EAM/C,IAAAmlB,EAKHjpB,KAAKmM,MAHP6qB,EAFK/N,EAEL+N,eAAgBlzB,EAFXmlB,EAEWnlB,KAAMG,EAFjBglB,EAEiBhlB,OAAQhC,EAFzBgnB,EAEyBhnB,KAAkBkH,EAF3C8f,EAE+BtmB,UAAYwG,KAF3C+jC,EAAAjkB,EAGLvlB,UAAYF,EAHP0pC,EAGO1pC,MAAOoG,EAHdsjC,EAGctjC,OAAQE,EAHtBojC,EAGsBpjC,UAAWC,EAHjCmjC,EAGiCnjC,WAAYC,EAH7CkjC,EAG6CljC,cAC1BktB,EAJnBjO,EAILxkB,gBAAkB0E,KAAgDguB,EAJ7DlO,EAIqCnmB,YAAcsI,SAE1D,IAAKnL,OAAO0rB,OAAOxiB,GAAM1K,OACvB,OAAO,KAET,IAAM84B,EAAWv3B,KAAKu3B,SACtB,OACE5pB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAM5K,KAAKmM,MAAMD,MAAMtB,MAClC+C,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,UAAWktB,MAAO,gBAAiBpG,MAAOlrB,EAAQgvB,MAAO,SAC/D,CAAC5qB,IAAK,aAAcktB,MAAO,mBAAoBpG,MAAOhrB,EAAW8uB,MAAO,SACxE,CAAC5qB,IAAK,UAAWktB,MAAO,gBAAiBpG,MAAO/qB,GAChD,CAACiE,IAAK,aAAcktB,MAAO,mBAAoBpG,MAAO9qB,GACtD,CAACgE,IAAK,MAAOktB,MAAO,YAAapG,MAAOtxB,IACxCO,OAAO,SAAAkJ,GAAA,OAAAA,EAAE6nB,MAAiBr2B,SAAQkD,IAAI,SAAAuL,GAAA,IAAEc,EAAFd,EAAEc,IAAKktB,EAAPhuB,EAAOguB,MAAOpG,EAAd5nB,EAAc4nB,MAAO8D,EAArB1rB,EAAqB0rB,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAAC2kC,GAAD,CACE7/B,KAAMA,EACNg1B,UAAW9tB,EACX+tB,gBAAiBA,EACjBC,gBAAiBA,EACjB3zB,MAAOsxB,EACPkC,eAAgBA,EAChB13B,mBAAoB2E,EAAO3E,6BAMrCqO,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOjE,KAAI,GAAAjL,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,SACT+C,EAAAC,EAAAzQ,cAACgwC,GAAD,CAAkBrpC,KAAMA,EAAMyzB,SAAUA,EAAUP,eAAgBA,uCAvCxE,OAAOh3B,KAAK42B,iBAAiB52B,KAAKmM,cANb6C,aAgEVE,eAAW2mB,GAAWoX,6CChZtBG,GAAA,CACbC,cCqBoB,+NApBdhtC,OAAOitC,cAAmD,WAAnCjtC,OAAOitC,aAAaC,2CACvCltC,OAAOitC,aAAaE,gRAKvBvpC,EAAO3E,mBAAmB0H,qFAGzBhH,KAAKwtC,2BACX,GAAIntC,OAAOitC,cAAmD,YAAnCjtC,OAAOitC,aAAaC,WAC7C,IACEttC,OAAAwtC,GAAA,EAAAxtC,CAAIqtC,aAAJ9vB,MAAAkwB,UAAAzkC,MAAA0tB,KAAAgX,IACA,MAAOjnC,GACPhG,QAAQ+gB,MAAM,8BAA+B/a,mICD/CknC,sNACJC,mBAAqBhX,aAAe,CAClC,SAAA1qB,GAAK,OAAIA,EAAMD,MAAM0/B,OAAO7qC,IAC5B,SAAAoL,GAAK,OAAIA,EAAM1H,gBAAgB0E,OAC9B,SAACmuB,EAAcJ,GAAf,OAAmCA,EAAgBI,OAMtDwW,0BAA4B,WAC1B/tC,EAAKoM,MAAMuvB,qBAAqB,SAiBlCuQ,MAAQ,WACNlsC,EAAKoM,MAAMuvB,qBAAqB,SAGlCqS,gBAAkB,SAAArnC,GAChB,IAAM0F,EAAM/L,OAAOiB,SAAS+mC,KAC5B,GAAIC,UAAUF,MAAO,KACZj+B,EADYlK,OAAA+tC,GAAA,EAAA/tC,CAAAF,GACZoK,WACPm+B,UAAUF,MAAM,CACdxK,MAAK,kBAAAj+B,OAAoBwK,EAAWG,QAAWH,EAAWR,SAAW,OAAS,OAAU,SAAnF,gBAAAhK,OAA0GwK,EAAWrM,MAC1Hd,KAAI,GAAA2C,OAAKwK,EAAWG,QAAWH,EAAWR,SAAW,cAAgB,aAAgB,SAAjF,0BAAAhK,OAAkHwK,EAAWrM,MACjIsO,QACCm8B,MAAM,WACP9gC,EAAsB2E,GACtBo8B,MAAM,mCAGR/gC,EAAsB2E,GACtBo8B,MAAM,4BAER9hC,EAAE2lC,oBAGJ4B,oBAAsB,WAAM,IACnB9jC,EADmBlK,OAAA+tC,GAAA,EAAA/tC,CAAAF,GACnBoK,WACPpK,EAAKoM,MAAM8hC,oBAAoB9jC,MAGjC+jC,gBAAkB,WAAM,IACf/jC,EADelK,OAAA+tC,GAAA,EAAA/tC,CAAAF,GACfoK,WACPpK,EAAKoM,MAAM+hC,gBAAgB/jC,MAG7BgkC,gBAAkB,WAAM,IACfhkC,EADelK,OAAA+tC,GAAA,EAAA/tC,CAAAF,GACfoK,WACPpK,EAAKoM,MAAMgiC,gBAAgBhkC,uFAjDT,IACXA,EAAcnK,KAAdmK,WACHA,GACFnK,KAAKmM,MAAMuvB,qBAAqBvxB,gDAIf,IACZA,EAAcnK,KAAdmK,WACHA,GACFnK,KAAKmM,MAAMuvB,qBAAqBvxB,oCA0C3B,IAAAmC,EAKHtM,KAAKmM,MAHP7K,EAFKgL,EAELhL,SAAU2C,EAFLqI,EAEKrI,OAAQhC,EAFbqK,EAEarK,KAAM+0B,EAFnB1qB,EAEmB0qB,eACNC,EAHb3qB,EAGL3J,UAAYwG,KAAoC0zB,EAH3CvwB,EAGyB5I,UAAYyF,KAAkB1E,EAHvD6H,EAGuD7H,gBACpC0yB,EAJnB7qB,EAILxJ,YAAcsI,SAEH8rB,EAAmBzyB,EAAzB0E,KACAgB,EAAcnK,KAAdmK,WAEP,IAAKA,EACH,OACEwD,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,MAAM,EACN/T,KAAM,OACN0F,QAASv6B,KAAK8tC,0BACdlT,OAAQ,4BACRntB,QAAS,oHACT8tB,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAPnD,6BAcJ,IAAM4S,EAAUhvC,IAAE4D,QAAQmH,EAAWN,QAAQlI,IAAI,SAAA0sC,GAAW,OAAIpX,EAAUoX,KAAe,CACvF,SAAApsC,GAAI,OAAIkI,EAAWmkC,UAAYnkC,EAAWmkC,UAAUrsC,EAAKlB,IAAIwtC,OAAS,GACtE,SAAAtsC,GAAI,OAAIkI,EAAWmkC,UAAYnkC,EAAWmkC,UAAUrsC,EAAKlB,IAAIytC,aAAa/O,MAAQ,GAClF,MACC,CAAC,OAAQ,OAAQ,SACd7D,IAAiB35B,GAAOkI,EAAWN,QAAQ5D,SAAShE,EAAKlB,IACzD86B,IAAiB55B,GAAOkI,EAAW2xB,gBAAkB75B,EAAKlB,GAEhE,OACE4M,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMo4B,WAAS,EAACpR,KAAM,UAAWyQ,UAAQ,EAACxQ,MAAO,CAC/C,CAAC9mB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKyX,QAAS5lB,KAAKisC,MAAOrT,MAAO,MAAOiQ,QAAQ,GACvF,CAAC76B,IAAK,QAASP,QAAS,mBAAoBU,KAAM,QAASyX,QAAS5lB,KAAK+tC,gBAAiB9/B,GAAIC,IAC5Ff,GAAI7L,EAASgM,SAAUsrB,MAAO,QAASiQ,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,wCAIpEz6B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAU1L,MAAX,CAAiB2L,OAAQ,QAASxQ,KAAM,QACtClnB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CACE9nC,MAAO6M,EAAWG,QAAWH,EAAWR,SAAW,WAAtB,GAAAhK,OAAsCwK,EAAWgyB,MAAjD,KAAAx8B,OAA0DwK,EAAWiyB,QAAY,UAC9GlB,MAAO/wB,EAAWG,QAAWH,EAAWR,SAAW,SAAW,SAAY,WAE5EgE,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CACE9nC,MAAO6M,EAAWN,QAAQpL,OAC1By8B,MAAO,UAETvtB,EAAAC,EAAAzQ,cAACioC,GAAA,EAAD,CACE9nC,MAAO6M,EAAWkwB,UAClBa,MAAO,6BAGXvtB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAM8K,QAAS,SACbl3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,QAAQj3B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAKisC,OAA/B,UAChCt+B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,KACEr3B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEa,UAAQ,EACRrtB,MAAI,EACJyX,QAAS5lB,KAAK+tC,gBACdlnB,MAAO,CAACyF,MAAO,QACfre,GAAIC,IACJf,GAAI7L,EAASgM,SACbswB,MAAO0K,UAAUF,MAAQ,iCAAmC,mCAE5Dz6B,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,UATd,wBAcJqM,EAAWG,QAyCT,KAxCFqD,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAM8K,QAAS,SACbl3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,QACtBj3B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACE5F,SAAU5qB,EAAWG,QACrBuc,MAAO,CAACyF,MAAO,QACfsM,MAAOgD,EAAiB,SAAW,QACnChW,QAAS5lB,KAAKiuC,qBAEb9jC,EAAWG,QAAU,KAAOqD,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM89B,EAAiB,YAAc,SACvEA,EAAiB,gBAChBzxB,EAAWG,QACTH,EAAWR,SAAW,sBAAwB,qBAC5C,wBAIVgE,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,KACEr3B,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACE5F,UAAW8G,GAAkBuS,EAAQ3vC,OAAS,GAAK0L,EAAWG,QAC9DkxB,UAAQ,EACRrtB,MAAI,EACJyX,QAAS5lB,KAAKkuC,gBACdrnB,MAAO,CAACyF,MAAO,QACfsM,MAAOwV,EAAQ3vC,QAAU,GAAKo9B,EAAiB,QAAsB,UAEpE1xB,EAAWR,SAAY,KACtBgE,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAMswC,EAAQ3vC,QAAU,EAAKo9B,EAAiB,OAAS,YAAe,SAE7E1xB,EAAWG,QACVH,EAAWR,SAAW,WAAa,UAEnCykC,EAAQ3vC,QAAU,EAChBo9B,EAAiB,mBAAqB,kCACpC,kCAOhBluB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACG1wB,EAAWG,QACVqD,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,EAAMsQ,UAAU,GAAQl+B,MAAO,CACnD,CAACiB,SAAU,WAAYq0B,OAAQ,kBAC7Bl0B,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCjhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAM/V,OAAP,KACE/qB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,KACG9vB,EAAWR,SAAWgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,UAAyC,KAChElhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,aACAlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,aACAlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,mBACAlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,uBACC1kC,EAAWG,UAAYH,EAAWR,SAAWgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,aAA4C,KACzF1kC,EAAWR,SAAWgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,yBAAwD,OAGnFlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMK,KAAP,KACGV,EAAQzsC,IAAI,SAAAsP,GACX,IAAM89B,EAAQ5kC,EAAWmkC,UAAUr9B,EAAOlQ,IAC1C,OACE4M,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,CAAWjsB,IAAKiD,EAAOlQ,IACpBoJ,EAAWR,SACVgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAM3rC,MAAQ,EACzBuK,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CACE/6B,KAAM,CAACy/B,EAAG,SAAUC,EAAG,cAAeC,EAAG,eAAesR,EAAM3rC,MAC9Dw1B,MAAO,CAAC2E,EAAG,SAAUC,EAAG,OAAQC,EAAG,SAASsR,EAAM3rC,QAElD,MACF,KACJuK,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAM3rC,MACnBuK,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KACE9f,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,OAAQvB,KAAM,OAAQqB,KAAMjlB,EAAOlQ,KACvDkQ,EAAOnT,MAEV6P,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAMR,SAAWQ,EAAMC,YAAcD,EAAMR,OAA3C,GAAA5uC,OAAuDovC,EAAMC,YAA7D,MAAArvC,OAA6EovC,EAAMR,OAAnF,MACb5gC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAMP,aAAaS,eAAeC,QAAQ,IACtD/kC,EAAWG,UAAYH,EAAWR,SACjCgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAMI,oBAAsB,yBACvCJ,EAAM1X,cACJ1pB,EAAAC,EAAAzQ,cAAC28B,GAAD,CACE73B,KAAM,KACNg1B,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjBrzB,KAAM+4B,EAAUkS,EAAM1X,eACtBL,eAAgBA,EAChBI,OAAK,EACL1tB,MAAI,EACJpK,mBAAoB2E,EAAO3E,qBAE3B,YAEJ,KACH6K,EAAWR,SACVgE,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAashB,EAAMK,gBAAkB,EAAxB,IAAAzvC,OAAgCovC,EAAMK,iBAAoBL,EAAMK,iBAC3E,YAOhB,CAAC5hC,SAAU,QAASq0B,OAAQ,kBAC1Bl0B,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCjhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAM/V,OAAP,KACE/qB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,KACEtsB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACA1hC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAA3B,SACA1hC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,eAGH1kC,EAAWmlC,SAAS3tC,IAAI,SAACw6B,EAAOoT,GAAR,OACvB5hC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,CAAUZ,IAAKuhC,GACb5hC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAM/V,OAAP,KACE/qB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,KACEtsB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,CAAkBQ,QAAS,GAAmB,YAAflT,EAAMz8B,KAAqB,cAAgB,KAA1E,SAAsFy8B,EAAMA,SAGhGxuB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMK,KAAP,KACG3S,EAAMqT,SAAS7tC,IAAI,SAAAoL,EAA4C0iC,GAAc,IAAAC,EAAAzvC,OAAA+M,EAAA,EAAA/M,CAAA8M,EAAxDlD,QAAwD,GAA9C8lC,EAA8CD,EAAA,GAAnCE,EAAmCF,EAAA,GAAvBvrC,EAAuB4I,EAAvB5I,OAC/CL,EAAO+4B,EAAU14B,GACjB0rC,EAAa/rC,GAAQA,EAAK6F,UAAY7F,EAAKk4B,eAAiB2T,EAC5DG,EAAahsC,GAAQA,EAAK6F,UAAY7F,EAAKk4B,eAAiB4T,EAClE,OACEjiC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,CAAWjsB,IAAKyhC,GACd9hC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,CAAYhf,UAAWsW,IAAW,kBAAmB,WAAY,CAACgrB,eAAgBF,EAAYG,eAAgBF,KAC3GH,EACChiC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,OAAQvB,KAAM,OAAQqB,KAAMyZ,IAChD1Y,EAAU0Y,GAAW7xC,MAEtB,0BAEN6P,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,CAAYhf,UAAWsW,IAAW,kBAAmB,WAAY,CAACgrB,eAAgBF,EAAYG,eAAgBF,KAC3GhsC,GAAQA,EAAK6F,SAAY7F,EAAKk4B,eAAiB2T,EAAY,IAAM,IAAO,KAE3EhiC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,CAAYhf,UAAWsW,IAAW,kBAAmB,WAAY,CAACgrB,eAAgBF,EAAYG,eAAgBF,KAC3GF,EACCjiC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,OAAQvB,KAAM,OAAQqB,KAAM0Z,IAChD3Y,EAAU2Y,GAAW9xC,MAEtB,0BAEN6P,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,CAAYhf,UAAWsW,IAAW,kBAAmB,WAAY,CAACgrB,eAAgBF,EAAYG,eAAgBF,KAC3GhsC,GAAQA,EAAK6F,SAAY7F,EAAKk4B,eAAiB4T,EAAY,IAAM,IAAO,KAE3EjiC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KACGkiB,GAAaC,EACZ9rC,EACE6J,EAAAC,EAAAzQ,cAAC28B,GAAD,CACE73B,KAAM,KACNg1B,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjBrzB,KAAMA,EACNkzB,eAAgBA,EAChBI,OAAK,EACL1tB,MAAI,EACJpK,mBAAoB2E,EAAO3E,qBAE3B,kBACF,mBAYxBqO,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAD,CAAOC,QAAM,EAACC,YAAU,EAACC,aAAW,GAClCjhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAM/V,OAAP,KACE/qB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,KACEtsB,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,aACAlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMI,WAAP,iBAGJlhC,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMK,KAAP,KACGV,EAAQzsC,IAAI,SAAAsP,GAAM,OACjBtD,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMxU,IAAP,CAAWjsB,IAAKiD,EAAOlQ,IACrB4M,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KACE9f,EAAAC,EAAAzQ,cAAC27B,GAAD,CAAY1C,QAAS,OAAQvB,KAAM,OAAQqB,KAAMjlB,EAAOlQ,KACvDkQ,EAAOnT,MAEV6P,EAAAC,EAAAzQ,cAACsxC,GAAA,EAAMhhB,KAAP,KAAaxc,EAAOwuB,aAO/B5D,IAAmB1xB,EAAWG,QAC7BqD,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAM8K,QAAS,SACbl3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,CAAaJ,UAAW,SAExBj3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKiL,OAAN,KACEr3B,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACE5F,KAAM,OACN6F,QACE/sB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACE5F,UAAW8G,EACXyE,UAAQ,EACRnyB,MAAI,EACJ0Y,MAAO,CAACyF,MAAO,SAEf3e,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,SACX,oBAGL88B,OAAQ,mBACRntB,QAAS,iDACT8tB,QAAS,CACP,CAACvtB,IAAK,MAAOP,QAAS,QAASmY,QAAS5lB,KAAKmuC,gBAAiB7N,UAAU,GACxE,CAACtyB,IAAK,KAAMP,QAAS,sBAAuB2sB,WAAW,SAM/D,yCA1WR,OAAOp6B,KAAK6tC,mBAAmB7tC,KAAKmM,cAPH6C,cAuYrC4+B,GAAyB1+B,YAAW2mB,GAAW+X,SAEzCqC,oLACK,IAAA5hC,EAIHrO,KAAKmM,MAFP6qB,EAFK3oB,EAEL2oB,eAAgB0E,EAFXrtB,EAEWqtB,qBAAsBuS,EAFjC5/B,EAEiC4/B,oBAAqBC,EAFtD7/B,EAEsD6/B,gBAAiBC,EAFvE9/B,EAEuE8/B,gBAAiBhkC,EAFxFkE,EAEwFlE,WAAYlI,EAFpGoM,EAEoGpM,KACvFg1B,EAHb5oB,EAGL1L,UAAYwG,KAAkB1E,EAHzB4J,EAGyB5J,gBAEhC,OAAKxE,OAAO0rB,OAAOsL,GAAWx4B,OAI5BkP,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAM5K,KAAKmM,MAAMD,MAAMtB,MAClC+C,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC8kC,GAAD,MACAt0B,EAAAC,EAAAzQ,cAAA,WAAKwQ,EAAAC,EAAAzQ,cAAA,WACLwQ,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,UAAWktB,MAAO,kCAAmCpG,MAAOrwB,EAAgBgG,gBAAiBmuB,MAAO,SAC1G,CAAC5qB,IAAK,aAAcktB,MAAO,uCAAwCpG,MAAOrwB,EAAgBkG,mBAAoBiuB,MAAO,SACrH,CAAC5qB,IAAK,UAAWktB,MAAO,sBAAuBpG,MAAOrwB,EAAgBsF,YACtE,CAACiE,IAAK,aAAcktB,MAAO,yBAA0BpG,MAAOrwB,EAAgBuF,gBAC5EjG,OAAO,SAAAsR,GAAA,OAAAA,EAAEyf,MAAiBr2B,SAAQkD,IAAI,SAAAsL,GAAA,IAAEe,EAAFf,EAAEe,IAAKktB,EAAPjuB,EAAOiuB,MAAOpG,EAAd7nB,EAAc6nB,MAAO8D,EAArB3rB,EAAqB2rB,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAACglC,GAAD,CACElgC,KAAMA,EACNg1B,UAAWA,EACXzyB,YAAaswB,EACb4G,qBAAsBA,YAMhC/tB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOjE,KAAI,GAAAjL,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,SACT+C,EAAAC,EAAAzQ,cAAC+yC,GAAD,CACE/lC,WAAYA,EACZ6sB,eAAgBA,EAChB0E,qBAAsBA,EACtBuS,oBAAqBA,EACrBC,gBAAiBA,EACjBC,gBAAiBA,MAhChB,YAPkBn/B,aA8DhBE,eAAW2mB,GAAWoa,gkBChd/BE,8MACJvyB,MAAQ,CACNtO,eAAgBvP,EAAKoM,MAAMmD,eAC3BnI,OAAQ,KACRipC,iBAAkB,KAClBC,cAAe,KACfC,kBAAmB,KACnB/kC,KAAK,KASPiZ,gBAAkB,SAAA1T,GAAQ,IAAAxE,EACIvM,EAAKoM,MAA1BokC,EADiBjkC,EACjBikC,QAASC,EADQlkC,EACRkkC,SAChB,IAAKD,IAAYC,EACf,OAAO,EAHe,IAAA9hB,EAK2B3uB,EAAK6d,MAAjDwyB,EALiB1hB,EAKjB0hB,iBAAkBE,EALD5hB,EAKC4hB,kBACzB,OANwB5hB,EAKoBnjB,MAIxCglC,IAAYC,EACPzwC,EAAK0wC,yBAAyB3/B,EAAMs/B,GAClCI,IAAaD,EACfxwC,EAAK2wC,2BAA2B5/B,EAAMw/B,GACpCC,GAAWC,EACfJ,GAAqBE,EAEfF,EACFrwC,EAAK0wC,yBAAyB3/B,EAAMs/B,KAClCE,GACFvwC,EAAK2wC,2BAA2B5/B,EAAMw/B,GAJtCvwC,EAAK0wC,yBAAyB3/B,EAAMs/B,QAFxC,MAgDTh6B,SAAW,SAAAtF,GAAQ,IAAAiwB,EACkChhC,EAAK6d,MAAjDwyB,EADUrP,EACVqP,iBAAkBE,EADRvP,EACQuP,kBACzB,IAFiBvP,EAC2Bx1B,IAC5C,CAFiB,IAAA8C,EAKWtO,EAAKoM,MAA1BokC,EALUliC,EAKVkiC,QAASC,EALCniC,EAKDmiC,SACZD,IAAYC,EACdzwC,EAAK4wC,eAAe7/B,EAAMs/B,GACjBI,IAAaD,EACtBxwC,EAAK6wC,iBAAiB9/B,EAAMw/B,GACnBC,GAAWC,IACfJ,GAAqBE,EAEfF,GACTrwC,EAAK4wC,eAAe7/B,EAAMs/B,GACP,IAAft/B,EAAKO,QACPtR,EAAKs0B,SAAS,CAACgc,cAAeD,IAC9BrwC,EAAK6wC,iBAAiB9/B,EAAMw/B,KAErBA,IACTvwC,EAAK6wC,iBAAiB9/B,EAAMw/B,GAC5BvwC,EAAKs0B,SAAS,CAACgc,cAAe,QAT9BtwC,EAAK4wC,eAAe7/B,EAAMs/B,QA6DhC3rB,eAAiB,SAAA3T,GACf,IAAK/Q,EAAKoM,MAAMokC,UAAYxwC,EAAKoM,MAAMqkC,SACrC,OAAO,EAFc,IAAAK,EAI4B9wC,EAAK6d,MAAjDwyB,EAJgBS,EAIhBT,iBAAkBE,EAJFO,EAIEP,kBACzB,GALuBO,EAIqBtlC,IAE1C,OAAO,EANc,IAAA0d,EAQKlpB,EAAKoM,MAA1BokC,EARgBtnB,EAQhBsnB,QAASC,EAROvnB,EAQPunB,SAChB,OAAID,IAAYC,EACc,OAArBJ,GAA6BA,EAAiBr/B,IAAMD,EAAKC,GAAKq/B,EAAiBv/B,IAAMC,EAAKD,EACxF2/B,IAAaD,EACO,OAAtBD,GAA8BA,EAAkBv/B,IAAMD,EAAKC,GAAKu/B,EAAkBz/B,IAAMC,EAAKD,EAC3F0/B,GAAWC,EAChBJ,EACKA,EAAiBr/B,IAAMD,EAAKC,GAAKq/B,EAAiBv/B,IAAMC,EAAKD,IAC3Dy/B,IACFA,EAAkBv/B,IAAMD,EAAKC,GAAKu/B,EAAkBz/B,IAAMC,EAAKD,QAJnE,KAWTiV,KAAO,WAAM,IAAAyE,EACiBxqB,EAAKoM,MAA1BokC,EADIhmB,EACJgmB,QAASC,EADLjmB,EACKimB,SADLM,EAEuD/wC,EAAK6d,MAAhEwyB,EAFIU,EAEJV,iBAAkBC,EAFdS,EAEcT,cAAeC,EAF7BQ,EAE6BR,kBAF7BQ,EAEgDvlC,MAIvDglC,IAAYC,EACdzwC,EAAKs0B,SAAS,CAAC+b,iBAAkB,OACxBI,IAAaD,EACtBxwC,EAAKs0B,SAAS,CAACic,kBAAmB,OACzBC,GAAWC,IAChBJ,EACFrwC,EAAKs0B,SAAS,CAAC+b,iBAAkB,OACxBE,GACTvwC,EAAKgxC,mBAAmBV,EAAeC,QAK7C1b,MAAQ,WAAM,IACLtlB,EAAkBvP,EAAKoM,MAAvBmD,eACPvP,EAAKs0B,SAAS,CACZ/kB,iBAAgBnI,OAAQ,KAAMoE,KAAK,EAAO6kC,iBAAkB,KAAMC,cAAe,KAAMC,kBAAmB,0FA1L3FviB,EAAWC,EAAWC,GACnCF,EAAUze,iBAAmBtP,KAAKmM,MAAMmD,gBAC1CtP,KAAK40B,yDA8BgB9jB,EAAMs/B,GAC7B,OAAKA,EAG0B,IAA3BA,EAAiB/+B,QAG0E,IAA3FM,KAAKC,IAAID,KAAK+P,IAAI5Q,EAAKC,EAAIq/B,EAAiBr/B,GAAIY,KAAK+P,IAAI5Q,EAAKD,EAAIu/B,EAAiBv/B,QAGlFC,EAAKO,MAAQ++B,EAAiB/+B,MAAS,KAGxCP,EAAKG,SAXAH,EAAKG,SAAW5B,EAAKmC,4DAiBLV,EAAMw/B,GAC/B,OAAKA,EAG4F,IAA7F3+B,KAAKC,IAAID,KAAK+P,IAAI5Q,EAAKC,EAAIu/B,EAAkBv/B,GAAIY,KAAK+P,IAAI5Q,EAAKD,EAAIy/B,EAAkBz/B,QAGrFC,EAAKO,MAAQ,KAGbP,EAAKG,QARAH,EAAKG,SAAW5B,EAAKmC,gDAwCjBV,EAAMs/B,GACfA,EACFpwC,KAAKq0B,SAAS,SAAAtnB,GAAA,IAAAikC,EAAE1hC,EAAFvC,EAAEuC,eAAF,MAAuB,CACnC8gC,iBAAkB,KAClB9gC,gBAAgB0hC,EAAA3hC,EAAK0M,SAAQ5E,YAAbtF,MAAAm/B,EAAA,CAAyB1hC,GAAzB3P,OAA4C,CAC1D,CAACoR,EAAGq/B,EAAiBr/B,EAAGF,EAAGu/B,EAAiBv/B,EAAGI,OAAQ,KAAME,OAAQ,MACrE,CAACJ,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQm/B,EAAiBn/B,OAAQE,OAAQi/B,EAAiBj/B,WAEnFhK,OAAQ,CACN,CAACxJ,KAAMyyC,EAAkBjjC,GAAI2D,EAAMpR,KAAM,OAAQwoB,OAAQ,UAE3D3c,IAAoB,IAAfuF,EAAKO,SAGZrR,KAAKq0B,SAAS,CAAC+b,iBAAkBt/B,+CAIlBu/B,EAAeC,GAChCtwC,KAAKq0B,SAAS,SAAAhf,GAAA,IAAA47B,EAAE3hC,EAAF+F,EAAE/F,eAAF,MAAuB,CACnC8gC,iBAAkBC,EAClBC,kBAAmB,KACnBhhC,gBAAgB2hC,EAAA5hC,EAAK0M,SAAQ5E,YAAbtF,MAAAo/B,EAAA,CAAyB3hC,GAAzB3P,OAA4C,CAC1D,CAACoR,EAAGu/B,EAAkBv/B,EAAGF,EAAGy/B,EAAkBz/B,EAAGI,OAAQ,KAAME,OAAQ,MACvE,CAACJ,EAAGs/B,EAAct/B,EAAGF,EAAGw/B,EAAcx/B,EAAGI,OAAQo/B,EAAcp/B,OAAQE,OAAQk/B,EAAcl/B,WAE/FhK,OAAQ,KACRoE,KAAK,8CAIQuF,EAAMw/B,GACjBA,EACFtwC,KAAKq0B,SAAS,SAAApnB,GAAA,IAAEqC,EAAFrC,EAAEqC,eAAF,MAAuB,CACnCghC,kBAAmB,KACnBhhC,eAAgBD,EAAK0M,QAAQ5E,YAAY7H,EAAgB,CACvDyB,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAO/B,EAAewB,EAAKD,GAAG5S,MAAM6S,EAAKC,GAAGM,MAAQ,IAE5ElK,OAAQ,CACN,CAACxJ,KAAM2yC,EAAmBnjC,GAAI2D,EAAMpR,KAAM,QAASwoB,OAAQ,aAI/DloB,KAAKq0B,SAAS,CAACic,kBAAmBx/B,qCAsD7B,IAAAqiB,EAC4EnzB,KAAKmM,MAAjFlI,EADAkvB,EACAlvB,OAAQitC,EADR/d,EACQ+d,MAAOX,EADfpd,EACeod,QAASC,EADxBrd,EACwBqd,SAA0BW,EADlDhe,EACkC7jB,eADlC8hC,EAEoEpxC,KAAK4d,MAAzEtO,EAFA8hC,EAEA9hC,eAAgBnI,EAFhBiqC,EAEgBjqC,OAAQoE,EAFxB6lC,EAEwB7lC,IAAK6kC,EAF7BgB,EAE6BhB,iBAAkBE,EAF/Cc,EAE+Cd,kBAChDe,EAAcptC,EAAO3E,mBACrBjB,EAAQizC,GAAA,GAAOD,EAAP,CAAoBrzC,MAAMszC,GAAA,GAAKD,EAAYrzC,MAAlB,CAAyBoJ,QAAS,cAEzE,OACEuG,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACG2hC,GAAWC,EACV7iC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAOrtB,EAAM,QAAU,OAAQ4C,KAAM5C,EAAM,cAAW7M,EAAW+O,QACtElC,EAAM,sCACH6kC,GAAqBE,EACpBF,EAAmB,0EACjB,2EAFsC,8BAO9CziC,EAAAC,EAAAzQ,cAAA,YAEA,KACJwQ,EAAAC,EAAAzQ,cAAC22B,GAAD7zB,OAAA8N,OAAA,CACEoY,SAAU9W,EAAK0M,QACf4I,QAAM,EACN0J,aAAc,GACd/J,UAAWisB,GAAWC,EACtBjsB,SAAUgsB,GAAWC,EACrBhsB,gBAAiBxkB,KAAKwkB,gBACtBC,eAAgBzkB,KAAKykB,eACrBrO,SAAUpW,KAAKoW,SACf0P,KAAM9lB,KAAK8lB,KACXznB,SAAUA,EACV0nB,UAAQ,EAAC8K,YAAU,EACnBvhB,eAAgBA,GACXnI,EAAMmqC,GAAA,GAAOJ,EAAP,CAAc/pC,WAAU+pC,IAEpCX,GAAWC,EACV7iC,EAAAC,EAAAzQ,cAAA,WACEwQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ/U,QAAS5lB,KAAK40B,MAAOG,SAAUzlB,IAAmB6hC,EAAwB3L,SAAO,GAAzF,UAEA,aAlPax2B,aAgQzBmhC,GAAWlhC,aAAe,CACxBshC,SAAS,EACTC,UAAU,GAGZL,GAAata,GAAWsa,QAElBoB,8MA8kCJ3zB,MAAQ,CACN4zB,UAAW,KAGbC,cAAgB,WACdpqC,EAAKgtB,SAAS,CAACmd,UAAW,OAG5BE,iBAAmB,WACjBrqC,EAAKgtB,SAAS,SAAAzW,GAAK,MAAK,CAAC4zB,UAAW5zB,EAAM4zB,UAAY,QAGxDG,aAAe,WACbtqC,EAAKgtB,SAAS,SAAAzW,GAAK,MAAK,CAAC4zB,UAAW5zB,EAAM4zB,UAAY,QAGxDI,aAAe,WACbvqC,EAAKgtB,SAAS,CAACmd,UAAWnqC,EAAKC,YAAY2W,MAAMxf,OAAS,6EAGnD,IACA+yC,EAAaxxC,KAAK4d,MAAlB4zB,UACDvzB,EAAQje,KAAKsH,YAAY2W,MACzB4zB,EAAO5zB,EAAMuzB,GAEnB,OACE7jC,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,KACEnkC,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAQtZ,QAAT,KACE7qB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAM8K,QAAS,QAAS6F,cAAe,SAAU9F,UAAW,UAC1Dj3B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMgnB,KAAM,UAAWC,MAAO,CAC5B,CAAC9mB,IAAK,QAASG,KAAM,gBAAiByX,QAAS5lB,KAAKyxC,cAAe1c,SAAwB,IAAdyc,GAC7E,CAACxjC,IAAK,WAAYG,KAAM,WAAYyX,QAAS5lB,KAAK0xC,iBAAkB3c,SAAwB,IAAdyc,GAC9E,CAACxjC,IAAK,OAAQG,KAAM,UAAWyX,QAAS5lB,KAAK2xC,aAAc5c,SAAUyc,IAAcvzB,EAAMxf,OAAS,GAClG,CAACuP,IAAK,OAAQG,KAAM,eAAgByX,QAAS5lB,KAAK4xC,aAAc7c,SAAUyc,IAAcvzB,EAAMxf,OAAS,OAG3GkP,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KAAUtsB,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAQpZ,OAAT,KAAiB8Y,EAAY,EAA7B,MAAmCK,EAAKjU,QAClDjwB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KAAUtsB,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CAASrkC,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,CAAUZ,IAAKwjC,GAAYK,EAAKz0C,SAC5DuQ,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACGuX,EAAYvzB,EAAMxf,OAAS,EAC1BkP,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ6K,SAAO,EAAC5f,QAAS5lB,KAAK2xC,aAAcxjC,KAAM,UAAWV,QAAS,oBAEtEE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQa,UAAQ,EAACvtB,GAAIC,IAASf,GAAI,SAAUgB,KAAM,OAAQV,QAAS,6BACnEE,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQa,UAAQ,EAACvtB,GAAIC,IAASf,GAAI,WAAYgB,KAAM,UAAWV,QAAS,sDA3nChEuB,aAApBuiC,GACGtzB,MAAQ,CACb,CAAC2f,MAAO,eAAgBxgC,KAAMuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAC5BjB,EAAAC,EAAAzQ,cAAA,4CACgCwQ,EAAAC,EAAAzQ,cAAA,+BADhC,wCAGAwQ,EAAAC,EAAAzQ,cAAA,sCAC0BwQ,EAAAC,EAAAzQ,cAAA,iCAD1B,sBAC6EwQ,EAAAC,EAAAzQ,cAAA,uBAAuB,QAClGwQ,EAAAC,EAAAzQ,cAAA,uBAFF,aAEkCwQ,EAAAC,EAAAzQ,cAAA,wBAFlC,UAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAA,kBACMwQ,EAAAC,EAAAzQ,cAAA,2BADN,qDACkFwQ,EAAAC,EAAAzQ,cAAA,2BADlF,uBAEoBwQ,EAAAC,EAAAzQ,cAAA,uCAFpB,8BAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,iBAG/D8+B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,eAKrE,CAAC0V,MAAO,SAAUxgC,KAAMuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACtBjB,EAAAC,EAAAzQ,cAAA,sBACUwQ,EAAAC,EAAAzQ,cAAA,+BADV,sBAC2DwQ,EAAAC,EAAAzQ,cAAA,8BAD3D,IAEEwQ,EAAAC,EAAAzQ,cAAA,4BAFF,QAEkCwQ,EAAAC,EAAAzQ,cAAA,4BAFlC,KAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAA,sBACUwQ,EAAAC,EAAAzQ,cAAA,+DADV,+BAGAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAA,+BACmBwQ,EAAAC,EAAAzQ,cAAA,wCADnB,6BACoFwQ,EAAAC,EAAAzQ,cAAA,+CADpF,cAE+BwQ,EAAAC,EAAAzQ,cAAA,4CAF/B,mBAGKwQ,EAAAC,EAAAzQ,cAAA,0BAHL,qBAGgDwQ,EAAAC,EAAAzQ,cAAA,mCAHhD,KAKAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjDo/B,SAAO,MAGX,CAAC3S,MAAO,SAAUxgC,KAAKuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACrBjB,EAAAC,EAAAzQ,cAAA,oCACwBwQ,EAAAC,EAAAzQ,cAAA,6BADxB,KACsDwQ,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,SAAd,UADtD,IAEEjrB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,QAAd,WAFF,KAEyCjrB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,UAAd,WAFzC,IAGEjrB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,OAAd,WAHF,aAGgDjrB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOC,MAAO,QAAd,2BAHhD,KAKAjrB,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAA,yBACawQ,EAAAC,EAAAzQ,cAAA,8BADb,QAC+CwQ,EAAAC,EAAAzQ,cAAA,2CAD/C,SAC+FwQ,EAAAC,EAAAzQ,cAAA,wCAD/F,aAEmCwQ,EAAAC,EAAAzQ,cAAA,+CAFnC,KAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,SAC7D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAA,qCAGAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACExB,SAAO,EACPjhC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACysB,MAAO,WAAYxgC,KAAKuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACvBjB,EAAAC,EAAAzQ,cAAA,yDAC6CwQ,EAAAC,EAAAzQ,cAAA,+CAD7C,8CAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAIpEva,EAAAC,EAAAzQ,cAAA,sBACUwQ,EAAAC,EAAAzQ,cAAA,qCADV,oCAC+EwQ,EAAAC,EAAAzQ,cAAA,qDAD/E,6FAKAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,SAC9D,CAACvqB,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAIpEva,EAAAC,EAAAzQ,cAAA,iFAGAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEvB,UAAQ,EACRlhC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACysB,MAAO,UAAWxgC,KAAKuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACtBjB,EAAAC,EAAAzQ,cAAA,iHAEQwQ,EAAAC,EAAAzQ,cAAA,wBAFR,KAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAKnDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,gBAE7D,CAACvB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAKpEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAKpEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAA,WACAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAKpEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAKpEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,QAASwoB,OAAQ,aAKpEva,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAGjD+/B,MAAO,CACL/pC,OAAQ,CACN,CAACxJ,KAAM,CAACoT,EAAG,EAAGF,EAAG,GAAI1D,GAAI,CAAC4D,EAAG,EAAGF,EAAG,GAAInR,KAAM,OAAQwoB,OAAQ,aAInEva,EAAAC,EAAAzQ,cAAA,4CAGAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACExB,SAAO,EAACC,UAAQ,EAChBlhC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACysB,MAAO,0BAA2BxgC,KAAKuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACtCjB,EAAAC,EAAAzQ,cAAA,8JAIAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,aAKrD,CAACysB,MAAO,mCAAoCxgC,KAAKuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAC/CjB,EAAAC,EAAAzQ,cAAA,wSAKAwQ,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,WAInDxD,EAAAC,EAAAzQ,cAAC40C,GAAD,CACEziC,eAAgB,CACd,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAKiD,eAC3D,CAACvB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAKiD,sBAKnE,CAACsrB,MAAO,wBAA0BxgC,KAAMuQ,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACtCjB,EAAAC,EAAAzQ,cAAA,oDACwCwQ,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAS7/B,GAAI,aAAb,yCADxC,mBAEkCQ,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAS7/B,GAAI,WAAb,gBAFlC,QA+DSokC,kPC34CTS,8MAGJp0B,+VACEq0B,oBAAqB,CAAClhC,EAAG,EAAGF,EAAG,GAC/BqhC,cAAe,CAACjhC,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cACpDkO,SAAUjR,EAAK0M,QAAQvL,2BACvB2hC,cAAe,KACfC,UAAU,GACPryC,EAAKmoC,kCACR3F,aAAc,KACdzP,iBAAkB,SA0BpBqV,wBAA0B,WACxBpoC,EAAKs0B,SAAS,CAAC5S,MAAO,UAGxB4wB,4BAA8B,SAACJ,EAAqBC,GAClDnyC,EAAKs0B,SAAS,CAAC4d,sBAAqBC,qBAGtCI,iBAAmB,SAAAhyB,GACjB,IAAIxc,EAAMquC,EACV,IACEruC,EAAOuL,EAAK0M,QAAQrI,aAAa4M,GACjC6xB,EAAgB,KAChB,MAAOzrC,GACP5C,EAAOuL,EAAK0M,QAAQrL,SACpByhC,EAAgBzrC,EAAE6rC,QAEpBxyC,EAAKs0B,SAAS,SAAAzW,GAAK,MAAK,CACtB0C,WACAxc,OACAquC,gBACArf,iBAAkBlV,EAAM0C,eAI5BlK,SAAW,SAAAusB,GACT5iC,EAAKs0B,SAAS,CAACvwB,KAAM6+B,OAGvBE,qBAAuB,SAAAN,GACrBxiC,EAAKs0B,SAAS,CAACkO,oBAGjBiQ,SAAW,WAAM,IAAA9jB,EACc3uB,EAAK6d,MAA3B9Z,EADQ4qB,EACR5qB,KACD2uC,EAFS/jB,EACF6T,cACuBz+B,EACpC/D,EAAKuyC,iBAAiBG,EAAYnjC,mBAGpCojC,WAAa,WACX3yC,EAAKuyC,iBAAiBjjC,EAAK0M,QAAQvL,+BAGrCsV,KAAO,WACL/lB,EAAKuyC,iBAAiBvyC,EAAK6d,MAAMkV,qBAGnC6f,UAAY,WACV5yC,EAAKuyC,iBAAiBvyC,EAAK6d,MAAM0C,aAGnCsyB,aAAe,WACbnrC,EAAsB4H,EAAK0M,QAAQnB,oBAAoB7a,EAAK6d,MAAM0C,WAClEkoB,MAAM,mCAGR+D,iBAAmB,WACjB9kC,GAAuB1H,EAAK6d,MAAM2kB,cAAgBxiC,EAAK6d,MAAM9Z,MAAMkY,kBACnEwsB,MAAM,wCAGRqK,YAAc,WACZ9yC,EAAKoM,MAAM0mC,YAAYxjC,EAAK0M,QAAQrI,aAAa3T,EAAK6d,MAAM0C,UAAUtE,qBAGxE82B,QAAU,WACR/yC,EAAKoM,MAAM2mC,2GAxFX,IACMxyB,EADS,IAAIyoB,gBAAgB1oC,OAAOiB,SAAS0nC,QAC3B9P,IAAI,aAAel5B,KAAKmM,MAAM4mC,wBACtD,GAAIzyB,EAAU,CACZ,IAAIxc,EAAMsuC,EACV,KACEtuC,EAAOuL,EAAK0M,QAAQnI,+BAA+B0M,MAEjD8xB,EAAW,8BAEb,MAAO1rC,GACP5C,EAAO,KACPsuC,EAAQ,qCAAAzyC,OAAwC+G,EAAE6rC,SAEpD,OAAKzuC,EAGE,CAACA,OAAMsuC,UAAU,EAAO9xB,SAAUxc,EAAKwL,gBAFrC,CAACxL,KAAMuL,EAAK0M,QAAQrL,SAAU0hC,WAAU9xB,SAAUjR,EAAK0M,QAAQvL,4BAIxE,MAAO,CAAC1M,KAAMuL,EAAK0M,QAAQrL,SAAU0hC,UAAU,EAAO9xB,SAAUjR,EAAK0M,QAAQvL,6DAyExE,IAAAlE,EAC+CtM,KAAKmM,MAApDlK,EADAqK,EACArK,KAAMgC,EADNqI,EACMrI,OAAQmjC,EADd96B,EACc86B,QAASyL,EADvBvmC,EACuBumC,YAAaC,EADpCxmC,EACoCwmC,QADpC/R,EAE+G/gC,KAAK4d,MAApHq0B,EAFAlR,EAEAkR,oBAAqB3xB,EAFrBygB,EAEqBzgB,SAAU4xB,EAF/BnR,EAE+BmR,cAAeC,EAF9CpR,EAE8CoR,cAAeC,EAF7DrR,EAE6DqR,SAAUtuC,EAFvEi9B,EAEuEj9B,KAAMy+B,EAF7ExB,EAE6EwB,aAAczP,EAF3FiO,EAE2FjO,iBAC5Fz0B,EAAW4F,EAAO3E,mBAElB0c,EAAmB3M,EAAK0M,QAAQnB,oBAAoB0F,GAC1D,OACE3S,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,OAAQwJ,EACRvd,KAAM,OACN0F,QAASv6B,KAAKmoC,wBACdvN,OAAQ,iCACRntB,QAAO,GAAA9N,OAAKyyC,EAAL,+CACP7W,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAEjD7tB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMy3B,UAAQ,EAACzQ,KAAM,UAAWC,MAAO,CACrC,CAAC9mB,IAAK,QAASG,KAAM,QAASV,QAAS,iBAAkBmrB,MAAO,QAASiQ,QAAQ,EAAM56B,GAAI,IACzFo6B,KAAI,aAAA1oC,OAAeqc,GACnB4hB,MAAO0K,UAAUF,MAAQ,iCAAmC,iCAC9D,CAACp6B,IAAK,OAAQG,KAAM,YAAaV,QAAS,gBAAiBmrB,MAAO,QAASiQ,QAAQ,EACjFjL,MAAO,qCAAsChY,QAAS5lB,KAAK4yC,cAC7D,CAAC5kC,IAAK,YAAaG,KAAM,YAAaV,QAAS,qBAAsBmrB,MAAO,QAASiQ,QAAQ,EAC3FjL,MAAO,0CAA2ChY,QAAS5lB,KAAKusC,uBAIxE5+B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CAASrwB,QAAS0wB,EAAe1kC,QAAS0kC,GAAiB,0BAC3DxkC,EAAAC,EAAAzQ,cAAC2rC,GAAD,CACE7mC,KAAMA,EACN5D,SAAUA,EACVyF,KAAMA,EACNsS,SAAUpW,KAAKoW,SACfysB,qBAAsB7iC,KAAK6iC,sBAE3Bl1B,EAAAC,EAAAzQ,cAAA,WACEwQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,aACT+3B,SAAO,EACP5f,QAAS5lB,KAAK2yC,aAGlBhlC,EAAAC,EAAAzQ,cAAC61C,GAAD,CACEC,aAAchB,EACdiB,qBAAsBlzC,KAAKqyC,4BAC3BjL,QAASA,IAEXz5B,EAAAC,EAAAzQ,cAAA,WACEwQ,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,iBACT+3B,SAAO,EACPzQ,UAAWwN,GAAgBz+B,GAAMkY,mBAAqBA,EACtD4J,QAAS5lB,KAAKwyC,WAEhB7kC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,QACT6yB,UAAQ,EACRvL,SAAU/Y,IAAqBhc,KAAKsH,YAAYyrC,wBAChDntB,QAAS5lB,KAAK0yC,aAEhB/kC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,OACT2sB,WAAS,EACTrF,UAAWjC,EACXlN,QAAS5lB,KAAK8lB,QAGlBnY,EAAAC,EAAAzQ,cAACg2C,GAAD,CACE7yB,SAAUA,EACV3C,OAAQu0B,EACRI,iBAAkBtyC,KAAKsyC,mBAExBO,GAAeC,EACdnlC,EAAAC,EAAAzQ,cAAA,WACG01C,EACCllC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,eACT+3B,SAAO,EACP5f,QAAS5lB,KAAK6yC,YACd9d,WAAYod,IAEZ,KACHW,EACCnlC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,UACT6yB,UAAQ,EACR1a,QAAS5lB,KAAK8yC,UAEd,MAEJ,eAvMW9jC,aAArBgjC,GACGe,wBAA0B1jC,EAAK0M,QAAQnB,oBAAoBvL,EAAK0M,QAAQvL,gCAuN3E4iC,8MA+BJx1B,MAAQ,CACNq1B,aAAc,CAACliC,EAAG,EAAGF,EAAG,MA6B1B2T,gBAAkB,SAAA1T,GAChB,OAAQzJ,EAAKod,eAAe3T,KAAqB,IAAXA,EAAKD,GAAWC,EAAKC,GAAK,MAGlE0T,eAAiB,SAAA3T,GAAQ,IAChBmiC,EADgBhzC,OAAA+tC,GAAA,EAAA/tC,CAAAoH,GAChB4rC,aACP,OAAOniC,EAAKC,IAAMkiC,EAAaliC,GAAKD,EAAKD,IAAMoiC,EAAapiC,KAG9DuF,SAAW,SAAAtF,GACT,IAAMmiC,EAAe,CAACliC,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,GAIzC,QAHgCnS,IAA5B2I,EAAK8E,MAAM8mC,cACb5rC,EAAKgtB,SAAS,CAAC4e,aAAcA,IAE3B5rC,EAAK8E,MAAM+mC,qBAAsB,CACnC,IAAMv1B,EAAS7M,EAAKG,OAAS,CAACA,OAAQH,EAAKG,QAAU,CAACI,MAAOP,EAAKO,OAClEhK,EAAK8E,MAAM+mC,qBAAqBD,EAAct1B,iGA1Cb,IAAVypB,EAAUr6B,EAAVq6B,QACzB,GAAIA,EAAQC,MAAO,KACVr5B,EAAOo5B,EAAQC,MAAfr5B,IACD2H,EAAc3V,KAAKsH,YAAY+rC,YAAYrlC,GACjD,GAAI2H,EAAa,KACR5E,EAAQ4E,EAAR5E,EAAGF,EAAK8E,EAAL9E,EACJmC,EAAOhT,KAAKsH,YAAYgI,eAAeuB,GAAG5S,MAAM8S,GACtD/Q,KAAKoW,SAASpD,gDAKD+a,EAAWC,EAAWC,QACRvvB,IAA3BqvB,EAAUklB,mBAA0Dv0C,IAA5BsB,KAAKmM,MAAM8mC,cACrDjzC,KAAKq0B,SAAS,CAAC4e,aAAcllB,EAAUklB,gDAgClC,IAED50C,EADW2B,KAAKmM,MAAflI,OACiB3E,mBAExB,OACEqO,EAAAC,EAAAzQ,cAAC22B,GAAD,CACE3N,SAAU9W,EAAK0M,QACf4I,QAAM,EACN0J,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgBtP,KAAKsH,YAAYgI,eACjCgV,WAAS,EAACC,UAAU,EACpBC,gBAAiBxkB,KAAKwkB,gBACtBC,eAAgBzkB,KAAKykB,eACrBrO,SAAUpW,KAAKoW,SACf/X,SAAUA,EACV0nB,UAAU,EACV8K,YAAY,yCA3ChB,YAAgCnyB,IAA5BsB,KAAKmM,MAAM8mC,aACNjzC,KAAK4d,MAAMq1B,aAEXjzC,KAAKmM,MAAM8mC,oBAzDUjkC,aAA5BokC,GACG9jC,eAAiB,CACtB,CAACuB,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,QAE/C,CAACN,EAAG,EAAG5S,MAAO,CACZ,CAAC8S,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKmC,SAAUL,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ5B,EAAKqC,SAAUP,OAAQ9B,EAAK+C,cAC3D,CAACrB,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,MAC7C,CAACJ,EAAG,EAAGF,EAAG,EAAGQ,MAAO,EAAGJ,OAAQ,KAAME,OAAQ,SAd7CiiC,GAiBGl3B,KAAO,CACZ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAlBjCk3B,GAoBGC,YAAc,CACnBC,EAAK,CAACviC,EAAG,EAAGF,EAAG,GACf0iC,EAAG,CAACxiC,EAAG,EAAGF,EAAG,GACb0sB,EAAG,CAACxsB,EAAG,EAAGF,EAAG,GACb2sB,EAAG,CAACzsB,EAAG,EAAGF,EAAG,GACb4sB,EAAG,CAAC1sB,EAAG,EAAGF,EAAG,GACb2iC,EAAG,CAACziC,EAAG,EAAGF,EAAG,GACbjD,EAAG,CAACmD,EAAG,EAAGF,EAAG,GACb4iC,EAAG,CAAC1iC,EAAG,EAAGF,EAAG,IAmFjBuiC,GAAsBvd,GAAWud,QAE3BM,8MACJ91B,MAAQ,CACN0C,SAAUjR,EAAK0M,QAAQvL,8BAiBzBgU,gBAAkB,WAChB,OAAO,KAGTC,eAAiB,WACf,OAAO,KAGTrO,SAAW,SAAAtF,GAAQ,IACV6M,EAAU7U,EAAKqD,MAAfwR,OACH,UAAWA,EACT7M,EAAKO,QAAUsM,EAAOtM,OACxBvI,EAAK6qC,eAAe,CAAC5iC,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGQ,MAAOsM,EAAOtM,QAElD,WAAYsM,IACjB7M,EAAKG,SAAW0M,EAAO1M,OACzBnI,EAAK6qC,eAAe,CAAC5iC,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQ0M,EAAO1M,OAAQE,OAAQ9B,EAAK+C,eAE/EtJ,EAAK6qC,eAAe,CAAC5iC,EAAGD,EAAKC,EAAGF,EAAGC,EAAKD,EAAGI,OAAQ,KAAME,OAAQ,WAKvEwiC,eAAiB,SAAAC,GACf,IAAMC,EAAcxkC,EAAK0M,QAAQ5E,YAAYrO,EAAKwX,SAAUszB,QAEhCl1C,IAAxBoK,EAAKqD,MAAMmU,UACbxX,EAAKurB,SAAS,CAAC/T,SAAUuzB,IAEvB/qC,EAAKqD,MAAMmmC,kBACbxpC,EAAKqD,MAAMmmC,iBAAiBuB,sFA5Cb9lB,EAAWC,EAAWC,QACZvvB,IAAvBqvB,EAAUzN,eAAkD5hB,IAAxBsB,KAAKmM,MAAMmU,UACjDtgB,KAAKq0B,SAAS,CAAC/T,SAAUyN,EAAUzN,4CA8C9B,IACAA,EAAYtgB,KAAZsgB,SAEDjiB,EADW2B,KAAKmM,MAAflI,OACiB3E,mBAExB,OACEqO,EAAAC,EAAAzQ,cAAC22B,GAAD,CACE3N,SAAU9W,EAAK0M,QACf4I,QAAM,EACN0J,aAAc,CAAChf,EAAKmC,SAAUnC,EAAKqC,UACnCpC,eAAgBgR,EAChBgE,WAAS,EAACC,UAAU,EACpBC,gBAAiBxkB,KAAKwkB,gBACtBC,eAAgBzkB,KAAKykB,eACrBrO,SAAUpW,KAAKoW,SACf/X,SAAUA,EACV0nB,UAAU,EACV8K,YAAY,qCA1DhB,YAA4BnyB,IAAxBsB,KAAKmM,MAAMmU,SACNtgB,KAAK4d,MAAM0C,SAEXtgB,KAAKmM,MAAMmU,gBAfQtR,aAoFhC0kC,GAAoB7d,GAAW6d,IAEhBtM,oBAAQgM,GAAoBzd,aAAazZ,KAAzCkrB,CAA+CvR,GAAWmc,gkBC5ZnE8B,8MACJl2B,MAAQ,CACNm2B,SAAS,EACTv0C,OAAQ,KACRw0C,YAAa,KACbC,KAAM,KACNnwC,KAAM,QA0DRowC,eAAiB,SAAA10C,GACfO,EAAKs0B,SAAS,CACZ0f,SAAS,EACTv0C,SACAw0C,YAAax0C,EAAOm9B,iBACpBsX,KAAMl0C,EAAKo0C,QAAQ30C,EAAOm9B,kBAC1B74B,KAAMtE,EAAOm9B,iBAAiB74B,UAIlCswC,gBAAkB,WAChBr0C,EAAKs0B,SAAS,CACZ0f,SAAS,OAIb39B,SAAW,SAAAusB,GACT5iC,EAAKs0B,SAAS,CAACvwB,KAAM6+B,OAuFvBF,OAAS,SAAAx4B,GAAS,IAEV04B,EADgB5iC,EAAK6d,MAApBo2B,YACqBlwC,KAAK6M,UAAU1G,GAErCoqC,EAAmBt0C,EAAKu0C,oBAAoB3R,GAClD,GAAI0R,EACFt0C,EAAKs0B,SAAS,CACZ2f,YAAaK,EACbvwC,KAAMuwC,EAAiBvwC,WAH3B,CAQA,IAAMywC,EAAcx0C,EAAKy0C,iBAbTC,EAcoB10C,EAAK20C,gBAAgBH,GAApDI,EAdWF,EAcXE,UAAWC,EAdAH,EAcAG,iBACZC,EAAU90C,EAAK+0C,cAAcF,EAAkBjS,GACnD5iC,EAAKs0B,SAAS,CACZ70B,OAAQm1C,EACRX,YAAaa,EACbZ,KAAMl0C,EAAKo0C,QAAQQ,EAAUhY,kBAC7B74B,KAAM+wC,EAAQ/wC,WAuBlBixC,gBAAkB,SAAAC,GAChB,IAAMC,EAAeD,EAASA,EAASv2C,OAAS,GAChD,OAAIw2C,EAAaC,gBACXD,EAAaC,gBAAgBz2C,OACxBw2C,EAAaC,gBAAgBvzC,IAAI,SAAAwzC,GAAQ,OAAIH,EAASr1C,OAAOw1C,KAE7D,CAACH,GAGNC,EAAaG,eACR,CAACJ,EAASr1C,OAAOs1C,EAAaG,iBAE9B,CAACJ,MAKdK,kBAAoB,WAAM,IACjBrB,EAAej0C,EAAK6d,MAApBo2B,YACDO,EAAcx0C,EAAKy0C,iBAAiBvrC,MAAM,GAAI,GAF5BqsC,EAGYv1C,EAAK20C,gBAAgBH,GAApDI,EAHmBW,EAGnBX,UAAWC,EAHQU,EAGRV,iBACZC,EAAU90C,EAAKw1C,WAAWX,EAAkBZ,GAChDj0C,EAAKs0B,SAAS,CACZ70B,OAAQm1C,EACRX,YAAaa,EACbZ,KAAMl0C,EAAKo0C,QAAQQ,EAAUhY,kBAC7B74B,KAAM+wC,EAAQ/wC,UAIlB0xC,WAAa,WACXz1C,EAAKs0B,SAAS,CAAC0f,SAAS,OAG1B0B,aAAe,WACb,IAAMC,EAAgBnzC,KAAKkE,MAAMlE,KAAKC,UAAUzC,EAAK6d,MAAMpe,OAAQ,SAACwO,EAAK1Q,GACvE,OAAIA,aAAiB+R,OACnB,EAEO/R,KAGXyC,EAAKoM,MAAMlI,OAAOwxC,aAAaC,MAGjCC,aAAe,WACb,IAAMD,EAAgBnzC,KAAKkE,MAAMlE,KAAKC,UAAUzC,EAAK6d,MAAMpe,OAAQ,SAACwO,EAAK1Q,GACvE,OAAIA,aAAiB+R,OACnB,EAEO/R,KAGXyC,EAAKoM,MAAMlI,OAAO0xC,aAAaD,MAGjCE,qBAAuB,WACjB71C,EAAK6d,MAAMpe,OAAOuB,GACpBhB,EAAK41C,eAEL51C,EAAK01C,kBAITI,cAAgB,WACV91C,EAAK6d,MAAMpe,OAAOuB,GACpBhB,EAAKoM,MAAMgN,QAAQ7Q,KAAnB,WAAA3I,OAAmCI,EAAK6d,MAAMpe,OAAOuB,KAErDhB,EAAKs0B,SAAS,CACZ0f,SAAS,EACTv0C,OAAQ,KACRw0C,YAAa,KACbC,KAAM,KACNnwC,KAAM,2FAlRN9D,KAAKmM,MAAM2pC,eACb91C,KAAKk0C,eAAel0C,KAAK+1C,UAAU/1C,KAAKmM,MAAM2pC,2DAI/B/nB,EAAWC,EAAWC,GACvC,GAAIF,EAAUjrB,YAAYkD,OAAShG,KAAKmM,MAAMrJ,YAAYkD,MACpDhG,KAAK4d,MAAMpe,SAAWQ,KAAK4d,MAAMpe,OAAOuB,GAAI,CAC9C,IAAMi1C,EAAch2C,KAAKi2C,mBAAmBloB,EAAUjrB,YAAYkD,MAC5DjD,EAAU/C,KAAKi2C,mBAAmBj2C,KAAKmM,MAAMrJ,YAAYkD,MAC/D,GAA2B,IAAvBgwC,EAAYv3C,QAAmC,IAAnBsE,EAAQtE,OAAc,KAC7Ce,EAD6CS,OAAA+M,EAAA,EAAA/M,CACnC8C,EADmC,MAEpD/C,KAAKmM,MAAMgN,QAAQ7Q,KAAnB,WAAA3I,OAAmCH,EAAOuB,GAA1C,uDAMWgC,GAAS,IACX4xC,EAAa30C,KAAK4d,MAA1Bpe,OACP,OAAOuD,EAAQgB,OAAO,SAAAvE,GAAM,OAC1BA,EAAOq+B,YACJr+B,EAAOm9B,iBAAiBrc,WAAaq0B,EAAUhY,iBAAiBrc,UAChE9gB,EAAOC,QAAQC,OAASi1C,EAAUl1C,QAAQC,MAC1CF,EAAO6F,KAAK6wC,SAAWvB,EAAUtvC,KAAK6wC,QACtC12C,EAAO6F,KAAKlB,SAAWwwC,EAAUtvC,KAAKlB,QACtC3E,EAAO6F,KAAK4F,SAAW0pC,EAAUtvC,KAAK4F,2CAInCkrC,GAAiC,IAAA9uC,EAAArH,KAArB8lC,EAAqBtnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KASnC,KARA23C,EAAUC,GAAA,GAAOD,IACDryC,MAAQqyC,EAAW71B,WAC7BwlB,GAAgBqQ,EAAWlsC,MAC7BksC,EAAWryC,KAAOgiC,EAAan1B,UAAUwlC,EAAWlsC,OAEpDksC,EAAWryC,KAAOuL,EAAK0M,QAAQnI,+BAA+BuiC,EAAW71B,WAGzE61B,EAAWxZ,iBACbwZ,EAAWxZ,iBAAmB38B,KAAK+1C,UAAUI,EAAWxZ,iBAAkBwZ,EAAWryC,WAChF,GAAIqyC,EAAWjB,gBACpBiB,EAAWjB,gBAAkBiB,EAAWjB,gBAAgBvzC,IAAI,SAAAwzC,GAAQ,OAAI9tC,EAAK0uC,UAAUZ,EAAUgB,EAAWryC,YACvG,MAAI,mBAAoBqyC,GAK7B,MAAM,IAAI/mC,MAAM,4BAJZ+mC,EAAWf,iBACbe,EAAWf,eAAiBp1C,KAAK+1C,UAAUI,EAAWf,eAAgBe,EAAWryC,OAMrF,OAAOqyC,8CAuBWxT,GAAS,IACpBqR,EAAeh0C,KAAK4d,MAApBo2B,YACP,OAAIA,EAAYkB,gBACPlB,EAAYkB,gBAChBt2C,KAAK,SAAAy3C,GAAQ,OAAIA,EAAS/1B,WAAaqiB,EAAQ3mB,mBAE9Cg4B,EAAYoB,gBAAkBpB,EAAYoB,eAAe90B,WAAaqiB,EAAQ3mB,iBACzEg4B,EAAYoB,eAIhB,8CAGQ,IAAA1mB,EACa1uB,KAAK4d,MAA1Bo2B,EADQtlB,EACRslB,YACHgB,EAFWtmB,EACKulB,KACAr1C,KAAK,SAAAo2C,GAAQ,OAAIA,EAASp2C,KAAK,SAAA03C,GAAY,OAAIA,IAAiBtC,MAYpF,OAXAgB,EAAWA,EAAS/rC,MAAM,EAAG+rC,EAAShsC,UAAU,SAAAstC,GAAY,OAAIA,IAAiBtC,IAAe,IACnEryC,IAAI,SAAC20C,EAAcnzC,GAAf,OACrB,IAAVA,EACI,CAAC,SAAU,oBAEX6xC,EAAS7xC,EAAQ,GAAG+xC,gBAChB,CAAC,kBAAmBF,EAAS7xC,EAAQ,GAAG+xC,gBAAgBr7B,QAAQy8B,IAChE,CAAC,4DAOG/B,GAAa,IACpB/0C,EAAUQ,KAAK4d,MAAfpe,OAEDm1C,EAASyB,GAAA,GACV52C,EADU,CAEbm9B,iBAAiByZ,GAAA,GAAK52C,EAAOm9B,oBAE3BiY,EAAmBD,EAAUhY,iBAPN/3B,GAAA,EAAAC,GAAA,EAAAC,OAAApG,EAAA,IAQ3B,QAAAqG,EAAAC,EAAoB5F,IAAE0S,QAAQyiC,EAAYtrC,MAAM,IAAhDhE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqD,KAA1CzB,EAA0C4B,EAAAzH,MAC7Ci5C,EAAU3B,EAAiBzxC,GAC3B0xC,EAAUr3B,MAAMg5B,QAAQD,GAAWA,EAAQttC,QAAjCmtC,GAAA,GAA+CG,GAC/D3B,EAAiBzxC,GAAS0xC,EAC1BD,EAAmBC,GAZM,MAAArvC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAe3B,MAAO,CAAC6vC,YAAWC,0DAGPA,EAAkBjS,GAC9B,IAAIkS,EAAU,KAqBd,OApBID,EAAiBM,iBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgBjsC,QACpE2rC,EAAmBA,EAAiBM,gBACpCL,EAAU,CACRv0B,SAAUqiB,EAAQ3mB,iBAClB/R,MAAO04B,EAAQ3oB,mBACflW,KAAM6+B,EACNyS,eAAgB,MAElBR,EAAiBtsC,KAAKusC,KAEtBA,EAAU,CACRv0B,SAAUqiB,EAAQ3mB,iBAClB/R,MAAO04B,EAAQ3oB,mBACflW,KAAM6+B,EACNuS,gBAAiB,IAEnBN,EAAiBQ,eAAiBP,GAG7BA,qCAGED,EAAkB/C,GAO3B,OANI+C,EAAiBM,gBACnBN,EAAiBM,gBAAkBN,EAAiBM,gBAAgBnxC,OAAO,SAAAsyC,GAAQ,OAAIA,IAAaxE,IAEpG+C,EAAiBQ,eAAiB,KAG7BR,oCA6BP,IAF6D,IACzDX,EAAO,CAAC,CADiDz1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApCwB,KAAK4d,MAAMpe,OAAOm9B,mBAEpCsX,KAAUA,EAAOj0C,KAAKy2C,YAAYxC,MAEzC,OAAOA,sCAGGA,GACV,IAAMyC,EAAWt3C,IAAE0S,QAAQmiC,EAAKtyC,IAAI3B,KAAK+0C,kBACzC,OAAI2B,EAASj4C,SAAWw1C,EAAKx1C,OACpBi4C,EAELzC,EAAKr1C,KAAK,SAACo2C,EAAU7xC,GAAX,OAAqB6xC,IAAa0B,EAASvzC,KAChDuzC,EAGFzC,mCAiFA,IAAAlnC,EAAAjE,EAAA9I,KAAAsM,EAC8DtM,KAAKmM,MAAnElK,EADAqK,EACArK,KAAMgC,EADNqI,EACMrI,OAA0B44B,EADhCvwB,EACc5I,UAAYyF,KAAkB6tB,EAD5C1qB,EAC4C0qB,eAD5C+J,EAE4C/gC,KAAK4d,MAAjDm2B,EAFAhT,EAEAgT,QAASv0C,EAFTuhC,EAESvhC,OAAQsE,EAFjBi9B,EAEiBj9B,KAAMmwC,EAFvBlT,EAEuBkT,KAAMD,EAF7BjT,EAE6BiT,YAC9B31C,EAAW4F,EAAO3E,mBAExB,OAAIy0C,GAAav0C,IAAUA,EAAOq+B,WAW7Br+B,EAKHmO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACw5C,GAAD,CAAcn3C,OAAQA,EAAQ+L,KAAK,EAAOyrB,eAAgBA,KAE5DrpB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQP,WAAS,EAACxU,QAAS5lB,KAAKw1C,YAAhC,QACA7nC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQa,UAAQ,EAAC5V,QAAS5lB,KAAK41C,sBAAuBp2C,EAAOuB,GAAK,SAAW,UAC7E4M,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC1a,QAAS5lB,KAAK61C,eAA/B,aAGJloC,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,QACAN,EAAAC,EAAAzQ,cAAA,aACEwQ,EAAAC,EAAAzQ,cAAA,aACC82C,EAAKtyC,IAAI,SAACqzC,EAAU4B,GAAX,OACRjpC,EAAAC,EAAAzQ,cAAA,MAAI6Q,IAAK4oC,GACN5B,EAASrzC,IAAI,SAAC20C,EAAcO,GAAf,OACZlpC,EAAAC,EAAAzQ,cAAA,MAAI6Q,IAAK6oC,GACO,IAAbD,GAAkBN,IAAiBrC,EAAK2C,EAAW,GAAGC,GACrDlpC,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE/T,OAAK,EACLG,SAAU/gB,IAASwyC,EAAaxyC,KAChC8gB,SAAU,WACR9b,EAAKurB,SAAS,CACZ2f,YAAasC,EACbxyC,KAAMwyC,EAAaxyC,QAGvBzF,SAAUA,EACVyF,KAAMwyC,EAAaxyC,OAEnB,cAQfkwC,EAAYlwC,KAAO6J,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KAClBltB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,gBACAN,EAAAC,EAAAzQ,cAAC2rC,GAAD,CACE7mC,KAAMA,EACNohC,eAAgBrjC,KAAKqjC,eACrBv/B,KAAMA,EACNuqB,aAAc,CAAC2lB,EAAYlwC,KAAKkM,YAChC8zB,OAAK/2B,EAAA,GAAA9M,OAAA0U,EAAA,EAAA1U,CAAA8M,EAAIvN,EAAOC,QAAQwrC,cAAgB,UAAnChrC,OAAA0U,EAAA,EAAA1U,CAAA8M,EAA8CsC,EAAKiB,aAAa9Q,EAAOC,QAAQwrC,eAAiB,UAAhGl+B,GACL01B,OAAQziC,KAAKyiC,OACbC,wBAAyB1iC,KAAK0iC,wBAC9BtsB,SAAUpW,KAAKoW,UAEfzI,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAACvL,SAAUif,IAAgBx0C,EAAQomB,QAAS5lB,KAAKq1C,mBAC/D1nC,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CAAM/6B,KAAM,WADd,qBAIS,MA5DR,KAVL6P,EAAAC,EAAAzQ,cAAC25C,GAAD,CACEhB,cAAet2C,EACf00C,eAAgBl0C,KAAKk0C,eACrBE,gBAAiBp0C,KAAKo0C,gBACtBvX,UAAWA,WA5SM7tB,aA4XrB+nC,8MAOJn5B,MAAQ,CACNpe,OAAQiK,EAAK0C,MAAM2pC,eAAiB,CAClCjY,YAAY,EACZp+B,QAAS,CACPwrC,cAAe57B,EAAKmC,SACpB9R,KAAM,OACNE,YAAa,CACXC,OAAQ,IAGZwF,KAAM,CACJ6wC,OAAQ,GACR/xC,OAAQ,KACRL,KAAM,KACN45B,WAAY,EACZC,cAAe,EACf1yB,QAAQ,EACR3F,gBAAiB,MAEnBq3B,iBAAkB,CAChBrc,SAAUjR,EAAK0M,QAAQrL,SAASsL,iBAChClY,KAAMuL,EAAK0M,QAAQrL,SACnBwkC,gBAAiB,KAGrBzzB,MAAO,CACLnB,SAAU,KACVnc,OAAQ,MAEV6yC,iBAAiB,KAuBnBxc,SAAW,SAAC9zB,EAAD2O,GAA+B,IAA1BvX,EAA0BuX,EAA1BvX,KAAMR,EAAoB+X,EAApB/X,MAAOujC,EAAaxrB,EAAbwrB,aACbniC,IAAVpB,UAA8BujC,WAAmB,IACnDvjC,EAAQujC,GAEV,IAAIoW,EAAiB35C,EACjBQ,KAAQ2L,EAAKnC,YAAY4vC,kBAC3BD,EAAiBxtC,EAAKnC,YAAY4vC,gBAAgBp5C,GAAMm5C,IAE1DxtC,EAAK4qB,SAAS,SAAAzW,GACZ,IAAMpe,EAAM42C,GAAA,GACPx4B,EAAMpe,QAEP23C,EAAoB33C,EAClB43C,EAAQt5C,EAAK+U,MAAM,KALJgB,GAAA,EAAAC,GAAA,EAAAC,OAAArV,EAAA,IAMrB,QAAAsV,EAAAC,EAAmBmjC,EAAMnuC,MAAM,EAAGmuC,EAAM34C,OAAS,GAAjDwG,OAAAC,cAAA2O,GAAAG,EAAAC,EAAA9O,QAAAC,MAAAyO,GAAA,EAAqD,CACnDsjC,EAAoBA,EAD+BnjC,EAAA1W,QACJ,IAP5B,MAAAkI,GAAAsO,GAAA,EAAAC,EAAAvO,EAAA,YAAAqO,GAAA,MAAAI,EAAAxO,QAAAwO,EAAAxO,SAAA,WAAAqO,EAAA,MAAAC,GAUrB,OADAojC,EAAkBC,EAAMA,EAAM34C,OAAS,IAAMw4C,EACtC,CAACz3C,YAEViK,EAAK4tC,WAAWv5C,EAAMm5C,MAGxBI,WAAa,SAAAv5C,GACE,8BAATA,EACF2L,EAAK4qB,SAAS,SAAAzW,GACZ,IAAM0C,EAAW1C,EAAMpe,OAAOm9B,iBAAiBrc,SACzCg3B,IAAkBh3B,GACpBjR,EAAK0M,QAAQw7B,kCAAkCj3B,GAC7Cxc,EAAOwzC,EAAkBjoC,EAAK0M,QAAQnI,+BAA+B0M,GAAY,KACvF,MAAO,CACLmB,MAAM20B,GAAA,GACDx4B,EAAM6D,MADN,CAEHnB,UAAWA,GAAYg3B,EAAkB,KAAO,iCAElD93C,OAAO42C,GAAA,GACFx4B,EAAMpe,OADL,CAEJC,QAAQ22C,GAAA,GACHx4B,EAAMpe,OAAOC,QADX,CAELwrC,cAAennC,EAAOA,EAAKkM,WAAa,OAE1C2sB,iBAAiByZ,GAAA,GACZx4B,EAAMpe,OAAOm9B,iBADF,CAEd74B,cAKU,iBAAThG,EACT2L,EAAK4qB,SAAS,SAAAzW,GACZ,OAAQA,EAAMpe,OAAOC,QAAQC,MAC3B,IAAK,OAUL,IAAK,YACH,OAAON,IAAEC,MAAM,GAAI,CAACG,OAAQoe,EAAMpe,QAAS,CACzCA,OAAQ,CACNC,QAAS,CACPG,YAAa,CACXC,OAAQ,OAKlB,QACE,OAAO,QAGK,gBAAT/B,GACT2L,EAAK4qB,SAAS,SAAAzW,GACZ,IAAM9Z,EAAO2F,EAAK0C,MAAM0wB,UAAUjf,EAAMpe,OAAO6F,KAAKlB,QACpD,OAAO/E,IAAEC,MAAM,GAAI,CAACG,OAAQoe,EAAMpe,QAAS,CACzCiiB,MAAO,CACLtd,QAASL,GAAQ8Z,EAAMpe,OAAO6F,KAAKlB,OAAS,mCAAqC,MAEnF3E,OAAQ,CACN6F,KAAM,CACJvB,KAAMA,EAAOuL,EAAK0M,QAAQgb,YAAYjzB,EAAKA,MAAQ,cAQ/D2xC,aAAe,WAAM,IAAA+B,EACK/tC,EAAKmU,MAAtBpe,EADYg4C,EACZh4C,OADYg4C,EACJ/1B,MACLnB,UAGV7W,EAAK0C,MAAM+nC,eAAe10C,MAG5Bq2C,cAAgB,WACdpsC,EAAK0C,MAAMioC,qBAGbvB,YAAc,SAAA72B,GACZvS,EAAK4qB,SAAS,CACZ2iB,iBAAiB,IAEnBvtC,EAAK+wB,SAAS,KAAM,CAAC18B,KAAM,4BAA6BR,MAAO0e,OAGjEy7B,gBAAkB,WAChBhuC,EAAK4qB,SAAS,CACZ2iB,iBAAiB,OAIrBU,aAAe,WACbjuC,EAAK4qB,SAAS,CAAC2iB,iBAAiB,wFAzIhC,IAAMpL,EAAS,IAAI7C,gBAAgB1oC,OAAOiB,SAAS0nC,QACnD,IAAKhpC,KAAKmM,MAAM2pC,cAAe,CAC7B,IAAMx1B,EAAWsrB,EAAO1S,IAAI,YACxB5Y,GACFtgB,KAAKw6B,SAAS,KAAM,CAAC18B,KAAM,4BAA6BR,MAAOgjB,IAGnE,IAAMnc,EAASynC,EAAO1S,IAAI,UACtB/0B,GACFnE,KAAKw6B,SAAS,KAAM,CAAC18B,KAAM,cAAeR,MAAO6G,+CAIlC4pB,EAAWC,EAAWC,GACnCF,EAAU8O,YAAc78B,KAAKmM,MAAM0wB,WACrC78B,KAAKq3C,WAAW,gDA6HX,IAAAhpC,EACyBrO,KAAKmM,MAA9BlI,EADAoK,EACApK,OAAQ6xC,EADRznC,EACQynC,cADRjF,EAEkC7wC,KAAK4d,MAAvCo5B,EAFAnG,EAEAmG,gBAAiBx3C,EAFjBqxC,EAEiBrxC,OAAQiiB,EAFzBovB,EAEyBpvB,MAC1BpjB,EAAW4F,EAAO3E,mBAExB,OAAI03C,EAEArpC,EAAAC,EAAAzQ,cAACw6C,GAAD,CACE9E,YAAa7yC,KAAK6yC,YAClBC,QAAS9yC,KAAKy3C,gBACd1E,wBAAyBvzC,EAAOm9B,iBAAiBrc,WAMrD3S,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,wBACA/qB,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAD,CAAM8c,SAAU53C,KAAKy1C,cACnB9nC,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEj9B,KAAM,4BACNk9B,QAASC,KACTC,MAAO,mBACPC,YAAa,gBACb7G,SAAUt0B,KAAKw6B,SACfl9B,MAAOkC,EAAOm9B,iBAAiBrc,SAC/B8a,UAAQ,EACR3Z,MAAOA,EAAMnB,WAEf3S,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CACEltB,QAAS,gBACT2sB,WAAS,EACTxU,QAAS5lB,KAAK03C,gBAGlB/pC,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,CAAYme,QAAM,GAChBlqC,EAAAC,EAAAzQ,cAAA,gCACAwQ,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKgd,MAAN,CACEh6C,KAAM,wBACNo9B,MAAO,WACP5G,SAAUt0B,KAAKw6B,SACfl9B,MAAO+R,EAAKmC,SACZqvB,QAASrhC,EAAOC,QAAQwrC,gBAAkB57B,EAAKmC,SAC/CujB,SAAUv1B,EAAOC,QAAQwrC,gBAAkB57B,EAAKmC,WAElD7D,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKgd,MAAN,CACEh6C,KAAM,wBACNo9B,MAAO,WACP5G,SAAUt0B,KAAKw6B,SACfl9B,MAAO+R,EAAKqC,SACZmvB,QAASrhC,EAAOC,QAAQwrC,gBAAkB57B,EAAKqC,SAC/CqjB,SAAUv1B,EAAOC,QAAQwrC,gBAAkB57B,EAAKqC,YAGnDlS,EAAOm9B,iBAAiB74B,KACvB6J,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE9T,QAAM,EACNtmB,SAAUA,EACVyF,KAAMtE,EAAOm9B,iBAAiB74B,OAE9B,KACJ6J,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKid,OAAN,CACEt4C,QAAS,CACP,CAACuO,IAAK,OAAQ1Q,MAAO,OAAQN,KAAM,QACnC,CAACgR,IAAK,YAAa1Q,MAAO,YAAaN,KAAM,eAE/Cc,KAAM,eACNo9B,MAAO,OACP5G,SAAUt0B,KAAKw6B,SACfY,UAAQ,EACR99B,MAAOkC,EAAOC,QAAQC,OAEC,SAAxBF,EAAOC,QAAQC,KACdiO,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTv7B,KAAM,QACNw7B,MAAK,YAAAv7B,OAAcH,EAAOC,QAAQG,YAAYC,QAC9Cy7B,IAAK,EACL1pB,IAAK,GACL9T,KAAM,6BACNw2B,SAAUt0B,KAAKw6B,SACfY,UAAQ,EACR99B,MAAOkC,EAAOC,QAAQG,YAAYC,UAGZ,cAAxBL,EAAOC,QAAQC,KACjBiO,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTv7B,KAAM,QACNw7B,MAAK,kBAAAv7B,OAAoBH,EAAOC,QAAQG,YAAYC,QACpDy7B,IAAK,EACL1pB,IAAK,GACL9T,KAAM,6BACNw2B,SAAUt0B,KAAKw6B,SACfY,UAAQ,EACR99B,MAAOkC,EAAOC,QAAQG,YAAYC,UAGpC,sBACJ8N,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTC,MAAO,SACPp9B,KAAM,cACNw2B,SAAUt0B,KAAKw6B,SACfl9B,MAAOkC,EAAO6F,KAAK6wC,SAErBvoC,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTv7B,KAAM,QACNw7B,MAAK,eAAAv7B,OAAiBH,EAAO6F,KAAKq4B,WAA7B,KAAA/9B,OAA2CH,EAAO6F,KAAKs4B,eAC5DrC,IAAK,EACL1pB,IAAKpS,EAAO6F,KAAKs4B,cACjB7/B,KAAM,kBACNw2B,SAAUt0B,KAAKw6B,SACfY,UAAQ,EACR99B,MAAOkC,EAAO6F,KAAKq4B,cAGvB/vB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEj9B,KAAM,cACNk9B,QAASC,KACTC,MAAO,YACPC,YAAa,UACb7G,SAAUt0B,KAAKw6B,SACfl9B,MAAOkC,EAAO6F,KAAKlB,QAAU,GAC7Bsd,MAAOA,EAAMtd,UAGhB3E,EAAO6F,KAAKvB,KACX6J,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE9T,QAAM,EACNtmB,SAAUA,EACVyF,KAAMtE,EAAO6F,KAAKvB,OAElB,KACJ6J,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKpB,MAAN,KACE/rB,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASkG,KACThG,MAAO,SACPp9B,KAAM,cACNw2B,SAAUt0B,KAAKw6B,SACfqG,QAASrhC,EAAO6F,KAAK4F,SAEvB0C,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKC,MAAN,CACEC,QAASC,KACTv7B,KAAM,iBACNw7B,MAAO,aACPp9B,KAAM,uBACNw2B,SAAUt0B,KAAKw6B,SACfl9B,MAAOkC,EAAO6F,KAAKC,gBAAkB9F,EAAO6F,KAAKC,gBAAgB0yC,OAAO,oBAAsB,MAGlGrqC,EAAAC,EAAAzQ,cAAC29B,GAAA,EAAKH,OAAN,CAAa6K,SAAO,EAAC/3B,QAASqoC,EAAgB,SAAW,YAE3DnoC,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQ2F,UAAQ,EAAC7yB,QAAS,UAAWmY,QAAS5lB,KAAK61C,yBApVpC7mC,aAAnB+nC,GACGG,gBAAkB,CACvBe,6BAA8B54B,SAC9B64B,kBAAmB74B,SACnB84B,uBAAwB,SAAAC,GAAS,OAAIA,EAAYx6C,IAAOw6C,GAAa,OAgWzErB,GAAalhB,GAAWkhB,IAET7nC,mBAAW2mB,GAAWie,KCxuB/BuE,8MAOJC,sBAAwB,WACtBv4C,EAAKoM,MAAMgN,QAAQ7Q,KAAK,oFAIxB,IAAM9I,EAASQ,KAAKR,OACbw3B,EAAkBh3B,KAAKmM,MAAvB6qB,eACP,OAAKx3B,GAAWA,EAAOq+B,WAiBrBlwB,EAAAC,EAAAzQ,cAACo7C,GAAD,CAAczC,cAAet2C,EAAQw3B,eAAgBA,IAfnDrpB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,MAAM,EACN/T,KAAM,OACN0F,QAASv6B,KAAKs4C,sBACd1d,OAAQ,wBACRntB,QAAS,4GACT8tB,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAPnD,wDAfO,IAAAlvB,EAC0BtM,KAAKmM,MAAnCD,EADII,EACJJ,MAEP,OAHWI,EACGxJ,YAAcqG,KACR+C,EAAM0/B,OAAO7qC,WAHZiO,aA2CVE,eAAW2mB,GAAWwiB,KCnC/BG,oLACK,IAAAz4C,EAAAC,KAAAsM,EAKHtM,KAAKmM,MAHPlK,EAFKqK,EAELrK,KAFKw2C,EAAAnsC,EAGLxJ,YAAciJ,EAHT0sC,EAGS1sC,aAAcC,EAHvBysC,EAGuBzsC,gBAAiBH,EAHxC4sC,EAGwC5sC,YAAaL,EAHrDitC,EAGqDjtC,SAAUC,EAH/DgtC,EAG+DhtC,oBAAqBG,EAHpF6sC,EAGoF7sC,UACzForB,EAJK1qB,EAIL0qB,eAGF,OACErpB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAM5K,KAAKmM,MAAMD,MAAMtB,MAClC+C,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACI3M,GAAQA,EAAK6qC,MACbn/B,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAM7/B,GAAE,GAAAxN,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,YAAqC+C,EAAAC,EAAAzQ,cAACw9B,GAAA,EAAD,CAAQltB,QAAS,oBAE9D,KACJE,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAD,CAAKR,KAAM,CAAC4rB,UAAU,GAAO5tB,MAAO,CAClC,CAACyB,IAAK,gBAAiBktB,MAAO,kBAAmBpG,MAAO/oB,EAAc6sB,MAAO,SAC7E,CAAC5qB,IAAK,oBAAqBktB,MAAO,cAAepG,MAAO9oB,GACxD,CAACgC,IAAK,eAAgBktB,MAAO,iBAAkBpG,MAAOjpB,GACtD,CAACmC,IAAK,YAAaktB,MAAO,oBAAqBpG,MAAOtpB,GACtD,CAACwC,IAAK,wBAAyBktB,MAAO,gCAAiCpG,MAAOrpB,GAC9E,CAACuC,IAAK,aAAcktB,MAAO,qBAAsBpG,MAAOlpB,IACxD7H,OAAO,SAAAgJ,GAAA,OAAAA,EAAE+nB,MAAiBr2B,SAAQkD,IAAI,SAAA0T,GAAA,IAAErH,EAAFqH,EAAErH,IAAKktB,EAAP7lB,EAAO6lB,MAAOpG,EAAdzf,EAAcyf,MAAO8D,EAArBvjB,EAAqBujB,MAArB,MACtC,CAACprB,SAAU,CAACQ,MAAKP,QAASE,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KAAWssB,EAAX,IAAkBvtB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOlrB,QAASqnB,EAAMr2B,OAAQm6B,MAAOA,MAAuBiJ,OAAQ,kBAC9Gl0B,EAAAC,EAAAzQ,cAAC6kC,GAAD,CAAYpF,aAAc78B,EAAKoM,MAAMy1B,iBAAkB7+B,QAAS+xB,YAKtE7yB,GAAQA,EAAK6qC,MACbn/B,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAI,GAAAjL,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,YACf+C,EAAAC,EAAAzQ,cAACo7C,GAAD,CAAcvhB,eAAgBA,KAE9B,KACF/0B,GAAQA,EAAK6qC,MACbn/B,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAI,GAAAjL,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,cACf+C,EAAAC,EAAAzQ,cAACu7C,GAAD,CAAY1hB,eAAgBA,KAE5B,KACJrpB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,CAAOC,OAAK,EAAClE,KAAI,GAAAjL,OAAKK,KAAKmM,MAAMD,MAAMtB,KAAtB,SACf+C,EAAAC,EAAAzQ,cAACw7C,GAAD,CACE3hB,eAAgBh3B,KAAKmM,MAAM6qB,eAC3B4K,iBAAkB5hC,KAAKmM,MAAMy1B,4BA5CnB5yB,aA4DhB4pC,8MACJh7B,MAAQ,CACNi7B,SAAUxxC,EAAK7H,OAAS6H,EAAK7H,OAAOuB,GAAK,KACzC+C,KAAMuD,EAAKyxC,uBACXC,cAAe,KACfnuC,KAAMvD,EAAK7H,OAAS,GAAK,KACzBw5C,WAAW,EACXztC,KAAK,KAkEPk3B,OAAS,SAACx4B,EAAO04B,GACXt7B,EAAKuW,MAAMrS,KAIflE,EAAKsuC,aAAahT,EAAS,CAACsW,WAAW,OA+EzCvW,wBAA0B,WACpBr7B,EAAKuW,MAAMo7B,WACb3xC,EAAKgtB,SAAS,CAAC2kB,WAAW,EAAOD,cAAe,UAIpDT,sBAAwB,WACtBjxC,EAAK8E,MAAMy1B,iBAAiB,SAG9BqK,MAAQ,WACN5kC,EAAK8E,MAAMy1B,iBAAiB,SAG9BsX,YAAc,SAAAxyC,GACZ,IAAM0F,EAAM/L,OAAOiB,SAAS+mC,KAC5B,GAAIC,UAAUF,MAAO,CACnB,IAAM5oC,EAAS6H,EAAK7H,OACpB8oC,UAAUF,MAAM,CACdxK,MAAK,+BAAAj+B,OAAiC8H,EAAqBjI,IAC3DxC,KAAI,yBACJoP,QACCm8B,MAAM,WACP9gC,EAAsB2E,GACtBo8B,MAAM,mCAGR/gC,EAAsB2E,GACtBo8B,MAAM,4BAER9hC,EAAE2lC,qGAtJF,IAAM7sC,EAASQ,KAAKR,OAEhBA,GACFQ,KAAKmM,MAAMy1B,iBAAiBpiC,8CAIbuuB,EAAWC,GAC5B,IAAMxuB,EAASQ,KAAKR,OAEhBA,GAAUwuB,EAAU6qB,WAAar5C,EAAOuB,KAC1Cf,KAAKmM,MAAMy1B,iBAAiBpiC,GAC5BQ,KAAKq0B,SAAS,CACZwkB,SAAUr5C,EAAOuB,GACjB+C,KAAM9D,KAAK84C,uBACXC,cAAe,KACfnuC,KAAM,GACNouC,WAAW,EACXztC,KAAK,MAGJ/L,GAAUQ,KAAK4d,MAAMi7B,UACxB74C,KAAKq0B,SAAS,CACVwkB,SAAU,KACV/0C,KAAM,KACNi1C,cAAe,KACfnuC,KAAM,GACNouC,WAAW,EACXztC,KAAK,IAGP/L,GAAUQ,KAAKmM,MAAMlK,MAAQjC,KAAK4d,MAAMm7B,eAC1C/4C,KAAK21C,aAAa31C,KAAK4d,MAAMm7B,cAAe,CAACE,WAAW,mDAa1D,IAAMjc,EAAah9B,KAAKg9B,WACxB,IAAKA,EACH,OAAO,KAIT,IAFA,IAAImc,EAAgB9pC,EAAK0M,QAAQnI,+BAA+BopB,EAAWL,iBAAiBrc,UACxF84B,EAAiBpc,EAAWL,iBACzByc,GAAgB,CACrB,IAAMC,EAAqBD,EAAelE,gBAAgBkE,EAAelE,gBAAgBz2C,OAAS,GAClG,IAAK46C,EACH,MAGF,GADAF,EAAgBA,EAAcxoC,UAAU0oC,EAAmBpvC,QACtDovC,EAAmBjE,eACtB,MAEF+D,EAAgBA,EAAcxoC,UAAU0oC,EAAmBjE,eAAenrC,OAC1EmvC,EAAiBC,EAAmBjE,eAGtC,OAAO+D,uCAGIG,GAAuC,IAAAxwC,EAAA9I,KAAAu5C,GAAA/6C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAApBy6C,iBAAwB,IAAAM,KAElD,GADev5C,KAAKmM,MAAblK,KACP,CAGA,IAAMzC,EAASQ,KAAKR,OACdw9B,EAAah9B,KAAKg9B,WAElB7jB,EAAUmgC,EAAangC,QACzBigC,EAAiBpc,EAAWL,iBAC5B6c,EAAmBrgC,EAAQlQ,MAAM,GAAGlF,OAAO,SAACD,EAAMX,GAAP,OAAiBA,EAAQ,IAAM,IAC9E,GAAKq2C,EAAiB/6C,OAAtB,CAGA,IAdkD,IAAAg7C,EAAA,WAehD,IAAMC,EAAcF,EAAiBz7B,QACrC,GAAIq7B,EAAeO,uBAAuB1zC,SAASyzC,EAAY19B,kBAM7D,OALAlT,EAAKurB,SAAS,CACZ2kB,WAAW,EACXztC,KAAK,EACLwtC,cAAe,OAEjB,CAAAa,OAAA,GAEF,IAAMC,EAAsBT,EAAelE,gBACxCt2C,KAAK,SAAAy3C,GAAQ,OAAIA,EAAS/1B,WAAao5B,EAAY19B,mBACtD,OAAK69B,EAOAA,EAAoBzE,oBASzBgE,EAAiBS,EAAoBzE,iBARnCtsC,EAAKurB,SAAS,CACZ2kB,WAAW,EACXztC,KAAK,EACLzH,KAAM41C,EAAY19B,mBAAqBlT,EAAK8U,MAAM9Z,KAAKkY,iBAAmB09B,EAAc5wC,EAAK8U,MAAM9Z,KACnGi1C,cAAe,OAEjB,CAAAa,OAAA,KAbIX,IACFnwC,EAAKqD,MAAMlI,OAAO61C,iBAAiBt6C,EAAQ85C,EAAa1uC,KAAK7G,OAAO,SAACqiC,EAAMjjC,GAAP,OAAiBA,EAAQ,IAAM,KACnG2F,EAAKurB,SAAS,CAAC0kB,cAAeO,KAEhC,CAAAM,OAAA,KAjBGJ,EAAiB/6C,QAAQ,KAAAs7C,EAAAN,IAAA,qBAAAM,EAAA,OAAAA,EAAAH,EA+BhC55C,KAAKq0B,SAAS,CACZvwB,KAAMw1C,EAAa3oC,UAAUyoC,EAAenvC,OAC5C+uC,WAAW,EACXztC,KAAK,EACLwtC,cAAe,0CAqCV,IAAA7rC,EACP,IAAKlN,KAAKmM,MAAMlK,KACd,OAAO,KAET,IAAMzC,EAASQ,KAAKR,OACpB,IAAKA,EACH,OACEmO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAACs9B,GAAA,EAAD,CACEmO,MAAM,EACN/T,KAAM,OACN0F,QAASv6B,KAAKs4C,sBACd1d,OAAQ,wBACRntB,QAAS,4GACT8tB,QAAS,CAAC,CAACvtB,IAAK,KAAMP,QAAS,KAAM+tB,UAAU,MAPnD,yBAPG,IAAA9M,EAqBwB1uB,KAAK4d,MAA7B9Z,EArBA4qB,EAqBA5qB,KAAMk1C,EArBNtqB,EAqBMsqB,UAAWztC,EArBjBmjB,EAqBiBnjB,IACxB,IAAKzH,EACH,OAAO,KAvBF,IAAAuK,EA0BkCrO,KAAKmM,MAAvClK,EA1BAoM,EA0BApM,KAAMX,EA1BN+M,EA0BM/M,SAAU01B,EA1BhB3oB,EA0BgB2oB,eACjBub,EACJyG,EACErrC,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CAASrwB,OAAK,EAACtT,KAAM,UAAWV,QAAS,gCACvClC,EACFoC,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CAASkI,SAAO,EAAC7rC,KAAM,QAASV,QAAS,4BAEzCE,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CAASrkC,QAAShG,EAAqBjI,KAG3C,OACEmO,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAAC0Q,EAAA,EAAD,CAAMo4B,WAAS,EAACpR,KAAM,UAAWyQ,UAAQ,EAACxQ,MAAO,CAC/C,CAAC9mB,IAAK,QAASP,QAAS,QAASU,KAAM,IAAKyX,QAAS5lB,KAAKisC,MAAOrT,MAAO,MAAOiQ,QAAQ,GACvF,CAAC76B,IAAK,QAASP,QAAS,aAAcU,KAAM,QAASyX,QAAS5lB,KAAKk5C,YAAajrC,GAAIC,IAClFf,GAAI7L,EAASgM,SAAUsrB,MAAO,QAASiQ,QAAQ,EAC/CjL,MAAO0K,UAAUF,MAAQ,iCAAmC,+BAC7D5oC,EAAOq+B,WAAa,CAAC7vB,IAAK,OAAQP,QAAS,cAAeU,KAAM,OAAQF,GAAIC,IAC3Ef,GAAE,WAAAxN,OAAaH,EAAOuB,GAApB,SAA+B63B,MAAO,QAASiQ,QAAQ,EACzDjL,MAAO,4BAA8B,MACvC75B,OAAO,SAAAqiC,GAAI,OAAIA,OAEnBz4B,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACEtsB,EAAAC,EAAAzQ,cAACw5C,GAAD,CAAcn3C,OAAQA,EAAQ+L,IAAKA,EAAKyrB,eAAgBA,KAE1DrpB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACGsY,IAGL5kC,EAAAC,EAAAzQ,cAAC2rC,GAAD,CACE7mC,KAAMA,EACNohC,eAAgBrjC,KAAKqjC,eACrBv/B,KAAMA,EACNuqB,aAAc,CAAC7uB,EAAOC,QAAQwrC,eAC9BnH,OAAK52B,EAAA,GAAAjN,OAAA0U,EAAA,EAAA1U,CAAAiN,EAAI1N,EAAOC,QAAQwrC,cAAgB,OAAnChrC,OAAA0U,EAAA,EAAA1U,CAAAiN,EAA2CmC,EAAKiB,aAAa9Q,EAAOC,QAAQwrC,eAAiB,UAA7F/9B,GACLu1B,OAAQziC,KAAKyiC,OACbC,wBAAyB1iC,KAAK0iC,yBAE7B6P,mCAtPI,IAAAtpB,EAC0BjpB,KAAKmM,MAAnCD,EADI+c,EACJ/c,MAEP,OAHW+c,EACGnmB,YAAcqG,KACR+C,EAAM0/B,OAAO7qC,uCAKjC,IAAMvB,EAASQ,KAAKR,OACpB,OAAKA,EAGUQ,KAAKmM,MAAblK,KACKc,QAAQvD,EAAOuB,KAAO,CAChCsE,KAAM,CACJiF,SAAS,EACT+yB,SAAU,EACV9xB,KAAK,GAEPoxB,iBAAkB,CAChBrc,SAAU9gB,EAAOm9B,iBAAiBrc,SAClCq5B,uBAAwB,GACxBzE,gBAAiB,KAZZ,YAnBclmC,aAkR3B4pC,GAAe1pC,YAAW2mB,GAAW+iB,SAE/BqB,8LACevc,EAAYC,GAC7B,OAAOv+B,IAAEujB,MAAMgb,GAAeh8B,IAAI,SAAAwB,GAAK,OACrCwK,EAAAC,EAAAzQ,cAAC07B,GAAA,EAAD,CACE7qB,IAAK7K,EACLrF,KAAM4/B,EAAav6B,EAAQ,OAAS,eACpCy1B,MAAO,8CAKJ,IAAArO,EAMHvqB,KAAKmM,MAJPlI,EAFKsmB,EAELtmB,OAAQhC,EAFHsoB,EAEGtoB,KACUg1B,EAHb1M,EAGL5nB,UAAYwG,KAAoC0zB,EAH3CtS,EAGyB7mB,UAAYyF,KAA0C+tB,EAH/E3M,EAGuD9lB,gBAAkB0E,KACtDguB,EAJnB5M,EAILznB,YAAcsI,SACd5L,EALK+qB,EAKL/qB,OAAQ+L,EALHgf,EAKGhf,IAAKyrB,EALRzM,EAKQyM,eAETiG,GAAiBz9B,EAAOuB,MAASkB,GAAQzC,EAAOuL,SAAW9I,EAAKlB,GAEtE,OACE4M,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,KACEltB,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAOxG,EAAqBjI,IACxCmO,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,KAAMQ,UAAW,qBAAsBzO,KAAKk6C,mBAAmB16C,EAAO6F,KAAKq4B,WAAYl+B,EAAO6F,KAAKs4B,gBAC9Gn+B,EAAO6F,KAAK6wC,OAASvoC,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAOzO,EAAO6F,KAAK6wC,QAAmB,KACvE12C,EAAO6F,KAAKlB,OACXwJ,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MACT1C,GAAO0xB,EACNtvB,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,YACO,IACLjB,EAAAC,EAAAzQ,cAAC28B,GAAD,CACE73B,KAAM,KACNg1B,UAAWA,EACXC,gBAAiBA,EACjBC,gBAAiBA,EACjBrzB,KAAM+4B,EAAUr9B,EAAO6F,KAAKlB,QAC5B6yB,eAAgBA,EAChBI,OAAK,EACL1tB,MAAI,EACJpK,mBAAoB2E,EAAO3E,sBAG7B,mCAEJ,KACHE,EAAOkM,WACNiC,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MACTzO,EAAOkM,WAAWC,UACjBgC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACGpP,EAAOkM,WAAWuyB,QADrB,6BACwDz+B,EAAOkM,WAAWwyB,UAD1E,mBACqG1+B,EAAOkM,WAAWC,UADvH,cAGE,qBAEJ,aArDeqD,aAuE3BirC,GAAepkB,GAAWokB,IAMX/qC,mBAAW2mB,GAAW2iB,eCla/B2B,8MACJv8B,MAAQ,CACNi0B,KAAM9xC,EAAKoM,MAAMzI,UAAUW,iBAC3BuG,KAAM,GACNwnC,SAAU,QA4EZgI,WAAa,SAAAvI,GACX9xC,EAAKs0B,SAAS,SAAAzW,GAAK,MAAK,CAACi0B,OAAMjnC,KAAI,GAAAjL,OAAAM,OAAAiJ,EAAA,EAAAjJ,CAAM2d,EAAMhT,KAAK3B,MAAM,EAAG2U,EAAMhT,KAAKiP,QAAQ+D,EAAMi0B,MAAQ,IAA3D,CAA+DA,UAGpGwI,gBAAkB,SAAAl3C,GAChBpD,EAAKs0B,SAAS,SAAAzW,GAAK,MAAK,CAACi0B,KAAMj0B,EAAMhT,KAAKzH,IAAUpD,EAAKoM,MAAMzI,UAAUW,uBAG3Ei2C,UAAY,WACVv6C,EAAKs0B,SAAS,CAACwd,KAAM9xC,EAAKoM,MAAMzI,UAAUW,uGAxD1CrE,KAAKu6C,uEAGYxsB,EAAWC,EAAWC,GACvC,GAAIF,EAAUrqB,UAAUW,mBAAqBrE,KAAKmM,MAAMzI,UAAUW,iBAAkB,CAClF,IAAMuG,EAAO5K,KAAKw6C,gCAClBx6C,KAAKq0B,SAAS,CACZwd,KAAMjnC,EAAKnM,OAASmM,EAAKA,EAAKnM,OAAS,GAAKuB,KAAKmM,MAAMzI,UAAUW,iBACjEuG,KAAMA,yDAKgB,IAAA6vC,EACJz6C,KAAKsH,YAAY4gC,iCAAhCpkC,EADmB22C,EACnB32C,KAAM2d,EADag5B,EACbh5B,MACb,GAAIA,EACFzhB,KAAKq0B,SAAS,CAAC+d,SAAU3wB,SACpB,GAAI3d,EAAM,CACf,IAAM8G,EAAO9G,EAAKqV,QAAQxX,IAAI,SAAA+4C,GAAQ,MAAK,CACzCp6B,SAAUo6B,EAAS1/B,2BACnB2/B,gBAAiBD,EAAS1/B,8BAExBhb,KAAKmM,MAAMzI,UAAUW,iBACvBrE,KAAKq0B,SAAS,CAACzpB,KAAM5K,KAAK46C,oBAAoBhwC,KAE9C5K,KAAKq0B,SAAS,CAACzpB,OAAMwnC,SAAU,gEAMnC,OAAOpyC,KAAK46C,oBAAoB56C,KAAK4d,MAAMhT,KAAKjJ,IAAI,SAAAkwC,GAAI,OAAIA,EAAKvxB,wDAG/Cu6B,GAClB,IAAIhJ,EAAO7xC,KAAKmM,MAAMzI,UAAUW,iBAC1BuG,EAAO,GAFgBhG,GAAA,EAAAC,GAAA,EAAAC,OAAApG,EAAA,IAG7B,IAH6B,IAG7BqG,EAH6B00C,EAAA,eAGlBn5B,EAHkBvb,EAAAzH,MAK3B,KADAu0C,EAAOA,EAAK1sC,KAAKvG,KAAK,SAAAu2C,GAAQ,OAAIA,EAAS70B,WAAaA,KAEtD,cAEF1V,EAAKtC,KAAKupC,IALZ7sC,EAAuB61C,EAAvB51C,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAkC,cAAA60C,IAG9B,OANyB,MAAAj0C,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GAU7B,OAAO8F,mCAeA,IAAAvD,EAAArH,KAAAsM,EAMHtM,KAAKmM,MAJPlI,EAFKqI,EAELrI,OACkBgzB,EAHb3qB,EAGL3J,UAAYwG,KAHP2xC,EAAAxuC,EAGyB5I,UAAYF,EAHrCs3C,EAGqCt3C,MAAOa,EAH5Cy2C,EAG4Cz2C,iBAA2C6yB,EAHvF5qB,EAG+D7H,gBAAkB0E,KAClEguB,EAJf7qB,EAILxJ,YAAcqG,KACd6tB,EALK1qB,EAKL0qB,eALKtI,EAOc1uB,KAAK4d,MAAnBi0B,EAPAnjB,EAOAmjB,KAAMjnC,EAPN8jB,EAOM9jB,KAEb,OAAKinC,EAKHlkC,EAAAC,EAAAzQ,cAACyR,EAAA,SAAD,KACEjB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAD,CAAMC,UAAQ,GACZrsB,EAAAC,EAAAzQ,cAAC48B,GAAA,EAAKE,IAAN,KACGrvB,EAAKjJ,IAAI,SAACo5C,EAAU53C,GAAX,MAAqB,CAAC43C,EAAU53C,KAAQiZ,UAAUza,IAAI,SAAAoL,GAAA,IAAAsI,EAAApV,OAAA+M,EAAA,EAAA/M,CAAA8M,EAAA,GAAEguC,EAAF1lC,EAAA,GAAYlS,EAAZkS,EAAA,UAC9D1H,EAAAC,EAAAzQ,cAAC69C,GAAD,CACEhtC,IAAK7K,EACL0uC,KAAMkJ,EACN53C,MAAOA,EACP7D,mBAAoB2E,EAAO3E,mBAC3B+6C,gBAAiBhzC,EAAKgzC,gBACtBx1B,SAAUk2B,IAAalJ,MAG3BlkC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,OAAQyqB,MAAO,QAASnrB,QAAS,UAAWmY,QAAS5lB,KAAKs6C,UAAWrsC,GAAI,QAG1FN,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAO4jC,EAAK1sC,KAAK1G,OAA7B,kBACAkP,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKsB,MAAN,KACGmY,EAAK1sC,KAAKxD,IAAI,SAAAwzC,GAAQ,OACrBxnC,EAAAC,EAAAzQ,cAAC89C,GAAD,CACEjtC,IAAKmnC,EAASwF,gBACdt2C,iBAAkBA,EAClBwtC,KAAMA,EACNsD,SAAUA,EACV71C,mBAAoB2E,EAAO3E,mBAC3B86C,WAAY/yC,EAAK+yC,gBAIvBzsC,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAO4jC,EAAKqJ,QAAQz8C,OAAhC,UACAkP,EAAAC,EAAAzQ,cAAC2kC,GAAD,CACE3K,gBAAiBA,EACjBD,gBAAiBA,EACjBF,eAAgBA,EAChBxzB,MAAOA,EAAMO,OAAO,SAAAD,GAAI,OAAI+tC,EAAKqJ,QAAQj1C,SAASnC,EAAK/C,MACvDzB,mBAAoB2E,EAAO3E,mBAC3B23B,UAAWA,KAxCR,gEA9FT,IACM3W,EADS,IAAIyoB,gBAAgB1oC,OAAOiB,SAAS0nC,QAC3B9P,IAAI,YAC5B,GAAI5Y,EAAU,CACZ,IAAIxc,EAAM2d,EACV,IAKIA,GAJF3d,EAAOuL,EAAK0M,QAAQktB,2BAA2B3oB,IAIrC,KAFA,6BAIV,MAAO5Z,GACP5C,EAAO,KACP2d,EAAQ,sCAEV,OAAK3d,EAGE,CAACA,OAAM2d,OAAO,GAFZ,CAAC3d,KAAMuL,EAAK0M,QAAQrL,SAAU+Q,SAIvC,MAAO,CAAC3d,KAAM,KAAM2d,OAAO,UA5BFzS,aA8JzBmsC,8MAgCJxP,aAAe9U,aAAe,CAC5B,SAAA1qB,GAAK,OAAIA,EAAM0lC,MACf,SAAA1lC,GAAK,OAAIA,EAAMgpC,WACd,SAACtD,EAAMsD,GAAP,OACDA,EAASiG,SACL/rC,EAAK0M,QAAQ9I,UAAUkiC,EAASiG,UAChCjG,EAASlrC,MACPoF,EAAK0M,QAAQnI,+BAA+Bi+B,EAAK8I,iBAAiBhqC,UAAUwkC,EAASlrC,OACrFoF,EAAK0M,QAAQnI,+BAA+BuhC,EAASwF,qBAO7D/0B,QAAU,WACR9c,EAAKqD,MAAMiuC,WAAWtxC,EAAKqD,MAAMgpC,aAGnCkG,4BAA8BxkB,aAAe,CAC3C,SAAA1qB,GAAK,OAAIA,EAAMgpC,WACd,SAAAA,GACD,IAAMmG,EAAuB,IAAMnG,EAAS3V,SAASnwB,EAAKmC,UAAY2jC,EAAS+F,QAAQz8C,OACvF,OAAOqK,EAAKyyC,gBAAgBD,EAAsBxyC,EAAKxB,YAAYk0C,0BAOrEC,8BAAgC5kB,aAAe,CAC7C,SAAA1qB,GAAK,OAAIA,EAAM0lC,MACf,SAAA1lC,GAAK,OAAIA,EAAMgpC,WACd,SAACtD,EAAMsD,GACR,IAAMuG,EAA+B,IAAM7J,EAAKrS,SAASnwB,EAAKmC,UAAYqgC,EAAKqJ,QAAQz8C,OAEjFk9C,EADuB,IAAMxG,EAAS3V,SAASnwB,EAAKmC,UAAY2jC,EAAS+F,QAAQz8C,OAC/Bi9C,EACxD,OAAO5yC,EAAKyyC,gBAAgBI,EAA0B7yC,EAAKxB,YAAYs0C,4BAOzEC,gCAAkChlB,aAAe,CAC/C,SAAA1qB,GAAK,OAAIA,EAAM0lC,MACf,SAAA1lC,GAAK,OAAIA,EAAMgpC,WACd,SAACtD,EAAMsD,GACR,IAAMuG,EAA+B,IAAM7J,EAAKrS,SAASnwB,EAAKmC,UAAYqgC,EAAKqJ,QAAQz8C,OAEjFk9C,EADuB,IAAMxG,EAAS3V,SAASnwB,EAAKmC,UAAY2jC,EAAS+F,QAAQz8C,OAC/Bi9C,EACxD,OAAO5yC,EAAKyyC,gBAAgBI,EAA0B7yC,EAAKxB,YAAYw0C,8BAOzEC,uBAAyBllB,aAAe,CACtC,SAAA1qB,GAAK,OAAIA,EAAMgpC,SAAS+F,QAAQz8C,SAC/B,SAAA47B,GACD,OAAOvxB,EAAKyyC,gBAAgBlhB,EAAWvxB,EAAKxB,YAAY00C,iGAO1C1+C,EAAO2+C,GAAQ,IAAApoC,GAAA,EAAAC,GAAA,EAAAC,OAAArV,EAAA,IAC7B,QAAAsV,EAAAC,EAAgCgoC,EAAhCh3C,OAAAC,cAAA2O,GAAAG,EAAAC,EAAA9O,QAAAC,MAAAyO,GAAA,EAAwC,KAAAuD,EAAApD,EAAA1W,MAAA4P,EAAAjN,OAAA+M,EAAA,EAAA/M,CAAAmX,EAAA,GAA5B8kC,EAA4BhvC,EAAA,GAAlBmE,EAAkBnE,EAAA,GACtC,GAAI5P,GAAS4+C,EACX,OAAO7qC,GAHkB,MAAA7L,GAAAsO,GAAA,EAAAC,EAAAvO,EAAA,YAAAqO,GAAA,MAAAI,EAAAxO,QAAAwO,EAAAxO,SAAA,WAAAqO,EAAA,MAAAC,GAO7B,OAP6B9T,OAAA+M,EAAA,EAAA/M,CAMPg8C,EAAOA,EAAOx9C,OAAS,GANhB,uCAUtB,IAAA4P,EACwDrO,KAAKmM,MAA7D9H,EADAgK,EACAhK,iBAAkBwtC,EADlBxjC,EACkBwjC,KAAMsD,EADxB9mC,EACwB8mC,SAAU71C,EADlC+O,EACkC/O,mBACnCwE,EAAO9D,KAAK8D,KAEZ43C,EAA+B,IAAM7J,EAAKrS,SAASnwB,EAAKmC,UAAYqgC,EAAKqJ,QAAQz8C,OACjF68C,EAAuB,IAAMnG,EAAS3V,SAASnwB,EAAKmC,UAAY2jC,EAAS+F,QAAQz8C,OACjFk9C,EAA2BL,EAAuBI,EAClDS,EAAuB,IAAMhH,EAAS3V,SAASnwB,EAAKqC,UAAYyjC,EAAS+F,QAAQz8C,OACnF29C,EAAsBp8C,KAAKo8C,oBAC3BC,EAAwBr8C,KAAKq8C,sBAC7BC,EAA0Bt8C,KAAKs8C,wBAC/BC,EAAgBv8C,KAAKu8C,cACzB,OACE5uC,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAD,CAAMnqB,GAAIC,IAASf,GAAE,+BAAAxN,OAAiCmE,EAAKoP,wBAA0B0S,QAAS5lB,KAAK4lB,SACjGjY,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKI,QAAN,KACE7qB,EAAAC,EAAAzQ,cAACi7B,GAAA,EAAKW,KAAN,KACEprB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAOxqB,KAAM,OAAQV,QACnB,GAAA9N,OAAGw1C,EAAS+F,QAAQz8C,OAApB,eAAAkB,QACQ,IAAMw1C,EAAS+F,QAAQz8C,OAASozC,EAAKqJ,QAAQz8C,QAAQywC,UAD7D,UAAAvvC,QAEQ,IAAMw1C,EAAS+F,QAAQz8C,OAAS4F,EAAiB62C,QAAQz8C,QAAQywC,UAFzE,aAIFvhC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,CAACrQ,KAAM,aAAc86B,MAAO,QAClCnrB,QAAO,GAAA9N,OAAK27C,EAAqBpM,UAA1B,OAETvhC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,CAACrQ,KAAM,aAAc86B,MAAO,SAClCnrB,QAAO,GAAA9N,OAAKw8C,EAAqBjN,UAA1B,OAETvhC,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CACExqB,KAAM,CAACrQ,KAAMu+C,EAAuBzjB,MAAO0jB,GAC3C7uC,QAAO,GAAA9N,OAAKg8C,EAA2B,EAAI,IAAM,IAA1Ch8C,OAA+Cg8C,EAAyBzM,UAAxE,OAETvhC,EAAAC,EAAAzQ,cAACq/C,GAAA,EAAD,CACEC,QAASnB,EAAqBpM,UAC9BtW,MAAOwjB,EACPM,SAAU,UACV7nB,KAAM0nB,IAER5uC,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMA,EACN6gB,QAAM,EACNtmB,SAAUiB,EACVuxB,WAAYvxB,EAAmBtB,MAAMmJ,yCA7G/C,OAAOnH,KAAK2rC,aAAa3rC,KAAKmM,mDAe9B,OAAOnM,KAAKq7C,4BAA4Br7C,KAAKmM,qDAc7C,OAAOnM,KAAKy7C,8BAA8Bz7C,KAAKmM,uDAc/C,OAAOnM,KAAK67C,gCAAgC77C,KAAKmM,6CAUjD,OAAOnM,KAAK+7C,uBAAuB/7C,KAAKmM,cAjGT6C,aAA7BmsC,GACGK,qBAAuB,CAC5B,CAAC,GAAI,OACL,CAAC,GAAI,UACL,CAAC,GAAI,UACL,CAAC,GAAI,SACL,CAAC,IAAK,UANJL,GASGW,yBAA2B,CAChC,EAAE,GAAI,OACN,EAAE,EAAG,UACL,CAAC,EAAG,UACJ,CAAC,GAAI,SACL,CAAC,GAAI,UAdHX,GAiBGS,uBAAyB,CAC9B,EAAE,GAAI,qBACN,EAAE,EAAG,cACL,CAAC,EAAG,eACJ,CAAC,GAAI,YACL,CAAC,GAAI,oBAtBHT,GAyBGa,eAAiB,CACtB,CAAC,EAAG,QACJ,CAAC,GAAI,SACL,CAAC,GAAI,UACL,CAAC,GAAI,cA6IHW,8MACJhR,aAAe9U,aAAe,CAC5B,SAAA1qB,GAAK,OAAIA,EAAM0lC,KAAK8I,iBACpB,SAAAxuC,GAAK,OAAIA,EAAM0lC,KAAKuJ,WACnB,SAACT,EAAiBS,GAAlB,OACDA,EACI/rC,EAAK0M,QAAQ9I,UAAUmoC,GACvB/rC,EAAK0M,QAAQnI,+BAA+B+mC,OAOlD/1B,SAAW,WACTnb,EAAK0C,MAAMkuC,gBAAgB5wC,EAAK0C,MAAMhJ,gFAG/B,IAAA8lB,EACgCjpB,KAAKmM,MAArC0Y,EADAoE,EACApE,SAAUvlB,EADV2pB,EACU3pB,mBACXwE,EAAO9D,KAAK8D,KAElB,OACE6J,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAS7/B,GAAE,+BAAAxN,OAAiCmE,EAAKoP,yBAC/CvF,EAAAC,EAAAzQ,cAACs7B,GAAD,CACE30B,KAAMA,EACN4gB,OAAK,EACLE,SAAU5kB,KAAK4kB,SACfC,SAAUA,EACVxmB,SAAUiB,kCAlBhB,OAAOU,KAAK2rC,aAAa3rC,KAAKmM,cAXQ6C,aA4C3B6mB,MAAWskB,ICvWpByC,8MACJh/B,MAAQ,CACNi/B,SAAU,KACVC,eAAgB,KAChBC,WAAY,QAGd/lB,eAAiB,SAAA6lB,GACf,IAAIG,GAEFA,EADEH,EACK,SAAAl9C,OAAYk9C,EAAS97C,IAElB,WAEIhB,EAAKoM,MAAM7K,SAASgM,UAClCvN,EAAKoM,MAAMgN,QAAQ7Q,KAAK00C,GAEtBj9C,EAAK6d,MAAMi/B,WAAaA,GAG5B98C,EAAKs0B,SAAS,CAACwoB,gBAGjBnhB,qBAAuB,SAAAohB,GACrB,IAAIG,GAEFA,EADEH,EACW,eAAAn9C,OAAkBm9C,EAAe/7C,IAEjC,iBAEOhB,EAAKoM,MAAM7K,SAASgM,UACxCvN,EAAKoM,MAAMgN,QAAQ7Q,KAAK20C,GAEtBl9C,EAAK6d,MAAMk/B,iBAAmBA,GAGlC/8C,EAAKs0B,SAAS,CAACyoB,sBAGjBlb,iBAAmB,SAAAmb,GACjB,IAAIG,GAEFA,EADEH,EACO,WAAAp9C,OAAco9C,EAAWh8C,IAEzB,aAEOhB,EAAKoM,MAAM7K,SAASgM,UACpCvN,EAAKoM,MAAMgN,QAAQ7Q,KAAK40C,GAEtBn9C,EAAK6d,MAAMm/B,aAAeA,GAG9Bh9C,EAAKs0B,SAAS,CAAC0oB,kBAGjB9O,oBAAsB,SAAA9jC,GAAc,IAAAmC,EACXvM,EAAKoM,MAArBlK,EAD2BqK,EAC3BrK,KAAMgC,EADqBqI,EACrBrI,OAETkG,EAAWN,QAAQ5D,SAAShE,EAAKlB,IACnCkD,EAAOk5C,gBAAgBhzC,GAEvBlG,EAAOm5C,eAAejzC,MAI1B+jC,gBAAkB,SAAA/jC,GACCpK,EAAKoM,MAAflI,OAEAiqC,gBAAgB/jC,MAGzBgkC,gBAAkB,SAAAhkC,GACCpK,EAAKoM,MAAflI,OAEAkqC,gBAAgBhkC,sFAGN4jB,GACjB/tB,KAAKq9C,0CAA0CtvB,GAC/C/tB,KAAKs9C,oBAAoBvvB,GACzB/tB,KAAKu9C,kBAAkBxvB,qEAGiBA,GACxC,IAAM9rB,EAAOjC,KAAKmM,MAAMlK,KACnBA,IAGC8rB,EAAU9rB,MAAS8rB,EAAU9rB,KAAK2G,cAAiB3G,IAAQA,EAAK2G,cAAgB3G,EAAK5D,SAAS2I,qBAClGomC,GAASC,cAAcG,iEAIPzf,GAClB,IAAM9rB,EAAOjC,KAAKmM,MAAMlK,KACxB,GAAKA,GAID8rB,EAAUrqB,UAAUkG,SAAW5J,KAAKmM,MAAMzI,UAAUkG,UAIpD5J,KAAK4d,MAAMi/B,UAAa78C,KAAK4d,MAAMi/B,SAASlzC,UAAhD,CAIA,IAAM6zC,EAAwB,IAAIC,IAAI1vB,EAAUrqB,UAAUkG,OAAOjI,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,MAE5E28C,EADgB19C,KAAKmM,MAAMzI,UAAUkG,OAAOjI,IAAI,SAAAmC,GAAI,OAAIA,EAAK/C,KAC5BgD,OAAO,SAAAhD,GAAE,OAAKy8C,EAAsBG,IAAI58C,KAC/E,GAAgC,IAA5B28C,EAAiBj/C,OAArB,CAIA,IAAMkkC,EAAU3iC,KAAKmM,MAAMzI,UAAUyF,KAAKu0C,EAAiB,IAC3D,GAAqB,IAAjB/a,EAAQ3vB,KAAY,CACtB,IAAMq7B,EAAc1L,EAAQ94B,QAAQ,KAAO5H,EAAKlB,GAAK4hC,EAAQ94B,QAAQ,GAAM84B,EAAQ94B,QAAQ,KAAO5H,EAAKlB,GAAK4hC,EAAQ94B,QAAQ,GAAK,KAC3H40B,EAAYz+B,KAAKmM,MAAMxJ,UAAUwG,KAAKklC,GAC5CjB,GAASC,cAAcuQ,OAAOnf,EAAS,eAAA9+B,OAAkB8+B,EAAU3gC,KAA5B,gCAEpB,IAAjB6kC,EAAQ3vB,MAAcpV,IAAO+kC,EAAQ1J,eAAel6B,cAAcnB,MAASigD,SAAS,GAAI,OAC1F79C,KAAKg3B,eAAe2L,+CAIN5U,GAAW,IAAA1mB,EAAArH,KACrBiC,EAAOjC,KAAKmM,MAAMlK,KACxB,GAAKA,GAGAjC,KAAKmM,MAAMzI,UAAUkG,OAAOnL,OAAjC,CAGA,IAAMq/C,EAA2B99C,KAAKmM,MAAMzI,UAAUkG,OACnD7F,OAAO,SAAAD,GAAI,OAAIA,EAAKi6C,aAAe97C,EAAKlB,KACxCgD,OAAO,SAAAD,GACN,IAAMk6C,EAAWjwB,EAAUrqB,UAAUyF,KAAKrF,EAAK/C,IAC/C,OAAOi9C,GAAYA,EAASD,aAAe97C,EAAKlB,KAEpD,GAAK+8C,EAAyBr/C,OAA9B,CAIA,IAAMoK,EAAai1C,EAAyBn8C,IAAI,SAAAmC,GAC9C,IAAMuqC,EAAcvqC,EAAK+F,QAAQ,KAAO5H,EAAKlB,GAAK+C,EAAK+F,QAAQ,GAAM/F,EAAK+F,QAAQ,KAAO5H,EAAKlB,GAAK+C,EAAK+F,QAAQ,GAAK,KAErH,OADkBxC,EAAK8E,MAAMxJ,UAAUwG,KAAKklC,KAGxC5P,EAAkC,IAAtB51B,EAAWpK,OAAeoK,EAAW,GAAK,KAC5DukC,GAASC,cAAcuQ,OAAOnf,EAAS,wBAAA9+B,OAA2B8+B,EAAU3gC,MAArC,6BAAA6B,OAA2Em+C,EAAyBr/C,QAAU,CACnJw/C,IAAK,YACL7gD,KAAI,6BAAAuC,OAA+Bm+C,EAAyBr/C,OAAxD,+CAIC,IAAAqK,EAAA9I,KAAA0uB,EACwC1uB,KAAK4d,MAA7Ci/B,EADAnuB,EACAmuB,SAAUC,EADVpuB,EACUouB,eAAgBC,EAD1BruB,EAC0BquB,WAD1B1uC,EAE0ErO,KAAKmM,MAA/E1K,EAFA4M,EAEA5M,UAAWK,EAFXuM,EAEWvM,aAAcoG,EAFzBmG,EAEyBnG,UAAWjG,EAFpCoM,EAEoCpM,KAAwBg1B,EAF5D5oB,EAE0C1L,UAAYwG,KACvDquB,EAAUqlB,EAAW5lB,EAAU4lB,EAAShzC,QAAQ,IAAM,KACtD4tB,EAAUolB,EAAW5lB,EAAU4lB,EAAShzC,QAAQ,IAAM,KACtDguB,KAAiB51B,IAAQu1B,IAAWA,EAAQz2B,KAAOkB,EAAKlB,GACxD+2B,KAAiB71B,IAAQw1B,IAAWA,EAAQ12B,KAAOkB,EAAKlB,GACxDi3B,EAAWH,GAAiBC,EAC5BomB,EAAmBrB,GAAYrlB,GAAWC,EAC3ColB,EAASlzC,SAAT,UAAAhK,OACWk4B,EAAgB,MAAQL,EAAQ15B,KAD3C,QAAA6B,OACsDm4B,EAAgB,MAAQL,EAAQ35B,MACpFk6B,EAAQ,aAAAr4B,OACMk4B,EAAgB,MAAQL,EAAQ15B,KADtC,QAAA6B,OACiDm4B,EAAgB,MAAQL,EAAQ35B,MADjF,YAAA6B,OAEKk4B,EAAgB,MAAQL,EAAQ15B,KAFrC,QAAA6B,OAEgDm4B,EAAgB,MAAQL,EAAQ35B,MAC3F,4BACE89B,KAAkBkhB,IAAkB76C,IAAQ66C,EAAejzC,QAAQ5D,SAAShE,EAAKlB,IACjFo9C,EAAwBrB,EACzBA,EAAenzC,SAAf,qBAAAhK,OACsBm9C,EAAeh/C,MACnC89B,EAAc,mBAAAj8B,OACMm9C,EAAeh/C,MADrB,uBAAA6B,OAEUm9C,EAAeh/C,MAC1C,cACJ,OACE6P,EAAAC,EAAAzQ,cAACihD,EAAA,EAAD,KACEzwC,EAAAC,EAAAzQ,cAACkhD,GAAmBzyB,YAApB,MACAje,EAAAC,EAAAzQ,cAAC09B,EAAA,EAAD,CAAS+J,UAAW,UAClBj3B,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,MAAZ,gBACAN,EAAAC,EAAAzQ,cAAC0vC,GAAD,MACAl/B,EAAAC,EAAAzQ,cAACmhD,GAAD,CAAOr6C,OAAQA,IACdhC,EAAO0L,EAAAC,EAAAzQ,cAACmiC,GAAD,CAAUr7B,OAAQA,EAAQhC,KAAMA,EAAMy4B,QAAS/sB,EAAAC,EAAAzQ,cAACw7B,EAAA,EAAD,CAAO1qB,GAAI,IAAKE,KAAM,OAAQV,QAAS,WAAgB,KAC9GE,EAAAC,EAAAzQ,cAACohD,GAAD,CAAQt6C,OAAQA,KAEhBxC,EAaE,KAZDK,IAAiBoG,EAChByF,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CACExR,UAAQ,EACR1F,OAAQ,iCACRntB,QAASE,EAAAC,EAAAzQ,cAAA,0HAGXwQ,EAAAC,EAAAzQ,cAAC20C,EAAA,EAAD,CACElX,OAAQ,0BACRntB,QAASE,EAAAC,EAAAzQ,cAAA,wEAIfwQ,EAAAC,EAAAzQ,cAACqhD,EAAD,CAAiBjwC,KAAM,CAAC4rB,UAAU,EAAMsQ,UAAU,EAAOxE,WAAW,GAAO15B,MAAO,CAChFtI,EAAOiE,UAAY,CAACsF,SAAU,CAACW,KAAM,QAASV,QAAS,SAAU7C,KAAM,QAASi3B,OAAQ,kBACtFl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KAAU10B,EAAAC,EAAAzQ,cAACshD,GAAD,CAAOznB,eAAgBluB,EAAKkuB,eAAgB0E,qBAAsB5yB,EAAK4yB,qBAAsBkG,iBAAkB94B,EAAK84B,sBAC3H,KACL39B,EAAOiE,UAAY,CAACsF,SAAU,CAACW,KAAM,OAAQV,QAASywC,GAAkBtzC,KAAM,OAAQyC,SAAUwvC,EAAQ,QAAAl9C,OAAWk9C,EAAS97C,IAAO,OAAQ8gC,OAAQ,kBACjJl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KAAU10B,EAAAC,EAAAzQ,cAACuhD,GAAD,CAAY56C,KAAM+4C,EAAU7lB,eAAgBluB,EAAKkuB,oBACxD,KACL,CAACxpB,SAAU,CAACW,KAAM,WAAYV,QAAS,qBAAsB7C,KAAM,oBAAqBi3B,OAAQ,kBAC9Fl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KAAU10B,EAAAC,EAAAzQ,cAACwhD,GAAD,CAAkB3nB,eAAgBluB,EAAKkuB,oBAEnD/yB,EAAOiE,UAAY,CAACsF,SAAU,CAACW,KAAM,UAAWV,QAAS0wC,GAAwBvzC,KAAM,aAAcyC,SAAUyvC,EAAc,cAAAn9C,OAAiBm9C,EAAe/7C,IAAO,aAAc8gC,OAAQ,kBACxLl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KACE10B,EAAAC,EAAAzQ,cAACyhD,GAAD,CACEz0C,WAAY2yC,EACZphB,qBAAsB5yB,EAAK4yB,qBAC3B1E,eAAgBluB,EAAKkuB,eACrBiX,oBAAqBnlC,EAAKmlC,oBAC1BC,gBAAiBplC,EAAKolC,gBACtBC,gBAAiBrlC,EAAKqlC,qBAGvB,KACL,CAAC3gC,SAAU,CAACW,KAAM,UAAWV,QAAS,WAAY7C,KAAM,UAAWi3B,OAAQ,kBACzEl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KAAU10B,EAAAC,EAAAzQ,cAAC0hD,GAAD,SAEZ,CAACrxC,SAAU,CAACW,KAAM,SAAUV,QAASsvC,EAAat1C,EAAqBs1C,GAAc,WACrFnyC,KAAM,SACNyC,SAAU0vC,EAAU,UAAAp9C,OAAao9C,EAAWh8C,IAAO,SACnD8gC,OAAQ,kBACNl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KACE10B,EAAAC,EAAAzQ,cAAC2hD,GAAD,CACEt/C,OAAQu9C,EACR/lB,eAAgBluB,EAAKkuB,eACrB4K,iBAAkB94B,EAAK84B,sBAI7B,CAACp0B,SAAU,CAACW,KAAM,OAAQV,QAAS,iBAAkB7C,KAAM,gBAAiBi3B,OAAQ,kBAClFl0B,EAAAC,EAAAzQ,cAAC4R,EAAA,EAAIszB,KAAL,KAAU10B,EAAAC,EAAAzQ,cAAC4hD,GAAD,YAGdpxC,EAAAC,EAAAzQ,cAACu7B,EAAA,EAAD,CAAQzqB,GAAI,KAAM4Y,MAAO,CAAC+R,MAAO,YAAa3wB,mBAnPpC+G,aAgQHE,eAAW2mB,GAAW+mB,KC3QjBoC,QACW,cAA7B3+C,OAAOiB,SAAS29C,UAEe,UAA7B5+C,OAAOiB,SAAS29C,UAEhB5+C,OAAOiB,SAAS29C,SAAS/yC,MACvB,2DCXNgzC,IAASrd,OACPl0B,EAAAC,EAAAzQ,cAAC6vC,EAAA,EAAD,CAAemS,SAAUl3C,iBACvB0F,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAAC0R,EAAA,EAAD,KACElB,EAAAC,EAAAzQ,cAACiiD,GAAD,SAILliD,SAAS2D,eAAe,SDkHrB,kBAAmBynC,WACrBA,UAAU+W,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7ff4bf43.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport const copyToClipboard = text => {\r\n  const textArea = document.createElement(\"textarea\");\r\n  // This won't work\r\n  // textArea.style.display = 'none'\r\n  document.body.appendChild(textArea);\r\n  textArea.value = text;\r\n  textArea.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(textArea);\r\n};\r\n\r\nexport const topicalThemes = [\r\n  {\r\n    from: moment(\"2019-10-28T12:30:00\"),\r\n    until: moment(\"2019-11-01T00:00:00\"),\r\n    name: 'Halloween',\r\n    override: {\r\n      theme: {\r\n        cells: 'halloween',\r\n        pieces: 'halloween-ghost',\r\n        scheme: 'halloween',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst getTopicalThemeOverrideAndNextUpdateDate = (on = moment()) => {\r\n  const matchingTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrBefore(on) && topicalTheme.until.isSameOrAfter(on)\r\n  ));\r\n  if (matchingTopicalTheme) {\r\n    return {\r\n      override: matchingTopicalTheme.override,\r\n      nextUpdatedDate: matchingTopicalTheme.until,\r\n      name: matchingTopicalTheme.name,\r\n    };\r\n  }\r\n\r\n  const nextTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrAfter(on)\r\n  ));\r\n  if (nextTopicalTheme) {\r\n    return {override: null, nextUpdatedDate: nextTopicalTheme.from, name: null};\r\n  }\r\n\r\n  return {override: null, nextUpdatedDate: null, name: null};\r\n};\r\n\r\nexport const getApplicableSettingsAndNextUpdateDate = (settings, on) => {\r\n  const {override, nextUpdatedDate, name} = getTopicalThemeOverrideAndNextUpdateDate(on);\r\n  if (settings.theme.useTopicalTheme && override) {\r\n    settings = _.merge({}, settings, override);\r\n  }\r\n\r\n  return {applicableSettings: settings, nextUpdatedDate, override, name};\r\n};\r\n\r\nexport const getPuzzleTitle = puzzle => {\r\n  switch (puzzle.options.type) {\r\n    case 'mate':\r\n      return `Find mate in ${puzzle.options.typeOptions.mateIn}`;\r\n    case 'avoidMate':\r\n      return `Avoid mate in ${puzzle.options.typeOptions.mateIn}`;\r\n    default:\r\n      return 'Unknown puzzle';\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst appVersion = 14;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return {\r\n      autoSubmitMoves: false,\r\n      confirmSubmitMoves: true,\r\n      enableNotifications: false,\r\n      theme: {\r\n        useTopicalTheme: true,\r\n        cells: 'original',\r\n        pieces: 'king',\r\n        scheme: '',\r\n        rotateOpponent: true,\r\n        animations: true,\r\n        arrows: true,\r\n        numbers: 'obvious',\r\n      },\r\n    };\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      settings = null;\r\n    }\r\n    this.updateApplicableSettingsTimeout = null;\r\n    this.setSettings(settings);\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onPuzzles = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  setSettings(settings) {\r\n    if (settings) {\r\n      this.settings = _.merge(this.constructor.getDefaultSettings(), settings);\r\n    } else {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    const {applicableSettings, nextUpdatedDate, override, name} = utils.getApplicableSettingsAndNextUpdateDate(this.settings);\r\n    this.applicableSettings = applicableSettings;\r\n    this.applicableSettingsName = name;\r\n    this.applicableSettingsOverride = override;\r\n    if (this.updateApplicableSettingsTimeout) {\r\n      clearTimeout(this.updateApplicableSettingsTimeout);\r\n      this.updateApplicableSettingsTimeout = null;\r\n    }\r\n    if (nextUpdatedDate) {\r\n      const millisecondsUntilUpdate = nextUpdatedDate.diff(moment());\r\n      this.updateApplicableSettingsTimeout = setTimeout(() => {\r\n        this.setSettings(this.settings);\r\n        this.onUser.map(callback => callback(this.user));\r\n      }, millisecondsUntilUpdate);\r\n    }\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.openingsDatabase = null;\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n    this.socket.on(\"game\", this.gotGame);\r\n    this.socket.on(\"deleted-game\", this.gotDeletedGame);\r\n    this.socket.on(\"openings-database\", this.gotOpeningsDatabase);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.puzzlesInfo = this.preparePuzzles([]);\r\n    this.socket.on(\"puzzles\", this.gotNonPersonalPuzzles);\r\n    this.socket.on(\"personal-puzzles\", this.gotPersonalPuzzles);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onPuzzles']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onPuzzles']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.setSettings(user.settings);\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n    this.gotPuzzles(this.puzzlesInfo.puzzles);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  gotGame = game => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== game.id).concat([game]);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  gotDeletedGame = gameId => {\r\n    const games = this.gamesInfo.games.filter(oldGame => oldGame.id !== gameId);\r\n    client.gotGames(games);\r\n  };\r\n\r\n  gotOpeningsDatabase = openingsDatabase => {\r\n    this.openingsDatabase = openingsDatabase;\r\n    this.gamesInfo = {\r\n      ...this.gamesInfo,\r\n      openingsDatabase: this.openingsDatabase,\r\n    };\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      openingsDatabase: this.openingsDatabase,\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createPuzzle(puzzle) {\r\n    this.socket.emit('create-puzzle', puzzle);\r\n  }\r\n\r\n  updatePuzzle(puzzle) {\r\n    this.socket.emit('update-puzzle', puzzle);\r\n  }\r\n\r\n  submitPuzzleMove(puzzle, path) {\r\n    this.socket.emit(\"submit-puzzle-moves\", {id: puzzle.id, path});\r\n  }\r\n\r\n  gotPuzzles = puzzles => {\r\n    for (const puzzle of puzzles) {\r\n      puzzle.meta.publishDatetime = puzzle.meta.publishDatetime ? moment(puzzle.meta.publishDatetime) : null;\r\n      puzzle.meta.createdDatetime = puzzle.meta.createdDatetime ? moment(puzzle.meta.createdDatetime) : null;\r\n    }\r\n    puzzles = _.sortBy(puzzles, [\r\n      puzzle => puzzle.meta.publishDatetime ? puzzle.meta.publishDatetime.toISOString() : null,\r\n      puzzle => puzzle.meta.createdDatetime ? puzzle.meta.createdDatetime.toISOString() : null,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    this.puzzlesInfo = this.preparePuzzles(puzzles);\r\n    this.onPuzzles.map(callback => callback(this.puzzlesInfo));\r\n  };\r\n\r\n  gotNonPersonalPuzzles = nonPersonalPuzzles => {\r\n    const personalPuzzlesIds = this.puzzlesInfo.mine.map(puzzle => puzzle.id);\r\n    this.gotPuzzles(nonPersonalPuzzles.filter(puzzle => !personalPuzzlesIds.includes(puzzle.id)).concat(this.puzzlesInfo.mine));\r\n  };\r\n\r\n  gotPersonalPuzzles = personalPuzzles => {\r\n    const personalPuzzlesIds = personalPuzzles.map(puzzle => puzzle.id);\r\n    this.gotPuzzles(personalPuzzles.concat(this.puzzlesInfo.other.filter(puzzle => !personalPuzzlesIds.includes(puzzle.id))));\r\n  };\r\n\r\n  preparePuzzles(puzzles) {\r\n    const otherPuzzles = this.user ? puzzles.filter(puzzle => puzzle.userId !== this.user.id) : puzzles;\r\n    const myPuzzles = this.user ? puzzles.filter(puzzle => puzzle.userId === this.user.id) : [];\r\n    return {\r\n      puzzles,\r\n      public: puzzles.filter(puzzle => puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()),\r\n      private: puzzles.filter(puzzle => !puzzle.meta.public || puzzle.meta.publishDatetime.isAfter()),\r\n      byId: _.fromPairs(puzzles.map(game => [game.id, game])),\r\n      byGameId: this.user ? _.groupBy(puzzles.filter(puzzle => (\r\n        puzzle.meta.gameId\r\n        && (puzzle.userId === this.user.id || (this.user.puzzlesStats[puzzle.id] && this.user.puzzlesStats[puzzle.id].meta.won))\r\n      )), puzzle => puzzle.meta.gameId) : {},\r\n      mine: myPuzzles,\r\n      myPublic: myPuzzles.filter(puzzle => puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()),\r\n      myPublicUnattempted: myPuzzles.filter(puzzle => puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore() && !puzzle.usersStats.attempted),\r\n      myPrivate: myPuzzles.filter(puzzle => !puzzle.meta.public || puzzle.meta.publishDatetime.isAfter()),\r\n      other: otherPuzzles,\r\n      otherSolved: this.user ? otherPuzzles.filter(puzzle => this.user.puzzles[puzzle.id] && this.user.puzzles[puzzle.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherPuzzles.filter(puzzle => !this.user.puzzles[puzzle.id] || !this.user.puzzles[puzzle.id].meta.won) : otherPuzzles,\r\n      otherStarted: this.user ? otherPuzzles.filter(puzzle => this.user.puzzles[puzzle.id] && this.user.puzzles[puzzle.id].meta.started && !this.user.puzzles[puzzle.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherPuzzles.filter(puzzle => !this.user.puzzles[puzzle.id] || !this.user.puzzles[puzzle.id].meta.started) : otherPuzzles,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    this.status = status;\r\n    this.moveType = this.status.moveType;\r\n    this.availableMovesMatrix = this.status.availableMovesMatrix;\r\n    this.resignedPlayer = this.status.resignedPlayer;\r\n    this.nextPlayer = this.status.nextPlayer;\r\n    this.canUndo = this.status.canUndo;\r\n    this.lastMove = lastMove ? lastMove : (this.resignedPlayer ? {resign: this.resignedPlayer} : lastMove);\r\n    this.isNextMove = isNextMove;\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  _getProperty(name, func) {\r\n    if (!this.hasOwnProperty(name)) {\r\n      // if (this._getPropertyDependencyCycle.includes(name)) {\r\n      //   throw new Error(`Dependency cycle detected for properties: ${this._getPropertyDependencyCycle.concat([name]).join(', ')}`);\r\n      // }\r\n      // this._getPropertyDependencyCycle.push(name);\r\n      this[name] = func();\r\n      // if (this._getPropertyDependencyCycle[this._getPropertyDependencyCycle.length - 1] !== name) {\r\n      //   throw new Error(`Expected the last property set being '${name}', but it was ${this._getPropertyDependencyCycle.join(', ')}`);\r\n      // }\r\n      // this._getPropertyDependencyCycle.pop();\r\n    }\r\n\r\n    return this[name];\r\n\r\n  }\r\n  // _getPropertyDependencyCycle = [];\r\n\r\n  get history() {\r\n    return this._getProperty('_history', () => (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]));\r\n  }\r\n\r\n  get previousInHistory() {\r\n    return this._getProperty('_previousInHistory', () => this.history[this.history.length - 2]);\r\n  }\r\n\r\n  get fullHistory() {\r\n    return this._getProperty('_fullHistory', ()=> (this.previous ? this.previous.fullHistory : []).concat(this))\r\n  };\r\n  get moveCount() {\r\n    return this._getProperty('_moveCount', ()=> this.previous ? (this.isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1)\r\n  };\r\n  get chainCount() {\r\n    return this._getProperty('_chainCount', ()=> this.previous ? this.previous.chainCount + 1 : 0)\r\n  };\r\n  get moves() {\r\n    return this._getProperty('_moves', ()=> this.previous ? this.previous.moves.concat([this.lastMove]) : [])\r\n  };\r\n  get lastMovesInHistory() {\r\n    return this._getProperty('_lastMovesInHistory', ()=> this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove))\r\n  };\r\n  get path() {\r\n    return this._getProperty('_path', ()=> this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [])\r\n  };\r\n\r\n  get thisPlayer() {\r\n    return this._getProperty('_thisPlayer', () => this.previous ? this.previous.nextPlayer : Game.PLAYER_A);\r\n  }\r\n  get thisMoveType() {\r\n    return this._getProperty('_thisMoveType', () => this.previous ? this.previous.moveType : null);\r\n  }\r\n  get canTakeMoveBack() {\r\n    return this._getProperty('_canTakeMoveBack', () => !!this.previous);\r\n  }\r\n  get moveNotation() {return this._getProperty('_moveNotation', () => this.resignedPlayer\r\n    ? this.constructor.MOVE_RESIGNED_NOTATION[this.resignedPlayer]\r\n    : (this.lastMove\r\n      ? this.constructor.MOVE_NOTATION[this.lastMove.y][this.lastMove.x]\r\n      : ''));\r\n  }\r\n  get fullNotation() {\r\n    return this._getProperty('_fullNotation', () => `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`);\r\n  }\r\n  get compressedFullNotation() {\r\n    return this._getProperty('_compressedFullNotation', () => this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join(''));\r\n  }\r\n  get positionNotation() {\r\n    return this._getProperty('_positionNotation', () => this.constructor.getPositionNotation(this.rowsAndColumns));\r\n  }\r\n  get startingWorkersPositionGame() {\r\n    return this._getProperty('_startingWorkersPositionGame', () => {\r\n      if (this.history.length < 3) {\r\n        return null;\r\n      }\r\n      return this.history[2];\r\n    });\r\n  }\r\n  get startingWorkersPositionNormalisedPositionNotation() {\r\n    return this._getProperty('_startingWorkersPositionNormalisedPositionNotation', () => {\r\n      if (!this.startingWorkersPositionGame) {\r\n        return null;\r\n      }\r\n      return this.startingWorkersPositionGame.normalisedPositionNotation;\r\n    });\r\n  }\r\n  get normalisedPositionNotation() {\r\n    return this._getProperty('_normalisedPositionNotation', () => {\r\n      const [normalisedPositionNotation] = this.normalisedPositionNotationAndTransformationName;\r\n      return normalisedPositionNotation;\r\n    });\r\n  }\r\n  get normalisedPositionNotationAndTransformationName() {\r\n    return this._getProperty('_normalisedPositionNotationAndTransformationName', () => {\r\n      const normalisedPositionNotation = this.allPositionNotations[0];\r\n      return [normalisedPositionNotation, (this.transformationNameByPositionNotation)[normalisedPositionNotation]];\r\n    });\r\n  }\r\n  get transformationNameByPositionNotation() {\r\n    return this._getProperty('_transformationNameByPositionNotation', () => (\r\n      _.fromPairs(Object.entries(this.constructor.transformationMap)\r\n      .map(([name, transformation]) => [name, transformation || this.constructor.noTransformation])\r\n      .map(([name, transformation]) => [Game.Classic.fromRowsAndColumns(transformation(this.rowsAndColumns)).positionNotation, name]))\r\n    ));\r\n  }\r\n\r\n  get allPositionNotations() {\r\n    return this._getProperty('_allPositionNotations', () => (\r\n      Object.keys(this.transformationNameByPositionNotation).sort().reverse()\r\n    ));\r\n  }\r\n\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    throw new Error('Not implemented `areCellsNeighbours`');\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => this.areCellsNeighbours(cell, playerCell))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      this.areCellsNeighbours(cell, coordinates)\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new InvalidMoveError(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  getAvailableMoves() {\r\n    if (this.finished) {\r\n      return [];\r\n    }\r\n\r\n    return _.flatten(this.availableMovesMatrix\r\n      .map((xs, y) => xs\r\n        .map((available, x) => [x, y, available])\r\n        .filter(([, , available]) => available)\r\n        .map(([x,y])=>({x,y}))));\r\n  }\r\n\r\n  getNextGames() {\r\n    return this.getAvailableMoves().map(move => this.makeMove(move));\r\n  }\r\n\r\n  getNextFullMoveGames(nextPlayer = this.nextPlayer) {\r\n    if (this.nextPlayer !== nextPlayer) {\r\n      return [this];\r\n    }\r\n\r\n    return _.flatten(this.getNextGames().map(game => game.getNextFullMoveGames(nextPlayer)));\r\n  }\r\n\r\n  getSearchState(maxDepth, previous = null) {\r\n    const result = this.finished ? (this.winner === this.nextPlayer ? 'won' : 'lost') : null;\r\n    return {\r\n      game: this,\r\n      result: result,\r\n      nextGamesLeft: this.getNextFullMoveGames(),\r\n      results: {\r\n        won: result === 'won',\r\n        lost: result === 'lost',\r\n        undetermined: false,\r\n      },\r\n      ...(!previous || previous.loseLeaves ? {\r\n        winLeaves: result ==='won' ? [this] : [],\r\n      } : {\r\n        loseLeaves: result === 'lost' ? [this] : [],\r\n      }),\r\n      previous,\r\n      moves: null,\r\n      maxDepth,\r\n    };\r\n  }\r\n\r\n  static advanceSearchState(state) {\r\n    if (state.result !== null) {\r\n      console.log('got result', state.result, 'with', state.maxDepth, 'depth');\r\n      if (state.previous) {\r\n        if (state.result === 'won') {\r\n          state.previous.results.lost = true;\r\n          if (state.winLeaves) {\r\n            state.previous.loseLeaves.push(...state.winLeaves);\r\n          }\r\n        } else if (state.result === 'lost') {\r\n          state.previous.results.won = true;\r\n          // state.previous.result = 'won';\r\n          if (state.loseLeaves) {\r\n            state.previous.winLeaves.push(...state.loseLeaves);\r\n          }\r\n        } else {\r\n          throw new Error(`Unknown result '${state.result}'`);\r\n        }\r\n        return state.previous;\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    if (state.maxDepth <= 0) {\r\n      // console.log('undetermined');\r\n      state.results.undetermined = true;\r\n      if (state.previous) {\r\n        state.previous.results.undetermined = true;\r\n        return state.previous;\r\n      } else {\r\n        console.log('finished');\r\n        return state;\r\n      }\r\n    }\r\n    if (!state.nextGamesLeft.length) {\r\n      if (state.results.won) {\r\n        state.result = 'won';\r\n        return state;\r\n      } else if (state.results.undetermined) {\r\n        if (state.previous) {\r\n          state.previous.results.undetermined = true;\r\n          return state.previous;\r\n        } else {\r\n          console.log('finished');\r\n          return state;\r\n        }\r\n      } else if (state.results.lost) {\r\n        state.result = 'lost';\r\n        return state;\r\n      }\r\n      console.log(state);\r\n      throw new Error('Result is null, there are no next games, and there are no results');\r\n    }\r\n    const nextGame = state.nextGamesLeft.shift();\r\n    return nextGame.getSearchState(state.maxDepth - 1, state);\r\n  }\r\n\r\n  static advanceSearchStateSteps(state, steps = 20) {\r\n    let rootState = state;\r\n    while (rootState.previous) {\r\n      rootState = rootState.previous;\r\n    }\r\n    for (let i = 0 ; i < steps ; i++) {\r\n      if (rootState.result !== null ) {\r\n        break;\r\n      }\r\n      state = this.advanceSearchState(state);\r\n    }\r\n\r\n    return state;\r\n  }\r\n}\r\n\r\nclass GameClassic extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    return (\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    );\r\n  }\r\n\r\n  static transformationMaxRotations = 4;\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n  static noTransformation = this.makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false});\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getTransformationNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getTransformationOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getTransformationNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getTransformationOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getTransformationNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getTransformationOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n  getSucceedingEquivalentPositionNotationAndMoves(nextGame) {\r\n    const allPositionNotations = nextGame.allPositionNotations;\r\n    for (const position of allPositionNotations) {\r\n      const game = this.constructor.fromCompressedPositionNotation(position);\r\n      const {moves} = this.inferMoves(game);\r\n      if (moves) {\r\n        return {position, moves};\r\n      }\r\n    }\r\n    return {position: null, moves: null};\r\n  }\r\n\r\n  inferMoves(nextGame) {\r\n    const previousRowsAndColumns = this.rowsAndColumns;\r\n    const rowsAndColumns = nextGame.rowsAndColumns;\r\n    let fromCoordinates = null, toCoordinates = null, isPlaceWorkersMove = false;\r\n    let buildCoordinates = null, canBeMissingBuildMove = true;\r\n    for (const y of this.constructor.ROWS) {\r\n      for (const x of this.constructor.COLUMNS) {\r\n        const previousCell = previousRowsAndColumns[y].cells[x];\r\n        const cell = rowsAndColumns[y].cells[x];\r\n\r\n        if (previousCell.player !== cell.player) {\r\n          if (previousCell.player && cell.player) {\r\n            return {moves: null, error: ['Both cells had different players', previousCell, cell]};\r\n          } else if (previousCell.player) {\r\n            if (fromCoordinates) {\r\n              return {moves: null, error: ['There was a from coordinates', previousCell, fromCoordinates]};\r\n            }\r\n            fromCoordinates = {x, y};\r\n          } else if (cell.player) {\r\n            if (toCoordinates) {\r\n              if (canBeMissingBuildMove) {\r\n                if (isPlaceWorkersMove) {\r\n                  return {moves: null, error: ['Trying to place too many workers', cell, fromCoordinates, toCoordinates]};\r\n                }\r\n                isPlaceWorkersMove = true;\r\n                fromCoordinates = toCoordinates;\r\n              } else {\r\n                return {moves: null, error: ['There was a to coordinates', cell, toCoordinates]};\r\n              }\r\n            }\r\n            toCoordinates = {x, y};\r\n          } else {\r\n            return {moves: null, error: ['Both cells had different false players', previousCell, cell]};\r\n          }\r\n        }\r\n\r\n        if (previousCell.level > 0 || cell.level > 0) {\r\n          if (isPlaceWorkersMove) {\r\n            return {moves: null, error: ['There are levels, while placing initial workers', previousCell, cell, fromCoordinates, toCoordinates]};\r\n          }\r\n          canBeMissingBuildMove = false;\r\n        }\r\n        if (previousCell.level !== cell.level) {\r\n          if (buildCoordinates) {\r\n            return {moves: null, error: ['There was a build coordinates', previousCell, cell, buildCoordinates]};\r\n          }\r\n          if (previousCell.level !== (cell.level - 1)) {\r\n            return {moves: null, error: ['The build was too high or too low', previousCell, cell]};\r\n          }\r\n          buildCoordinates = {x, y};\r\n        }\r\n      }\r\n    }\r\n    if (!fromCoordinates || !toCoordinates) {\r\n      return {moves: null, error: ['There was either no from or no to coordinates', fromCoordinates, toCoordinates]};\r\n    }\r\n    if (!canBeMissingBuildMove && !buildCoordinates) {\r\n      return {moves: null, error: ['It couldn\\'t be missing build move but it did', canBeMissingBuildMove, buildCoordinates]};\r\n    }\r\n    let moves;\r\n    if (canBeMissingBuildMove) {\r\n      moves = [fromCoordinates, toCoordinates];\r\n    } else {\r\n      moves = [fromCoordinates, toCoordinates, buildCoordinates];\r\n    }\r\n    try {\r\n      this.makeMoves(moves);\r\n    } catch (e) {\r\n      if (e instanceof InvalidMoveError) {\r\n        return {moves: null, error: ['The moves were invalid', moves]};\r\n      }\r\n      throw e;\r\n    }\r\n    return {moves, error: null};\r\n  }\r\n}\r\nGame.Classic = GameClassic;\r\n\r\nclass GameHex extends Game {\r\n  static areCellsNeighbours(lhs, rhs) {\r\n    if (!(\r\n      Math.abs(lhs.x - rhs.x) <= 1\r\n      && Math.abs(lhs.y - rhs.y) <= 1\r\n    )) {\r\n      return false;\r\n    }\r\n\r\n    if (lhs.x === rhs.x) {\r\n      return true;\r\n    } else if (lhs.x % 2 === 0) {\r\n      return rhs.y >= lhs.y;\r\n    } else {\r\n      return rhs.y <= lhs.y;\r\n    }\r\n  }\r\n}\r\nGame.Hex = GameHex;\r\n\r\nGame.GAME_TYPES = [Game.Classic, Game.Hex];\r\n\r\nwindow.Game = Game;\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import Game from \"../../../game/game\";\r\n\r\nexport const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n\r\nexport const translate = (gameType, point) => {\r\n  return getTranslate(gameType)(point);\r\n};\r\n\r\nexport const getTranslate = gameType => {\r\n  if (gameType === Game.Classic) {\r\n    return getTranslateClassic;\r\n  } else if (gameType === Game.Hex) {\r\n    return getTranslateHex;\r\n  }\r\n\r\n  throw new Error(`Unknown game type of type '${gameType ? gameType.constructor.name : gameType}'`);\r\n};\r\n\r\nexport const getTranslateClassic = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: point.y * cellSize,\r\n  });\r\n};\r\n\r\nexport const getTranslateHex = point => {\r\n  return ({\r\n    x: point.x * cellSize,\r\n    y: (point.y + (point.x % 2 === 0 ? 0.25 : -0.25)) * cellSize,\r\n  });\r\n};\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenWitchHat = definePiece('PieceHalloweenWitchHat', {\r\n  path: <path d=\"m503.15112,306.14207c-0.08158,-19.00159 -17.54216,-60.97152 -168.51607,-65.22834l-56.26328,-124.83471l76.29825,31.88264l-114.45191,-123.15047c-15.62768,-10.96294 -68.47535,146.47597 -90.00964,213.1728l0,0c-15.14543,2.38948 -62.92045,11.0826 -99.71439,30.45222c-35.89653,18.84568 -54.83104,35.48317 -49.64961,58.60561c-3.7637,26.02861 5.74707,103.14994 246.53844,113.09401c77.45129,3.20712 270.97346,-48.42768 255.7682,-133.99376zm-240.39978,5.43162c-121.8814,8.58253 -132.04665,-25.29799 -132.04665,-25.29799l11.06991,-24.04705c0,0 33.36383,22.50785 101.67601,21.3258c68.31218,-1.19474 96.66319,-31.58713 96.66319,-31.58713l17.99721,21.89507c-4.4073,28.55043 -95.35967,37.7113 -95.35967,37.7113z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCauldron = definePiece('PieceHalloweenCauldron', {\r\n  path: <path d=\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954 c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673 c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939 c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954 c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689 c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1 c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715 c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z M244.915,236c-78.418,0-125.798-29.477-125.798-51.3 c0-20.734,49.014-50.853,125.816-50.853c8.044,0,15.73,0.399,23.128,1.01l-12.19,28.209c-3.218,7.447-2.473,16.014,1.983,22.794 c4.456,6.78,12.024,10.862,20.138,10.862c9.611,0,18.303-5.711,22.118-14.532l16.543-38.252 c34.191,10.619,54.079,27.573,54.079,40.762C370.731,207.889,320.981,236,244.915,236z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenBat = definePiece('PieceHalloweenBat', {\r\n  path: <path d=\"m520.84272,171.44399c-8.83353,-12.69106 -16.6399,-27.11688 -22.85989,-42.92364c-9.91775,-25.0968 -14.56277,-50.31915 -14.5057,-73.25893c0.01141,-8.66234 -10.44274,-13.31877 -16.87957,-7.50964c-28.86304,25.99842 -77.48168,46.1763 -136.24632,55.95709c5.66076,-27.88153 5.47816,-60.38526 -10.4998,-91.3825c-2.86462,-5.55805 -10.62534,-6.19716 -14.28886,-1.14128c-4.65643,6.42542 -9.55254,15.94372 -9.55254,27.61904l-68.13457,0c0,-11.67532 -4.88469,-21.19362 -9.54112,-27.61904c-3.66352,-5.06729 -11.41283,-4.42818 -14.28886,1.14128c-15.97796,30.98582 -16.14915,63.4439 -10.48839,91.32544c-58.76464,-9.78079 -107.3947,-29.94726 -136.24632,-55.93426c-6.43683,-5.79772 -16.87957,-1.12987 -16.87957,7.53247c0.06848,22.93978 -4.58796,48.17354 -14.5057,73.25893c-6.21999,15.80676 -14.02636,30.24399 -22.85989,42.92364c-6.6765,9.56395 -1.92877,22.98543 9.19874,26.50058c10.19165,3.207 20.60015,7.74931 30.81463,13.60409c35.3227,20.23494 56.25382,50.76425 60.5108,76.28333c1.17552,7.0303 3.62928,9.74655 13.30736,8.19441c24.05824,-3.90319 56.71033,-1.27824 88.11843,16.71979c17.29043,9.91775 31.5907,22.26642 41.93072,35.25422c3.36678,4.22275 7.79496,6.99606 15.00787,6.99606c7.07595,0 11.54978,-2.79614 14.90515,-7.00748c10.35143,-12.99921 24.69736,-25.32506 41.9992,-35.23139c31.41951,-18.00944 64.07161,-20.63439 88.15267,-16.7312c9.67808,1.56356 12.12042,-1.17552 13.30736,-8.20582c4.25698,-25.50767 25.19952,-56.03698 60.52222,-76.28333c10.22589,-5.86619 20.65722,-10.39708 30.81463,-13.60409c11.11609,-3.49232 15.85242,-16.91381 9.18733,-26.47776z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 0, y: 100},\r\n});\r\n\r\nconst PieceHalloweenSpider = definePiece('PieceHalloweenSpider', {\r\n  path: <path d=\"M392.236,256.85c-3.204-3.473-7.704-5.451-12.436-5.451h-20.374c-3.501-15.538-8.927-30.108-16.075-43.152 l44.043-13.528l68.976,73.267c3.34,3.542,7.826,5.325,12.339,5.325c4.169,0,8.332-1.528,11.608-4.603 c6.798-6.41,7.109-17.127,0.712-23.938l-76.206-80.945c-4.416-4.697-11.13-6.464-17.299-4.581l-65.142,20.012 c-6.842-7.334-14.321-13.819-22.387-19.144l79.475-60.708l63.803,37.227c8.073,4.703,18.425,1.968,23.151-6.096 c4.713-8.08,1.987-18.447-6.086-23.161l-73.59-42.94c-5.917-3.447-13.362-2.994-18.82,1.176l-61.323,46.84 c-2.544-8.789-7.769-16.651-14.916-23.168l9.129-19.879c3.903-8.5,0.168-18.554-8.333-22.448c-8.532-3.92-18.554-0.182-22.445,8.325 l-8.448,18.416c-5.988-1.463-12.204-2.49-18.769-2.49s-12.786,1.026-18.768,2.49l-8.455-18.416 c-3.885-8.507-13.938-12.23-22.439-8.325c-8.501,3.894-12.236,13.948-8.338,22.448l9.135,19.879 c-6.785,6.177-11.744,13.593-14.405,21.838l-61.835-47.231c-5.456-4.151-12.901-4.629-18.82-1.167l-73.597,42.94 c-8.066,4.713-10.798,15.085-6.085,23.161c4.713,8.08,15.085,10.814,23.157,6.095l63.802-37.227l80.732,61.669 c-8.054,5.166-15.577,11.384-22.439,18.555l-66.347-20.384c-6.17-1.884-12.87-0.107-17.298,4.58L4.613,243.058 c-6.402,6.814-6.085,17.528,0.712,23.938c3.27,3.086,7.439,4.607,11.608,4.607c4.5,0,8.993-1.787,12.333-5.326l68.981-73.271 l44.916,13.794c-7.296,12.955-12.916,27.402-16.586,42.888h-20.736c-4.733,0-9.232,1.978-12.437,5.451L4.496,351.453 c-6.35,6.872-5.923,17.587,0.958,23.927c3.256,3.006,7.375,4.49,11.478,4.49c4.565,0,9.11-1.835,12.45-5.447l83.879-90.868h8.72 c-0.103,2.606-0.317,5.17-0.317,7.808c0,82.225,54.247,148.879,121.156,148.879c66.91,0,121.156-66.654,121.156-148.879 c0-2.059-0.181-4.06-0.252-6.095h8.649l83.878,90.867c3.341,3.612,7.892,5.448,12.456,5.448c4.098,0,8.215-1.489,11.478-4.49 c6.876-6.341,7.31-17.059,0.959-23.928L392.236,256.85z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCat = definePiece('PieceHalloweenCat', {\r\n  path: <path d=\"M535.892,69.273c-1.147-7.46-7.924-12.77-15.396-12.135c-18.883,1.568-36.254,5.171-53.12,11.036 c-26.556,9.215-50.526,22.663-71.3,39.987l-0.308-0.086c-14.421-3.867-29.328-7.866-44.305-11.164 c-22.579-4.957-45.793-7.843-68.993-8.569c-21.208-0.665-43.206,0.343-67.381,3.097c-24.638,2.791-49.336,8.058-73.413,15.628 c-0.21,0.065-0.397,0.119-0.567,0.166c-1.97-1.857-3.953-3.192-5.603-4.301c-0.621-0.429-1.265-0.84-1.849-1.304 c-21.19-16.97-46.129-29.802-74.134-38.137c-13.444-4.004-26.71-6.356-40.545-7.206C11.8,55.825,5.42,60.755,4.011,67.791 c-0.182,0.913-0.383,1.801-0.574,2.681c-0.497,2.28-1.013,4.632-1.363,7.236c-3.068,22.953-2.728,46.419,0.99,69.745 c4.587,28.742,13.229,55.232,25.692,78.808c-6.198,14.209-10.097,30.103-11.889,48.472c-3.624,37.075,3.206,72.854,20.302,106.335 c13.562,26.546,33.085,49.106,58.047,67.047c22.906,16.461,44.463,24.021,70.319,31.83c25.86,7.812,52.794-18.394,103.458-18.053 c47.781,0.304,59.902,19.845,93.234,19.845c0,0,1.218-0.275,1.204-0.275c18.337-5.021,34.737-11.397,50.143-19.49 c27.872-14.626,51.054-34.909,68.896-60.294c19.695-28.012,31.298-59.897,34.504-94.77c2.525-27.56-1.115-54.252-10.889-79.539 l1.956-4.331c5.596-12.405,11.383-25.219,16.186-38.447c7.761-21.406,12.134-44.354,13.366-70.146 C538.166,102.325,538.497,86.233,535.892,69.273z M228.288,339.606c0,0-55.298,5.619-85.933-25.015 c-30.635-30.645-25.013-85.936-25.013-85.936s55.293-5.612,85.928,25.022C233.909,284.311,228.288,339.606,228.288,339.606z  M401.251,314.591c-30.635,30.634-85.93,25.015-85.93,25.015s-5.614-55.295,25.02-85.928 c30.631-30.635,85.926-25.022,85.926-25.022S431.891,283.957,401.251,314.591z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenTombstone = definePiece('PieceHalloweenTombstone', {\r\n  path: <g>\r\n   <path d=\"m310.57959,214.18901c18.11361,-19.31361 -3.7406,-43.37905 -25.98583,-38.09752l0,42.67408c9.2552,1.74895 18.77428,3.11653 25.98583,-4.57656z\"/>\r\n   <path d=\"m129.70544,175.71203l0,42.67408c1.4138,0.01734 2.82568,0.04045 4.23563,0.07705c40.18933,0.00193 36.10009,-50.48851 -4.23563,-42.75112z\"/>\r\n   <path d=\"m413.15147,392.28371l-16.74989,0l0,-215.12898c0,-40.68243 -13.72389,-78.15395 -36.78388,-108.06144l-22.93479,7.21154l9.8003,27.57684l0.81284,2.2748l-1.54285,1.56597l-23.05228,23.42789c-1.05361,1.07287 -2.77752,1.08443 -3.85232,0.03274c-1.02472,-1.01509 -1.07865,-2.65617 -0.13676,-3.7329l20.04555,-22.91938l-12.48344,-29.52418l-1.64687,-3.89277l4.24718,-2.15345l21.51906,-10.90592c-32.4115,-35.66478 -79.16711,-58.05447 -131.15032,-58.05447c-47.67246,0 -90.9398,18.83399 -122.78115,49.45994l25.07861,12.71458l2.53097,1.28282l0.31589,2.24205l7.99742,56.33826c0.2138,1.48892 -0.8244,2.86613 -2.31332,3.07993c-1.42151,0.20032 -2.74285,-0.74542 -3.04333,-2.12841l-11.27574,-52.83457l-30.02113,-9.43818c-27.17619,31.13831 -43.64679,71.86504 -43.64679,116.44023l0,215.12898l-16.75181,0c-10.63818,0 -19.2616,8.62342 -19.2616,19.2616l0,18.9226c0,10.63433 8.62342,19.2616 19.2616,19.2616l387.82079,0c10.63818,0 19.2616,-8.62727 19.2616,-19.2616l0,-18.9226c-0.00193,-10.63818 -8.62535,-19.26353 -19.26353,-19.26353zm-144.04211,-222.43298c5.59164,-0.28122 11.37783,-0.57207 17.23143,-0.57207c13.94155,0 31.1229,1.44847 40.31261,12.73577c0.00385,0.00385 0.0077,0.0077 0.01156,0.01156l0.0077,0.01541c0.00385,0.00578 0.01156,0.01156 0.01541,0.01734c0.0077,0.0077 0.01541,0.01541 0.01926,0.02504c0.00385,0.00578 0.0077,0.01156 0.01541,0.01926c6.75697,8.36531 8.55408,16.01602 5.34124,22.74025c-5.38362,11.27959 -23.59931,17.36819 -37.99736,17.36819c-3.28025,0 -9.09533,-0.89374 -9.09533,-0.89374s-4.54959,37.16719 2.2382,44.46541c1.52745,1.63724 3.37078,2.8199 5.51267,3.54221l-32.98549,0c10.84621,-4.50721 15.75406,-26.9778 15.75406,-49.26732c0,-22.61312 -4.91171,-45.40923 -15.76947,-49.79509c2.96629,-0.09246 6.11556,-0.2504 9.3881,-0.4122zm-59.43938,0.48154l34.88854,0c-3.75794,1.56019 -7.90881,5.69758 -11.09468,15.3149c-2.9085,8.77944 -3.1069,20.6677 -3.1069,33.48244c0,22.0006 3.46516,45.50553 14.04749,50.19381l-34.89624,0c3.74253,-1.55826 7.88955,-5.69373 11.05616,-15.3149c2.89117,-8.77173 3.13001,-20.66192 3.13001,-33.46896c0.00385,-22.00831 -3.48635,-45.51709 -14.02437,-50.20729zm-104.76,-0.05201c3.66741,-0.07705 7.46002,-0.23692 11.41443,-0.40257c5.73803,-0.23884 11.6629,-0.48732 17.50109,-0.48732c11.63979,0 20.4173,1.0305 27.62114,3.24558c11.07542,3.40545 17.20446,10.95407 16.81538,20.71393c-0.47769,12.00961 -10.52647,23.21986 -23.3701,26.07636c-0.59518,0.13098 -1.08443,0.55088 -1.29823,1.1191c-0.2138,0.56629 -0.13483,1.20578 0.22151,1.69887l21.18006,29.4298c6.29854,8.78714 12.74155,15.2263 22.73062,17.64748l-21.625,0l-34.1932,-47.22752c-0.35056,-0.48732 -0.92263,-0.76276 -1.5313,-0.74542c-1.7374,0.06742 -3.79646,0.13676 -5.89598,0.13676c-1.68154,0 -3.20898,-0.04238 -4.66516,-0.13483c-0.48924,-0.02889 -0.98619,0.14446 -1.35024,0.48539c-0.36212,0.34286 -0.56822,0.81862 -0.56822,1.31749c0,2.50016 -0.22921,5.6398 -0.46228,8.96435c-0.84558,11.75536 -1.89919,26.37876 4.88667,33.66735c1.52359,1.63531 3.36308,2.81605 5.50304,3.53643l-32.95275,0c10.89051,-4.50721 15.8157,-26.97973 15.8157,-49.27118c0,-22.57652 -4.91363,-45.33411 -15.77718,-49.77005z\"/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 50, y: 50},\r\n});\r\n\r\nconst PieceHalloweenPumpkin = definePiece('PieceHalloweenPumpkin', {\r\n  path: <path d=\"m468.74161,145.38332c-25.52721,-31.3253 -52.92613,-46.95841 -82.22343,-46.95841c-20.72406,0 -40.16348,8.29877 -58.36017,25.00115c-12.62923,-9.61583 -26.26865,-16.44316 -40.93732,-20.48009c-3.03246,-39.3801 -20.45722,-67.93597 -52.29333,-85.65997l-33.33805,23.54115c21.70947,14.12736 34.34823,33.82218 37.88389,59.08636c-21.72472,2.535 -41.93416,10.61267 -60.63213,24.23112c-18.68273,-17.16363 -38.64438,-25.72163 -59.85448,-25.72163c-29.81764,0 -56.60092,15.63311 -80.33839,46.95841c-25.77309,32.32024 -38.6482,70.49765 -38.6482,114.44265c0,11.10824 1.014,22.26984 3.01722,33.35139c7.58211,45.47172 28.81127,85.15297 63.6646,118.97324c31.32339,30.84689 60.38435,46.24556 87.16381,46.24556c0.6328,0 1.28465,-0.02287 1.93651,-0.06671c30.65438,-9.40998 63.19572,-14.48378 96.93403,-14.48378c28.17847,0 55.52974,3.54137 81.64019,10.18954l-0.14104,-0.18679l0.61564,0.30496c4.98994,1.27703 9.93032,2.67604 14.82877,4.17988c0.66329,0.04003 1.32658,0.0629 1.98797,0.0629c26.78518,0 55.56786,-15.39867 86.39569,-46.24556l0,-0.00191c33.84124,-33.82027 55.57167,-73.49962 65.16463,-118.97324c2.55406,-12.61017 3.79296,-25.00115 3.79296,-37.12911c0.00191,-42.46213 -12.76075,-79.34345 -38.25937,-110.66113zm-373.25996,61.40407l108.37772,37.1577c-9.0993,24.7305 -25.51387,37.10433 -49.26277,37.10433c-6.56812,0 -12.38717,-1.0159 -17.42666,-3.03056l0,0c-32.34883,-13.12289 -46.2284,-36.88323 -41.68828,-71.23146zm96.2574,231.91396c0.50509,-0.51081 1.26559,-1.27322 2.26244,-2.27578l0.75859,0.77193c-0.50509,0.49938 -1.50956,0.99303 -3.02103,1.50384zm184.91743,-70.48812l-249.34824,0l-18.17954,-50.80093l48.5099,32.62139l39.39535,-32.62139l53.07289,37.14054l55.32199,-39.37439l43.19022,37.12911l50.78568,-31.82467l-22.74825,47.73034zm0.00191,-90.19437c-5.56555,2.01275 -11.36364,3.03056 -17.42095,3.03056c-24.25781,0 -40.68953,-12.37383 -49.27421,-37.10433l108.3701,-37.1596c4.05218,34.34823 -9.8617,58.11048 -41.67494,71.23337z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenGhost = definePiece('PieceHalloweenGhost', {\r\n  path: <g>\r\n    <path d={\"m201.144531 256c-17.300781 0-36.574219 30.042969-36.574219 73.144531-.179687 13.222657.574219 26.441407 2.25 39.558594 20.023438-16.175781 48.621094-16.175781 68.644532 0 1.675781-13.117187 2.429687-26.335937 2.25-39.558594 0-43.101562-19.273438-73.144531-36.570313-73.144531zm0 0\"}/>\r\n    <path d={\"m201.144531 374.855469c-11.320312-.027344-22.007812 5.222656-28.902343 14.199219 6.390624 13.230468 16.449218 13.230468 28.902343 13.230468 12.449219 0 22.507813 0 28.898438-13.230468-6.894531-8.976563-17.582031-14.226563-28.898438-14.199219zm0 0\"}/>\r\n    <path d={\"m146.285156 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m9.390625 137.398438c-6.011719 5.988281-9.390625 14.125-9.390625 22.609374 0 8.488282 3.378906 16.621094 9.390625 22.613282l27.179687 27.234375v-22.691407c.042969-19.089843 2.753907-38.082031 8.046876-56.421874-12.015626-5.023438-25.871094-2.40625-35.226563 6.65625zm0 0\"}/>\r\n    <path d={\"m292.570312 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m434.707031 387.328125c-9.484375-16.925781-14.359375-36.042969-14.136719-55.441406v-66.40625c-2.863281-1.125-4.96875-3.617188-5.601562-6.632813-.632812-3.011718.296875-6.140625 2.464844-8.324218l67.886718-67.886719c12.472657-12.507813 12.472657-32.75 0-45.257813-12.667968-12.078125-32.589843-12.078125-45.257812 0l-67.882812 67.886719c-3.589844 3.464844-9.292969 3.414063-12.816407-.109375-3.527343-3.527344-3.578125-9.230469-.113281-12.816406l55.351562-55.351563c-20.773437-80.652343-93.511718-137.0117185-176.796874-136.988281h-2.832032c-78.738281 1.859375-147.5 53.765625-170.863281 128.976562-6.140625 18.785157-9.261719 38.425782-9.253906 58.1875v178.550782c.078125 14.484375 3.398437 28.769531 9.71875 41.800781 29.476562 61.511719 121.363281 104.484375 223.425781 104.484375 100.761719 0 178.148438-32.171875 215.863281-88.960938-28.007812 2.40625-54.90625-11.484374-69.15625-35.710937zm-343.277343-209.042969c0-33.882812 15.722656-59.429687 36.570312-59.429687 20.84375 0 36.570312 25.546875 36.570312 59.429687 0 33.882813-15.726562 59.429688-36.570312 59.429688-20.847656 0-36.570312-25.546875-36.570312-59.429688zm157.859374 210.960938c-.171874 1.1875-.578124 2.324218-1.199218 3.347656-9.296875 25.070312-26.128906 27.976562-46.945313 27.976562-20.820312 0-37.652343-2.90625-46.949219-27.976562-.621093-1.023438-1.027343-2.160156-1.199218-3.347656-5.195313-19.589844-7.457032-39.847656-6.710938-60.101563 0-51.265625 24.101563-91.429687 54.859375-91.429687 30.753907 0 54.855469 40.164062 54.855469 91.429687.75 20.253907-1.511719 40.511719-6.710938 60.101563zm24.996094-151.53125c-20.84375 0-36.570312-25.546875-36.570312-59.429688 0-33.882812 15.726562-59.429687 36.570312-59.429687 20.847656 0 36.570313 25.546875 36.570313 59.429687 0 33.882813-15.722657 59.429688-36.570313 59.429688zm0 0\"}/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n    'halloween-witch-hat': PieceHalloweenWitchHat,\r\n    'halloween-cauldron': PieceHalloweenCauldron,\r\n    'halloween-bat': PieceHalloweenBat,\r\n    'halloween-spider': PieceHalloweenSpider,\r\n    'halloween-cat': PieceHalloweenCat,\r\n    'halloween-tombstone': PieceHalloweenTombstone,\r\n    'halloween-pumpkin': PieceHalloweenPumpkin,\r\n    'halloween-ghost': PieceHalloweenGhost,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass BaseCellDefinitions extends PureComponent {\r\n  static defaultBorder = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`M0,0h${constants.cellSize}v${constants.cellSize}h-${constants.cellSize}z M${constants.borderWidth},${constants.borderWidth}v${constants.cellSize - constants.borderWidth * 2}h${constants.cellSize - constants.borderWidth * 2}v-${constants.cellSize - constants.borderWidth * 2}z`} />\r\n    </g>\r\n  );\r\n  static defaultBorderHex = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`\r\n        M ${(() => {\r\n          const center = {x: 0, y: 0};\r\n          return [0, 1, 2, 3, 4, 5]\r\n            .map(index => index / 6 * Math.PI * 2)\r\n            .map(angle => {\r\n              const radius = constants.cellSize * 1.5 / 2;\r\n              const x = center.x + Math.cos(angle) * radius;\r\n              const y = center.y + Math.sin(angle) * radius;\r\n              return `${x},${y}`;\r\n            })\r\n            .join('L');\r\n        })()} z \r\n        M ${[0, 1, 2, 3, 4, 5].reverse().map(index => index / 6 * Math.PI * 2).map(angle => `${Math.cos(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2},${Math.sin(angle) * (constants.cellSize - constants.borderWidth * 2) * 1.5 / 2}`).concat('L')} z \r\n      `} />\r\n    </g>\r\n  );\r\n\r\n\trender() {\r\n\t  const {name, paths} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`cell-${name}-border`} className={\"cell-border\"}>\r\n          {paths.border}\r\n        </g>\r\n        <g id={`cell-${name}-0`} className={\"cell-0\"}>\r\n          {paths.level0}\r\n        </g>\r\n        <g id={`cell-${name}-1`} className={\"cell-1\"}>\r\n          {paths.level1}\r\n        </g>\r\n        <g id={`cell-${name}-2`} className={\"cell-2\"}>\r\n          {paths.level2}\r\n        </g>\r\n        <g id={`cell-${name}-3`} className={\"cell-3\"}>\r\n          {paths.level3}\r\n        </g>\r\n        <g id={`cell-${name}-4`} className={\"cell-4\"}>\r\n          {paths.level4}\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBaseCellDefinitions.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  paths: PropTypes.shape({\r\n    border: PropTypes.node.isRequired,\r\n    level0: PropTypes.node.isRequired,\r\n    level1: PropTypes.node.isRequired,\r\n    level2: PropTypes.node.isRequired,\r\n    level3: PropTypes.node.isRequired,\r\n    level4: PropTypes.node.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst defineCellDefinitions = (className, name, paths) => {\r\n  class CellDefinitionsFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BaseCellDefinitions name={name} paths={paths} />\r\n      );\r\n    }\r\n  }\r\n  CellDefinitionsFor.displayName = className;\r\n\r\n  return CellDefinitionsFor;\r\n};\r\n\r\nconst OriginalCellDefinitions = defineCellDefinitions('OriginalCellDefinitions', 'original', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <rect\r\n      className={'border fill'}\r\n      width={constants.cellSize - constants.borderWidth * 2}\r\n      height={constants.cellSize - constants.borderWidth * 2}\r\n      transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n    />\r\n  ),\r\n  level1: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 2}\r\n        height={constants.cellSize - constants.borderWidth * 2}\r\n        transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level3: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level4: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 10}\r\n        height={constants.cellSize - constants.borderWidth * 10}\r\n        transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nconst HalloweenCellDefinitions = defineCellDefinitions('HalloweenCellDefinitions', 'halloween', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <path className={\"fill\"} transform={\"scale(0.21)\"} d={\"m475.484375 292.628906h18.285156c8.34375.027344 15.640625-5.609375 17.71875-13.691406 2.074219-8.082031-1.605469-16.539062-8.933593-20.53125.082031-.433594.132812-.875.148437-1.316406.09375-.339844.164063-.683594.210937-1.035156v-171.820313c6.503907-11.746094 9.664063-25.046875 9.140626-38.464844 0-27.902343-10.832032-45.7148435-18.285157-45.7148435-7.449219 0-18.285156 17.8125005-18.285156 45.7148435-.523437 13.417969 2.636719 26.71875 9.144531 38.464844v109.511719c-11.957031-32.042969-32.140625-60.375-58.515625-82.148438-4.039062-3.027344-9.769531-2.210937-12.800781 1.828125-3.027344 4.042969-2.210938 9.773438 1.828125 12.800781 49.691406 37.265626 67 117.863282 69.332031 129.828126h-27.273437c0-2.53125-.492188-62.117188-43.492188-72.867188-3.179687-.820312-6.550781.125-8.839843 2.476562-2.289063 2.355469-3.140626 5.753907-2.230469 8.90625.90625 3.15625 3.4375 5.578126 6.625 6.355469 29.121093 7.277344 29.652343 54.527344 29.652343 55.128907h-173.488281c2.828125-12.214844 22.457031-88.640626 77.449219-120.0625 4.253906-2.566407 5.679688-8.054688 3.21875-12.363282-2.464844-4.3125-7.917969-5.871094-12.285156-3.507812-33.832032 19.34375-55.425782 52.480468-68.574219 81.003906v-116.890625c6.492187-11.75 9.640625-25.050781 9.105469-38.464844 0-27.902343-10.832032-45.7148435-18.285156-45.7148435-7.449219 0-18.285157 17.8125005-18.285157 45.7148435-.523437 13.417969 2.640625 26.71875 9.144531 38.464844v120.339844c-15.261718-33.203125-38.578124-62.0625-67.832031-83.960938-4.109375-2.933593-9.820312-1.980469-12.753906 2.128907-2.933594 4.113281-1.980469 9.824218 2.128906 12.757812 55.167969 39.402344 75.054688 108.496094 78.171875 120.554688h-173.429687c0-.601563.53125-47.851563 29.648437-55.128907 4.867188-1.257812 7.804688-6.203125 6.585938-11.074219-1.222656-4.875-6.144532-7.851562-11.027344-6.664062-43 10.75-43.492188 70.335938-43.492188 72.867188h-27.429687c.714844-7.988282 9.4375-91.675782 60.34375-129.828126 2.613281-1.960937 3.980469-5.164062 3.589844-8.40625-.390625-3.242187-2.480469-6.03125-5.484375-7.316406-3.003906-1.28125-6.464844-.863281-9.078125 1.09375-22.324219 17.949219-39.382813 41.597656-49.371094 68.445313v-95.808594c6.503906-11.746094 9.667969-25.046875 9.144531-38.464844 0-27.902343-10.835937-45.7148435-18.289062-45.7148435-7.449219 0-18.2851565 17.8125005-18.2851565 45.7148435-.5234375 13.417969 2.6406245 26.71875 9.1445315 38.464844v171.820313c.054687.488281.152343.96875.292969 1.4375 0 .292968 0 .601562.109374.914062-7.320312 3.988281-11 12.433594-8.9375 20.507812 2.0625 8.078126 9.34375 13.722657 17.675782 13.714844h54.859375c20.199219 0 36.570312 16.371094 36.570312 36.570313s-16.371093 36.570312-36.570312 36.570312h-36.570313c-10.101562 0-18.289062 8.1875-18.289062 18.285157 0 10.101562 8.1875 18.285156 18.289062 18.285156h128c20.195313 0 36.570313 16.375 36.570313 36.574218 0 20.195313-16.375 36.570313-36.570313 36.570313h-118.859375c-10.097656 0-18.285156 8.1875-18.285156 18.285156 0 10.101563 8.1875 18.285157 18.285156 18.285157h448c10.101563 0 18.285157-8.183594 18.285157-18.285157 0-10.097656-8.183594-18.285156-18.285157-18.285156h-36.570312c-20.199219 0-36.570313-16.375-36.570313-36.570313 0-20.199218 16.371094-36.574218 36.570313-36.574218h36.570312c10.101563 0 18.285157-8.183594 18.285157-18.285156 0-10.097657-8.183594-18.285157-18.285157-18.285157h-18.285156c-20.199219 0-36.570313-16.371093-36.570313-36.570312s16.371094-36.570313 36.570313-36.570313zm-338.285156 0c0-5.050781 4.09375-9.144531 9.140625-9.144531h64c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625h-64c-5.046875 0-9.140625-4.09375-9.140625-9.140625zm27.429687 54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046875 4.09375-9.140625 9.144531-9.140625h228.570313c5.050781 0 9.140625 4.09375 9.140625 9.140625 0 5.050781-4.089844 9.144531-9.140625 9.144531zm27.425782 36.570313c0-5.046876 4.09375-9.140626 9.144531-9.140626h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531zm182.859374 36.574218c5.046876 0 9.140626 4.09375 9.140626 9.140625 0 5.050781-4.09375 9.144531-9.140626 9.144531h-118.859374c-5.046876 0-9.140626-4.09375-9.140626-9.144531 0-5.046875 4.09375-9.140625 9.140626-9.140625zm-64 64h-91.429687c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h91.429687c5.046876 0 9.140626 4.09375 9.140626 9.144531s-4.09375 9.144531-9.140626 9.144531zm91.425782 0h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.144531s-4.09375 9.144531-9.144531 9.144531zm0-91.429687h-109.710938c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046876 4.09375-9.140626 9.144531-9.140626h109.710938c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531zm0-91.429688h-82.285156c-5.046876 0-9.140626-4.09375-9.140626-9.140625 0-5.050781 4.09375-9.144531 9.140626-9.144531h82.285156c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625zm0 0\"}/>\r\n  ),\r\n  level1: (\r\n    <g className={\"fill\"} transform={\"translate(-1,6),scale(0.33,0.33)\"}>\r\n      <path d={\"m221.30057,128.34535c12.80287,-11.57301 -2.64389,-25.9934 -18.36703,-22.82862l0,25.57096c6.54166,1.048 13.26984,1.86747 18.36703,-2.74234z\"}/>\r\n      <path d={\"m93.457,105.28936l0,25.57096c0.99929,0.01039 1.99722,0.02424 2.99378,0.04617c28.4062,0.00115 25.51589,-30.25349 -2.99378,-25.61713z\"}/>\r\n      <path d={\"m293.79936,235.06243l-11.83898,0l0,-128.90859c0,-24.37754 -9.70018,-46.83105 -25.9992,-64.75208l-16.21053,4.32127l6.92695,16.52446l0.57452,1.36309l-1.0905,0.93835l-16.29357,14.03835c-0.7447,0.64288 -1.96318,0.64981 -2.72286,0.01962c-0.72428,-0.60826 -0.7624,-1.59162 -0.09666,-2.23681l14.16839,-13.73365l-8.82342,-17.69134l-1.16402,-2.33261l3.00195,-1.29038l15.20988,-6.53499c-22.90876,-21.37089 -55.95607,-34.78713 -92.6983,-34.78713c-33.69535,0 -64.27712,11.28562 -86.78289,29.63716l17.7258,7.61877l1.78892,0.76869l0.22327,1.34347l5.65265,33.75875c0.15112,0.89218 -0.58269,1.71743 -1.63508,1.84554c-1.00473,0.12004 -1.93867,-0.44667 -2.15106,-1.27537l-7.9698,-31.65929l-21.21922,-5.65551c-19.20839,18.65855 -30.84997,43.06264 -30.84997,69.77278l0,128.90859l-11.84034,0c-7.51917,0 -13.61428,5.16729 -13.61428,11.54185l0,11.33871c0,6.37225 6.09511,11.54185 13.61428,11.54185l274.11544,0c7.51917,0 13.61428,-5.16959 13.61428,-11.54185l0,-11.33871c-0.00136,-6.37456 -6.09648,-11.543 -13.61565,-11.543zm-101.81034,-133.28526c3.95223,-0.16851 8.04196,-0.34279 12.17934,-0.34279c9.85402,0 21.99796,0.86795 28.49333,7.63147c0.00272,0.00231 0.00545,0.00462 0.00817,0.00693l0.00545,0.00923c0.00272,0.00346 0.00817,0.00693 0.01089,0.01039c0.00545,0.00462 0.01089,0.00923 0.01361,0.015c0.00272,0.00346 0.00545,0.00693 0.01089,0.01154c4.77589,5.01262 6.0461,9.59705 3.77524,13.62631c-3.80519,6.75891 -16.68022,10.40728 -26.8569,10.40728c-2.31851,0 -6.42866,-0.53554 -6.42866,-0.53554s-3.21569,22.27115 1.58198,26.64436c1.07961,0.98106 2.3825,1.68973 3.89641,2.12255l-23.31446,0c7.6662,-2.70079 11.13512,-16.16551 11.13512,-29.52174c0,-13.55013 -3.47164,-27.20991 -11.14601,-29.83799c2.0966,-0.0554 4.32254,-0.15004 6.6356,-0.247zm-42.01232,0.28855l24.65955,0c-2.65615,0.93489 -5.59002,3.41408 -7.84183,9.17692c-2.05576,5.26077 -2.19598,12.3844 -2.19598,20.06319c0,13.1831 2.44921,27.26762 9.9289,30.0769l-24.665,0c2.64526,-0.93374 5.57641,-3.41177 7.8146,-9.17692c2.0435,-5.25616 2.21232,-12.38094 2.21232,-20.05512c0.00272,-13.18772 -2.46419,-27.27454 -9.91256,-30.08498zm-74.04537,-0.03116c2.59216,-0.04617 5.27281,-0.14196 8.06782,-0.24122c4.0557,-0.14312 8.24345,-0.29201 12.36994,-0.29201c8.22711,0 14.43114,0.61749 19.52288,1.9448c7.82821,2.0406 12.16028,6.56385 11.88527,12.4121c-0.33763,7.19634 -7.44021,13.9137 -16.51821,15.62535c-0.42068,0.07848 -0.76648,0.3301 -0.9176,0.67058c-0.15112,0.33933 -0.0953,0.72252 0.15656,1.01799l14.97027,17.63479c4.45187,5.26539 9.00585,9.12383 16.06622,10.57464l-15.28476,0l-24.16808,-28.29946c-0.24778,-0.29201 -0.65212,-0.45706 -1.08234,-0.44667c-1.22801,0.0404 -2.68338,0.08195 -4.16733,0.08195c-1.18853,0 -2.26814,-0.02539 -3.29738,-0.08079c-0.3458,-0.01731 -0.69705,0.08656 -0.95436,0.29085c-0.25595,0.20544 -0.40162,0.49053 -0.40162,0.78946c0,1.49813 -0.16201,3.37945 -0.32674,5.37158c-0.59767,7.04399 -1.34237,15.80656 3.45394,20.174c1.07689,0.9799 2.37705,1.68742 3.8896,2.11908l-23.29132,0c7.69752,-2.70079 11.17869,-16.16667 11.17869,-29.52405c0,-13.5282 -3.473,-27.16489 -11.15146,-29.82298z\"}/>\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <path className={\"fill\"} transform={\"translate(9,7),scale(0.3,0.3)\"} d={\"M245.928,84.493c-13.393-16.435-27.768-24.637-43.139-24.637c-10.873,0-21.072,4.354-30.619,13.117   c-6.626-5.045-13.782-8.627-21.478-10.745c-1.591-20.661-10.733-35.643-27.436-44.942l-17.491,12.351   c11.39,7.412,18.021,17.745,19.876,31c-11.398,1.33-22.001,5.568-31.811,12.713c-9.802-9.005-20.275-13.495-31.403-13.495   c-15.644,0-29.696,8.202-42.15,24.637C6.755,101.449,0,121.479,0,144.535c0,5.828,0.532,11.684,1.583,17.498   c3.978,23.857,15.116,44.676,33.402,62.42c16.434,16.184,31.681,24.263,45.731,24.263c0.332,0,0.674-0.012,1.016-0.035   c16.083-4.937,33.156-7.599,50.857-7.599c14.784,0,29.134,1.858,42.833,5.346l-0.074-0.098l0.323,0.16   c2.618,0.67,5.21,1.404,7.78,2.193c0.348,0.021,0.696,0.033,1.043,0.033c14.053,0,29.154-8.079,45.328-24.263v-0.001   c17.755-17.744,29.156-38.562,34.189-62.42c1.34-6.616,1.99-13.117,1.99-19.48C266.002,120.274,259.306,100.924,245.928,84.493z\"}/>\r\n  ),\r\n  level3: (\r\n    <path className={\"fill\"} transform={\"translate(18,10),scale(0.13,0.13)\"} d={\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954  c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673  c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939  c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954  c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689  c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1  c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715  c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z\"}/>\r\n  ),\r\n  level4: (\r\n    <path className={\"fill\"} transform={\"translate(15,0),scale(0.25)\"} d={\"M277.531,179.745c-0.045-10.481-9.676-33.631-92.951-35.979l-31.034-68.857l42.085,17.586 l-63.13-67.928c-8.62-6.047-37.77,80.794-49.648,117.583l0,0c-8.354,1.318-34.706,6.113-55.001,16.797 c-19.8,10.395-30.244,19.572-27.386,32.326c-2.076,14.357,3.17,56.896,135.987,62.381 C179.174,255.423,285.918,226.942,277.531,179.745z M144.93,182.741c-67.228,4.734-72.835-13.954-72.835-13.954l6.106-13.264 c0,0,18.403,12.415,56.083,11.763c37.68-0.659,53.318-17.423,53.318-17.423l9.927,12.077 C195.098,177.688,144.93,182.741,144.93,182.741z\"}/>\r\n  ),\r\n});\r\n\r\nclass CellDefinitions extends PureComponent {\r\n  static cellDefinitionsStyleMap = {\r\n    'original': OriginalCellDefinitions,\r\n    'halloween': HalloweenCellDefinitions,\r\n  };\r\n\r\n\trender() {\r\n  \treturn Object.values(this.constructor.cellDefinitionsStyleMap)\r\n    \t.map(CellDefinitionsStyle =>\r\n        <CellDefinitionsStyle key={CellDefinitionsStyle.displayName || CellDefinitionsStyle.name} />);\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl, gameType,\r\n      theme: {cells = 'original', pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translate = constants.translate(gameType, {x, y});\r\n    return (\r\n    \t<g transform={`translate(${translate.x},${translate.y})`}>\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`#cell-${cells}-${i}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`#cell-${cells}-${i}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n        <use\r\n          xlinkHref={`#cell-${cells}-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows, gameType,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  gameType={gameType}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces gameType={gameType} rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {gameType, rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(gameType.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            gameType={gameType}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {gameType, cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    const translateTo = constants.translate(gameType, position);\r\n    const translateFrom = constants.translate(gameType, previousPosition);\r\n    return (\r\n      <g transform={`translate(${translateTo.x},${translateTo.y})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${translateFrom.x} ${translateFrom.y}`}\r\n          to={`${translateTo.x} ${translateTo.y}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      gameType, cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl,\r\n    } = this.props;\r\n    return (\r\n      <Cell\r\n        gameType={gameType}\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        gameType={game.constructor}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gameType !== this.props.gameType) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.props.gameType.transformationMap\r\n           ? this.props.gameType.transformationMap[`${rotations},${flippedHorizontally}`]\r\n           : null;\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + this.props.gameType.transformationMaxRotations - 1) % this.props.gameType.transformationMaxRotations,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % this.props.gameType.transformationMaxRotations,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + this.props.gameType.transformationMaxRotations / 2) % this.props.gameType.transformationMaxRotations,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n    const {gameType} = this.props;\r\n\r\n    if (!gameType.transformationMap) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {gameType, small, medium, player, applicableSettings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={applicableSettings}\r\n        allowControl={allowControl}\r\n        gameType={gameType}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  gameType: PropTypes.oneOf(Game.GAME_TYPES).isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    puzzlesInfo: client.puzzlesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onPuzzles: this.gotPuzzles,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onPuzzles: this.gotPuzzles,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotPuzzles = puzzlesInfo => {\r\n    this.setState({puzzlesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, puzzlesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        puzzlesInfo={puzzlesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport class GameCard extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game.game,\r\n  ], serializedGame => Game.Classic.deserialize(serializedGame));\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, tournamentsById, puzzlesByGameId, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = this.gameGame;\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n    const puzzles = puzzlesByGameId[game.id] || [];\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={applicableSettings}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n              {\" \"}\r\n              {puzzles.length ? <Label content={`${puzzles.length} puzzles`} icon={'puzzle'} />  : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  puzzlesByGameId: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {applicableSettings, user, usersById, tournamentsById, puzzlesByGameId, games, terse, live, selectLiveGame, currentGameId, pageSize, reverse} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    let visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize);\r\n    if (reverse) {\r\n      visibleGames = visibleGames.reverse();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              puzzlesByGameId={puzzlesByGameId}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n              applicableSettings={applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  puzzlesByGameId: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n  reverse: PropTypes.bool.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n  reverse: true,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport * as utils from \"../utils\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport class PuzzleCard extends Component {\r\n  positionGameSelector = createSelector([\r\n    props => props.puzzle.startingPosition.position,\r\n  ], position => Game.Classic.fromCompressedPositionNotation(position));\r\n\r\n  get positionGame() {\r\n    return this.positionGameSelector(this.props);\r\n  }\r\n\r\n  selectPuzzle = () => {\r\n    this.props.selectPuzzle(this.props.puzzle);\r\n  };\r\n\r\n  get userPuzzle() {\r\n    const {user, puzzle} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n    return user.puzzles[puzzle.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, gamesById, puzzle, currentPuzzleId} = this.props;\r\n    const positionGame = this.positionGame;\r\n    const userPuzzle = this.userPuzzle;\r\n\r\n    const creator = usersById[puzzle.userId];\r\n    const userIsCreator = !!user && puzzle.userId === user.id;\r\n    const game = gamesById[puzzle.meta.gameId];\r\n    const playerA = game ? usersById[game.userIds[0]] : null;\r\n    const playerB = game ? usersById[game.userIds[1]] : null;\r\n    const userInProgress = !!userPuzzle && userPuzzle.meta.started && !userPuzzle.meta.won;\r\n    const userSolvedPuzzle = !!userPuzzle && userPuzzle.meta.won;\r\n    const userMadeMistakes = !!userPuzzle && !!userPuzzle.meta.mistakes;\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/puzzle/${puzzle.id}`}\r\n        onClick={this.selectPuzzle}\r\n        style={{\r\n          ...(puzzle.id === currentPuzzleId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {utils.getPuzzleTitle(puzzle)}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[puzzle.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[puzzle.meta.difficulty],\r\n              }}\r\n              content={`${puzzle.meta.difficulty}/${puzzle.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[puzzle.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userInProgress ? (\r\n              <Label\r\n                  icon={{name: 'play', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ? `Started (${userPuzzle.meta.mistakes} mistakes)` : 'Started'}\r\n              />\r\n            ) : userSolvedPuzzle ? (\r\n              <Label\r\n                  icon={{name: 'trophy', color: userMadeMistakes ? 'orange' : 'green'}}\r\n                  content={userMadeMistakes ?`Solved with ${userPuzzle.meta.mistakes} mistakes` : 'Perfect'}\r\n              />\r\n            ) : userMadeMistakes ? (\r\n              <Label\r\n                  icon={{name: 'exclamation', color: 'orange'}}\r\n                  content={`${userPuzzle.meta.mistakes} mistakes`}\r\n              />\r\n            ) : null}\r\n            {user && puzzle.isMyPuzzle ? (\r\n              <Label\r\n                icon={(\r\n                  puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      puzzle.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  puzzle.meta.public && puzzle.meta.publishDatetime.isSameOrBefore()\r\n                    ? puzzle.meta.publishDatetime.fromNow() : (\r\n                      puzzle.meta.public\r\n                        ? puzzle.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={puzzle.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            {puzzle.usersStats && puzzle.usersStats.attempted ? (\r\n              <Label\r\n                icon={'user'}\r\n                content={`${puzzle.usersStats.averagePerfectScore !== null ? puzzle.usersStats.averagePerfectScore : 'No perfect solve'} (${puzzle.usersStats.perfect}/${puzzle.usersStats.imperfect}/${puzzle.usersStats.attempted})`}\r\n                title={`${puzzle.usersStats.averagePerfectScore !== null ? `${puzzle.usersStats.averagePerfectScore} average user score` : 'No perfect solve'} (${puzzle.usersStats.perfect} perfect solves, out of ${puzzle.usersStats.imperfect} solves, out of ${puzzle.usersStats.attempted} attempts)`}\r\n              />\r\n            ) : null}\r\n            {game ? (\r\n              userSolvedPuzzle || userIsCreator ? (\r\n                <Label\r\n                  icon={'play'}\r\n                  content={`${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                  title={`From game between ${playerA ? playerA.name : 'Unknown'} vs ${playerB ? playerB.name : 'Unknown'}`}\r\n                />\r\n              ) : (\r\n                <Label icon={'play'} content={'Solve to see game'} />\r\n              )\r\n            ) : null}\r\n            <Board\r\n              game={positionGame}\r\n              medium\r\n              settings={applicableSettings}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n  puzzle: PropTypes.object.isRequired,\r\n  selectPuzzle: PropTypes.func.isRequired,\r\n  currentPuzzleId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nclass PuzzleList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById},\r\n      puzzles, selectPuzzle, currentPuzzleId, pageSize,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(puzzles.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visiblePuzzles = puzzles\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visiblePuzzles.map(puzzle => (\r\n            <PuzzleCard\r\n              key={puzzle.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              puzzle={puzzle}\r\n              selectPuzzle={selectPuzzle}\r\n              currentPuzzleId={currentPuzzleId}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  puzzles: PropTypes.array.isRequired,\r\n  selectPuzzle: PropTypes.func.isRequired,\r\n  currentPuzzleId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPuzzleList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(PuzzleList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport PuzzleList, {PuzzleCard} from \"./PuzzleList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n            {otherUser.puzzlesStats && otherUser.puzzlesStats.attempted ? (\r\n              <Label\r\n                icon={'puzzle'}\r\n                content={`${otherUser.puzzlesStats.perfectStars}⭐ (${otherUser.puzzlesStats.perfect}/${otherUser.puzzlesStats.imperfect}/${otherUser.puzzlesStats.attempted})`}\r\n                title={`${otherUser.puzzlesStats.perfectStars} total perfect stars (${otherUser.puzzlesStats.perfect} perfect puzzles, out of ${otherUser.puzzlesStats.imperfect} solved, out of ${otherUser.puzzlesStats.attempted} attempted)`}\r\n              />\r\n            ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {byId: gamesById, myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      puzzlesInfo: {otherUnsolved, puzzles, otherStarted, otherNotStarted, otherSolved, byGameId: puzzlesByGameId},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <PuzzleCard\r\n              user={user}\r\n              usersById={usersById}\r\n              gamesById={gamesById}\r\n              puzzle={otherUnsolved[0]}\r\n              selectPuzzle={this.props.selectLivePuzzle}\r\n              currentPuzzleId={null}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournamentsById={tournamentsById}\r\n                puzzlesByGameId={puzzlesByGameId}\r\n                games={items}\r\n                selectLiveGame={selectLiveGame}\r\n                applicableSettings={client.applicableSettings}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {puzzles ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let puzzlesList = [\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!puzzlesList.length) {\r\n              puzzlesList = [\r\n                {key: 'puzzles', label: \"Puzzles\", items: puzzles},\r\n              ];\r\n            }\r\n            return puzzlesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <PuzzleList selectPuzzle={this.props.selectLivePuzzle} puzzles={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(this.state.game.constructor.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.constructor !== prevProps.game.constructor\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.client.applicableSettings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.client.applicableSettings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !!(!this.props.submit && !selectedGame && game.previous);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} gameType={game.constructor} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={displayGame === game ? (\r\n          this.props.submit ? this.props.game.chainCount : (\r\n            this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n          )\r\n        ) : 0}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={client.applicableSettings}\r\n        animated={client.applicableSettings.theme.animations}\r\n        showArrows={client.applicableSettings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Grid.Row>\r\n                    <BoardTransformation onChange={this.onTransformationChange} gameType={game.constructor} />\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    {boardNode}\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Button negative content={'Undo'} disabled={!canUndo} onClick={this.props.submit ? this.takeMoveBack : this.undo} />\r\n                    <Button negative content={'Take move back'} disabled={canUndo || !canTakeBack} onClick={this.takeMoveBack}/>\r\n                  </Grid.Row>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  submitAndDisableConfirm = () => {\r\n    this.props.submit();\r\n    this.props.client.updateSettings({...this.props.user.settings, confirmSubmitMoves: false});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, applicableSettings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canAnyPlayerSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const previousGame = canAnyPlayerSubmit ? game.previous : game;\r\n    const isPlayersTurn = previousGame.nextPlayer === player;\r\n    const playerWon = previousGame.winner === player;\r\n    const finished = previousGame.finished;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={finished || player === Game.PLAYER_B}\r\n        color={finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard\r\n                  gameType={game.constructor}\r\n                  medium\r\n                  applicableSettings={applicableSettings}\r\n                  player={player}\r\n                  allowControl={allowControl}\r\n                />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    applicableSettings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          {applicableSettings.confirmSubmitMoves ? (\r\n                            <Modal\r\n                              size={'mini'}\r\n                              trigger={\r\n                                <Button\r\n                                  positive\r\n                                  className={'attention'}\r\n                                >\r\n                                  Submit...\r\n                                </Button>\r\n                              }\r\n                              header={'Submit move'}\r\n                              content={\r\n                                <Modal.Content>\r\n                                  Are you sure you want to submit these moves?\r\n                                  <br />\r\n                                  <Board\r\n                                    game={game}\r\n                                    medium\r\n                                    settings={applicableSettings}\r\n                                    animated\r\n                                    showArrows\r\n                                  />\r\n                                </Modal.Content>\r\n                              }\r\n                              actions={[\r\n                                {key: 'never-ask-again', content: 'Never ask again', onClick: this.submitAndDisableConfirm},\r\n                                {key: 'cancel', negative: true, content: 'Cancel'},\r\n                                {key: 'ok', positive: true, content: 'Submit', onClick: submit},\r\n                              ]}\r\n                            />\r\n                          ) : (\r\n                            <Button\r\n                              positive\r\n                              className={'attention'}\r\n                              onClick={submit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          )}\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? {\r\n            key: 'take-move-back', content: (\r\n              <Button negative content={'Take move back'} onClick={takeBack}/>\r\n            ),\r\n          } : null,\r\n          !finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={applicableSettings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  applicableSettings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canAnyPlayerSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayPlayer = withClient(PlayPlayer);\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, applicableSettings, selectedGame, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={applicableSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu, Button} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.Classic.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.Classic.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  switchToClassic = () => {\r\n    this.switchTo(Game.Classic);\r\n  };\r\n\r\n  switchToHex = () => {\r\n    this.switchTo(Game.Hex);\r\n  };\r\n\r\n  switchTo = gameType => {\r\n    this.setState({\r\n      selectedGame: null,\r\n      game: gameType.create(),\r\n      error: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'openings-database', icon: 'database', content: 'See in openings DB', color: 'green', active: true, as: 'a',\r\n                href: `/openings-database?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game', target: '_blank'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Button onClick={this.switchToClassic} content={'Switch to Classic'} disabled={game.constructor === Game.Classic}/>\r\n          <Button onClick={this.switchToHex} content={'Switch to Hex'} disabled={game.constructor === Game.Hex}/>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themeCellsOptions = [\r\n    {value: 'original', label: 'Original'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n    {value: 'halloween-witch-hat', label: 'Halloween: Witch Hat'},\r\n    {value: 'halloween-cauldron', label: 'Halloween: Cauldron'},\r\n    {value: 'halloween-bat', label: 'Halloween: Bat'},\r\n    {value: 'halloween-spider', label: 'Halloween: Spider'},\r\n    {value: 'halloween-cat', label: 'Halloween: Cat'},\r\n    {value: 'halloween-tombstone', label: 'Halloween: Tombstone'},\r\n    {value: 'halloween-pumpkin', label: 'Halloween: Pumpkin'},\r\n    {value: 'halloween-ghost', label: 'Halloween: Ghost'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateConfirmSubmitMoves = (e, {checked}) => {\r\n    this.props.updateSettings({confirmSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeUseTopicalTheme = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {useTopicalTheme: checked}});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  updateThemeCells = (e, {value}) => {\r\n    this.props.updateSettings({theme: {cells: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, confirmSubmitMoves, enableNotifications, theme}, applicableSettingsName, applicableSettingsOverride} = this.props;\r\n    const {useTopicalTheme, cells = 'original', pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Confirm before submitting online moves'}\r\n                  name={'confirmSubmitMoves'}\r\n                  checked={confirmSubmitMoves}\r\n                  onChange={this.updateConfirmSubmitMoves}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Use topical theme when available'}\r\n                    name={'theme.useTopicalTheme'}\r\n                    checked={useTopicalTheme}\r\n                    onChange={this.updateThemeUseTopicalTheme}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  {applicableSettingsName ? (\r\n                    <Fragment>\r\n                      {applicableSettingsName}\r\n                      <br/>\r\n                      {this.themeDemoBoard(applicableSettingsOverride.theme)}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Cells:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                          </Grid.Row>\r\n                        {this.themeCellsOptions.map(option => (\r\n                          <Grid.Row key={`theme-cells-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.cells'}\r\n                                value={option.value}\r\n                                checked={cells === option.value}\r\n                                onChange={this.updateThemeCells}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({cells: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Colours:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  applicableThemeName: PropTypes.string,\r\n  applicableSettingsOverride: PropTypes.object,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.client.settings,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n    const {client} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: (\r\n          <SettingsContent\r\n            settings={settings}\r\n            updateSettings={this.updateSettings}\r\n            applicableSettingsName={client.applicableSettingsName}\r\n            applicableSettingsOverride={client.applicableSettingsOverride}\r\n          />\r\n        )}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById}, puzzlesInfo: {byGameId: puzzlesByGameId},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          puzzlesByGameId={puzzlesByGameId}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n          reverse={false}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n    const puzzles = game ? puzzlesByGameId[game.id] || [] : [];\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              game && game.finished ? {key: 'openings-database', icon: 'database', content: 'See in openings DB', color: 'green', active: true, as: NavLink,\r\n                to: `/openings-database?position=${(selectedGame || gameGame).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game', target: '_blank'} : null,\r\n              (user && user.admin) ? {key: 'edit', content: 'Create Puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/create?position=${(selectedGame || gameGame).positionNotation}&gameId=${game ? game.id : ''}`, color: 'green', active: true,\r\n                title: 'Click to create a puzzle from this position', target: '_blank'} : null,\r\n              (user && user.admin) ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n          {puzzles.length ? (\r\n            <Grid.Row>\r\n              <Menu stackable size={'massive'} items={puzzles.map(puzzle => ({\r\n                key: puzzle.id, content: (\r\n                  <NavLink to={`/puzzle/${puzzle.id}`}>\r\n                    <Icon\r\n                      name={{1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[puzzle.meta.difficulty]}\r\n                      color={{1: 'green', 2: 'orange', 3: 'red'}[puzzle.meta.difficulty]}\r\n                    />\r\n                    {\" \"}\r\n                    {utils.getPuzzleTitle(puzzle)}\r\n                  </NavLink>\r\n                )\r\n              }))} />\r\n            </Grid.Row>\r\n          ) : null}\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.Classic.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, client, user, usersInfo: {byId},\r\n      gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById}, puzzlesInfo: {byGameId: puzzlesByGameId},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList\r\n                  user={user}\r\n                  usersById={byId}\r\n                  tournamentsById={tournamentsById}\r\n                  puzzlesByGameId={puzzlesByGameId}\r\n                  games={items}\r\n                  selectLiveGame={selectLiveGame}\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!client.applicableSettings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n      puzzlesInfo: {byGameId: puzzlesByGameId},\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  puzzlesByGameId={puzzlesByGameId}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                  applicableSettings={client.applicableSettings}\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      puzzlesByGameId={puzzlesByGameId}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                      applicableSettings={client.applicableSettings}\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.Classic.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {client, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = client.applicableSettings;\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          gameType={Game.Classic}\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong>{\" and \"}\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.Classic.getPositionNotation(Game.Classic.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.Classic.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), urlError, position: Game.Classic.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.Classic.create(), urlError: false, position: Game.Classic.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.Classic.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.Classic.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.Classic.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.Classic.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.Classic.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  discard = () => {\r\n    this.props.discard();\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition, discard} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    const positionNotation = Game.Classic.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Message error={!!positionError} content={positionError || 'Position ready to use'} />\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition || discard ? (\r\n              <div>\r\n                {usePosition ? (\r\n                  <Button\r\n                    content={'Use position'}\r\n                    primary\r\n                    onClick={this.usePosition}\r\n                    disabled={!!positionError}\r\n                  />\r\n                ) : null}\r\n                {discard ? (\r\n                  <Button\r\n                    content={'Discard'}\r\n                    negative\r\n                    onClick={this.discard}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  discard: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.Classic.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.Classic.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        gameType={Game.Classic}\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {PuzzleHeader} from \"./Puzzles\";\r\n\r\nclass CreatePuzzle extends Component {\r\n  state = {\r\n    editing: true,\r\n    puzzle: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.initialPuzzle) {\r\n      this.onCreatePuzzle(this.fillGames(this.props.initialPuzzle));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.puzzlesInfo.mine !== this.props.puzzlesInfo.mine) {\r\n      if (this.state.puzzle && !this.state.puzzle.id) {\r\n        const prevPuzzles = this.getMatchingPuzzles(prevProps.puzzlesInfo.mine);\r\n        const puzzles = this.getMatchingPuzzles(this.props.puzzlesInfo.mine);\r\n        if (prevPuzzles.length === 0 && puzzles.length === 1) {\r\n          const [puzzle] = puzzles;\r\n          this.props.history.push(`/puzzle/${puzzle.id}/edit`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMatchingPuzzles(puzzles) {\r\n    const {puzzle: newPuzzle} = this.state;\r\n    return puzzles.filter(puzzle => (\r\n      puzzle.isMyPuzzle\r\n      && puzzle.startingPosition.position === newPuzzle.startingPosition.position\r\n      && puzzle.options.type === newPuzzle.options.type\r\n      && puzzle.meta.source === newPuzzle.meta.source\r\n      && puzzle.meta.gameId === newPuzzle.meta.gameId\r\n      && puzzle.meta.public === newPuzzle.meta.public\r\n    ));\r\n  }\r\n\r\n  fillGames(puzzleStep, previousGame = null) {\r\n    puzzleStep = {...puzzleStep};\r\n    if (!puzzleStep.game && puzzleStep.position) {\r\n      if (previousGame && puzzleStep.moves) {\r\n        puzzleStep.game = previousGame.makeMoves(puzzleStep.moves);\r\n      } else {\r\n        puzzleStep.game = Game.Classic.fromCompressedPositionNotation(puzzleStep.position);\r\n      }\r\n    }\r\n    if (puzzleStep.startingPosition) {\r\n      puzzleStep.startingPosition = this.fillGames(puzzleStep.startingPosition, puzzleStep.game);\r\n    } else if (puzzleStep.playerResponses) {\r\n      puzzleStep.playerResponses = puzzleStep.playerResponses.map(nextStep => this.fillGames(nextStep, puzzleStep.game));\r\n    } else if ('puzzleResponse' in puzzleStep) {\r\n      if (puzzleStep.puzzleResponse) {\r\n        puzzleStep.puzzleResponse = this.fillGames(puzzleStep.puzzleResponse, puzzleStep.game);\r\n      }\r\n    } else {\r\n      throw new Error('Cannot find type of step');\r\n    }\r\n\r\n    return puzzleStep;\r\n  }\r\n\r\n  onCreatePuzzle = puzzle => {\r\n    this.setState({\r\n      editing: false,\r\n      puzzle,\r\n      currentStep: puzzle.startingPosition,\r\n      tree: this.getTree(puzzle.startingPosition),\r\n      game: puzzle.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  onDiscardPuzzle = () => {\r\n    this.setState({\r\n      editing: false,\r\n    });\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.puzzleResponse && currentStep.puzzleResponse.position === newGame.positionNotation) {\r\n        return currentStep.puzzleResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['puzzle', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['puzzleResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicatePuzzle(pathIndexes) {\r\n    const {puzzle} = this.state;\r\n\r\n    const newPuzzle = {\r\n      ...puzzle,\r\n      startingPosition: {...puzzle.startingPosition},\r\n    };\r\n    let newModifyingStep = newPuzzle.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newPuzzle, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        puzzleResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.puzzleResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.puzzleResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newPuzzle, newModifyingStep} = this.duplicatePuzzle(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      puzzle: newPuzzle,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newPuzzle.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.puzzle.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.puzzleResponse) {\r\n        return [treePath.concat(lastTreeStep.puzzleResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newPuzzle, newModifyingStep} = this.duplicatePuzzle(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      puzzle: newPuzzle,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newPuzzle.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editPuzzle = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createPuzzle = () => {\r\n    const cleanedPuzzle = JSON.parse(JSON.stringify(this.state.puzzle, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createPuzzle(cleanedPuzzle);\r\n  };\r\n\r\n  updatePuzzle = () => {\r\n    const cleanedPuzzle = JSON.parse(JSON.stringify(this.state.puzzle, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.updatePuzzle(cleanedPuzzle);\r\n  };\r\n\r\n  createOrUpdatePuzzle = () => {\r\n    if (this.state.puzzle.id) {\r\n      this.updatePuzzle();\r\n    } else {\r\n      this.createPuzzle();\r\n    }\r\n  };\r\n\r\n  discardPuzzle = () => {\r\n    if (this.state.puzzle.id) {\r\n      this.props.history.push(`/puzzle/${this.state.puzzle.id}`);\r\n    } else {\r\n      this.setState({\r\n        editing: true,\r\n        puzzle: null,\r\n        currentStep: null,\r\n        tree: null,\r\n        game: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {user, client, gamesInfo: {byId: gamesById}, selectLiveGame} = this.props;\r\n    const {editing, puzzle, game, tree, currentStep} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editing && (!puzzle || puzzle.isMyPuzzle)) {\r\n      return (\r\n        <PuzzleForm\r\n          initialPuzzle={puzzle}\r\n          onCreatePuzzle={this.onCreatePuzzle}\r\n          onDiscardPuzzle={this.onDiscardPuzzle}\r\n          gamesById={gamesById}\r\n        />\r\n      )\r\n    }\r\n\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PuzzleHeader puzzle={puzzle} won={false} selectLiveGame={selectLiveGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editPuzzle}>Edit</Button>\r\n            <Button positive onClick={this.createOrUpdatePuzzle}>{puzzle.id ? 'Update' : 'Create'}</Button>\r\n            <Button negative onClick={this.discardPuzzle}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[puzzle.options.initialPlayer]: 'Player', [Game.OTHER_PLAYER[puzzle.options.initialPlayer]]: 'Puzzle'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === puzzle} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCreatePuzzle.propTypes = {\r\n  initialPuzzle: PropTypes.object,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PuzzleForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    puzzle: this.props.initialPuzzle || {\r\n      isMyPuzzle: true,\r\n      options: {\r\n        initialPlayer: Game.PLAYER_A,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        gameId: null,\r\n        game: null,\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: Game.Classic.create().positionNotation,\r\n        game: Game.Classic.create(),\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n      gameId: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    if (!this.props.initialPuzzle) {\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n      }\r\n    }\r\n    const gameId = params.get('gameId');\r\n    if (gameId) {\r\n      this.setValue(null, {name: 'meta.gameId', value: gameId});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gamesById !== this.props.gamesById) {\r\n      this.onValueSet('meta.gameId');\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const puzzle = {\r\n        ...state.puzzle,\r\n      };\r\n      let newPuzzleToChange = puzzle;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newPuzzleToChange = newPuzzleToChange[part] || {};\r\n      }\r\n      newPuzzleToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {puzzle};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.puzzle.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.Classic.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.Classic.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          puzzle: {\r\n            ...state.puzzle,\r\n            options: {\r\n              ...state.puzzle.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.puzzle.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    } else if (name === 'options.type') {\r\n      this.setState(state => {\r\n        switch (state.puzzle.options.type) {\r\n          case 'mate':\r\n            return _.merge({}, {puzzle: state.puzzle}, {\r\n              puzzle: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          case 'avoidMate':\r\n            return _.merge({}, {puzzle: state.puzzle}, {\r\n              puzzle: {\r\n                options: {\r\n                  typeOptions: {\r\n                    mateIn: 1,\r\n                  },\r\n                },\r\n              },\r\n            });\r\n          default:\r\n            return null;\r\n        }\r\n      });\r\n    } else if (name === 'meta.gameId') {\r\n      this.setState(state => {\r\n        const game = this.props.gamesById[state.puzzle.meta.gameId];\r\n        return _.merge({}, {puzzle: state.puzzle}, {\r\n          error: {\r\n            gameId: !game && state.puzzle.meta.gameId ? 'There is no game with such an ID' : null,\r\n          },\r\n          puzzle: {\r\n            meta: {\r\n              game: game ? Game.Classic.deserialize(game.game) : null,\r\n            },\r\n          },\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  createPuzzle = () => {\r\n    const {puzzle, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreatePuzzle(puzzle);\r\n  };\r\n\r\n  discardPuzzle = () => {\r\n    this.props.onDiscardPuzzle();\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  discardPosition = () => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {client, initialPuzzle} = this.props;\r\n    const {editingPosition, puzzle, error} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          discard={this.discardPosition}\r\n          initialPositionNotation={puzzle.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a puzzle</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createPuzzle}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={puzzle.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={puzzle.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={puzzle.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={puzzle.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={puzzle.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {puzzle.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={puzzle.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n                {key: 'avoidMate', value: 'avoidMate', text: 'Avoid Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={puzzle.options.type}\r\n            />\r\n            {puzzle.options.type === 'mate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Mate In: ${puzzle.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={puzzle.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : puzzle.options.type === 'avoidMate' ? (\r\n              <Form.Group>\r\n                <Form.Field\r\n                  control={Input}\r\n                  type={'range'}\r\n                  label={`Avoid Mate In: ${puzzle.options.typeOptions.mateIn}`}\r\n                  min={1}\r\n                  max={10}\r\n                  name={'options.typeOptions.mateIn'}\r\n                  onChange={this.setValue}\r\n                  required\r\n                  value={puzzle.options.typeOptions.mateIn}\r\n                />\r\n              </Form.Group>\r\n            ) : \"Unknown puzzle type\"}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${puzzle.meta.difficulty}/${puzzle.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={puzzle.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={puzzle.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'meta.gameId'}\r\n                control={Input}\r\n                label={'From game'}\r\n                placeholder={'Game ID'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.gameId || ''}\r\n                error={error.gameId}\r\n              />\r\n            </Form.Group>\r\n            {puzzle.meta.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={puzzle.meta.game}\r\n              />\r\n            ) : null}\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={puzzle.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={puzzle.meta.publishDatetime ? puzzle.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialPuzzle ? 'Update' : 'Create'} />\r\n          </Form>\r\n          <Button negative content={'Discard'} onClick={this.discardPuzzle} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleForm.propTypes = {\r\n  initialPuzzle: PropTypes.object,\r\n  onCreatePuzzle: PropTypes.func.isRequired,\r\n  onDiscardPuzzle: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  gamesById: PropTypes.object.isRequired,\r\n};\r\n\r\nPuzzleForm = withClient(PuzzleForm);\r\n\r\nexport default withRouter(withClient(CreatePuzzle));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Modal} from \"semantic-ui-react\";\r\nimport CreatePuzzle from \"./CreatePuzzle\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass EditPuzzle extends Component {\r\n  get puzzle() {\r\n    const {match, puzzlesInfo: {byId}} = this.props;\r\n    const puzzle = byId[match.params.id];\r\n    return puzzle;\r\n  }\r\n\r\n  dismissUrlPuzzleError = () => {\r\n    this.props.history.push('/puzzle');\r\n  };\r\n\r\n  render() {\r\n    const puzzle = this.puzzle;\r\n    const {selectLiveGame} = this.props;\r\n    if (!puzzle || !puzzle.isMyPuzzle) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlPuzzleError}\r\n            header={'Could not find puzzle'}\r\n            content={'This puzzle cannot be found. Please check that you copied the full URL, or perhaps the puzzle was deleted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find puzzle\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CreatePuzzle initialPuzzle={puzzle} selectLiveGame={selectLiveGame} />\r\n    );\r\n  }\r\n}\r\n\r\nEditPuzzle.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(EditPuzzle));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Menu, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/puzzles.css\";\r\nimport PuzzleList from \"./PuzzleList\";\r\nimport {Link, NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreatePuzzle from \"./CreatePuzzle\";\r\nimport EditPuzzle from \"./EditPuzzle\";\r\nimport * as utils from \"../utils\";\r\nimport {GameCard} from \"./GameList\";\r\n\r\nclass Puzzles extends Component {\r\n  render() {\r\n    const {\r\n      user,\r\n      puzzlesInfo: {otherStarted, otherNotStarted, otherSolved, myPublic, myPublicUnattempted, myPrivate},\r\n      selectLiveGame,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            {(user && user.admin) ? (\r\n              <Segment>\r\n                <Link to={`${this.props.match.path}/create`}><Button content={'Create Puzzle'} /></Link>\r\n              </Segment>\r\n            ) : null}\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Puzzles\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Puzzles\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Puzzles\", items: otherSolved},\r\n              {key: 'my-public', label: \"My Public Puzzles\", items: myPublic},\r\n              {key: 'my-public-unattempted', label: \"My Public Unattempted Puzzles\", items: myPublicUnattempted},\r\n              {key: 'my-private', label: \"My Private Puzzles\", items: myPrivate},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <PuzzleList selectPuzzle={this.props.selectLivePuzzle} puzzles={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/create`}>\r\n            <CreatePuzzle selectLiveGame={selectLiveGame} />\r\n          </Route>\r\n        ) : null}\r\n        {(user && user.admin) ? (\r\n          <Route exact path={`${this.props.match.path}/:id/edit`}>\r\n            <EditPuzzle selectLiveGame={selectLiveGame} />\r\n          </Route>\r\n        ) : null}\r\n        <Route exact path={`${this.props.match.path}/:id`}>\r\n          <PuzzlePlayer\r\n            selectLiveGame={this.props.selectLiveGame}\r\n            selectLivePuzzle={this.props.selectLivePuzzle}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzles.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  livePuzzle: PropTypes.object,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nclass PuzzlePlayer extends Component {\r\n  state = {\r\n    puzzleId: this.puzzle ? this.puzzle.id : null,\r\n    game: this.getResumedPuzzleGame(),\r\n    submittedGame: null,\r\n    path: this.puzzle ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get puzzle() {\r\n    const {match, puzzlesInfo: {byId}} = this.props;\r\n    const puzzle = byId[match.params.id];\r\n    return puzzle;\r\n  }\r\n\r\n  get userPuzzle() {\r\n    const puzzle = this.puzzle;\r\n    if (!puzzle) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.puzzles[puzzle.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: puzzle.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const puzzle = this.puzzle;\r\n\r\n    if (puzzle) {\r\n      this.props.selectLivePuzzle(puzzle);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const puzzle = this.puzzle;\r\n\r\n    if (puzzle && prevState.puzzleId !== puzzle.id) {\r\n      this.props.selectLivePuzzle(puzzle);\r\n      this.setState({\r\n        puzzleId: puzzle.id,\r\n        game: this.getResumedPuzzleGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!puzzle && this.state.puzzleId) {\r\n      this.setState({\r\n          puzzleId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (puzzle && this.props.user && this.state.submittedGame) {\r\n      this.updatePuzzle(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updatePuzzle(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedPuzzleGame() {\r\n    const userPuzzle = this.userPuzzle;\r\n    if (!userPuzzle) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.Classic.fromCompressedPositionNotation(userPuzzle.startingPosition.position);\r\n    let userPuzzleStep = userPuzzle.startingPosition;\r\n    while (userPuzzleStep) {\r\n      const lastPlayerResponse = userPuzzleStep.playerResponses[userPuzzleStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.puzzleResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.puzzleResponse.moves);\r\n      userPuzzleStep = lastPlayerResponse.puzzleResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updatePuzzle(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const puzzle = this.puzzle;\r\n    const userPuzzle = this.userPuzzle;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userPuzzleStep = userPuzzle.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userPuzzleStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userPuzzleStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitPuzzleMove(puzzle, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.puzzleResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userPuzzleStep = validPlayerResponse.puzzleResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userPuzzleStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  dismissUrlPuzzleError = () => {\r\n    this.props.selectLivePuzzle(null);\r\n  };\r\n\r\n  close = () => {\r\n    this.props.selectLivePuzzle(null);\r\n  };\r\n\r\n  sharePuzzle = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const puzzle = this.puzzle;\r\n      navigator.share({\r\n        title: `Thyra Online - Solve puzzle ${utils.getPuzzleTitle(puzzle)}`,\r\n        text: `Solve Santorini puzzle`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const puzzle = this.puzzle;\r\n    if (!puzzle) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlPuzzleError}\r\n            header={'Could not find puzzle'}\r\n            content={'This puzzle cannot be found. Please check that you copied the full URL, or perhaps the puzzle was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find puzzle\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {user, location, selectLiveGame} = this.props;\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={utils.getPuzzleTitle(puzzle)} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.sharePuzzle, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to puzzle'},\r\n              (puzzle.isMyPuzzle ? {key: 'edit', content: 'Edit puzzle', icon: 'edit', as: NavLink,\r\n                to: `/puzzle/${puzzle.id}/edit`, color: 'green', active: true,\r\n                title: 'Click to edit the puzzle'} : null),\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <PuzzleHeader puzzle={puzzle} won={won} selectLiveGame={selectLiveGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          allowControl={[puzzle.options.initialPlayer]}\r\n          names={{[puzzle.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[puzzle.options.initialPlayer]]: 'Puzzle'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzlePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLivePuzzle: PropTypes.func.isRequired,\r\n};\r\n\r\nPuzzlePlayer = withRouter(withClient(PuzzlePlayer));\r\n\r\nclass PuzzleHeader extends Component {\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo: {byId: tournamentsById},\r\n      puzzlesInfo: {byGameId: puzzlesByGameId},\r\n      puzzle, won, selectLiveGame,\r\n    } = this.props;\r\n    const userIsCreator = !puzzle.id || (!!user && puzzle.userId === user.id);\r\n\r\n    return (\r\n      <Segment>\r\n        <Header as={'h1'}>{utils.getPuzzleTitle(puzzle)}</Header>\r\n        <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(puzzle.meta.difficulty, puzzle.meta.maxDifficulty)}</Header>\r\n        {puzzle.meta.source ? <Header as={'h4'}>{puzzle.meta.source}</Header> : null}\r\n        {puzzle.meta.gameId ? (\r\n          <Header as={'h4'}>\r\n            {won || userIsCreator ? (\r\n              <Fragment>\r\n                From{\" \"}\r\n                <GameCard\r\n                  user={null}\r\n                  usersById={usersById}\r\n                  tournamentsById={tournamentsById}\r\n                  puzzlesByGameId={puzzlesByGameId}\r\n                  game={gamesById[puzzle.meta.gameId]}\r\n                  selectLiveGame={selectLiveGame}\r\n                  terse\r\n                  live\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              </Fragment>\r\n            ) : \"Solve puzzle to see source game\"}\r\n          </Header>\r\n        ) : null}\r\n        {puzzle.usersStats ? (\r\n          <Header as={'h4'}>\r\n            {puzzle.usersStats.attempted ? (\r\n              <Fragment>\r\n                {puzzle.usersStats.perfect} perfectly solved, out of {puzzle.usersStats.imperfect} solved, out of {puzzle.usersStats.attempted} attempted\r\n              </Fragment>\r\n            ) : 'Not attempted yet'}\r\n          </Header>\r\n        ) : null}\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleHeader.propTypes = {\r\n  puzzle: PropTypes.object.isRequired,\r\n  won: PropTypes.bool.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPuzzleHeader = withClient(PuzzleHeader);\r\n\r\nexport {\r\n  PuzzleHeader,\r\n};\r\n\r\nexport default withRouter(withClient(Puzzles));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Card, Grid, Header, Label, Progress} from \"semantic-ui-react\";\r\nimport Board from \"./Board\";\r\nimport Game from \"../game/game\";\r\nimport GameList from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass OpeningsDatabase extends Component {\r\n  state = {\r\n    step: this.props.gamesInfo.openingsDatabase,\r\n    path: [],\r\n    urlError: null,\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.Classic.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.Classic.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: null, error: false};\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.selectPathFromUrlPosition();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.gamesInfo.openingsDatabase !== this.props.gamesInfo.openingsDatabase) {\r\n      const path = this.getPathForNewOpeningsDatabase();\r\n      this.setState({\r\n        step: path.length ? path[path.length - 1] : this.props.gamesInfo.openingsDatabase,\r\n        path: path,\r\n      });\r\n    }\r\n  }\r\n\r\n  selectPathFromUrlPosition() {\r\n    const {game, error} = this.constructor.getGameAndErrorFromUrlPosition();\r\n    if (error) {\r\n      this.setState({urlError: error});\r\n    } else if (game) {\r\n      const path = game.history.map(pastGame => ({\r\n        position: pastGame.normalisedPositionNotation,\r\n        displayPosition: pastGame.normalisedPositionNotation,\r\n      }));\r\n      if (this.props.gamesInfo.openingsDatabase) {\r\n        this.setState({path: this.getPathForPositions(path)});\r\n      } else {\r\n        this.setState({path, urlError: null});\r\n      }\r\n    }\r\n  }\r\n\r\n  getPathForNewOpeningsDatabase() {\r\n    return this.getPathForPositions(this.state.path.map(step => step.position));\r\n  }\r\n\r\n  getPathForPositions(positions) {\r\n    let step = this.props.gamesInfo.openingsDatabase;\r\n    const path = [];\r\n    for (const position of positions) {\r\n      step = step.next.find(nextStep => nextStep.position === position);\r\n      if (!step) {\r\n        break;\r\n      }\r\n      path.push(step);\r\n    }\r\n    return path;\r\n  }\r\n\r\n  selectStep = step => {\r\n    this.setState(state => ({step, path: [...state.path.slice(0, state.path.indexOf(state.step) + 1), step]}));\r\n  };\r\n\r\n  selectStepIndex = index => {\r\n    this.setState(state => ({step: state.path[index] || this.props.gamesInfo.openingsDatabase}));\r\n  };\r\n\r\n  goToStart = () => {\r\n    this.setState({step: this.props.gamesInfo.openingsDatabase});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client,\r\n      usersInfo: {byId: usersById}, gamesInfo: {games, openingsDatabase}, tournamentsInfo: {byId: tournamentsById},\r\n      puzzlesInfo: {byId: puzzlesByGameId},\r\n      selectLiveGame,\r\n    } = this.props;\r\n    const {step, path} = this.state;\r\n\r\n    if (!step) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            {path.map((pathStep, index) => [pathStep, index]).reverse().map(([pathStep, index]) => (\r\n              <OpeningsDatabaseHistoryCard\r\n                key={index}\r\n                step={pathStep}\r\n                index={index}\r\n                applicableSettings={client.applicableSettings}\r\n                selectStepIndex={this.selectStepIndex}\r\n                selected={pathStep === step}\r\n              />\r\n            ))}\r\n            <Label icon={'play'} color={'green'} content={'Initial'} onClick={this.goToStart} as={'a'} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Header as={'h2'}>{step.next.length} Continuations</Header>\r\n        <Card.Group>\r\n          {step.next.map(nextStep => (\r\n            <OpeningsDatabaseCard\r\n              key={nextStep.displayPosition}\r\n              openingsDatabase={openingsDatabase}\r\n              step={step}\r\n              nextStep={nextStep}\r\n              applicableSettings={client.applicableSettings}\r\n              selectStep={this.selectStep}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        <Header as={'h2'}>{step.gameIds.length} Games</Header>\r\n        <GameList\r\n          puzzlesByGameId={puzzlesByGameId}\r\n          tournamentsById={tournamentsById}\r\n          selectLiveGame={selectLiveGame}\r\n          games={games.filter(game => step.gameIds.includes(game.id))}\r\n          applicableSettings={client.applicableSettings}\r\n          usersById={usersById}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOpeningsDatabase.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  puzzlesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nclass OpeningsDatabaseCard extends Component {\r\n  static winPercentageColours = [\r\n    [25, 'red'],\r\n    [45, 'orange'],\r\n    [55, 'yellow'],\r\n    [75, 'olive'],\r\n    [100, 'green'],\r\n  ];\r\n\r\n  static winDiffPercentageColours = [\r\n    [-20, 'red'],\r\n    [-5, 'orange'],\r\n    [5, 'yellow'],\r\n    [20, 'olive'],\r\n    [35, 'green'],\r\n  ];\r\n\r\n  static winDiffPercentageIcons = [\r\n    [-20, 'angle double down'],\r\n    [-5, 'angle down'],\r\n    [5, 'angle right'],\r\n    [20, 'angle up'],\r\n    [35, 'angle double up'],\r\n  ];\r\n\r\n  static gameCountSizes = [\r\n    [4, 'tiny'],\r\n    [14, 'small'],\r\n    [34, 'medium'],\r\n    [35, 'large'],\r\n  ];\r\n\r\n  gameSelector = createSelector([\r\n    props => props.step,\r\n    props => props.nextStep,\r\n  ], (step, nextStep) => (\r\n    nextStep.allMoves\r\n      ? Game.Classic.fromMoves(nextStep.allMoves)\r\n      : nextStep.moves\r\n        ? Game.Classic.fromCompressedPositionNotation(step.displayPosition).makeMoves(nextStep.moves)\r\n        : Game.Classic.fromCompressedPositionNotation(nextStep.displayPosition)\r\n  ));\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.selectStep(this.props.nextStep)\r\n  };\r\n\r\n  winPercentageColourSelector = createSelector([\r\n    props => props.nextStep,\r\n  ], nextStep => {\r\n    const playerAWinPercentage = 100 * nextStep.winCount[Game.PLAYER_A] / nextStep.gameIds.length;\r\n    return this.getValueByLevel(playerAWinPercentage, this.constructor.winPercentageColours);\r\n  });\r\n\r\n  get winPercentageColour() {\r\n    return this.winPercentageColourSelector(this.props);\r\n  }\r\n\r\n  winDiffPercentageIconSelector = createSelector([\r\n    props => props.step,\r\n    props => props.nextStep,\r\n  ], (step, nextStep) => {\r\n    const previousPlayerAWinPercentage = 100 * step.winCount[Game.PLAYER_A] / step.gameIds.length;\r\n    const playerAWinPercentage = 100 * nextStep.winCount[Game.PLAYER_A] / nextStep.gameIds.length;\r\n    const playerAWinDiffPercentage = playerAWinPercentage - previousPlayerAWinPercentage;\r\n    return this.getValueByLevel(playerAWinDiffPercentage, this.constructor.winDiffPercentageIcons);\r\n  });\r\n\r\n  get winDiffPercentageIcon() {\r\n    return this.winDiffPercentageIconSelector(this.props);\r\n  }\r\n\r\n  winDiffPercentageColourSelector = createSelector([\r\n    props => props.step,\r\n    props => props.nextStep,\r\n  ], (step, nextStep) => {\r\n    const previousPlayerAWinPercentage = 100 * step.winCount[Game.PLAYER_A] / step.gameIds.length;\r\n    const playerAWinPercentage = 100 * nextStep.winCount[Game.PLAYER_A] / nextStep.gameIds.length;\r\n    const playerAWinDiffPercentage = playerAWinPercentage - previousPlayerAWinPercentage;\r\n    return this.getValueByLevel(playerAWinDiffPercentage, this.constructor.winDiffPercentageColours);\r\n  });\r\n\r\n  get winDiffPercentageColour() {\r\n    return this.winDiffPercentageColourSelector(this.props);\r\n  }\r\n\r\n  gameCountSizesSelector = createSelector([\r\n    props => props.nextStep.gameIds.length,\r\n  ], gameCount => {\r\n    return this.getValueByLevel(gameCount, this.constructor.gameCountSizes);\r\n  });\r\n\r\n  get gameCountSize() {\r\n    return this.gameCountSizesSelector(this.props);\r\n  }\r\n\r\n  getValueByLevel(value, levels) {\r\n    for (const [maxValue, level] of levels) {\r\n      if (value <= maxValue) {\r\n        return level;\r\n      }\r\n    }\r\n    const [, lastLevel] = levels[levels.length - 1];\r\n    return lastLevel;\r\n  }\r\n\r\n  render() {\r\n    const {openingsDatabase, step, nextStep, applicableSettings} = this.props;\r\n    const game = this.game;\r\n\r\n    const previousPlayerAWinPercentage = 100 * step.winCount[Game.PLAYER_A] / step.gameIds.length;\r\n    const playerAWinPercentage = 100 * nextStep.winCount[Game.PLAYER_A] / nextStep.gameIds.length;\r\n    const playerAWinDiffPercentage = playerAWinPercentage - previousPlayerAWinPercentage;\r\n    const playerBWinPercentage = 100 * nextStep.winCount[Game.PLAYER_B] / nextStep.gameIds.length;\r\n    let winPercentageColour = this.winPercentageColour;\r\n    let winDiffPercentageIcon = this.winDiffPercentageIcon;\r\n    let winDiffPercentageColour = this.winDiffPercentageColour;\r\n    let gameCountSize = this.gameCountSize;\r\n    return (\r\n      <Card as={NavLink} to={`/openings-database?position=${game.compressedFullNotation}`} onClick={this.onClick}>\r\n        <Card.Content>\r\n          <Card.Meta>\r\n            <Label icon={'play'} content={\r\n              `${nextStep.gameIds.length} games`\r\n              + ` (${(100 * nextStep.gameIds.length / step.gameIds.length).toFixed()}%`\r\n              + `, ${(100 * nextStep.gameIds.length / openingsDatabase.gameIds.length).toFixed()}% tot.)`\r\n            } />\r\n            <Label\r\n              icon={{name: 'chess king', color: 'grey'}}\r\n              content={`${playerAWinPercentage.toFixed()}%`}\r\n            />\r\n            <Label\r\n              icon={{name: 'chess king', color: 'black'}}\r\n              content={`${playerBWinPercentage.toFixed()}%`}\r\n            />\r\n            <Label\r\n              icon={{name: winDiffPercentageIcon, color: winDiffPercentageColour}}\r\n              content={`${playerAWinDiffPercentage > 0 ? '+' : ''}${playerAWinDiffPercentage.toFixed()}%`}\r\n            />\r\n            <Progress\r\n              percent={playerAWinPercentage.toFixed()}\r\n              color={winPercentageColour}\r\n              progress={'percent'}\r\n              size={gameCountSize}\r\n            />\r\n            <Board\r\n              game={game}\r\n              medium\r\n              settings={applicableSettings}\r\n              showArrows={applicableSettings.theme.arrows}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nOpeningsDatabaseCard.propTypes = {\r\n  openingsDatabase: PropTypes.object.isRequired,\r\n  step: PropTypes.object.isRequired,\r\n  nextStep: PropTypes.object.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectStep: PropTypes.func.isRequired,\r\n};\r\n\r\nclass OpeningsDatabaseHistoryCard extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.step.displayPosition,\r\n    props => props.step.allMoves,\r\n  ], (displayPosition, allMoves) => (\r\n    allMoves\r\n      ? Game.Classic.fromMoves(allMoves)\r\n      : Game.Classic.fromCompressedPositionNotation(displayPosition)\r\n  ));\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  onSelect = () => {\r\n    this.props.selectStepIndex(this.props.index);\r\n  };\r\n\r\n  render() {\r\n    const {selected, applicableSettings} = this.props;\r\n    const game = this.game;\r\n\r\n    return (\r\n      <NavLink to={`/openings-database?position=${game.compressedFullNotation}`}>\r\n        <Board\r\n          game={game}\r\n          small\r\n          onSelect={this.onSelect}\r\n          selected={selected}\r\n          settings={applicableSettings}\r\n        />\r\n      </NavLink>\r\n    );\r\n  }\r\n}\r\n\r\nOpeningsDatabaseHistoryCard.propTypes = {\r\n  step: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectStepIndex: PropTypes.func.isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withClient(OpeningsDatabase);\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Puzzles from \"./components/Puzzles\";\nimport * as utils from \"./utils\";\nimport OpeningsDatabase from \"./components/OpeningsDatabase\";\nimport moment from \"moment\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    livePuzzle: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/game';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/tournament`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLivePuzzle = livePuzzle => {\n    let puzzleUrl;\n    if (livePuzzle) {\n      puzzleUrl = `/puzzle/${livePuzzle.id}`;\n    } else {\n      puzzleUrl = `/puzzle`;\n    }\n    if (puzzleUrl !== this.props.location.pathname) {\n      this.props.history.push(puzzleUrl);\n    }\n    if (this.state.livePuzzle === livePuzzle) {\n      return;\n    }\n    this.setState({livePuzzle});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1 && moment(newGame.startDatetime).isSameOrAfter(moment().subtract(10, 's'))) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, livePuzzle} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLivePuzzle={this.selectLivePuzzle} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'database', content: 'Openings Database'}, path: 'openings-database', render: () => (\n            <Tab.Pane><OpeningsDatabase selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )},\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          {menuItem: {icon: 'puzzle', content: livePuzzle ? utils.getPuzzleTitle(livePuzzle) : 'Puzzles'},\n          path: 'puzzle',\n          navigate: livePuzzle ? `puzzle/${livePuzzle.id}` : 'puzzle',\n          render: () => (\n            <Tab.Pane>\n              <Puzzles\n                puzzle={livePuzzle}\n                selectLiveGame={this.selectLiveGame}\n                selectLivePuzzle={this.selectLivePuzzle}\n              />\n            </Tab.Pane>\n          )},\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}