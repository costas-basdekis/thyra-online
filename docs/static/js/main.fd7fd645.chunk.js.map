{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","onDisconnect","gotUser","user","id","username","name","token","settings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","_","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","password","removeItem","localSettings","parse","e","constructor","getDefaultSettings","io","on","console","warn","emit","unavailable","socket","process","available","autoSubmitMoves","enableNotifications","theme","pieces","scheme","rotateOpponent","numbers","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","getAvailableMoves","winningCell","find","_this4","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","Array","RA","RB","keys","sort","String","fromCharCode","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","type","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","PieceDefinitions","Definitions","CellDefinitions","width","height","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","setTimeout","levelAnimate","beginElement","allowControl","_this$props$theme","_this$props$theme$pie","_this$props$theme$rot","_this$state","isPlayerAOpponent","isPlayerBOpponent","levelMap","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","0","1","2","3","4","ArrowDefinition","_this$constructor","Arrow","diff","rotation","rotationMap","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","rowCount","columnCount","max","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","SvgBoardBackground_SvgBoardArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardBackground_Arrow","SvgBoardArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","sortBy","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","isMoveAvailable","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this3$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","flipped","transpose","flipX","flipY","reverseConfig","reverseTransformCoordinates","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this5$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","Play","selectedGame","autoSubmitModal","submit","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","defaultSettings","otherUser","challengeUser","stopChallengeUser","names","matchGame","displayGame","isMyGame","tooShortToResign","Segment","Statistic","Group","widths","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","positive","attention","Checkbox","toggle","checked","Modal","header","actions","primary","secondary","trigger","inverted","textAlign","Grid","centered","Row","Play_PlayNavigation","components_Board","Board_BoardTransformation","Play_PlayHistory","Header","_names","PlayHistory","activePage","onPageChange","pageSize","totalPages","ceil","visibleGames","reverse","lastVisibleGame","previousGame","Label","Pagination","pointing","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","indexOf","goToPreviousMove","canGoToPreviousMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","gameIndexes","lastGameIndex","_this$gameIndexes2","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","SettingsContent","themeSchemeOptions","themePiecesOptions","themeNumbersOptions","updateAutoSubmitMove","updateSettings","updateEnableNotifications","updateThemeRotateOpponent","updateThemeNumbers","updateThemeScheme","updateThemePieces","_this$props$settings","_theme$pieces","attached","render","Form","stackable","columns","verticalAlign","Column","Board_ThemeDemoBoard","floated","Field","option","radio","update","save","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","GameCard","selectLiveGame","usersById","terse","currentGameId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","components_HashedIcon","Meta","moment","endDatetime","startDatetime","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","UserList","readyToPlayUsers","readyToPlayMeUsers","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Lobby_EditUser","hasPassword","winCount","gameCount","score","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","Input","action","LogIn","changeMergeUsers","logIn","_this$state2","modal","LogOut","logOut","_this$props4$usersInf","_this$props4$gamesInf","Lobby_LogIn","Lobby_LogOut","components_GameList","Lobby_UserList","Pane","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winnerUserId","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","Value","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","Board_SvgBoardBackground","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd7fd645.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return JSON.parse(JSON.stringify({\r\n      autoSubmitMoves: false,\r\n      enableNotifications: false,\r\n      theme: {pieces: 'king', scheme: '', rotateOpponent: true, numbers: ''},\r\n    }));\r\n  }\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    try {\r\n      this.settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      this.settings = null;\r\n    }\r\n    if (!this.settings) {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.onConnect = [];\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.onDisconnect = [];\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.settings = user.settings;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.orderBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass CellDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn (\r\n    \t<Fragment>\r\n        <rect\r\n          id={`cell-border`}\r\n          width={constants.cellSize}\r\n          height={constants.cellSize}\r\n        />\r\n        <rect\r\n          id={`cell-0`}\r\n          width={constants.cellSize - constants.borderWidth * 2}\r\n          height={constants.cellSize - constants.borderWidth * 2}\r\n          transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n        />\r\n        <g id={`cell-1`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 2}\r\n            height={constants.cellSize - constants.borderWidth * 2}\r\n            transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-2`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 4}\r\n            height={constants.cellSize - constants.borderWidth * 4}\r\n            transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-3`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 6}\r\n            height={constants.cellSize - constants.borderWidth * 6}\r\n            transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n        </g>\r\n        <g id={`cell-4`}>\r\n          <rect\r\n            className={'border'}\r\n            width={constants.cellSize - constants.borderWidth * 8}\r\n            height={constants.cellSize - constants.borderWidth * 8}\r\n            transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n          />\r\n          <rect\r\n            className={'fill'}\r\n            width={constants.cellSize - constants.borderWidth * 10}\r\n            height={constants.cellSize - constants.borderWidth * 10}\r\n            transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n          />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstatic levelMap = {\r\n    0: '#cell-0',\r\n    1: '#cell-1',\r\n    2: '#cell-2',\r\n    3: '#cell-3',\r\n    4: '#cell-4',\r\n  };\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <use\r\n          xlinkHref={`#cell-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`${this.constructor.levelMap[i]}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`${this.constructor.levelMap[i]}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static dimensions = {x: 261.5, y: 532};\r\n  static offset = {x: 100, y: 125};\r\n\r\n  render() {\r\n    const {dimensions, offset} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n            `translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-white\"}>\r\n          <use xlinkHref={\"#arrow-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-black\"}>\r\n          <use xlinkHref={\"#arrow-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {from, to, colour} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(0,${constants.cellSize / 2})`,\r\n        ].join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, game,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {animated ? (\r\n          <SvgBoardArrows game={game} transformation={transformation} />\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(_.flatten(rowsAndColumns.map(row => row.cells.filter(cell => cell.player))), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user, defaultSettings, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names,\r\n      allowControl, matchGame,\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? (\r\n                      <Segment>\r\n                        <Checkbox\r\n                          label={'Auto submit moves'}\r\n                          toggle\r\n                          checked={user.settings.autoSubmitMoves}\r\n                          onChange={this.changeAutoSubmitMoves}\r\n                        />\r\n                        <Modal\r\n                          ref={this.autoSubmitModal}\r\n                          header={'Auto submit moves'}\r\n                          content={'Are you sure you want to be auto submitting your moves?'}\r\n                          actions={[\r\n                            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n                            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n                          ]}\r\n                        />\r\n                      </Segment>\r\n                    ) : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Board\r\n                game={displayGame}\r\n                transformation={transformation}\r\n                makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n                minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n                  this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n                )}\r\n                allowControl={displayGame === game ? allowControl : undefined}\r\n                settings={user ? user.settings : defaultSettings}\r\n                animated\r\n              />\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <BoardTransformation onChange={this.onTransformationChange} />\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Segment>\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          defaultSettings={defaultSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame, user, defaultSettings, selectGame, pageSize} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={user ? user.settings : defaultSettings}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  defaultSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n        {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n        {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme}} = this.props;\r\n    const {pieces = 'king', scheme, rotateOpponent, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotate Opponent'}\r\n                    name={'theme.rotateOpponent'}\r\n                    checked={rotateOpponent}\r\n                    onChange={this.updateThemeRotateOpponent}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {...theme, rotateOpponent: true}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {...theme, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themePiecesOptions.map(option => (\r\n                <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.pieces'}\r\n                      value={option.value}\r\n                      checked={pieces === option.value}\r\n                      onChange={this.updateThemePieces}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {...theme, pieces: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {...theme, scheme: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || Client.getDefaultSettings(),\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user, client} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} defaultSettings={client.settings} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, games, terse, live, selectLiveGame, currentGameId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <LogIn client={client} />\r\n        <LogOut client={client} />\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n            {menuItem: `${users.length} users`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={users}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Header, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {resultingPlayerScore - initialPlayer.score}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, user, client, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n    } = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerA} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerB} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareGame}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share Game\r\n              </Button>\r\n              <Button\r\n                positive\r\n                icon\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={`${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`}\r\n                title={'Click to open hotseat with this game'}\r\n                target={'_blank'}\r\n              >\r\n                <Icon name={'share'}/> Edit position\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Segment>\r\n          <GameList user={user} selectLiveGame={selectLiveGame} games={myLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          {otherLiveGames.length ? (\r\n            <GameList user={user} selectLiveGame={selectLiveGame} games={otherLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          ) : null}\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          defaultSettings={client.settings}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {live, myLive}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={byId} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n          <Segment>\r\n            <Header as={'h2'}>Live games ({live.length})</Header>\r\n            <GameList user={user} usersById={byId} games={live} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n          <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}