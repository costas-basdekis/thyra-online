{"version":3,"sources":["client/client.js","components/NavigationalTab.js","game/game.js","components/Board.js","components/Play.js","utils.js","client/withClient.js","components/Settings.js","components/Hotseat.js","components/HashedIcon.js","components/GameList.js","components/Lobby.js","components/OnlineGame.js","services/index.js","services/notifications.js","App.js","serviceWorker.js","index.js"],"names":["Client","_this","this","Object","classCallCheck","reload","window","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","onDisconnect","gotUser","user","id","username","name","token","localStorage","setItem","onUser","gotUsers","usersInfo","users","_","orderBy","prepareUsers","onUsers","gotGames","games","gamesInfo","prepareGames","onGames","getItem","password","removeItem","io","on","console","warn","emit","unavailable","socket","process","available","callbacks","_i","_arr","length","push","_i2","_arr2","pull","appVersion","mergeUsers","settings","readyToPlay","otherUsers","_this2","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this3","live","game","finished","myLive","userIds","otherLive","mine","moves","client","NavigationalTab","path","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","index","to","constructUrl","navigate","undefined","pathname","startsWith","menuItem","content","objectSpread","react_default","a","createElement","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","from","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","cells","status","previous","lastMove","isNextMove","history","canUndo","fullHistory","moveCount","chainCount","resignedPlayer","resign","allCells","values","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMovesMatrix","canTakeMoveBack","moveNotation","RESIGNED_NOTATION","MOVE_NOTATION","fullNotation","compressedFullNotation","split","part","NOTATION_COMPRESSION","join","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","value","makeMove","err","return","REVERSE_NOTATION","fromMoves","NOTATION_DECOMPRESSION","arguments","flatten","serializeCompact","serialize","_Game$PLAYER_A","_Game$PLAYER_B","_ref","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","PLAYER_A","chalk","bgWhite","bgYellow","bgRed","PLAYER_B","bgBlue","cellsPrintout","cell","player","level","nextPlayerPrintout","winnerPrintout","black","_ref2","Math","floor","JSON","stringify","getAvailableMoves","_ref3","winningCell","find","_this4","_this5","getMovableAvailableMovesMatrix","coordinates","_this6","maximumLevel","abs","_this7","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","createStep","_makeMoveMethods","makeMoveMethod","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref4","checkCanMakeMove","worker","WORKER_FIRST","getEmptyCellsAvailableMovesMatrix","_ref5","WORKER_SECOND","createNext","getPlayerAvailableMovesMatrix","_ref6","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","serialized","deserializeCompact","deserializeVerbose","_ref10","_ref11","deserialize","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","allMovesAreAvailableMatrix","_this9","_this10","PLAYERS","Array","RA","RB","keys","sort","String","fromCharCode","BoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","allowControl","children","_settings$theme","theme","scheme","rotated","rounded","numbers","classNames","small-board","medium-board","editable","selectable","theme-subtle","theme-pastel","theme-green","theme-rotated","theme-rounded","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","Board_BoardCell","undo","onClick","BoardCell","displayLevel","ThemeDemoBoard","_this$props3","Board_BoardBackground","demoRowsAndColumns","Board","takeMoveBack","isMoveAvailable","minChainCount","_this$props4","isGameUndoable","Play","state","selectedGame","autoSubmitModal","React","createRef","submit","setState","newGame","selectGame","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","autoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","propsGame","propsGameIndex","error","prevProps","prevState","resigning","otherUser","challengeUser","stopChallengeUser","names","matchGame","_this$state","displayGame","isMyGame","tooShortToResign","Segment","Statistic","Group","widths","size","color","label","MOVE_TYPE_NAMES","Button","Icon","loading","negative","disabled","positive","attention","Checkbox","toggle","checked","onChange","Modal","ref","header","actions","primary","secondary","trigger","inverted","style","textAlign","components_Board","reverse","previousGame","Header","_names","copyToClipboard","text","textArea","document","body","appendChild","select","execCommand","removeChild","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","possibleConstructorReturn","getPrototypeOf","apply","inherits","withClient","forComponent","SettingsContent","themeSchemeOptions","themeNumbersOptions","updateAutoSubmitMove","e","updateSettings","updateEnableNotifications","enableNotifications","updateThemeRotated","updateThemeRounded","updateThemeNumbers","updateThemeScheme","_this$props$settings","_this$props$settings$","pointing","attached","render","Form","Grid","stackable","columns","verticalAlign","Row","Column","Board_ThemeDemoBoard","width","floated","Field","option","radio","update","save","Label","Settings_SettingsContent","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","navigator","title","catch","utils","alert","open","onClose","components_Settings","href","components_Play","position","URLSearchParams","search","get","fromCompressedNotation","HashedIcon","updateIcon","jdenticon","hash","_classNames","textSized","data-jdenticon-value","GameCard","selectLiveGame","usersById","terse","currentGameId","gameGame","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","Content","components_HashedIcon","Meta","GameList","maxHeight","overflowY","flexWrap","GameList_GameCard","UserList","readyToPlayUsers","readyToPlayMeUsers","Lobby_UserCard","UserCard","changeReadyToPlay","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","Lobby_EditUser","hasPassword","isUserRatingProvisional","winCount","gameCount","score","extra","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","Input","action","LogIn","changeMergeUsers","logIn","_this$state2","modal","LogOut","logOut","_this$props4$usersInf","_this$props4$gamesInf","Lobby_LogIn","Lobby_LogOut","centered","components_GameList","Lobby_UserList","Pane","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winnerUserId","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","_this$props2$usersInf","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","Value","OnlineGame_OnlineGamePlayer","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notifications","Notification","permission","requestPermission","construct","prototype","call","_args2","App","liveGame","gameUrl","getLiveGameUrl","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","otherUserId","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","Container","components_NavigationalTab","components_Lobby","components_OnlineGame","components_Hotseat","Boolean","hostname","ReactDOM","react_router_dom","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.041247e4.chunk.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nconst appVersion = 3;\r\n\r\nclass Client {\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n    }\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.onConnect = [];\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.onDisconnect = [];\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.onUser = [];\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.onUsers = [];\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.onGames = [];\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {appVersion, id: this.id, name: this.username, token: this.token});\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, ['score', 'maxScore'], ['desc', 'desc']);\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished: games.filter(game => game.finished),\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (index === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.REVERSE_NOTATION[value]]));\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static fromCompressedNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  createStep(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(cells, status, lastMove) {\r\n    return new this.constructor(cells, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, lastMove, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.NOTATION_COMPRESSION[part])\r\n      .join('');\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  getAvailableMoves(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return this.serializeCompact();\r\n  }\r\n\r\n  serializeCompact() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  serializeVerbose() {\r\n    return {\r\n      cells: this.cells,\r\n      status: {\r\n        nextPlayer: this.nextPlayer,\r\n        moveType: this.moveType,\r\n        availableMovesMatrix: this.availableMovesMatrix,\r\n        canUndo: this.canUndo,\r\n        resignedPlayer: this.resignedPlayer,\r\n      },\r\n      previous: this.previous ? this.previous.serialize() : null,\r\n      lastMove: this.lastMove,\r\n      isNextMove: this.isNextMove,\r\n    };\r\n  }\r\n\r\n  static deserialize(serialized) {\r\n    if (serialized.moves) {\r\n      return this.deserializeCompact(serialized);\r\n    } else {\r\n      return this.deserializeVerbose(serialized);\r\n    }\r\n  }\r\n\r\n  static deserializeCompact({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static deserializeVerbose({cells, status, previous, lastMove, isNextMove}) {\r\n    if (previous) {\r\n      previous = this.deserialize(previous);\r\n    }\r\n    return new this(cells, status, previous, lastMove, isNextMove);\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  hasAvailableMove(availableMovesMatrix = this.availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMovesMatrix(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMovesMatrix(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMovesMatrix(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMovesMatrix(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMovesMatrix(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMovesMatrix(cells),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.getMovableAvailableMovesMatrix(this.cells, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.getBuildableAvailableMovesMatrix(cells, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.getPlayerAvailableMovesMatrix(cells, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, children, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, rotated, rounded, numbers}} = settings;\r\n\r\n    className = classNames(\"background\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'theme-subtle': scheme === 'subtle',\r\n      'theme-pastel': scheme === 'pastel',\r\n      'theme-green': scheme === 'green',\r\n      'theme-rotated': rotated,\r\n      'theme-rounded': rounded,\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n    if (!children) {\r\n      children = (\r\n        rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <BoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                allowControl={allowControl}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))\r\n      );\r\n    }\r\n    return (\r\n      <div className={className} onClick={onSelect}>{children}</div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  children: PropTypes.node,\r\n  rowsAndColumns: PropTypes.array,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nclass BoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.demoRowsAndColumns}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={settings}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.rowsAndColumns.find(row => row.cells.find(cell => this.isCellUndoable(cell)));\r\n  }\r\n\r\n  render() {\r\n    let {game, allowControl, onSelect, makeMove} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={this.isGameUndoable()}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={game.rowsAndColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  settings: {\r\n    theme: {\r\n      scheme: '',\r\n      rotated: false,\r\n      rounded: false,\r\n      numbers: '',\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {Button, Checkbox, Header, Icon, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.state.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.setState({selectedGame: null, game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.user && this.props.user.settings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.user.settings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {user, otherUser, changeSettings, challengeUser, stopChallengeUser, challengedUser, names, allowControl, matchGame} = this.props;\r\n    const {selectedGame, game} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={names[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={names[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {this.props.game.finished ? (\r\n              this.props.submit ? (\r\n                (isMyGame && challengeUser) ? (\r\n                  challengedUser ? (\r\n                    <Statistic value={<Button color={'green'} onClick={stopChallengeUser}><Icon loading name={'circle notch'} />Waiting for {challengedUser.name}...</Button>} />\r\n                  ) : (\r\n                    otherUser && otherUser.readyToPlay === user.id ? (\r\n                      <Statistic value={<Button className={'attention'} color={'yellow'} icon={'play'} onClick={challengeUser} content={'Accept challenge'} />} />\r\n                    ) : (\r\n                      <Statistic value={<Button color={'yellow'} icon={'play'} onClick={challengeUser} content={'Challenge user'} />} />\r\n                    )\r\n                  )\r\n                ) : null\r\n              ) : (\r\n                <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n              )\r\n            ) : (\r\n              this.props.submit\r\n                ? <Statistic value={(\r\n                  <Fragment>\r\n                    {!user || !user.settings.autoSubmitMoves ? <Button positive onClick={this.submit} className={classNames({attention: canSubmit})} disabled={!canSubmit}>Submit</Button> : null}\r\n                    {user && changeSettings ? (\r\n                      <Segment>\r\n                        <Checkbox\r\n                          label={'Auto submit moves'}\r\n                          toggle\r\n                          checked={user.settings.autoSubmitMoves}\r\n                          onChange={this.changeAutoSubmitMoves}\r\n                        />\r\n                        <Modal\r\n                          ref={this.autoSubmitModal}\r\n                          header={'Auto submit moves'}\r\n                          content={'Are you sure you want to be auto submitting your moves?'}\r\n                          actions={[\r\n                            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n                            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n                          ]}\r\n                        />\r\n                      </Segment>\r\n                    ) : null}\r\n                  </Fragment>\r\n                )}/>\r\n                : <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={matchGame.tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${matchGame.tooShortToResign ? 'abort' : 'forfeit'}?${matchGame.tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: matchGame.tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!!selectedGame || (this.props.submit ? game.chainCount <= this.props.game.chainCount : !game.canUndo)}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board\r\n            game={displayGame}\r\n            makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n            minChainCount={this.props.submit ? this.props.game.chainCount : (\r\n              this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n            )}\r\n            allowControl={displayGame === game ? allowControl : undefined}\r\n            settings={user ? user.settings : undefined}\r\n          />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board key={previousGame.chainCount} game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} settings={user ? user.settings : undefined} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default Play;\r\n","export const copyToClipboard = text => {\r\n    const textArea = document.createElement(\"textarea\");\r\n    // This won't work\r\n    // textArea.style.display = 'none'\r\n    document.body.appendChild(textArea);\r\n    textArea.value = text;\r\n    textArea.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(textArea);\r\n};\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, user, usersInfo, gamesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeRotated = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotated: checked}});\r\n  };\r\n\r\n  updateThemeRounded = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rounded: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, enableNotifications, theme: {scheme, rotated, rounded, numbers}}} = this.props;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rotated'}\r\n                    name={'theme.rotated'}\r\n                    checked={rotated}\r\n                    onChange={this.updateThemeRotated}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated: true, rounded, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Rounded'}\r\n                    name={'theme.rounded'}\r\n                    checked={rounded}\r\n                    onChange={this.updateThemeRounded}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded: true, numbers}}}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Numbers:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeNumbersOptions.map(option => (\r\n                <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.numbers'}\r\n                      value={option.value}\r\n                      checked={numbers === option.value}\r\n                      onChange={this.updateThemeNumbers}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme, rotated, rounded, numbers: option.value}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Form.Field><Header as={'h2'}>Scheme:</Header></Form.Field>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              {this.themeSchemeOptions.map(option => (\r\n                <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                  <Grid.Column width={4}>\r\n                    <Checkbox\r\n                      radio\r\n                      label={option.label}\r\n                      name={'theme.scheme'}\r\n                      value={option.value}\r\n                      checked={scheme === option.value}\r\n                      onChange={this.updateThemeScheme}\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated={'right'} textAlign={'right'}>\r\n                    <ThemeDemoBoard medium settings={{theme: {scheme: option.value, rotated, rounded, numbers}}}/>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              ))}\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: {\r\n      autoSubmitMoves: false,\r\n      theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n    },\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.user.settings || {\r\n          autoSubmitMoves: false,\r\n          theme: {scheme: '', rotated: false, rounded: false, numbers: ''},\r\n        },\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={<SettingsContent settings={settings} updateSettings={this.updateSettings} />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Button, Icon, Grid, Modal} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport Settings from \"./Settings\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid'\r\n      }\r\n      if (error) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {game, error} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{content: 'OK', positive: true}]}\r\n        />\r\n        <Grid columns={'equal'}>\r\n          <Grid.Column>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column><Settings/></Grid.Column>\r\n              <Grid.Column />\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Button\r\n              positive\r\n              icon\r\n              onClick={this.share}\r\n              style={{width: '100%'}}\r\n              as={'a'}\r\n              href={`?position=${game.compressedFullNotation}`}\r\n              title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            >\r\n              <Icon name={'share'}/> Share position\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n        <Play user={user} game={game} makeMove={this.makeMove} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={user ? user.settings : undefined}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label><Icon name={\"user\"} color={\"green\"} />My game</Label> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label><Icon name={\"circle\"} color={\"green\"} />Live</Label> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  render() {\r\n    const {user, usersById, games, terse, live, selectLiveGame, currentGameId} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n        {games.map(game => (\r\n          <GameCard\r\n            key={game.id}\r\n            user={user}\r\n            usersById={usersById}\r\n            game={game}\r\n            selectLiveGame={selectLiveGame}\r\n            terse={terse}\r\n            live={live}\r\n            currentGameId={currentGameId}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Header, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass UserCard extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, otherUser, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (client && user) {\r\n      if (user.id === otherUser.id) {\r\n        playButtonOnClick = this.changeReadyToPlay;\r\n        if (user.readyToPlay) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          if (challengedUser) {\r\n            playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n          } else {\r\n            playButtonLabel = 'Waiting for opponent...';\r\n          }\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n            if (readyToPlayMeUsers.length === 1) {\r\n              playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n              playButtonAttention = true;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n              playButtonAttention = true;\r\n            }\r\n          } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n            if (readyToPlayUsers.length === 1) {\r\n              playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n            } else {\r\n              playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n            }\r\n          } else {\r\n            playButtonLabel = 'Play';\r\n          }\r\n        }\r\n      } else {\r\n        playButtonOnClick = this.challengeUser;\r\n        if (challengedUser && challengedUser.id === otherUser.id) {\r\n          playButtonColour = 'green';\r\n          playButtonIcon = {loading: true, name: 'circle notch'};\r\n          playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n        } else if (!otherUser.online) {\r\n          playButtonLabel = null;\r\n          playButtonOnClick = null;\r\n        } else {\r\n          playButtonColour = 'yellow';\r\n          playButtonIcon = {name: 'play'};\r\n          if (otherUser.readyToPlay === user.id) {\r\n            playButtonLabel = `${otherUser.name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else if (otherUser.readyToPlay === true) {\r\n            playButtonLabel = `${otherUser.name} is ready to Play`;\r\n          } else {\r\n            playButtonLabel = `Challenge ${otherUser.name}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}>\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {playButtonLabel ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <Button className={classNames({attention: playButtonAttention})} color={playButtonColour} onClick={playButtonOnClick}>\r\n              <Icon {...playButtonIcon} />\r\n              {playButtonLabel}\r\n            </Button>\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe}, gamesInfo: {live, myLive, finished}, selectLiveGame} = this.props;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <LogIn client={client} />\r\n        <LogOut client={client} />\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        {myLive.length ? (\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={usersById} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        ) : null}\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${live.length} live games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={live} selectLiveGame={selectLiveGame} />\r\n            )},\r\n            {menuItem: `${finished.length} past games`, render: () => (\r\n              <GameList user={user} usersById={usersById} games={finished} selectLiveGame={selectLiveGame} />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {menuItem: `${online.length} users online`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={online}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n            {menuItem: `${offline.length} users offline`, render: () => (\r\n              <UserList users={offline} user={user} challengedUser={challengedUser} />\r\n            )},\r\n            {menuItem: `${users.length} users`, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={users}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )},\r\n          ]} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Header, Icon, Label, Modal, Segment, Statistic} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {resultingPlayerScore - initialPlayer.score}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = this.props.location.pathname;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  render() {\r\n    const {location, user, usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames}, game, selectLiveGame} = this.props;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerA} /></Statistic.Value>}\r\n              label={isUserPlayerA ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerA ? \"green\" : undefined}\r\n            />\r\n            <Statistic label={\"vs\"}/>\r\n            <Statistic\r\n              value={<Statistic.Value><OnlineGamePlayer game={game} player={playerB} /></Statistic.Value>}\r\n              label={isUserPlayerB ? <Label><Icon name={\"user\"} />Me</Label> : null}\r\n              color={isUserPlayerB ? \"green\" : undefined}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareGame}\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n              >\r\n                <Icon name={'share'}/> Share Game\r\n              </Button>\r\n              <Button\r\n                positive\r\n                icon\r\n                style={{width: '100%'}}\r\n                as={'a'}\r\n                href={`${process.env.REACT_APP_PAGE_BASE_PATH}${process.env.REACT_APP_PAGE_BASE_PATH.endsWith('/') ? '' : '/'}hotseat?position=${gameGame.compressedFullNotation}`}\r\n                title={'Click to open hotseat with this game'}\r\n                target={'_blank'}\r\n              >\r\n                <Icon name={'share'}/> Edit position\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        <Segment>\r\n          <GameList user={user} selectLiveGame={selectLiveGame} games={myLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          {otherLiveGames.length ? (\r\n            <GameList user={user} selectLiveGame={selectLiveGame} games={otherLiveGames} usersById={usersById} terse live currentGameId={game ? game.id : null} />\r\n          ) : null}\r\n        </Segment>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {selectLiveGame, game, user, usersInfo: {byId}, gamesInfo: {live, myLive}} = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Header as={'h2'}>My live games ({myLive.length})</Header>\r\n            <GameList user={user} usersById={byId} games={myLive} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n          <Segment>\r\n            <Header as={'h2'}>Live games ({live.length})</Header>\r\n            <GameList user={user} usersById={byId} games={live} selectLiveGame={selectLiveGame} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  constructor() {\r\n    this.user = client.user;\r\n    client.subscribe({onUser: this.onUser});\r\n  }\r\n\r\n  onUser = user => {\r\n    this.user = user;\r\n  };\r\n\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!this.user || !this.user.settings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n  };\n\n  getLiveGameUrl(game) {\n    return `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/game/${game.id}`;\n  }\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = this.getLiveGameUrl(liveGame);\n    } else {\n      gameUrl = `${this.props.match.url.endsWith('/') ? this.props.match.url.slice(0, -1) : this.props.match.url}/lobby`;\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame} = this.state;\n    const {user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    return (\n      <Container>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n          <NavigationalTab menu={{pointing: true, attached: false}} panes={[\n            client.available ? {menuItem: 'Lobby', path: 'lobby', render: () => (\n              <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            client.available ? {menuItem: onlineGameLabel, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n              <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n            )} : null,\n            {menuItem: 'Hotseat', path: 'hotseat', render: () => (\n              <Tab.Pane><Hotseat /></Tab.Pane>\n            )},\n          ]} />\n          <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Route path={process.env.REACT_APP_PAGE_BASE_PATH}>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}