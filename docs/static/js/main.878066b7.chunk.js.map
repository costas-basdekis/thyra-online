{"version":3,"sources":["game/game.js","components/board.js","components/play.js","App.js","serviceWorker.js","index.js"],"names":["Game","cells","status","previous","isNextMove","_this","this","Object","classCallCheck","Error","history","filter","game","canUndo","concat","moveCount","chainCount","allCells","values","map","row","reduce","total","current","rowsAndColumns","constructor","ROWS","y","COLUMNS","x","nextPlayer","moveType","availableMoves","winner","getWinner","finished","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialCells","getInitialStatus","_ref","Math","floor","JSON","stringify","undefined","arguments","length","available","coordinates","getAvailableCoordinates","winningCell","find","cell","player","level","_this2","_this3","getMovableAvailableMoves","_this4","maximumLevel","abs","_this5","expectedMoveType","targetCoordinates","checkCoordinatesAreValid","_makeMoveMethods","makeMoveMethod","defineProperty","MOVE_TYPE_PLACE_FIRST_WORKER","placeFirstWorker","MOVE_TYPE_PLACE_SECOND_WORKER","placeSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","_ref2","checkCanMakeMove","objectSpread","worker","WORKER_FIRST","createStep","getEmptyCellsAvailableMoves","_ref3","WORKER_SECOND","PLAYER_A","getPlayerAvailableMoves","_ref4","to","_this6","fromCell","toCell","getBuildableAvailableMoves","_ref5","moveWorker","_ref6","_ref7","createNext","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","err","return","allMovesAreAvailable","_this7","_this8","PLAYER_B","PLAYERS","Array","from","index","Board","makeMove","props","onSelect","_this$props","small","selected","react_default","a","createElement","className","classNames","editable","selectable","onClick","key","Component","defaultProps","Play","state","selectedGame","takeMoveBack","undo","newGame","create","selectGame","setState","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","prevProps","displayGame","react","Segment","Statistic","Group","widths","size","color","PLAYER_NAMES","label","MOVE_TYPE_NAMES","Button","negative","disabled","textAlign","Header","as","style","board","toConsumableArray","reverse","previousGame","App","Container","text","components_play","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.878066b7.chunk.js","sourcesContent":["class Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n\r\n  static create() {\r\n    const cells = this.getInitialCells();\r\n    const status = this.getInitialStatus();\r\n    return new this(cells, status, null, false, true);\r\n  }\r\n\r\n  createStep(cells, status) {\r\n    return new this.constructor(cells, status, this, false);\r\n  }\r\n\r\n  createNext(cells, status) {\r\n    return new this.constructor(cells, status, this, true);\r\n  }\r\n\r\n  constructor(cells, status, previous, isNextMove) {\r\n    if (!cells || !status) {\r\n      throw new Error(\"You need to pass cells, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n\r\n    this.cells = cells;\r\n    this.allCells = Object.values(this.cells)\r\n      .map(row => Object.values(row))\r\n      .reduce((total, current) => total.concat(current));\r\n    this.rowsAndColumns = this.constructor.ROWS.map(y => ({\r\n      y,\r\n      cells: this.constructor.COLUMNS.map(x => this.cells[y][x]),\r\n    }));\r\n\r\n    const {nextPlayer, moveType, availableMoves, canUndo} = status;\r\n    this.nextPlayer = nextPlayer;\r\n    this.moveType = moveType;\r\n    this.availableMoves = availableMoves;\r\n    this.canUndo = canUndo;\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.hasAvailableMove(this.availableMoves)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMoves = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getInitialCells() {\r\n    const cells = {};\r\n    for (const y of this.ROWS) {\r\n      cells[y] = {};\r\n      for (const x of this.COLUMNS) {\r\n        cells[y][x] = {\r\n          x, y,\r\n          player: null,\r\n          worker: null,\r\n          level: 0,\r\n        };\r\n      }\r\n    }\r\n\r\n    return cells;\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      finished: false,\r\n      winner: null,\r\n      availableMoves: this.allMovesAreAvailable(),\r\n      canUndo: false,\r\n    };\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMoves[y] === undefined || this.availableMoves[y][x] === undefined) {\r\n      throw new Error(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  getAvailableCoordinates(availableMoves = this.availableMoves) {\r\n    return availableMoves\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)\r\n        .filter(coordinates => coordinates))\r\n      .reduce((total, current) => total.concat(current));\r\n  }\r\n\r\n  hasAvailableMove(availableMoves = this.availableMoves) {\r\n    return this.getAvailableCoordinates(availableMoves).length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    const winningCell = this.allCells.find(cell => cell.player && cell.level === 3);\r\n    if (!winningCell) {\r\n      return null;\r\n    }\r\n\r\n    return winningCell.player;\r\n  }\r\n\r\n  static allMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  getEmptyCellsAvailableMoves(cells) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => !cells[y][x].player));\r\n  }\r\n\r\n  getPlayerAvailableMoves(cells, player) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => {\r\n      if (cells[y][x].player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMoves(cells, {x, y}));\r\n    }));\r\n  }\r\n\r\n  getMovableAvailableMoves(cells, coordinates) {\r\n    const cell = cells[coordinates.y][coordinates.x];\r\n    const maximumLevel = cell.level + 1;\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level <= 3\r\n      && cells[y][x].level <= maximumLevel\r\n    )));\r\n  }\r\n\r\n  getBuildableAvailableMoves(cells, coordinates) {\r\n    return this.constructor.ROWS.map(y => this.constructor.COLUMNS.map(x => (\r\n      Math.abs(x - coordinates.x) <= 1\r\n      && Math.abs(y - coordinates.y) <= 1\r\n      && !cells[y][x].player\r\n      && cells[y][x].level < 4\r\n    )));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new Error(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new Error(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMoves[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new Error(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_FIRST,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMoves: this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: true,\r\n    }, false);\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          player: this.nextPlayer,\r\n          worker: this.constructor.WORKER_SECOND,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createStep(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMoves: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.getPlayerAvailableMoves(cells, nextPlayer)\r\n        : this.getEmptyCellsAvailableMoves(cells),\r\n      canUndo: false,\r\n    }, nextPlayer === this.constructor.PLAYER_A);\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.cells[y][x];\r\n    return this.createStep(this.cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMoves: this.getMovableAvailableMoves(this.cells, {x, y}),\r\n      canUndo: true,\r\n    }, false);\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.allCells.find(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.cells[to.y][to.x];\r\n    let cells = {\r\n      ...this.cells,\r\n      [fromCell.y]: {\r\n        ...this.cells[fromCell.y],\r\n        [fromCell.x]: {\r\n          ...fromCell,\r\n          player: null,\r\n          worker: null,\r\n        },\r\n      },\r\n    };\r\n    cells = {\r\n      ...cells,\r\n      [to.y]: {\r\n        ...cells[to.y],\r\n        [to.x]: {\r\n          ...toCell,\r\n          player: fromCell.player,\r\n          worker: fromCell.worker,\r\n        },\r\n      },\r\n    };\r\n    return this.createStep(cells, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMoves: this.getBuildableAvailableMoves(cells, to),\r\n      canUndo: true,\r\n    }, false);\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const cells = {\r\n      ...this.cells,\r\n      [y]: {\r\n        ...this.cells[y],\r\n        [x]: {\r\n          ...this.cells[y][x],\r\n          level: this.cells[y][x].level + 1,\r\n        },\r\n      },\r\n    };\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(cells, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMoves: this.getPlayerAvailableMoves(cells, nextPlayer),\r\n      canUndo: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Game from \"../game/game\";\r\n\r\nclass Board extends Component {\r\n  makeMove = (cell) => {\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    let {game, small, makeMove, onSelect, selected} = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={classNames(\"background\", {small, editable: !!makeMove, selectable: !!onSelect, selected})}\r\n        onClick={onSelect ? this.onSelect : null}\r\n      >\r\n        {game.rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => {\r\n              const available = game.availableMoves[cell.y][cell.x];\r\n              return (\r\n                <div\r\n                  key={`row-${cell.x}-${cell.y}`}\r\n                  className={classNames(\"cell\", `level-${cell.level}`, {available})}\r\n                  onClick={this.props.makeMove && available ? () => this.makeMove(cell) : null}\r\n                >\r\n                  <div className={classNames(\"level\", \"level-1\")}>\r\n                    <div className={classNames(\"level\", \"level-2\")}>\r\n                      <div className={classNames(\"level\", \"level-3\")}>\r\n                        {cell.player ? (\r\n                          <div className={classNames(\"worker\", `player-${cell.player}`)} />\r\n                        ) : cell.level === 4 ? (\r\n                          <div className={classNames(\"level\", \"level-4\")} />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./board\";\r\nimport {Button, Divider, Header, Message, Segment, Statistic} from \"semantic-ui-react\";\r\n\r\nclass Play extends Component {\r\n  static PLAYER_NAMES = {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  };\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null\r\n  };\r\n\r\n  makeMove = game => {\r\n    this.props.makeMove(game);\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.props.game.previous);\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.props.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    this.setState({selectedGame: game === this.props.game ? null : game});\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.previous);\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.game !== prevProps.game) {\r\n      this.setState({selectedGame: null});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    const {selectedGame} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    return (\r\n      <Fragment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n            {game.finished ? (\r\n              <Statistic color={\"green\"} value={this.constructor.PLAYER_NAMES[game.winner]} label={\"Won!\"} />\r\n            ) : (\r\n              <Statistic value={this.constructor.PLAYER_NAMES[game.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[game.moveType]} />\r\n            )}\r\n            <Statistic value={game.moveCount} label={\"Move\"} />\r\n            {game.finished ? (\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!game.previous}>New Game</Button>} />\r\n            ) : (\r\n              <Statistic value={<Button negative onClick={this.undo} disabled={!!displayGame || !game.canUndo}>Undo</Button>} />\r\n            )}\r\n          </Statistic.Group>\r\n        </Segment>\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={this.constructor.PLAYER_NAMES[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={this.constructor.PLAYER_NAMES[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Board game={displayGame} makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove} />\r\n        </Segment>\r\n        <Segment>\r\n          <div>\r\n            {[...game.history].reverse().map(previousGame => (\r\n              <Board game={previousGame} small onSelect={this.selectGame} selected={previousGame === selectedGame} />\r\n            ))}\r\n          </div>\r\n        </Segment>\r\n        <Segment>\r\n          <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n            <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!!selectedGame || !game.previous}>Take Back a Move</Button>}/>\r\n            <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n          </Statistic.Group>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  makeMove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Play;\r\n","import React, {Component} from 'react';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Segment} from 'semantic-ui-react';\nimport './styles/App.css';\nimport Game from \"./game/game\";\nimport Play from \"./components/play\";\n\nclass App extends Component {\n  state = {\n    game: Game.create(),\n  };\n\n  makeMove = newGame => {\n    this.setState({game: newGame});\n  };\n\n  render() {\n    const {game} = this.state;\n    return (\n      <Container text>\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n        </Segment>\n        <Play game={game} makeMove={this.makeMove} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}