{"version":3,"sources":["utils.js","client/client.js","components/NavigationalTab.js","game/game.js","components/Board/HtmlBoardBackground.js","components/Board/SvgBoardBackground/LevelIndicator.js","components/Board/SvgBoardBackground/Piece.js","components/Board/SvgBoardBackground/constants.js","components/Board/SvgBoardBackground/Cell.js","components/Board/SvgBoardBackground/Arrow.js","components/Board/SvgBoardBackground/SvgBoardBackground.js","components/Board/SvgBoardBackground/index.js","components/Board/BoardBackground.js","components/Board/Board.js","components/Board/ThemeDemoBoard.js","components/Board/index.js","components/Board/PlayerColourBoard.js","client/withClient.js","components/HashedIcon.js","components/GameList.js","components/CreateTournament.js","components/TournamentList.js","components/ChallengeList.js","components/Lobby.js","components/Play.js","components/Hotseat.js","components/Settings.js","components/OnlineGame.js","services/index.js","services/notifications.js","components/OnlineTournament.js","components/LearnToPlay.js","components/EditPosition.js","components/CreateChallenge.js","components/EditChallenge.js","components/Challenges.js","App.js","serviceWorker.js","index.js"],"names":["copyToClipboard","text","textArea","document","createElement","body","appendChild","value","select","execCommand","removeChild","topicalThemes","from","moment","until","name","override","theme","cells","pieces","scheme","getApplicableSettingsAndNextUpdateDate","settings","on","_getTopicalThemeOverr","arguments","length","undefined","matchingTopicalTheme","find","topicalTheme","isSameOrBefore","isSameOrAfter","nextUpdatedDate","nextTopicalTheme","getTopicalThemeOverrideAndNextUpdateDate","useTopicalTheme","_","merge","applicableSettings","Client","_this","this","Object","classCallCheck","scriptIoReloadInterval","reloadScriptIo","window","io","unavailable","clearInterval","bindSocket","console","log","oldScriptEl","getElementById","newScriptEl","id","type","src","remove","head","append","warn","reload","location","justConnected","getUser","connected","onConnect","map","callback","justDisconnected","disconnected","onDisconnect","gotUser","user","username","token","setSettings","localStorage","setItem","JSON","stringify","onUser","gotUsers","usersInfo","users","orderBy","isUserRatingProvisional","forEach","index","rank","prepareUsers","onUsers","gotGames","games","sortBy","gamesInfo","prepareGames","onGames","gotTournaments","tournaments","tournamentsInfo","prepareTournaments","onTournaments","gotChallenges","challenges","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","challenge","meta","publishDatetime","err","return","challengesInfo","prepareChallenges","onChallenges","getItem","password","removeItem","localSettings","parse","e","updateApplicableSettingsTimeout","emit","setInterval","autoSubmitMoves","confirmSubmitMoves","enableNotifications","rotateOpponent","animations","arrows","numbers","_this2","constructor","getDefaultSettings","_utils$getApplicableS","utils","applicableSettingsName","applicableSettingsOverride","clearTimeout","millisecondsUntilUpdate","diff","setTimeout","socket","process","available","callbacks","_i","_arr","push","_i2","_arr2","pull","appVersion","mergeUsers","readyToPlay","otherUsers","_this3","myIndex","findIndex","slice","concat","toConsumableArray","byId","fromPairs","online","filter","includes","other","offline","readyToPlayMe","challengedUser","_this4","live","game","finished","myLive","userIds","otherLive","myFinished","otherFinished","mine","moves","data","tournament","_this5","future","started","futureAndLive","myFuture","myFutureAndLive","otherFuture","otherFutureAndLive","path","_this6","otherChallenges","userId","otherSolved","won","otherUnsolved","otherStarted","otherNotStarted","client","NavigationalTab","match","props","url","endsWith","_this$props","panes","defaultIndex","defaultTo","activeIndex","activeTo","preparedPanes","pane","originalIndex","_ref","slicedToArray","_ref3","_ref4","to","constructUrl","navigate","pathname","startsWith","menuItem","content","objectSpread","react_default","a","Menu","Item","assign","key","as","NavLink","icon","preparedPane","_this$props2","tab","menu","renderActiveOnly","className","_this$getPreparedPane","getPreparedPanesDefaultToAndActiveIndex","react","react_router","exact","Tab","Component","defaultProps","withRouter","InvalidMoveError","Error","Game","rowsAndColumns","status","previous","lastMove","isNextMove","_this7","history","canUndo","previousInHistory","fullHistory","moveCount","chainCount","resignedPlayer","resign","lastMovesInHistory","indexOf","missingStatusKeys","join","nextPlayer","moveType","availableMovesMatrix","thisPlayer","PLAYER_A","thisMoveType","canTakeMoveBack","moveNotation","MOVE_RESIGNED_NOTATION","MOVE_NOTATION","y","x","fullNotation","compressedFullNotation","split","part","MOVE_NOTATION_COMPRESSION","positionNotation","getPositionNotation","winner","getWinner","hasAvailableMove","OTHER_PLAYER","noMovesAreAvailable","getInitialRowsAndColumns","getInitialStatus","create","makeMoves","row","cell","findCell","player","PLAYERS","worker","WORKERS","level","playerACount","findCells","playerBCount","PLAYER_B","Math","max","apply","flatten","MOVE_TYPE_PLACE_FIRST_WORKER","allMovesAreAvailableMatrix","MOVE_TYPE_PLACE_SECOND_WORKER","getEmptyCellsAvailableMovesMatrix","playerAFirstWorker","WORKER_FIRST","playerASecondWorker","WORKER_SECOND","playerBFirstWorker","playerBSecondWorker","MOVE_TYPE_SELECT_WORKER_TO_MOVE","getPlayerAvailableMovesMatrix","sum","MOVE_REVERSE_NOTATION","move","fromMoves","MOVE_NOTATION_DECOMPRESSION","POSITION_NOTATION_COMPRESSION","notation","ROWS","COLUMNS","POSITION_REVERSE_NOTATION","fromPosition","POSITION_NOTATION_DECOMPRESSION","fromCompressedPositionNotation","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromRowsAndColumns","_Game$PLAYER_A","_Game$PLAYER_B","_printMap","_nextPlayerMap","_winnerMap","printMap","defineProperty","chalk","bgWhite","bgYellow","bgRed","bgBlue","cellsPrintout","nextPlayerPrintout","winnerPrintout","black","_ref2","floor","condition","winningCell","canPlayerWin","expectedMoveType","coordinates","targetCoordinates","checkCoordinatesAreValid","createStep","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","makeMove","_makeMoveMethods","makeMoveMethod","placeFirstWorker","placeSecondWorker","selectWorkerToMove","MOVE_TYPE_MOVE_FIRST_WORKER","moveFirstWorker","MOVE_TYPE_MOVE_SECOND_WORKER","moveSecondWorker","MOVE_TYPE_BUILD_AROUND_WORKER","buildAroundWorker","bind","checkCanMakeMove","updateCells","_ref5","createNext","_ref6","getMovableAvailableMovesMatrix","_this$constructor","_this8","fromCell","toCell","getBuildableAvailableMovesMatrix","_ref7","moveWorker","_ref8","_ref9","_ref10","_this9","getAvailableMoves","playerCells","playerCell","abs","_this10","_this11","getAvailableMovesMatrix","_this12","_this13","maximumLevel","_this14","isMoveAvailable","updates","_len","newCells","Array","_key","_newCells","update","MOVE_TYPES_START_OF_TURN","MOVE_TYPES_PLACE_WORKER","MOVE_TYPES_MOVE_WORKER","MOVE_TYPES_MOVE_OR_BUILD","RA","RB","keys","sort","String","fromCharCode","POSITION_NOTATION","entries","_ref11","_ref12","levelStr","notations","_ref13","_ref14","playerStr","parseInt","POSITION_NOTATION_COMPRESSION_MAP","_ref15","_ref17","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","HtmlBoardBackground","clickable","undoable","isCellAvailable","isCellUndoable","small","medium","onSelect","selected","_settings$theme","classNames","small-board","medium-board","editable","selectable","board-theme-default","board-theme-subtle","board-theme-pastel","board-theme-green","numbered-levels","obvious-levels","subtle-levels","very-subtle-levels","onClick","HtmlBoardBackground_HtmlBoardCell","undo","animated","HtmlBoardCell","displayLevel","LevelIndicatorVerySubtle","transform","constants","dominantBaseline","textAnchor","style","fontSize","PureComponent","LevelIndicatorSubtle","r","fill","stroke","strokeWidth","LevelIndicatorObvious","paintOrder","LevelIndicator","Indicator","indicatorMap","very-subtle","subtle","obvious","BasePieceDefinition","dimensions","offset","xlinkHref","BasePiece","colour","rotated","rotateTransform","definePiece","_ref$offset","PieceDefinitionFor","_PureComponent3","possibleConstructorReturn","getPrototypeOf","inherits","createClass","Piece_BasePieceDefinition","displayName","PieceFor","_PureComponent4","_this$props3","Piece_BasePiece","Definition","PiecePawn","d","PieceKing","PieceCircle","PieceCertificate","PieceSun","PieceRocket","PieceBug","PieceEye","PieceUser","PieceHalloweenWitchHat","PieceHalloweenCauldron","PieceHalloweenBat","PieceHalloweenSpider","PieceHalloweenCat","PieceHalloweenTombstone","PieceHalloweenPumpkin","PieceHalloweenGhost","Piece","_this$props4","PieceStyle","pieceStyleMap","pawn","king","circle","certificate","sun","rocket","bug","eye","halloween-witch-hat","halloween-cauldron","halloween-bat","halloween-spider","halloween-cat","halloween-tombstone","halloween-pumpkin","halloween-ghost","PieceDefinitions","values","Definitions","BaseCellDefinitions","paths","border","level0","level1","level2","level3","level4","defaultBorder","width","height","defineCellDefinitions","CellDefinitionsFor","_PureComponent2","Cell_BaseCellDefinitions","OriginalCellDefinitions","HalloweenCellDefinitions","CellDefinitions","cellDefinitionsStyleMap","CellDefinitionsStyle","original","halloween","Cell","state","previousLevel","currentLevel","levelsAnimate","i","React","createRef","prevProps","prevState","snapshot","levelAnimate","current","beginElement","allowControl","_this$props2$theme","_this$props2$theme$ce","_this$props2$theme$pi","_this$props2$theme$ro","_this$state","isPlayerAOpponent","isPlayerBOpponent","opacity","ref","attributeName","attributeType","dur","repeatCount","SvgBoardBackground_Piece","SvgBoardBackground_LevelIndicator","ArrowDefinition","arrowDimensions","arrowOffset","arrowScaling","hammerDimensions","hammerOffset","hammerScaling","Arrow","_this$constructor2","offsetX","smallScaling","rotation","rotationMap","offsetYFactor","sqrt","0,1","-1,1","-1,0","-1,-1","0,-1","1,-1","1,0","1,1","SvgBoardBackground","transformation","showArrows","rowCount","columnCount","viewBox","--column-count","--row-count","preserveAspectRatio","data-key","SvgBoardBackground_SvgBoardCell","SvgBoardBackground_SvgBoardPieces","arrow","SvgBoardBackground_Arrow","SvgBoardBackground_SvgBoardHistoryArrows","SvgBoardBackgroundDefinitions","display","SvgBoardBackground_Cell","SvgBoardHistoryArrows","_this$getRelevantHist","getRelevantHistory","relevantHistory","gameWithPieceMove","gameWithBuildMove","_move$build","build","reverseCoordinates","iteratingGame","_this$getPlayerMoves","getPlayerMoves","moveArrow","buildArrow","SvgBoardPieces","pointerEvents","SvgBoardBackground_SvgBoardPiece","SvgBoardPiece","previousPosition","position","animateTransform","SvgBoardCell","_this$props5","BoardBackground","_this$props$renderer","renderer","objectWithoutProperties","Renderer","html","svg","Board","takeMoveBack","minChainCount","Board_BoardBackground","isGameUndoable","BoardTransformation","rotations","flippedHorizontally","updateOrientation","method","setState","onChange","_this2$state","transformationMap","rotateCounterClockwise","rotateClockwise","flipHorizontally","flipVertically","reset","size","items","disabled","config","transformRowsAndColumns","reverseTransformCoordinates","flipped","transpose","flipX","flipY","reverseConfig","_this$getNewRowAndCol","getNewRowAndColumnCount","newRowCount","newColumnCount","newXs","range","newY","newX","_this4$getOldCoordina","getOldCoordinates","oldX","oldY","_this$getNewRowAndCol2","_this$getOldCoordinat","0,false","1,false","makeTransformRowsAndColumns","2,false","3,false","0,true","1,true","2,true","3,true","ThemeDemoBoard","demoRowsAndColumns","animate","demoRowsAndColumnsAnimated","animationInterval","PlayerColourBoard","colours","ClientWatcher","connectionChanged","subscribe","unsubscribe","SubComponent","ClientWatcherForComponent","withClient","forComponent","HashedIcon","updateIcon","jdenticon","hash","_classNames","floated","textSized","data-jdenticon-value","GameCard","_Component","_getPrototypeOf2","args","call","selectLiveGame","usersById","tournamentsById","terse","currentGameId","tournamentId","gameGame","deserialize","playerA","playerB","nextPlayerUser","playerAToPlay","playerBToPlay","isUserPlayerA","isUserPlayerB","winnerUser","isMyGame","isMyTurn","showPlayerA","showPlayerB","Card","backgroundColor","attention","Content","components_Board","Header","Label","color","Icon","components_HashedIcon","Meta","endDatetime","startDatetime","GameList","activePage","onPageChange","pageSize","reverse","totalPages","ceil","visibleGames","Group","maxHeight","overflowY","flexWrap","GameList_GameCard","Grid","centered","Row","Pagination","pointing","secondary","gameCount","createTournament","onClose","setValue","Modal","trigger","Button","header","Segment","Form","Field","control","Input","label","placeholder","required","defaultValue","min","actions","positive","TournamentCard","selectLiveTournament","currentTournamentId","isMyTournament","didUserCreated","creatorUserId","didUserWin","winnerUserId","creator","statusLabel","round","rounds","createdDatetime","TournamentList","visibleTournaments","TournamentList_TournamentCard","ChallengeCard","selectChallenge","currentChallengeId","userChallenge","options","typeOptions","mateIn","1","2","3","difficulty","maxDifficulty","title","mistakes","public","fromNow","toNow","startingPosition","get","ChallengeList","visibleChallenges","ChallengeList_ChallengeCard","UserList","readyToPlayUsers","readyToPlayMeUsers","otherUser","Lobby_UserCard","ChallengeUserButton","changeReadyToPlay","challengeUser","playButtonColour","playButtonAttention","playButtonIcon","playButtonOnClick","playButtonLabel","_this$props2$usersInf","loading","UserCard","Lobby_EditUser","hasPassword","winCount","score","tournamentWinCount","tournamentCount","extra","Lobby_ChallengeUserButton","EditUser","changeUsername","target","changePassword","updateUsername","updatePassword","action","negative","LogIn","_Component5","_getPrototypeOf4","_len3","_key3","changeMergeUsers","checked","logIn","_this$state2","modal","float","Checkbox","LogOut","_Component6","_getPrototypeOf5","_len4","_key4","logOut","_this$props5$usersInf","_this$props5$gamesInf","_this$props5$challeng","selectLiveChallenge","render","components_GameList","challengesList","components_ChallengeList","components_CreateTournament","components_TournamentList","Lobby_UserList","Pane","Play","selectedGame","autoSubmitModal","submit","onDisplayPositionChange","newGame","selectGame","onSelectedGameChange","makeMoveToSelected","takeMoveBackToSelected","undoToSelected","deselectGame","getMovesToSubmit","resignOrAbort","changeAutoSubmitMoves","changeSettings","handleOpen","doAutoSubmitMoves","canSubmit","onTransformationChange","propsGame","propsGameIndex","error","resigning","names","matchGame","children","displayGame","tooShortToResign","canTakeBack","controlsNode","Play_PlayPlayer","playerUser","canAnyPlayerSubmit","takeBack","Play_PlayNavigation","Board_BoardTransformation","boardNode","textAlign","columns","Responsive","minWidth","Column","Fragment","maxWidth","stretched","Statistic","widths","inverted","Play_PlayHistory","MOVE_TYPE_NAMES","primary","_names","PlayPlayer","submitAndDisableConfirm","updateSettings","isPlayerControlled","previousGame","isPlayersTurn","playerWon","stackable","Board_PlayerColourBoard","toggle","item","PlayHistory","lastVisibleGame","PlayNavigation","goToCurrentMove","canGoToCurrentMove","goToNextMove","canGoToNextMove","selectedGameIndex","goToAncestor","mostRecentAncestorGameIndex","gameIndexes","goToPreviousMove","canGoToPreviousMove","goToPreviousVariationMove","goToFirstMove","canGoToFirstMove","keydown","event","_keydown$event","which","shiftKey","Keys","left","home","right","_this$gameIndexes","lastGameIndex","_this$gameIndexes2","_this$gameIndexes3","ancestor","getGameAndErrorFromUrlPosition","dismissUrlPositionError","share","href","navigator","catch","alert","open","active","components_Play","URLSearchParams","search","fromCompressedMoveNotation","SettingsContent","themeSchemeOptions","themeCellsOptions","themePiecesOptions","themeNumbersOptions","themeDemoBoard","overrides","Board_ThemeDemoBoard","updateAutoSubmitMove","updateConfirmSubmitMoves","updateEnableNotifications","updateThemeUseTopicalTheme","updateThemeRotateOpponent","updateAnimations","updateArrows","updateThemeNumbers","updateThemeScheme","updateThemePieces","updateThemeCells","_this$props$settings","_theme$cells","_theme$pieces","attached","verticalAlign","option","radio","save","scrolling","Settings_SettingsContent","OnlineGamePlayer","initialPlayer","resultingPlayerScore","initialPlayerA","resultingPlayerAScore","initialPlayerB","resultingPlayerBScore","isWinner","winPoints","losePoints","ChosenOnlineGame","gameSelector","createSelector","params","gameId","gamesById","playersInfoSelector","userPlayer","gameGameSelector","dismissUrlGameError","submitGameMove","close","shareGame","_this$playersInfo","playersInfo","preventDefault","stopChallengeUser","copyPlayPosition","_this$props2$gamesInf","otherLiveGames","myLiveGames","_this$playersInfo2","gamesNode","components_Settings","REACT_APP_DEBUG","admin","OnlineGame_OnlineGamePlayer","react_router_dom","OnlineGame","_this$props3$gamesInf","OnlineGame_ChosenOnlineGame","services","notifications","Notification","permission","requestPermission","construct","prototype","_args2","ChosenOnlineTournament","tournamentSelector","dismissUrlTournamentError","shareTournament","assertThisInitialized","toggleParticipation","startTournament","abortTournament","players","otherUserId","userStats","points","initialScore","Table","celled","collapsing","unstackable","HeaderCell","Body","stats","ratedPoints","expectedPoints","toFixed","waitingForNextRound","scoreDifference","colSpan","schedule","roundIndex","pairings","gameIndex","_ref$userIds","playerAId","playerBId","playerAWon","playerBWon","player-a-won","player-b-won","OnlineTournament","OnlineTournament_ChosenOnlineTournament","LearnBoard","selectedMoveCell","movedFromCell","selectedBuildCell","canMove","canBuild","isCellAvailableForMoving","isCellAvailableForBuilding","makeMoveMoving","makeMoveBuilding","_this$state3","_this$state4","makeMoveUndoMoving","board","originalRowsAndColumns","_this$state5","rawSettings","LearnToPlay","stepIndex","goToFirstStep","goToPreviousStep","goToNextStep","goToLastStep","steps","step","Message","LearnToPlay_LearnBoard","EditPosition","paletteSelectedItem","paletteUpdate","positionError","urlError","onPaletteSelectedItemChange","onPositionChange","message","copyGame","visibleGame","resetBoard","resetGame","copyPosition","usePosition","initialPositionNotation","EditPosition_EditPositionPalette","selectedItem","onSelectedItemChange","EditPosition_EditPositionBoard","EditPositionPalette","moveFromKey","q","0","4","b","EditPositionBoard","updatePosition","newCell","newPosition","CreateChallenge","editing","currentStep","tree","onCreateChallenge","getTree","existingResponse","getExistingResponse","pathIndexes","getPathIndexes","_this$duplicateChalle","duplicateChallenge","newChallenge","newModifyingStep","newStep","addGameToStep","getNextTreePath","treePath","lastTreeStep","playerResponses","nextStep","challengeResponse","deleteCurrentStep","_this$duplicateChalle2","removeStep","editChallenge","createChallenge","cleanedChallenge","discardChallenge","initialChallenge","fillGames","challengeStep","response","treePathStep","oldStep","isArray","getNextTree","nextTree","CreateChallenge_ChallengeForm","challengePrompt","getDifficultyStars","source","rowIndex","columnIndex","ChallengeForm","editingPosition","convertedValue","valueConversion","newChallengeToChange","parts","onValueSet","isPositionValid","isValidCompressedPositionNotation","_this3$state","editPosition","components_EditPosition","onSubmit","inline","Radio","Select","format","options.typeOptions.mateIn","meta.difficulty","meta.publishDatetime","timestamp","EditChallenge","dismissUrlChallengeError","components_CreateChallenge","Challenges","_this$props$challenge","components_EditChallenge","Challenges_ChallengePlayer","ChallengePlayer","challengeId","getResumedChallengeGame","submittedGame","wrongMove","updateChallenge","askServer","shareChallenge","resultingGame","userChallengeStep","lastPlayerResponse","gameToUpdate","_ref3$askServer","remainingHistory","_loop","historyGame","shift","invalidPlayerPositions","v","validPlayerResponse","submitChallengeMove","_ret","success","App","liveGame","liveTournament","liveChallenge","gameUrl","tournamentUrl","challengeUrl","leaveTournament","joinTournament","askForNotificationPermissionOnWaitForGame","navigateToMyNewGame","notifyAboutMyMove","previousMyLiveGameIds","Set","newMyLiveGameIds","has","notify","gamesThatChangedToMyTurn","nextUserId","prevGame","tag","onlineGameLabel","onlineTournamentLabel","Container","Board_SvgBoardBackground","Lobby_LogIn","Lobby_LogOut","components_NavigationalTab","components_Lobby","components_OnlineGame","components_OnlineTournament","components_Hotseat","components_Challenges","components_LearnToPlay","Boolean","hostname","ReactDOM","basename","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bdb50970.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nexport const copyToClipboard = text => {\r\n  const textArea = document.createElement(\"textarea\");\r\n  // This won't work\r\n  // textArea.style.display = 'none'\r\n  document.body.appendChild(textArea);\r\n  textArea.value = text;\r\n  textArea.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(textArea);\r\n};\r\n\r\nexport const topicalThemes = [\r\n  {\r\n    from: moment(\"2019-10-28T12:30:00\"),\r\n    until: moment(\"2019-11-01T00:00:00\"),\r\n    name: 'Halloween',\r\n    override: {\r\n      theme: {\r\n        cells: 'halloween',\r\n        pieces: 'halloween-ghost',\r\n        scheme: 'halloween',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nconst getTopicalThemeOverrideAndNextUpdateDate = (on = moment()) => {\r\n  const matchingTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrBefore(on) && topicalTheme.until.isSameOrAfter(on)\r\n  ));\r\n  if (matchingTopicalTheme) {\r\n    return {\r\n      override: matchingTopicalTheme.override,\r\n      nextUpdatedDate: matchingTopicalTheme.until,\r\n      name: matchingTopicalTheme.name,\r\n    };\r\n  }\r\n\r\n  const nextTopicalTheme = topicalThemes.find(topicalTheme => (\r\n    topicalTheme.from.isSameOrAfter(on)\r\n  ));\r\n  if (nextTopicalTheme) {\r\n    return {override: null, nextUpdatedDate: nextTopicalTheme.from, name: null};\r\n  }\r\n\r\n  return {override: null, nextUpdatedDate: null, name: null};\r\n};\r\n\r\nexport const getApplicableSettingsAndNextUpdateDate = (settings, on) => {\r\n  const {override, nextUpdatedDate, name} = getTopicalThemeOverrideAndNextUpdateDate(on);\r\n  if (settings.theme.useTopicalTheme && override) {\r\n    settings = _.merge({}, settings, override);\r\n  }\r\n\r\n  return {applicableSettings: settings, nextUpdatedDate, override, name};\r\n};\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport * as utils from \"../utils\";\r\n\r\nconst appVersion = 7;\r\n\r\nclass Client {\r\n  static getDefaultSettings() {\r\n    return {\r\n      autoSubmitMoves: false,\r\n      confirmSubmitMoves: true,\r\n      enableNotifications: false,\r\n      theme: {\r\n        useTopicalTheme: true,\r\n        cells: 'original',\r\n        pieces: 'king',\r\n        scheme: '',\r\n        rotateOpponent: true,\r\n        animations: true,\r\n        arrows: true,\r\n        numbers: 'obvious',\r\n      },\r\n    };\r\n  }\r\n\r\n  scriptIoReloadInterval = null;\r\n\r\n  constructor() {\r\n    this.id = localStorage.getItem('user-id') || null;\r\n    this.username = localStorage.getItem('user-name') || null;\r\n    const password = localStorage.getItem('user-password') || null;\r\n    localStorage.removeItem('user-password');\r\n    this.token = localStorage.getItem('user-token') || password;\r\n    const localSettings = localStorage.getItem('user-settings') || 'null';\r\n    let settings;\r\n    try {\r\n      settings = JSON.parse(localSettings);\r\n    } catch (e) {\r\n      settings = null;\r\n    }\r\n    this.updateApplicableSettingsTimeout = null;\r\n    this.setSettings(settings);\r\n    if (!window.io) {\r\n      window.io = () => ({\r\n        on: () => console.warn(\"Socket script was missing\"),\r\n        emit: () => console.warn(\"Socket script was missing\"),\r\n        unavailable: true,\r\n      });\r\n      window.io.unavailable = true;\r\n      this.scriptIoReloadInterval = setInterval(this.reloadScriptIo, 1000);\r\n    }\r\n\r\n    this.disconnected = false;\r\n\r\n    this.onConnect = [];\r\n    this.onDisconnect = [];\r\n    this.onUser = [];\r\n    this.onUsers = [];\r\n    this.onGames = [];\r\n    this.onTournaments = [];\r\n    this.onChallenges = [];\r\n\r\n    this.bindSocket();\r\n  }\r\n\r\n  setSettings(settings) {\r\n    if (settings) {\r\n      this.settings = _.merge(this.constructor.getDefaultSettings(), settings);\r\n    } else {\r\n      this.settings = this.constructor.getDefaultSettings();\r\n    }\r\n    const {applicableSettings, nextUpdatedDate, override, name} = utils.getApplicableSettingsAndNextUpdateDate(this.settings);\r\n    this.applicableSettings = applicableSettings;\r\n    this.applicableSettingsName = name;\r\n    this.applicableSettingsOverride = override;\r\n    if (this.updateApplicableSettingsTimeout) {\r\n      clearTimeout(this.updateApplicableSettingsTimeout);\r\n      this.updateApplicableSettingsTimeout = null;\r\n    }\r\n    if (nextUpdatedDate) {\r\n      const millisecondsUntilUpdate = nextUpdatedDate.diff(moment());\r\n      this.updateApplicableSettingsTimeout = setTimeout(() => {\r\n        this.setSettings(this.settings);\r\n        this.onUser.map(callback => callback(this.user));\r\n      }, millisecondsUntilUpdate);\r\n    }\r\n  }\r\n\r\n  bindSocket() {\r\n    this.socket = window.io(process.env.REACT_APP_SERVER_URL);\r\n    this.available = !this.socket.unavailable;\r\n    this.connected = false;\r\n    this.socket.on('connect', this.justConnected);\r\n    this.socket.on('disconnect', this.justDisconnected);\r\n    this.socket.on(\"reload\", this.reload);\r\n\r\n    this.user = null;\r\n    this.socket.on(\"user\", this.gotUser);\r\n\r\n    this.usersInfo = this.prepareUsers([]);\r\n    this.socket.on(\"users\", this.gotUsers);\r\n\r\n    this.gamesInfo = this.prepareGames([]);\r\n    this.socket.on(\"games\", this.gotGames);\r\n\r\n    this.tournamentsInfo = this.prepareTournaments([]);\r\n    this.socket.on(\"tournaments\", this.gotTournaments);\r\n\r\n    this.challengesInfo = this.prepareChallenges([]);\r\n    this.socket.on(\"challenges\", this.gotChallenges);\r\n\r\n    this.getUser();\r\n  }\r\n\r\n  reloadScriptIo = () => {\r\n    if (!window.io.unavailable) {\r\n      clearInterval(this.scriptIoReloadInterval);\r\n      this.scriptIoReloadInterval = null;\r\n      this.bindSocket();\r\n      console.log('Loaded script.io!');\r\n      return;\r\n    }\r\n    const oldScriptEl = document.getElementById('socket-io-script');\r\n    const newScriptEl = document.createElement('script');\r\n    newScriptEl.id = oldScriptEl.id;\r\n    newScriptEl.type = oldScriptEl.type;\r\n    newScriptEl.src = oldScriptEl.src;\r\n    oldScriptEl.remove();\r\n    document.head.append(newScriptEl);\r\n    console.warn('Retrying socket.io script download...');\r\n  };\r\n\r\n  subscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onTournaments', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        this[name].push(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  unsubscribe(callbacks) {\r\n    for (const name of ['onConnect', 'onDisconnect', 'onUser', 'onUsers', 'onGames', 'onChallenges']) {\r\n      const callback = callbacks[name];\r\n      if (callback) {\r\n        _.pull(this[name], callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  getUser() {\r\n    this.socket.emit(\"create-user\", {\r\n      appVersion,\r\n      id: this.id,\r\n      name: this.username,\r\n      token: this.token,\r\n      settings: this.settings,\r\n    });\r\n  }\r\n\r\n  logIn(name, password, mergeUsers) {\r\n    this.socket.emit(\"log-in\", {appVersion, name, password, mergeUsers});\r\n  }\r\n\r\n  logOut() {\r\n    this.socket.emit(\"log-out\");\r\n  }\r\n\r\n  reload = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  justConnected = () => {\r\n    this.getUser();\r\n    this.connected = true;\r\n    this.onConnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  justDisconnected = () => {\r\n    this.connected = false;\r\n    this.disconnected = true;\r\n    this.onDisconnect.map(callback => callback(this.connected));\r\n  };\r\n\r\n  gotUser = user => {\r\n    if (user) {\r\n      this.id = user.id;\r\n      this.username = user.name;\r\n      this.token = user.token;\r\n      this.setSettings(user.settings);\r\n      localStorage.setItem('user-id', this.id);\r\n      localStorage.setItem('user-name', this.username);\r\n      localStorage.setItem('user-token', this.token);\r\n      localStorage.setItem('user-settings', JSON.stringify(this.settings));\r\n    }\r\n    this.user = user;\r\n    this.onUser.map(callback => callback(user));\r\n    this.gotUsers(this.usersInfo.users);\r\n  };\r\n\r\n  changeUsername(name) {\r\n    this.socket.emit(\"change-username\", name);\r\n  }\r\n\r\n  changePassword(password) {\r\n    this.socket.emit(\"change-password\", password);\r\n  }\r\n\r\n  updateSettings(settings) {\r\n    this.socket.emit(\"update-settings\", settings);\r\n  }\r\n\r\n  changeReadyToPlay(readyToPlay) {\r\n    this.socket.emit(\"change-ready-to-play\", readyToPlay);\r\n  }\r\n\r\n  gotUsers = users => {\r\n    users = _.orderBy(users, [user => user.isUserRatingProvisional ? 1 : 0, 'score', 'maxScore'], ['asc', 'desc', 'desc']);\r\n    users.forEach((user, index) => {\r\n      user.rank = index + 1;\r\n    });\r\n    this.usersInfo = this.prepareUsers(users);\r\n    this.onUsers.map(callback => callback(this.usersInfo));\r\n  };\r\n\r\n  prepareUsers(users) {\r\n    let otherUsers;\r\n    if (this.user) {\r\n      const myIndex = users.findIndex(user => user.id === this.user.id);\r\n      if (myIndex >= 0) {\r\n        otherUsers = users.slice(0, myIndex).concat(users.slice(myIndex + 1));\r\n        users = [users[myIndex], ...otherUsers];\r\n      } else {\r\n        otherUsers = users;\r\n      }\r\n    } else {\r\n      otherUsers = users;\r\n    }\r\n    const byId = _.fromPairs(users.map(user => [user.id, user]));\r\n    const online = users.filter(user => user.online);\r\n    const readyToPlay = online.filter(user => [true, this.user ? this.user.id : true].includes(user.readyToPlay));\r\n    return {\r\n      users,\r\n      byId,\r\n      other: otherUsers,\r\n      online,\r\n      offline: users.filter(user => !user.online),\r\n      readyToPlay,\r\n      readyToPlayMe: readyToPlay.filter(user => this.user && this.user.id === user.readyToPlay),\r\n      challengedUser: this.user ? (byId[this.user.readyToPlay] || null ): null,\r\n    };\r\n  }\r\n\r\n  gotGames = games => {\r\n    games = _.sortBy(games, ['startDatetime', 'id'], ['desc', 'desc']);\r\n    this.gamesInfo = this.prepareGames(games);\r\n    this.onGames.map(callback => callback(this.gamesInfo));\r\n  };\r\n\r\n  prepareGames(games) {\r\n    const live = games.filter(game => !game.finished);\r\n    const finished = games.filter(game => game.finished);\r\n    return {\r\n      games,\r\n      byId: _.fromPairs(games.map(game => [game.id, game])),\r\n      live,\r\n      myLive: this.user ? live.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherLive: this.user ? live.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      finished,\r\n      myFinished: this.user ? finished.filter(game => game.userIds.includes(this.user.id)) : [],\r\n      otherFinished: this.user ? finished.filter(game => !game.userIds.includes(this.user.id)) : live,\r\n      mine: this.user ? games.filter(game => game.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  submitGameMove(game, moves) {\r\n    this.socket.emit(\"submit-game-moves\", {id: game.id, moves});\r\n  }\r\n\r\n  createTournament(data) {\r\n    this.socket.emit(\"create-tournament\", data);\r\n  }\r\n\r\n  joinTournament(tournament) {\r\n    this.socket.emit(\"join-tournament\", tournament.id);\r\n  }\r\n\r\n  leaveTournament(tournament) {\r\n    this.socket.emit(\"leave-tournament\", tournament.id);\r\n  }\r\n\r\n  startTournament(tournament) {\r\n    this.socket.emit(\"start-tournament\", tournament.id);\r\n  }\r\n\r\n  abortTournament(tournament) {\r\n    this.socket.emit(\"abort-tournament\", tournament.id);\r\n  }\r\n\r\n  gotTournaments = tournaments => {\r\n    tournaments = _.sortBy(tournaments, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.tournamentsInfo = this.prepareTournaments(tournaments);\r\n    this.onTournaments.map(callback => callback(this.tournamentsInfo));\r\n  };\r\n\r\n  prepareTournaments(tournaments) {\r\n    const future = tournaments.filter(tournament => !tournament.started);\r\n    const live = tournaments.filter(tournament => tournament.started && !tournament.finished);\r\n    const futureAndLive = future.concat(live);\r\n    const finished = tournaments.filter(tournament => tournament.finished);\r\n    return {\r\n      tournaments,\r\n      byId: _.fromPairs(tournaments.map(game => [game.id, game])),\r\n      future, live, futureAndLive, finished,\r\n      myFuture: this.user ? future.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myLive: this.user ? live.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFutureAndLive: this.user ? futureAndLive.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      myFinished: this.user ? finished.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n      otherFuture: this.user ? live.filter(tournament => !tournament.userIds.includes(this.user.id)) : live,\r\n      otherLive: this.user ? future.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFutureAndLive: this.user ? futureAndLive.filter(tournament => !tournament.userIds.includes(this.user.id)) : future,\r\n      otherFinished: this.user ? finished.filter(tournament => !tournament.userIds.includes(this.user.id)) : finished,\r\n      mine: this.user ? tournaments.filter(tournament => tournament.userIds.includes(this.user.id)) : [],\r\n    };\r\n  }\r\n\r\n  createChallenge(challenge) {\r\n    this.socket.emit('create-challenge', challenge);\r\n  }\r\n\r\n  submitChallengeMove(challenge, path) {\r\n    this.socket.emit(\"submit-challenge-moves\", {id: challenge.id, path});\r\n  }\r\n\r\n  gotChallenges = challenges => {\r\n    for (const challenge of challenges) {\r\n      challenge.meta.publishDatetime = moment(challenge.meta.publishDatetime);\r\n    }\r\n    challenges = _.sortBy(challenges, ['startDatetime', 'endDatetime', 'createdDatetime', 'id'], ['desc', 'desc', 'desc', 'desc']);\r\n    this.challengesInfo = this.prepareChallenges(challenges);\r\n    this.onChallenges.map(callback => callback(this.challengesInfo));\r\n  };\r\n\r\n  prepareChallenges(challenges) {\r\n    const otherChallenges = this.user ? challenges.filter(challenge => challenge.userId !== this.user.id) : challenges;\r\n    return {\r\n      challenges,\r\n      byId: _.fromPairs(challenges.map(game => [game.id, game])),\r\n      mine: this.user ? challenges.filter(challenge => challenge.userId === this.user.id) : [],\r\n      other: otherChallenges,\r\n      otherSolved: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.won) : [],\r\n      otherUnsolved: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.won) : otherChallenges,\r\n      otherStarted: this.user ? otherChallenges.filter(challenge => this.user.challenges[challenge.id] && this.user.challenges[challenge.id].meta.started && !this.user.challenges[challenge.id].meta.won) : [],\r\n      otherNotStarted: this.user ? otherChallenges.filter(challenge => !this.user.challenges[challenge.id] || !this.user.challenges[challenge.id].meta.started) : otherChallenges,\r\n    };\r\n  }\r\n}\r\n\r\nexport const client = new Client();\r\nwindow.client = client;\r\n\r\nexport default Client;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Component, Fragment } from 'react';\r\nimport {\r\n  NavLink,\r\n  Redirect, Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { Menu, Tab } from 'semantic-ui-react';\r\n\r\nclass NavigationalTab extends Component {\r\n  constructUrl(path) {\r\n    const {match} = this.props;\r\n    return `${match.url.endsWith('/') ? match.url.slice(0, -1) : match.url}${path ? `/${path}` : ''}`;\r\n  }\r\n\r\n  getPreparedPanesDefaultToAndActiveIndex() {\r\n    const {panes, defaultIndex, match, location} = this.props;\r\n    let defaultTo = null;\r\n    let activeIndex = null;\r\n    let activeTo = match.url;\r\n\r\n    const preparedPanes = panes\r\n      .map((pane, originalIndex) => [pane, originalIndex])\r\n      .filter(([pane]) => pane)\r\n      .map(([pane, originalIndex], index) => {\r\n        if (!pane) {\r\n          return null;\r\n        }\r\n\r\n        const to = this.constructUrl(pane.path);\r\n        if (originalIndex === defaultIndex) {\r\n          defaultTo = to;\r\n        }\r\n        const navigate = pane.navigate !== undefined ? this.constructUrl(pane.navigate) : to;\r\n        if (location.pathname.startsWith(navigate)) {\r\n          activeIndex = index;\r\n          activeTo = to;\r\n        }\r\n\r\n        const menuItem = (\r\n          typeof pane.menuItem === typeof \"\"\r\n            ? {content: pane.menuItem}\r\n            : pane.menuItem\r\n        );\r\n        return {\r\n          to,\r\n          ...pane,\r\n          menuItem: (\r\n            <Menu.Item\r\n              key={pane.path}\r\n              as={NavLink}\r\n              to={navigate}\r\n              {...menuItem}\r\n              icon={pane.icon || menuItem.icon}\r\n            />\r\n          ),\r\n        };\r\n      })\r\n      .filter(preparedPane => preparedPane);\r\n    return {preparedPanes, defaultTo, activeIndex, activeTo}\r\n  }\r\n\r\n  render() {\r\n    const {tab, menu, match, renderActiveOnly, className} = this.props;\r\n    const {preparedPanes, defaultTo, activeIndex, activeTo} = this.getPreparedPanesDefaultToAndActiveIndex();\r\n\r\n    return (\r\n      <Fragment>\r\n        {defaultTo !== null ? (\r\n          <Switch>\r\n            <Redirect exact from={match.url} to={defaultTo} />\r\n          </Switch>\r\n        ) : null}\r\n        <Route path={activeTo}>\r\n          <Tab\r\n            menu={menu}\r\n            renderActiveOnly={renderActiveOnly}\r\n            {...tab}\r\n            panes={preparedPanes}\r\n            activeIndex={activeIndex}\r\n            className={className}\r\n          />\r\n        </Route>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationalTab.propTypes = {\r\n  panes: PropTypes.arrayOf(PropTypes.shape({\r\n    ...Menu.Item.propTypes,\r\n    path: PropTypes.string,\r\n    menuItem: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n  })).isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  tab: PropTypes.object,\r\n  menu: PropTypes.object,\r\n  renderActiveOnly: PropTypes.bool.isRequired,\r\n  defaultIndex: PropTypes.number.isRequired,\r\n};\r\n\r\nNavigationalTab.defaultProps = {\r\n  renderActiveOnly: true,\r\n  defaultIndex: 0,\r\n};\r\n\r\nexport default withRouter(NavigationalTab);\r\n","import _ from \"lodash\";\r\nimport chalk from 'chalk';\r\n\r\nclass InvalidMoveError extends Error {}\r\n\r\nclass Game {\r\n  static PLAYER_A = 'player-a';\r\n  static PLAYER_B = 'player-b';\r\n  static PLAYERS = [\r\n    this.PLAYER_A,\r\n    this.PLAYER_B,\r\n  ];\r\n  static OTHER_PLAYER = {\r\n    [this.PLAYER_A]: this.PLAYER_B,\r\n    [this.PLAYER_B]: this.PLAYER_A,\r\n  };\r\n\r\n  static WORKER_FIRST = 'first-worker';\r\n  static WORKER_SECOND = 'second-worker';\r\n  static WORKERS = [this.WORKER_FIRST, this.WORKER_SECOND];\r\n\r\n  static MOVE_TYPE_PLACE_FIRST_WORKER = 'place-first-worker';\r\n  static MOVE_TYPE_PLACE_SECOND_WORKER = 'place-second-worker';\r\n  static MOVE_TYPE_SELECT_WORKER_TO_MOVE = 'select-worker-to-move';\r\n  static MOVE_TYPE_MOVE_FIRST_WORKER = 'move-first-worker';\r\n  static MOVE_TYPE_MOVE_SECOND_WORKER = 'move-second-worker';\r\n  static MOVE_TYPE_BUILD_AROUND_WORKER = 'build-around-worker';\r\n\r\n  static MOVE_TYPES_START_OF_TURN = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_SELECT_WORKER_TO_MOVE];\r\n  static MOVE_TYPES_PLACE_WORKER = [this.MOVE_TYPE_PLACE_FIRST_WORKER, this.MOVE_TYPE_PLACE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_WORKER = [this.MOVE_TYPE_MOVE_FIRST_WORKER, this.MOVE_TYPE_MOVE_SECOND_WORKER];\r\n  static MOVE_TYPES_MOVE_OR_BUILD = [...this.MOVE_TYPES_MOVE_WORKER, this.MOVE_TYPE_BUILD_AROUND_WORKER];\r\n\r\n  static ROWS = Array.from({length: 5}, (value, index) => index);\r\n  static COLUMNS = Array.from({length: 5}, (value, index) => index);\r\n  static MOVE_NOTATION = this.ROWS.map(y => this.COLUMNS.map(x =>\r\n    `${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`));\r\n  static MOVE_RESIGNED_NOTATION = {\r\n    [this.PLAYER_A]: 'RA',\r\n    [this.PLAYER_B]: 'RB',\r\n  };\r\n  static MOVE_REVERSE_NOTATION = {\r\n    ..._.fromPairs(_.flatten(this.ROWS.map(y => this.COLUMNS.map(x =>\r\n      [`${['A', 'B', 'C', 'D', 'E'][x]}${['1', '2', '3', '4', '5'][y]}`, {x, y}])))),\r\n    'RA': [{resign: this.PLAYER_A}],\r\n    'RB': [{resign: this.PLAYER_B}],\r\n  };\r\n  static MOVE_NOTATION_COMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [value, String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26))]));\r\n  static MOVE_NOTATION_DECOMPRESSION = _.fromPairs(Object.keys(this.MOVE_REVERSE_NOTATION).sort().map((value, index) =>\r\n    [String.fromCharCode(index < 26 ? 65 + index : 48 + (index - 26)), this.MOVE_REVERSE_NOTATION[value]]));\r\n\r\n  static POSITION_NOTATION = _.fromPairs([0, 1, 2, 3, 4].map(\r\n    level => [level, _.fromPairs([null, this.PLAYER_A, this.PLAYER_B].map(\r\n      player => [player, `${level}-${player}`]))]));\r\n  static POSITION_REVERSE_NOTATION = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => Object.entries(notations).map(\r\n      ([playerStr, notation]) => [notation, {level: parseInt(levelStr), player: playerStr === \"null\" ? null : playerStr}]))));\r\n  static POSITION_NOTATION_COMPRESSION_MAP = _.fromPairs(_.flatten(Object.entries(this.POSITION_NOTATION).map(\r\n    ([, notations]) => Object.entries(notations).map(\r\n      ([, notation]) => notation))).map((notation, index) => [notation, String.fromCharCode(65 + index)]));\r\n  static POSITION_NOTATION_COMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION).map(\r\n    ([levelStr, notations]) => [levelStr, _.fromPairs(Object.entries(notations).map(\r\n      ([playerStr, notation]) => [playerStr, this.POSITION_NOTATION_COMPRESSION_MAP[notation]]))]));\r\n  static POSITION_NOTATION_DECOMPRESSION = _.fromPairs(Object.entries(this.POSITION_NOTATION_COMPRESSION_MAP).map(\r\n    ([notation, compressedNotation]) => [compressedNotation, this.POSITION_REVERSE_NOTATION[notation]]));\r\n\r\n  static create() {\r\n    const rowsAndColumns = this.getInitialRowsAndColumns();\r\n    const status = this.getInitialStatus();\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoves(moves) {\r\n    let game = this.create();\r\n    game = game.makeMoves(moves);\r\n\r\n    return game;\r\n  }\r\n\r\n  static fromRowsAndColumns(rowsAndColumns) {\r\n    if (rowsAndColumns.length !== 5) {\r\n      throw new Error(`Expected 5 rows but got ${rowsAndColumns.length}`);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.length !== 5)) {\r\n      throw new Error(`Expected 5 columns but some rows had a different number`);\r\n    }\r\n    if (rowsAndColumns.find((row, y) => row.y !== y)) {\r\n      throw new Error(`Some rows had invalid \\`y\\``);\r\n    }\r\n    if (rowsAndColumns.find(row => row.cells.find((cell, x) => cell.x !== x || cell.y !== row.y))) {\r\n      throw new Error(`Some cells had invalid \\`x\\` or \\`y\\``);\r\n    }\r\n    const hasInvalidPlayerOrWorker = cell => (\r\n      (cell.player && !this.PLAYERS.includes(cell.player))\r\n      || (cell.worker && !this.WORKERS.includes(cell.worker))\r\n    );\r\n    if (this.findCell(rowsAndColumns, hasInvalidPlayerOrWorker)) {\r\n      throw new Error(`Some cells had invalid player or worker`);\r\n    }\r\n    if (this.findCell(rowsAndColumns, cell => ![0, 1, 2, 3, 4].includes(cell.level))) {\r\n      throw new Error(`Some cells have invalid level`);\r\n    }\r\n    const playerACount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_A).length;\r\n    const playerBCount = this.findCells(rowsAndColumns, cell => cell.player === this.PLAYER_B).length;\r\n    if (playerACount > 2 || playerBCount > 2) {\r\n      throw new Error(\r\n        `Players can have at most 2 workers, but player A has ${playerACount} and player B has ${playerBCount}`);\r\n    }\r\n    let status;\r\n    const maxLevel = Math.max(..._.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n    if (maxLevel === 0) {\r\n      if (playerBCount === 0) {\r\n        if (playerACount === 0) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else if (playerACount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerAFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_FIRST);\r\n          const playerASecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_A && cell.worker === this.WORKER_SECOND);\r\n          if (!playerAFirstWorker || !playerASecondWorker) {\r\n            throw new Error(`Could not find both workers of player A`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      } else {\r\n        if (playerACount !== 2) {\r\n          throw new Error(`Player A must put both of their workers before player B can place theirs`);\r\n        }\r\n        if (playerBCount === 1) {\r\n          status = {\r\n            nextPlayer: this.PLAYER_B,\r\n            moveType: this.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n            availableMovesMatrix: this.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        } else {\r\n          const playerBFirstWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_FIRST);\r\n          const playerBSecondWorker = this.findCell(rowsAndColumns,\r\n            cell => cell.player === this.PLAYER_B && cell.worker === this.WORKER_SECOND);\r\n          if (!playerBFirstWorker || !playerBSecondWorker) {\r\n            throw new Error(`Could not find both workers of player B`);\r\n          }\r\n          status = {\r\n            nextPlayer: this.PLAYER_A,\r\n            moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n            availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n            canUndo: false,\r\n            resignedPlayer: null,\r\n          };\r\n        }\r\n      }\r\n    } else {\r\n      if (playerACount !== 2 || playerBCount !== 2) {\r\n        throw new Error(`Both players must have placed both of their workers before they can move and build`);\r\n      }\r\n\r\n      if (this.findCell(rowsAndColumns, cell => cell.level === 4 && cell.player)) {\r\n        throw new Error(`Some workers are on the 4th level`);\r\n      }\r\n      const wonWorkers = this.findCells(rowsAndColumns, cell => cell.level === 3 && cell.player);\r\n      if (wonWorkers.length > 1) {\r\n        throw new Error(`Too many workers have won`);\r\n      }\r\n      const buildCount = _.sum(_.flatten(rowsAndColumns.map(row => row.cells.map(cell => cell.level))));\r\n      if (buildCount % 2 === 0) {\r\n        status = {\r\n          nextPlayer: this.PLAYER_A,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_A),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      } else {\r\n        status = {\r\n          nextPlayer: this.PLAYER_B,\r\n          moveType: this.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n          availableMovesMatrix: this.getPlayerAvailableMovesMatrix(rowsAndColumns, this.PLAYER_B),\r\n          canUndo: false,\r\n          resignedPlayer: null,\r\n        };\r\n      }\r\n    }\r\n    return new this(rowsAndColumns, status, null, null, false);\r\n  }\r\n\r\n  static fromMoveNotation(fullNotation) {\r\n    const moves = fullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_REVERSE_NOTATION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static fromCompressedMoveNotation(compressedFullNotation) {\r\n    const moves = compressedFullNotation\r\n      .split('')\r\n      .map(part => this.MOVE_NOTATION_DECOMPRESSION[part]);\r\n    if (moves.filter(move => !move).length) {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      return this.fromMoves(moves, true);\r\n    } catch (e) {\r\n      return this.fromMoves(moves, false);\r\n    }\r\n  }\r\n\r\n  static getPositionNotation(rowsAndColumns) {\r\n    return _.flatten(rowsAndColumns.map(\r\n      row => row.cells.map(\r\n        cell => this.POSITION_NOTATION_COMPRESSION[cell.level][cell.player])))\r\n      .join('');\r\n  }\r\n\r\n  static fromPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_REVERSE_NOTATION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static fromCompressedPositionNotation(notation) {\r\n    const rowsAndColumns = this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, ...this.POSITION_NOTATION_DECOMPRESSION[notation[y * 5 + x]],\r\n      })),\r\n    }));\r\n    return this.fromPosition(rowsAndColumns);\r\n  }\r\n\r\n  static isValidCompressedPositionNotation(notation) {\r\n    try {\r\n      this.fromCompressedPositionNotation(notation);\r\n      return true;\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  static fromPosition(rowsAndColumns) {\r\n    let playerACount = 0, playerBCount = 0;\r\n    for (const x of this.ROWS) {\r\n      for (const y of this.COLUMNS) {\r\n        const cell = rowsAndColumns[y].cells[x];\r\n        if (cell.player === this.PLAYER_A) {\r\n          cell.worker = this.WORKERS[playerACount % 2];\r\n          playerACount += 1;\r\n        } else if (cell.player === this.PLAYER_B) {\r\n          cell.worker = this.WORKERS[playerBCount % 2];\r\n          playerBCount += 1;\r\n        }\r\n      }\r\n    }\r\n    return this.fromRowsAndColumns(rowsAndColumns);\r\n  }\r\n\r\n  createStep(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, false);\r\n  }\r\n\r\n  createNext(rowsAndColumns, status, lastMove) {\r\n    return new this.constructor(rowsAndColumns, status, this, lastMove, true);\r\n  }\r\n\r\n  constructor(rowsAndColumns, status, previous, lastMove, isNextMove) {\r\n    if (!rowsAndColumns || !status) {\r\n      throw new Error(\"You need to pass rowsAndColumns, status, and previous game\");\r\n    }\r\n    this.previous = previous;\r\n    this.history = (this.previous ? this.previous.history : [])\r\n      .filter(game => !game.canUndo)\r\n      .concat([this]);\r\n    this.previousInHistory = this.history[this.history.length - 2];\r\n    this.fullHistory = (this.previous ? this.previous.fullHistory : []).concat(this);\r\n    this.isNextMove = isNextMove;\r\n    this.moveCount = this.previous ? (isNextMove ? this.previous.moveCount + 1 : this.previous.moveCount) : 1;\r\n    this.chainCount = this.previous ? this.previous.chainCount + 1 : 0;\r\n    this.lastMove = lastMove ? lastMove : (status.resignedPlayer ? {resign: status.resignedPlayer} : lastMove);\r\n    this.moves = this.previous ? this.previous.moves.concat([this.lastMove]) : [];\r\n    this.lastMovesInHistory = this.fullHistory\r\n      .slice(this.fullHistory.indexOf(this.previousInHistory) + 1)\r\n      .map(game => game.lastMove);\r\n    this.path = this.previousInHistory\r\n      ? this.previousInHistory.path.concat([this.lastMovesInHistory])\r\n      : [];\r\n\r\n    this.rowsAndColumns = rowsAndColumns;\r\n\r\n    const missingStatusKeys =\r\n      ['nextPlayer', 'moveType', 'availableMovesMatrix', 'canUndo', 'resignedPlayer']\r\n      .filter(key => status[key] === undefined);\r\n    if (missingStatusKeys.length) {\r\n      throw new Error(`Some status keys were missing: ${missingStatusKeys.join(', ')}`);\r\n    }\r\n    const {nextPlayer, moveType, availableMovesMatrix, canUndo, resignedPlayer} = status;\r\n    this.thisPlayer = previous ? previous.nextPlayer : Game.PLAYER_A;\r\n    this.nextPlayer = nextPlayer;\r\n    this.thisMoveType = previous ? previous.moveType : null;\r\n    this.moveType = moveType;\r\n    this.availableMovesMatrix = availableMovesMatrix;\r\n    this.canUndo = canUndo;\r\n    this.canTakeMoveBack = !!this.previous;\r\n    this.resignedPlayer = resignedPlayer;\r\n    this.moveNotation = resignedPlayer\r\n      ? this.constructor.MOVE_RESIGNED_NOTATION[resignedPlayer]\r\n      : (lastMove\r\n        ? this.constructor.MOVE_NOTATION[lastMove.y][lastMove.x]\r\n        : '');\r\n    this.fullNotation = `${this.previous ? this.previous.fullNotation : ''}${this.moveNotation}`;\r\n    this.compressedFullNotation = this.fullNotation\r\n      .split(/(..)/)\r\n      .filter(part => part)\r\n      .map(part => this.constructor.MOVE_NOTATION_COMPRESSION[part])\r\n      .join('');\r\n    this.positionNotation = this.constructor.getPositionNotation(this.rowsAndColumns);\r\n\r\n    this.winner = this.getWinner();\r\n    if (this.winner) {\r\n      this.finished = true;\r\n    } else if (!this.constructor.hasAvailableMove(this.availableMovesMatrix)) {\r\n      this.finished = true;\r\n      this.winner = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    } else {\r\n      this.finished = false;\r\n    }\r\n\r\n    if (this.finished) {\r\n      this.availableMovesMatrix = this.constructor.noMovesAreAvailable();\r\n    }\r\n  }\r\n\r\n  static getAvailableMoves(availableMovesMatrix) {\r\n    return _.flatten(availableMovesMatrix\r\n      .map((row, y) => row\r\n        .map((available, x) => available ? {x, y} : null)))\r\n      .filter(move => move);\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      moves: this.moves,\r\n    };\r\n  }\r\n\r\n  static deserialize({moves}) {\r\n    return this.fromMoves(moves);\r\n  }\r\n\r\n  static getInitialRowsAndColumns() {\r\n    return this.ROWS.map(y => ({\r\n      y, cells: this.COLUMNS.map(x => ({\r\n        x, y, level: 0, player: null, worker: null,\r\n      })),\r\n    }));\r\n  }\r\n\r\n  static getInitialStatus() {\r\n    return  {\r\n      nextPlayer: this.PLAYER_A,\r\n      moveType: this.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: this.allMovesAreAvailableMatrix(),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    };\r\n  }\r\n\r\n  getPrintout() {\r\n    /* eslint-disable no-useless-computed-key */\r\n    const printMap = {\r\n      [Game.PLAYER_A]: {[0]: 'a', [1]: chalk.bgWhite('b'), [2]: chalk.bgYellow('c'), [3]: chalk.bgRed('d')},\r\n      [Game.PLAYER_B]: {[0]: 'w', [1]: chalk.bgWhite('x'), [2]: chalk.bgYellow('y'), [3]: chalk.bgRed('z')},\r\n      [null]: {[0]: ' ', [1]: chalk.bgWhite(' '), [2]: chalk.bgYellow(' '), [3]: chalk.bgRed(' '), [4]: chalk.bgBlue(' ')},\r\n    };\r\n    /* eslint-enable no-useless-computed-key */\r\n    const cellsPrintout = this.rowsAndColumns\r\n      .map(row => row.cells\r\n        .map(cell => printMap[cell.player][cell.level])\r\n        .join(''))\r\n      .join('\\n');\r\n    const nextPlayerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B',\r\n    };\r\n    const nextPlayerPrintout = nextPlayerMap[this.nextPlayer];\r\n    const winnerMap = {\r\n      [Game.PLAYER_A]: 'A', [Game.PLAYER_B]: 'B', [null]: '+',\r\n    };\r\n    const winnerPrintout = winnerMap[this.winner];\r\n    return (\r\n      `${nextPlayerPrintout}-----${winnerPrintout}\\n`\r\n      + cellsPrintout.split('\\n').map(row => `|${chalk.black(row)}|`).join('\\n')\r\n      + '\\n+-----+'\r\n    );\r\n  }\r\n\r\n  checkCoordinatesAreValid({x, y}) {\r\n    if (Math.floor(x) !== x || Math.floor(y) !== y) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are not valid`);\r\n    }\r\n    if (this.availableMovesMatrix[y] === undefined || this.availableMovesMatrix[y][x] === undefined) {\r\n      throw new InvalidMoveError(`Coordinates '${JSON.stringify({x, y})}' are out of bounds`);\r\n    }\r\n  }\r\n\r\n  static hasAvailableMove(availableMovesMatrix) {\r\n    return this.getAvailableMoves(availableMovesMatrix).length > 0;\r\n  }\r\n\r\n  isMoveAvailable({x, y}) {\r\n    return this.availableMovesMatrix[y][x];\r\n  }\r\n\r\n  static findCell(rowsAndColumns, condition) {\r\n    return rowsAndColumns.map(row => row.cells.find(condition)).find(cell => cell);\r\n  }\r\n\r\n  static findCells(rowsAndColumns, condition) {\r\n    return _.flatten(rowsAndColumns.map(row => row.cells.filter(condition)));\r\n  }\r\n\r\n  findCell(condition) {\r\n    return this.constructor.findCell(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  findCells(condition) {\r\n    return this.constructor.findCells(this.rowsAndColumns, condition);\r\n  }\r\n\r\n  static canPlayerWin(rowsAndColumns, player) {\r\n    const playerCells = this.findCells(rowsAndColumns, cell => cell.player === player && cell.level === 2);\r\n    if (!playerCells.length) {\r\n      return false;\r\n    }\r\n    const playerWinningMoves = this.findCells(rowsAndColumns, cell => (\r\n      cell.level === 3\r\n      && playerCells.find(playerCell => (\r\n        Math.abs(cell.x - playerCell.x) <= 1\r\n        && Math.abs(cell.y - playerCell.y) <= 1\r\n      ))\r\n    ));\r\n\r\n    return playerWinningMoves.length > 0;\r\n  }\r\n\r\n  getWinner() {\r\n    if (this.resignedPlayer) {\r\n      return this.constructor.OTHER_PLAYER[this.resignedPlayer];\r\n    }\r\n\r\n    const winningCell = this.findCell(cell => cell.player && cell.level === 3);\r\n    if (winningCell) {\r\n      return winningCell.player;\r\n    }\r\n\r\n    if (!this.canUndo && this.constructor.canPlayerWin(this.rowsAndColumns, this.nextPlayer)) {\r\n      return this.nextPlayer;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  static allMovesAreAvailableMatrix() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => true));\r\n  }\r\n\r\n  static noMovesAreAvailable() {\r\n    return this.ROWS.map(() => this.COLUMNS.map(() => false));\r\n  }\r\n\r\n  static getEmptyCellsAvailableMovesMatrix(rowsAndColumns) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => !cell.player);\r\n  }\r\n\r\n  static getPlayerAvailableMovesMatrix(rowsAndColumns, player) {\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => {\r\n      if (cell.player !== player) {\r\n        return false;\r\n      }\r\n\r\n      return this.hasAvailableMove(this.getMovableAvailableMovesMatrix(rowsAndColumns, cell));\r\n    });\r\n  }\r\n\r\n  static getMovableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    const maximumLevel = fromCell.level + 1;\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level <= 3\r\n      && cell.level <= maximumLevel\r\n      && (this.hasAvailableMove(this.getBuildableAvailableMovesMatrix(this.updateCells(rowsAndColumns, ...[\r\n        {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n        {x: cell.x, y: cell.y, player: fromCell.player, worker: fromCell.worker}\r\n      ]), cell)))\r\n    ));\r\n  }\r\n\r\n  static getBuildableAvailableMovesMatrix(rowsAndColumns, coordinates) {\r\n    const fromCell = rowsAndColumns[coordinates.y].cells[coordinates.x];\r\n    return this.getAvailableMovesMatrix(rowsAndColumns, cell => (\r\n      Math.abs(cell.x - coordinates.x) <= 1\r\n      && Math.abs(cell.y - coordinates.y) <= 1\r\n      && !cell.player\r\n      && cell.level < 4\r\n      && (!this.canPlayerWin(this.updateCells(rowsAndColumns, ...[\r\n        {x: cell.x, y: cell.y, level: cell.level + 1},\r\n      ]), this.OTHER_PLAYER[fromCell.player]))\r\n    ));\r\n  }\r\n\r\n  static getAvailableMovesMatrix(rowsAndColumns, isMoveAvailable) {\r\n    return rowsAndColumns.map(row => row.cells.map(isMoveAvailable));\r\n  }\r\n\r\n  checkCanMakeMove(expectedMoveType, coordinates, targetCoordinates) {\r\n    if (this.finished) {\r\n      throw new InvalidMoveError(\"The game has already finished\");\r\n    }\r\n    if (this.moveType !== expectedMoveType) {\r\n      throw new InvalidMoveError(`You cannot perform move of type \"${expectedMoveType}\": you need to perform \"${this.moveType}\"`);\r\n    }\r\n    this.checkCoordinatesAreValid(coordinates);\r\n    if (targetCoordinates) {\r\n      this.checkCoordinatesAreValid(targetCoordinates);\r\n    }\r\n    if (!this.availableMovesMatrix[coordinates.y][coordinates.x]) {\r\n      throw new Error(`Move ${JSON.stringify(coordinates)} is not one of the available ones`);\r\n    }\r\n  }\r\n\r\n  resign(player) {\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.moveType,\r\n      availableMovesMatrix: this.availableMovesMatrix,\r\n      canUndo: false,\r\n      resignedPlayer: player,\r\n    }, {resign: player});\r\n  }\r\n\r\n  static updateCells(rowsAndColumns, ...newCells) {\r\n    const updates = {};\r\n    for (const update of newCells) {\r\n      updates[update.y] = updates[update.y] || {};\r\n      updates[update.y][update.x] = update;\r\n    }\r\n    return rowsAndColumns.map(row => !updates[row.y] ? row : ({\r\n      ...row,\r\n      cells: row.cells.map(cell => !updates[cell.y][cell.x] ? cell : ({\r\n        ...cell,\r\n        ...updates[cell.y][cell.x],\r\n      })),\r\n    }));\r\n  }\r\n\r\n  makeMoves(moves) {\r\n    let game = this;\r\n    for (const move of moves) {\r\n      game = game.makeMove(move);\r\n    }\r\n\r\n    return game;\r\n  }\r\n\r\n  makeMove(coordinates) {\r\n    if (coordinates.resign) {\r\n      return this.resign(coordinates.resign);\r\n    }\r\n    const makeMoveMethods = {\r\n      [this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER]: this.placeFirstWorker,\r\n      [this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER]: this.placeSecondWorker,\r\n      [this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: this.selectWorkerToMove,\r\n      [this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER]: this.moveFirstWorker,\r\n      [this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER]: this.moveSecondWorker,\r\n      [this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER]: this.buildAroundWorker,\r\n    };\r\n    const makeMoveMethod = makeMoveMethods[this.moveType];\r\n    if (!makeMoveMethod) {\r\n      throw new InvalidMoveError(`Don't know how to perform move of type \"${this.moveType}\"`);\r\n    }\r\n    return makeMoveMethod.bind(this)(coordinates);\r\n  }\r\n\r\n  undo() {\r\n    if (!this.canUndo) {\r\n      throw new Error(\"Cannot undo\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  takeMoveBack() {\r\n    if (!this.canTakeMoveBack) {\r\n      throw new Error(\"Cannot take move back\");\r\n    }\r\n\r\n    return this.previous;\r\n  }\r\n\r\n  placeFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_FIRST,\r\n    });\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  placeSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_PLACE_SECOND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y,\r\n      player: this.nextPlayer,\r\n      worker: this.constructor.WORKER_SECOND,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE\r\n        : this.constructor.MOVE_TYPE_PLACE_FIRST_WORKER,\r\n      availableMovesMatrix: nextPlayer === this.constructor.PLAYER_A\r\n        ? this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer)\r\n        : this.constructor.getEmptyCellsAvailableMovesMatrix(rowsAndColumns),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  selectWorkerToMove({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE, {x, y});\r\n\r\n    const cell = this.rowsAndColumns[y].cells[x];\r\n    return this.createStep(this.rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: cell.worker === this.constructor.WORKER_FIRST\r\n        ? this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER\r\n        : this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER,\r\n      availableMovesMatrix: this.constructor.getMovableAvailableMovesMatrix(this.rowsAndColumns, {x, y}),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n\r\n  moveWorker(to, worker) {\r\n    const fromCell = this.findCell(cell => cell.player === this.nextPlayer && cell.worker === worker);\r\n    const toCell = this.rowsAndColumns[to.y].cells[to.x];\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, ...[\r\n      {x: fromCell.x, y: fromCell.y, player: null, worker: null},\r\n      {x: toCell.x, y: toCell.y, player: fromCell.player, worker: fromCell.worker},\r\n    ]);\r\n    return this.createStep(rowsAndColumns, {\r\n      nextPlayer: this.nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER,\r\n      availableMovesMatrix: this.constructor.getBuildableAvailableMovesMatrix(rowsAndColumns, to),\r\n      canUndo: true,\r\n      resignedPlayer: null,\r\n    }, {x: to.x, y: to.y});\r\n  }\r\n\r\n  moveFirstWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_FIRST_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_FIRST)\r\n  }\r\n\r\n  moveSecondWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_MOVE_SECOND_WORKER, {x, y});\r\n\r\n    return this.moveWorker({x, y}, this.constructor.WORKER_SECOND)\r\n  }\r\n\r\n  buildAroundWorker({x, y}) {\r\n    this.checkCanMakeMove(this.constructor.MOVE_TYPE_BUILD_AROUND_WORKER, {x, y});\r\n\r\n    const rowsAndColumns = this.constructor.updateCells(this.rowsAndColumns, {\r\n      x, y, level: this.rowsAndColumns[y].cells[x].level + 1,\r\n    });\r\n    const nextPlayer = this.constructor.OTHER_PLAYER[this.nextPlayer];\r\n    return this.createNext(rowsAndColumns, {\r\n      nextPlayer: nextPlayer,\r\n      moveType: this.constructor.MOVE_TYPE_SELECT_WORKER_TO_MOVE,\r\n      availableMovesMatrix: this.constructor.getPlayerAvailableMovesMatrix(rowsAndColumns, nextPlayer),\r\n      canUndo: false,\r\n      resignedPlayer: null,\r\n    }, {x, y});\r\n  }\r\n}\r\n\r\nexport {\r\n  InvalidMoveError,\r\n};\r\n\r\nexport default Game;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport \"../../styles/html-board.css\";\r\n\r\nclass HtmlBoardBackground extends Component {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      settings, rowsAndColumns,\r\n    } = this.props;\r\n    const {theme: {scheme, numbers}} = settings;\r\n\r\n    className = classNames(\"board\", \"html-board\", {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n      'board-theme-default': scheme === '',\r\n      'board-theme-subtle': scheme === 'subtle',\r\n      'board-theme-pastel': scheme === 'pastel',\r\n      'board-theme-green': scheme === 'green',\r\n      'numbered-levels': ['obvious', 'subtle', 'very-subtle'].includes(numbers),\r\n      'obvious-levels': numbers === 'obvious',\r\n      'subtle-levels': numbers === 'subtle',\r\n      'very-subtle-levels': numbers === 'very-subtle',\r\n    }, className);\r\n\r\n    return (\r\n      <div className={className} onClick={onSelect}>\r\n        {rowsAndColumns.map(row => (\r\n          <div key={`row-${row.y}`} className={\"row\"}>\r\n            {row.cells.map(cell => (\r\n              <HtmlBoardCell\r\n                key={`${cell.x}-${cell.y}`}\r\n                cell={cell}\r\n                clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                available={isCellAvailable(cell)}\r\n                undoable={isCellUndoable(cell)}\r\n                settings={settings}\r\n                makeMove={this.props.makeMove}\r\n                undo={this.props.undo}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nHtmlBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  animated: false,\r\n};\r\n\r\nclass HtmlBoardCell extends Component {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme: {numbers}}, makeMove, undo} = this.props;\r\n    const displayLevel = (\r\n      ['obvious', 'subtle', 'very-subtle'].includes(numbers)\r\n      && cell.level > 0\r\n      && cell.level <4\r\n    ) ? cell.level : null;\r\n    return (\r\n      <div\r\n        key={`row-${cell.x}-${cell.y}`}\r\n        className={classNames(\"cell\", `level-${cell.level}`, {available, undoable})}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      >\r\n        <div className={classNames(\"level\", \"level-1\")}>\r\n          <div className={classNames(\"level\", \"level-2\")}>\r\n            <div className={classNames(\"level\", \"level-3\")}>\r\n              {cell.player ? (\r\n                <div className={classNames(\"worker\", `player-${cell.player}`)}>\r\n                  {displayLevel}\r\n                </div>\r\n              ) : cell.level === 4 ? (\r\n                <div className={classNames(\"level\", \"level-4\")} />\r\n              ) : displayLevel}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHtmlBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n};\r\n\r\nHtmlBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n};\r\n\r\nexport default HtmlBoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from './constants';\r\n\r\nclass LevelIndicatorVerySubtle extends PureComponent {\r\n\trender() {\r\n    const {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 10},${constants.cellSize / 10})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.15}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorVerySubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorSubtle extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(22,22)`}>\r\n        <circle r={constants.cellSize * 0.15} fill={'#bbb'} stroke={'#111'} strokeWidth={2} />\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          style={{fontSize: `${constants.cellSize * 0.25}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorSubtle.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicatorObvious extends PureComponent {\r\n\trender() {\r\n  \tconst {level} = this.props;\r\n    if (!level) {\r\n      return null;\r\n    }\r\n  \treturn (\r\n    \t<g transform={`translate(${constants.cellSize / 2},${constants.cellSize / 2})`}>\r\n        <text\r\n          dominantBaseline={\"central\"}\r\n          textAnchor={\"middle\"}\r\n          stroke={'#eee'}\r\n          strokeWidth={constants.cellSize * 0.06}\r\n          paintOrder={'stroke'}\r\n          style={{fontSize: `${constants.cellSize * 0.45}px`}}\r\n        >{level}</text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicatorObvious.propTypes = {\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\nclass LevelIndicator extends PureComponent {\r\n\tstatic indicatorMap = {\r\n    'very-subtle': LevelIndicatorVerySubtle,\r\n    'subtle': LevelIndicatorSubtle,\r\n    'obvious': LevelIndicatorObvious,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {level, type} = this.props;\r\n    const Indicator = this.constructor.indicatorMap[type];\r\n    if (!Indicator) {\r\n    \treturn null;\r\n    }\r\n  \treturn (\r\n    \t<Indicator level={level} />\r\n    );\r\n  }\r\n}\r\n\r\nLevelIndicator.propTypes = {\r\n  type: PropTypes.oneOf(['very-subtle', 'subtle', 'obvious']).isRequired,\r\n  level: PropTypes.oneOf([0, 1, 2, 3, 4]).isRequired,\r\n};\r\n\r\n\r\nexport default LevelIndicator;\r\n","import React, {PureComponent, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass BasePieceDefinition extends PureComponent {\r\n\trender() {\r\n  \tconst {name, path, dimensions, offset} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`piece-${name}-base`} transform={[\r\n      \t\t`translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n        \t`scale(${(constants.pieceScaling)},${(constants.pieceScaling)})`,\r\n        \t`translate(${-dimensions.x / 2 + offset.x},${-dimensions.y / 2 + offset.y})`,\r\n      \t].join(',')}>{path}</g>\r\n        <g id={`piece-${name}-white`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'white'} />\r\n        </g>\r\n        <g id={`piece-${name}-black`}>\r\n          <use xlinkHref={`#piece-${name}-base`} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={`#piece-${name}-base`} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBasePieceDefinition.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  path: PropTypes.node.isRequired,\r\n  dimensions: PropTypes.object.isRequired,\r\n  offset: PropTypes.object.isRequired,\r\n};\r\n\r\nclass BasePiece extends PureComponent {\r\n\tstatic rotateTransform =\r\n  \t`rotate(180,${constants.cellSize / 2},${constants.cellSize / 2})`;\r\n\r\n\trender() {\r\n  \tconst {name, colour, rotated} = this.props;\r\n  \treturn (\r\n    \t<use\r\n        xlinkHref={`#piece-${name}-${colour}`}\r\n        transform={rotated ? this.constructor.rotateTransform : undefined}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBasePiece.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']),\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst definePiece = (className, {path, dimensions, offset = {x: 0, y: 0}}) => {\r\n  class PieceDefinitionFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BasePieceDefinition\r\n          name={className}\r\n          path={path}\r\n          dimensions={dimensions}\r\n          offset={offset}\r\n          />\r\n      );\r\n    }\r\n  }\r\n  PieceDefinitionFor.displayName = `${className}Definition`;\r\n\r\n  class PieceFor extends PureComponent {\r\n    static Definition = PieceDefinitionFor;\r\n\r\n    render() {\r\n      const {colour, rotated} = this.props;\r\n      return (\r\n        <BasePiece\r\n          name={className}\r\n          colour={colour}\r\n          rotated={rotated}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  PieceFor.displayName = className;\r\n\r\n  return PieceFor;\r\n};\r\n\r\nconst PiecePawn = definePiece('PiecePawn', {\r\n  path: <path d=\"M105.1 224H80a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h16v5.49c0 44-4.14 86.6-24 122.51h176c-19.89-35.91-24-78.51-24-122.51V288h16a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-25.1c29.39-18.38 49.1-50.78 49.1-88a104 104 0 0 0-208 0c0 37.22 19.71 69.62 49.1 88zM304 448H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h288a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16z\" />,\r\n  dimensions: {x: 320, y: 480},\r\n  offset: {x: 0, y: -38},\r\n});\r\n\r\nconst PieceKing = definePiece('PieceKing', {\r\n  path: <path d=\"M400 448H48a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h352a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm16-288H256v-48h40a8 8 0 0 0 8-8V56a8 8 0 0 0-8-8h-40V8a8 8 0 0 0-8-8h-48a8 8 0 0 0-8 8v40h-40a8 8 0 0 0-8 8v48a8 8 0 0 0 8 8h40v48H32a32 32 0 0 0-30.52 41.54L74.56 416h298.88l73.08-214.46A32 32 0 0 0 416 160z\" />,\r\n  dimensions: {x: 448, y: 512},\r\n});\r\n\r\nconst PieceCircle = definePiece('PieceCircle', {\r\n  path: <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceCertificate = definePiece('PieceCertificate', {\r\n  path: <path d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceSun = definePiece('PieceSun', {\r\n  path: <path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceRocket = definePiece('PieceRocket', {\r\n  path: <path d=\"M505.05 19.1a15.89 15.89 0 0 0-12.2-12.2C460.65 0 435.46 0 410.36 0c-103.2 0-165.1 55.2-211.29 128H94.87A48 48 0 0 0 52 154.49l-49.42 98.8A24 24 0 0 0 24.07 288h103.77l-22.47 22.47a32 32 0 0 0 0 45.25l50.9 50.91a32 32 0 0 0 45.26 0L224 384.16V488a24 24 0 0 0 34.7 21.49l98.7-49.39a47.91 47.91 0 0 0 26.5-42.9V312.79c72.59-46.3 128-108.4 128-211.09.1-25.2.1-50.4-6.85-82.6zM384 168a40 40 0 1 1 40-40 40 40 0 0 1-40 40z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceBug = definePiece('PieceBug', {\r\n  path: <path d=\"M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceEye = definePiece('PieceEye', {\r\n  path: <path d=\"M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceUser = definePiece('PieceUser', {\r\n  path: <path d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenWitchHat = definePiece('PieceHalloweenWitchHat', {\r\n  path: <path d=\"m503.15112,306.14207c-0.08158,-19.00159 -17.54216,-60.97152 -168.51607,-65.22834l-56.26328,-124.83471l76.29825,31.88264l-114.45191,-123.15047c-15.62768,-10.96294 -68.47535,146.47597 -90.00964,213.1728l0,0c-15.14543,2.38948 -62.92045,11.0826 -99.71439,30.45222c-35.89653,18.84568 -54.83104,35.48317 -49.64961,58.60561c-3.7637,26.02861 5.74707,103.14994 246.53844,113.09401c77.45129,3.20712 270.97346,-48.42768 255.7682,-133.99376zm-240.39978,5.43162c-121.8814,8.58253 -132.04665,-25.29799 -132.04665,-25.29799l11.06991,-24.04705c0,0 33.36383,22.50785 101.67601,21.3258c68.31218,-1.19474 96.66319,-31.58713 96.66319,-31.58713l17.99721,21.89507c-4.4073,28.55043 -95.35967,37.7113 -95.35967,37.7113z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCauldron = definePiece('PieceHalloweenCauldron', {\r\n  path: <path d=\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954 c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673 c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939 c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954 c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689 c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1 c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715 c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z M244.915,236c-78.418,0-125.798-29.477-125.798-51.3 c0-20.734,49.014-50.853,125.816-50.853c8.044,0,15.73,0.399,23.128,1.01l-12.19,28.209c-3.218,7.447-2.473,16.014,1.983,22.794 c4.456,6.78,12.024,10.862,20.138,10.862c9.611,0,18.303-5.711,22.118-14.532l16.543-38.252 c34.191,10.619,54.079,27.573,54.079,40.762C370.731,207.889,320.981,236,244.915,236z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenBat = definePiece('PieceHalloweenBat', {\r\n  path: <path d=\"m520.84272,171.44399c-8.83353,-12.69106 -16.6399,-27.11688 -22.85989,-42.92364c-9.91775,-25.0968 -14.56277,-50.31915 -14.5057,-73.25893c0.01141,-8.66234 -10.44274,-13.31877 -16.87957,-7.50964c-28.86304,25.99842 -77.48168,46.1763 -136.24632,55.95709c5.66076,-27.88153 5.47816,-60.38526 -10.4998,-91.3825c-2.86462,-5.55805 -10.62534,-6.19716 -14.28886,-1.14128c-4.65643,6.42542 -9.55254,15.94372 -9.55254,27.61904l-68.13457,0c0,-11.67532 -4.88469,-21.19362 -9.54112,-27.61904c-3.66352,-5.06729 -11.41283,-4.42818 -14.28886,1.14128c-15.97796,30.98582 -16.14915,63.4439 -10.48839,91.32544c-58.76464,-9.78079 -107.3947,-29.94726 -136.24632,-55.93426c-6.43683,-5.79772 -16.87957,-1.12987 -16.87957,7.53247c0.06848,22.93978 -4.58796,48.17354 -14.5057,73.25893c-6.21999,15.80676 -14.02636,30.24399 -22.85989,42.92364c-6.6765,9.56395 -1.92877,22.98543 9.19874,26.50058c10.19165,3.207 20.60015,7.74931 30.81463,13.60409c35.3227,20.23494 56.25382,50.76425 60.5108,76.28333c1.17552,7.0303 3.62928,9.74655 13.30736,8.19441c24.05824,-3.90319 56.71033,-1.27824 88.11843,16.71979c17.29043,9.91775 31.5907,22.26642 41.93072,35.25422c3.36678,4.22275 7.79496,6.99606 15.00787,6.99606c7.07595,0 11.54978,-2.79614 14.90515,-7.00748c10.35143,-12.99921 24.69736,-25.32506 41.9992,-35.23139c31.41951,-18.00944 64.07161,-20.63439 88.15267,-16.7312c9.67808,1.56356 12.12042,-1.17552 13.30736,-8.20582c4.25698,-25.50767 25.19952,-56.03698 60.52222,-76.28333c10.22589,-5.86619 20.65722,-10.39708 30.81463,-13.60409c11.11609,-3.49232 15.85242,-16.91381 9.18733,-26.47776z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 0, y: 100},\r\n});\r\n\r\nconst PieceHalloweenSpider = definePiece('PieceHalloweenSpider', {\r\n  path: <path d=\"M392.236,256.85c-3.204-3.473-7.704-5.451-12.436-5.451h-20.374c-3.501-15.538-8.927-30.108-16.075-43.152 l44.043-13.528l68.976,73.267c3.34,3.542,7.826,5.325,12.339,5.325c4.169,0,8.332-1.528,11.608-4.603 c6.798-6.41,7.109-17.127,0.712-23.938l-76.206-80.945c-4.416-4.697-11.13-6.464-17.299-4.581l-65.142,20.012 c-6.842-7.334-14.321-13.819-22.387-19.144l79.475-60.708l63.803,37.227c8.073,4.703,18.425,1.968,23.151-6.096 c4.713-8.08,1.987-18.447-6.086-23.161l-73.59-42.94c-5.917-3.447-13.362-2.994-18.82,1.176l-61.323,46.84 c-2.544-8.789-7.769-16.651-14.916-23.168l9.129-19.879c3.903-8.5,0.168-18.554-8.333-22.448c-8.532-3.92-18.554-0.182-22.445,8.325 l-8.448,18.416c-5.988-1.463-12.204-2.49-18.769-2.49s-12.786,1.026-18.768,2.49l-8.455-18.416 c-3.885-8.507-13.938-12.23-22.439-8.325c-8.501,3.894-12.236,13.948-8.338,22.448l9.135,19.879 c-6.785,6.177-11.744,13.593-14.405,21.838l-61.835-47.231c-5.456-4.151-12.901-4.629-18.82-1.167l-73.597,42.94 c-8.066,4.713-10.798,15.085-6.085,23.161c4.713,8.08,15.085,10.814,23.157,6.095l63.802-37.227l80.732,61.669 c-8.054,5.166-15.577,11.384-22.439,18.555l-66.347-20.384c-6.17-1.884-12.87-0.107-17.298,4.58L4.613,243.058 c-6.402,6.814-6.085,17.528,0.712,23.938c3.27,3.086,7.439,4.607,11.608,4.607c4.5,0,8.993-1.787,12.333-5.326l68.981-73.271 l44.916,13.794c-7.296,12.955-12.916,27.402-16.586,42.888h-20.736c-4.733,0-9.232,1.978-12.437,5.451L4.496,351.453 c-6.35,6.872-5.923,17.587,0.958,23.927c3.256,3.006,7.375,4.49,11.478,4.49c4.565,0,9.11-1.835,12.45-5.447l83.879-90.868h8.72 c-0.103,2.606-0.317,5.17-0.317,7.808c0,82.225,54.247,148.879,121.156,148.879c66.91,0,121.156-66.654,121.156-148.879 c0-2.059-0.181-4.06-0.252-6.095h8.649l83.878,90.867c3.341,3.612,7.892,5.448,12.456,5.448c4.098,0,8.215-1.489,11.478-4.49 c6.876-6.341,7.31-17.059,0.959-23.928L392.236,256.85z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenCat = definePiece('PieceHalloweenCat', {\r\n  path: <path d=\"M535.892,69.273c-1.147-7.46-7.924-12.77-15.396-12.135c-18.883,1.568-36.254,5.171-53.12,11.036 c-26.556,9.215-50.526,22.663-71.3,39.987l-0.308-0.086c-14.421-3.867-29.328-7.866-44.305-11.164 c-22.579-4.957-45.793-7.843-68.993-8.569c-21.208-0.665-43.206,0.343-67.381,3.097c-24.638,2.791-49.336,8.058-73.413,15.628 c-0.21,0.065-0.397,0.119-0.567,0.166c-1.97-1.857-3.953-3.192-5.603-4.301c-0.621-0.429-1.265-0.84-1.849-1.304 c-21.19-16.97-46.129-29.802-74.134-38.137c-13.444-4.004-26.71-6.356-40.545-7.206C11.8,55.825,5.42,60.755,4.011,67.791 c-0.182,0.913-0.383,1.801-0.574,2.681c-0.497,2.28-1.013,4.632-1.363,7.236c-3.068,22.953-2.728,46.419,0.99,69.745 c4.587,28.742,13.229,55.232,25.692,78.808c-6.198,14.209-10.097,30.103-11.889,48.472c-3.624,37.075,3.206,72.854,20.302,106.335 c13.562,26.546,33.085,49.106,58.047,67.047c22.906,16.461,44.463,24.021,70.319,31.83c25.86,7.812,52.794-18.394,103.458-18.053 c47.781,0.304,59.902,19.845,93.234,19.845c0,0,1.218-0.275,1.204-0.275c18.337-5.021,34.737-11.397,50.143-19.49 c27.872-14.626,51.054-34.909,68.896-60.294c19.695-28.012,31.298-59.897,34.504-94.77c2.525-27.56-1.115-54.252-10.889-79.539 l1.956-4.331c5.596-12.405,11.383-25.219,16.186-38.447c7.761-21.406,12.134-44.354,13.366-70.146 C538.166,102.325,538.497,86.233,535.892,69.273z M228.288,339.606c0,0-55.298,5.619-85.933-25.015 c-30.635-30.645-25.013-85.936-25.013-85.936s55.293-5.612,85.928,25.022C233.909,284.311,228.288,339.606,228.288,339.606z  M401.251,314.591c-30.635,30.634-85.93,25.015-85.93,25.015s-5.614-55.295,25.02-85.928 c30.631-30.635,85.926-25.022,85.926-25.022S431.891,283.957,401.251,314.591z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenTombstone = definePiece('PieceHalloweenTombstone', {\r\n  path: <g>\r\n   <path d=\"m310.57959,214.18901c18.11361,-19.31361 -3.7406,-43.37905 -25.98583,-38.09752l0,42.67408c9.2552,1.74895 18.77428,3.11653 25.98583,-4.57656z\"/>\r\n   <path d=\"m129.70544,175.71203l0,42.67408c1.4138,0.01734 2.82568,0.04045 4.23563,0.07705c40.18933,0.00193 36.10009,-50.48851 -4.23563,-42.75112z\"/>\r\n   <path d=\"m413.15147,392.28371l-16.74989,0l0,-215.12898c0,-40.68243 -13.72389,-78.15395 -36.78388,-108.06144l-22.93479,7.21154l9.8003,27.57684l0.81284,2.2748l-1.54285,1.56597l-23.05228,23.42789c-1.05361,1.07287 -2.77752,1.08443 -3.85232,0.03274c-1.02472,-1.01509 -1.07865,-2.65617 -0.13676,-3.7329l20.04555,-22.91938l-12.48344,-29.52418l-1.64687,-3.89277l4.24718,-2.15345l21.51906,-10.90592c-32.4115,-35.66478 -79.16711,-58.05447 -131.15032,-58.05447c-47.67246,0 -90.9398,18.83399 -122.78115,49.45994l25.07861,12.71458l2.53097,1.28282l0.31589,2.24205l7.99742,56.33826c0.2138,1.48892 -0.8244,2.86613 -2.31332,3.07993c-1.42151,0.20032 -2.74285,-0.74542 -3.04333,-2.12841l-11.27574,-52.83457l-30.02113,-9.43818c-27.17619,31.13831 -43.64679,71.86504 -43.64679,116.44023l0,215.12898l-16.75181,0c-10.63818,0 -19.2616,8.62342 -19.2616,19.2616l0,18.9226c0,10.63433 8.62342,19.2616 19.2616,19.2616l387.82079,0c10.63818,0 19.2616,-8.62727 19.2616,-19.2616l0,-18.9226c-0.00193,-10.63818 -8.62535,-19.26353 -19.26353,-19.26353zm-144.04211,-222.43298c5.59164,-0.28122 11.37783,-0.57207 17.23143,-0.57207c13.94155,0 31.1229,1.44847 40.31261,12.73577c0.00385,0.00385 0.0077,0.0077 0.01156,0.01156l0.0077,0.01541c0.00385,0.00578 0.01156,0.01156 0.01541,0.01734c0.0077,0.0077 0.01541,0.01541 0.01926,0.02504c0.00385,0.00578 0.0077,0.01156 0.01541,0.01926c6.75697,8.36531 8.55408,16.01602 5.34124,22.74025c-5.38362,11.27959 -23.59931,17.36819 -37.99736,17.36819c-3.28025,0 -9.09533,-0.89374 -9.09533,-0.89374s-4.54959,37.16719 2.2382,44.46541c1.52745,1.63724 3.37078,2.8199 5.51267,3.54221l-32.98549,0c10.84621,-4.50721 15.75406,-26.9778 15.75406,-49.26732c0,-22.61312 -4.91171,-45.40923 -15.76947,-49.79509c2.96629,-0.09246 6.11556,-0.2504 9.3881,-0.4122zm-59.43938,0.48154l34.88854,0c-3.75794,1.56019 -7.90881,5.69758 -11.09468,15.3149c-2.9085,8.77944 -3.1069,20.6677 -3.1069,33.48244c0,22.0006 3.46516,45.50553 14.04749,50.19381l-34.89624,0c3.74253,-1.55826 7.88955,-5.69373 11.05616,-15.3149c2.89117,-8.77173 3.13001,-20.66192 3.13001,-33.46896c0.00385,-22.00831 -3.48635,-45.51709 -14.02437,-50.20729zm-104.76,-0.05201c3.66741,-0.07705 7.46002,-0.23692 11.41443,-0.40257c5.73803,-0.23884 11.6629,-0.48732 17.50109,-0.48732c11.63979,0 20.4173,1.0305 27.62114,3.24558c11.07542,3.40545 17.20446,10.95407 16.81538,20.71393c-0.47769,12.00961 -10.52647,23.21986 -23.3701,26.07636c-0.59518,0.13098 -1.08443,0.55088 -1.29823,1.1191c-0.2138,0.56629 -0.13483,1.20578 0.22151,1.69887l21.18006,29.4298c6.29854,8.78714 12.74155,15.2263 22.73062,17.64748l-21.625,0l-34.1932,-47.22752c-0.35056,-0.48732 -0.92263,-0.76276 -1.5313,-0.74542c-1.7374,0.06742 -3.79646,0.13676 -5.89598,0.13676c-1.68154,0 -3.20898,-0.04238 -4.66516,-0.13483c-0.48924,-0.02889 -0.98619,0.14446 -1.35024,0.48539c-0.36212,0.34286 -0.56822,0.81862 -0.56822,1.31749c0,2.50016 -0.22921,5.6398 -0.46228,8.96435c-0.84558,11.75536 -1.89919,26.37876 4.88667,33.66735c1.52359,1.63531 3.36308,2.81605 5.50304,3.53643l-32.95275,0c10.89051,-4.50721 15.8157,-26.97973 15.8157,-49.27118c0,-22.57652 -4.91363,-45.33411 -15.77718,-49.77005z\"/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n  offset: {x: 50, y: 50},\r\n});\r\n\r\nconst PieceHalloweenPumpkin = definePiece('PieceHalloweenPumpkin', {\r\n  path: <path d=\"m468.74161,145.38332c-25.52721,-31.3253 -52.92613,-46.95841 -82.22343,-46.95841c-20.72406,0 -40.16348,8.29877 -58.36017,25.00115c-12.62923,-9.61583 -26.26865,-16.44316 -40.93732,-20.48009c-3.03246,-39.3801 -20.45722,-67.93597 -52.29333,-85.65997l-33.33805,23.54115c21.70947,14.12736 34.34823,33.82218 37.88389,59.08636c-21.72472,2.535 -41.93416,10.61267 -60.63213,24.23112c-18.68273,-17.16363 -38.64438,-25.72163 -59.85448,-25.72163c-29.81764,0 -56.60092,15.63311 -80.33839,46.95841c-25.77309,32.32024 -38.6482,70.49765 -38.6482,114.44265c0,11.10824 1.014,22.26984 3.01722,33.35139c7.58211,45.47172 28.81127,85.15297 63.6646,118.97324c31.32339,30.84689 60.38435,46.24556 87.16381,46.24556c0.6328,0 1.28465,-0.02287 1.93651,-0.06671c30.65438,-9.40998 63.19572,-14.48378 96.93403,-14.48378c28.17847,0 55.52974,3.54137 81.64019,10.18954l-0.14104,-0.18679l0.61564,0.30496c4.98994,1.27703 9.93032,2.67604 14.82877,4.17988c0.66329,0.04003 1.32658,0.0629 1.98797,0.0629c26.78518,0 55.56786,-15.39867 86.39569,-46.24556l0,-0.00191c33.84124,-33.82027 55.57167,-73.49962 65.16463,-118.97324c2.55406,-12.61017 3.79296,-25.00115 3.79296,-37.12911c0.00191,-42.46213 -12.76075,-79.34345 -38.25937,-110.66113zm-373.25996,61.40407l108.37772,37.1577c-9.0993,24.7305 -25.51387,37.10433 -49.26277,37.10433c-6.56812,0 -12.38717,-1.0159 -17.42666,-3.03056l0,0c-32.34883,-13.12289 -46.2284,-36.88323 -41.68828,-71.23146zm96.2574,231.91396c0.50509,-0.51081 1.26559,-1.27322 2.26244,-2.27578l0.75859,0.77193c-0.50509,0.49938 -1.50956,0.99303 -3.02103,1.50384zm184.91743,-70.48812l-249.34824,0l-18.17954,-50.80093l48.5099,32.62139l39.39535,-32.62139l53.07289,37.14054l55.32199,-39.37439l43.19022,37.12911l50.78568,-31.82467l-22.74825,47.73034zm0.00191,-90.19437c-5.56555,2.01275 -11.36364,3.03056 -17.42095,3.03056c-24.25781,0 -40.68953,-12.37383 -49.27421,-37.10433l108.3701,-37.1596c4.05218,34.34823 -9.8617,58.11048 -41.67494,71.23337z\" />,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nconst PieceHalloweenGhost = definePiece('PieceHalloweenGhost', {\r\n  path: <g>\r\n    <path d={\"m201.144531 256c-17.300781 0-36.574219 30.042969-36.574219 73.144531-.179687 13.222657.574219 26.441407 2.25 39.558594 20.023438-16.175781 48.621094-16.175781 68.644532 0 1.675781-13.117187 2.429687-26.335937 2.25-39.558594 0-43.101562-19.273438-73.144531-36.570313-73.144531zm0 0\"}/>\r\n    <path d={\"m201.144531 374.855469c-11.320312-.027344-22.007812 5.222656-28.902343 14.199219 6.390624 13.230468 16.449218 13.230468 28.902343 13.230468 12.449219 0 22.507813 0 28.898438-13.230468-6.894531-8.976563-17.582031-14.226563-28.898438-14.199219zm0 0\"}/>\r\n    <path d={\"m146.285156 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m9.390625 137.398438c-6.011719 5.988281-9.390625 14.125-9.390625 22.609374 0 8.488282 3.378906 16.621094 9.390625 22.613282l27.179687 27.234375v-22.691407c.042969-19.089843 2.753907-38.082031 8.046876-56.421874-12.015626-5.023438-25.871094-2.40625-35.226563 6.65625zm0 0\"}/>\r\n    <path d={\"m292.570312 178.285156c0-22.722656-8.1875-41.140625-18.285156-41.140625s-18.285156 18.417969-18.285156 41.140625 8.1875 41.144532 18.285156 41.144532 18.285156-18.421876 18.285156-41.144532zm0 0\"}/>\r\n    <path d={\"m434.707031 387.328125c-9.484375-16.925781-14.359375-36.042969-14.136719-55.441406v-66.40625c-2.863281-1.125-4.96875-3.617188-5.601562-6.632813-.632812-3.011718.296875-6.140625 2.464844-8.324218l67.886718-67.886719c12.472657-12.507813 12.472657-32.75 0-45.257813-12.667968-12.078125-32.589843-12.078125-45.257812 0l-67.882812 67.886719c-3.589844 3.464844-9.292969 3.414063-12.816407-.109375-3.527343-3.527344-3.578125-9.230469-.113281-12.816406l55.351562-55.351563c-20.773437-80.652343-93.511718-137.0117185-176.796874-136.988281h-2.832032c-78.738281 1.859375-147.5 53.765625-170.863281 128.976562-6.140625 18.785157-9.261719 38.425782-9.253906 58.1875v178.550782c.078125 14.484375 3.398437 28.769531 9.71875 41.800781 29.476562 61.511719 121.363281 104.484375 223.425781 104.484375 100.761719 0 178.148438-32.171875 215.863281-88.960938-28.007812 2.40625-54.90625-11.484374-69.15625-35.710937zm-343.277343-209.042969c0-33.882812 15.722656-59.429687 36.570312-59.429687 20.84375 0 36.570312 25.546875 36.570312 59.429687 0 33.882813-15.726562 59.429688-36.570312 59.429688-20.847656 0-36.570312-25.546875-36.570312-59.429688zm157.859374 210.960938c-.171874 1.1875-.578124 2.324218-1.199218 3.347656-9.296875 25.070312-26.128906 27.976562-46.945313 27.976562-20.820312 0-37.652343-2.90625-46.949219-27.976562-.621093-1.023438-1.027343-2.160156-1.199218-3.347656-5.195313-19.589844-7.457032-39.847656-6.710938-60.101563 0-51.265625 24.101563-91.429687 54.859375-91.429687 30.753907 0 54.855469 40.164062 54.855469 91.429687.75 20.253907-1.511719 40.511719-6.710938 60.101563zm24.996094-151.53125c-20.84375 0-36.570312-25.546875-36.570312-59.429688 0-33.882812 15.726562-59.429687 36.570312-59.429687 20.847656 0 36.570313 25.546875 36.570313 59.429687 0 33.882813-15.722657 59.429688-36.570313 59.429688zm0 0\"}/>\r\n  </g>,\r\n  dimensions: {x: 512, y: 512},\r\n});\r\n\r\nclass Piece extends PureComponent {\r\n\tstatic pieceStyleMap = {\r\n    'pawn': PiecePawn,\r\n    'king': PieceKing,\r\n    'circle': PieceCircle,\r\n    'certificate': PieceCertificate,\r\n    'sun': PieceSun,\r\n    'rocket': PieceRocket,\r\n    'bug': PieceBug,\r\n    'eye': PieceEye,\r\n    'user': PieceUser,\r\n    'halloween-witch-hat': PieceHalloweenWitchHat,\r\n    'halloween-cauldron': PieceHalloweenCauldron,\r\n    'halloween-bat': PieceHalloweenBat,\r\n    'halloween-spider': PieceHalloweenSpider,\r\n    'halloween-cat': PieceHalloweenCat,\r\n    'halloween-tombstone': PieceHalloweenTombstone,\r\n    'halloween-pumpkin': PieceHalloweenPumpkin,\r\n    'halloween-ghost': PieceHalloweenGhost,\r\n  };\r\n\r\n\trender() {\r\n  \tconst {style, colour, rotated} = this.props;\r\n    const PieceStyle = this.constructor.pieceStyleMap[style];\r\n  \treturn (\r\n    \t<PieceStyle colour={colour} rotated={rotated} />\r\n    );\r\n  }\r\n}\r\n\r\nPiece.propTypes = {\r\n  style: PropTypes.oneOf(Object.keys(Piece.pieceStyleMap)).isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  rotated: PropTypes.bool.isRequired,\r\n};\r\n\r\nclass PieceDefinitions extends PureComponent {\r\n\trender() {\r\n  \treturn Object.values(Piece.pieceStyleMap)\r\n    \t.map(PieceStyle => <PieceStyle.Definition key={PieceStyle.displayName || PieceStyle.name} />);\r\n  }\r\n}\r\nPiece.Definitions = PieceDefinitions;\r\n\r\nexport default Piece;\r\n","export const cellSize = 100;\r\nexport const pieceStrokeWidth = 0.8 * cellSize;\r\nexport const borderWidth = 5;\r\nexport const pieceScaling = 0.1;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport * as constants from './constants';\r\nimport LevelIndicator from \"./LevelIndicator\";\r\nimport Piece from \"./Piece\";\r\nimport Game from \"../../../game/game\";\r\n\r\nclass BaseCellDefinitions extends PureComponent {\r\n  static defaultBorder = (\r\n    <g>\r\n      <rect\r\n        fill={\"transparent\"}\r\n        width={constants.cellSize}\r\n        height={constants.cellSize}\r\n      />\r\n      <path className={\"border\"} d={`M0,0h${constants.cellSize}v${constants.cellSize}h-${constants.cellSize}z M${constants.borderWidth},${constants.borderWidth}v${constants.cellSize - constants.borderWidth * 2}h${constants.cellSize - constants.borderWidth * 2}v-${constants.cellSize - constants.borderWidth * 2}z`} />\r\n    </g>\r\n  );\r\n\r\n\trender() {\r\n\t  const {name, paths} = this.props;\r\n  \treturn (\r\n    \t<Fragment>\r\n        <g id={`cell-${name}-border`} className={\"cell-border\"}>\r\n          {paths.border}\r\n        </g>\r\n        <g id={`cell-${name}-0`} className={\"cell-0\"}>\r\n          {paths.level0}\r\n        </g>\r\n        <g id={`cell-${name}-1`} className={\"cell-1\"}>\r\n          {paths.level1}\r\n        </g>\r\n        <g id={`cell-${name}-2`} className={\"cell-2\"}>\r\n          {paths.level2}\r\n        </g>\r\n        <g id={`cell-${name}-3`} className={\"cell-3\"}>\r\n          {paths.level3}\r\n        </g>\r\n        <g id={`cell-${name}-4`} className={\"cell-4\"}>\r\n          {paths.level4}\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBaseCellDefinitions.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  paths: PropTypes.shape({\r\n    border: PropTypes.node.isRequired,\r\n    level0: PropTypes.node.isRequired,\r\n    level1: PropTypes.node.isRequired,\r\n    level2: PropTypes.node.isRequired,\r\n    level3: PropTypes.node.isRequired,\r\n    level4: PropTypes.node.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst defineCellDefinitions = (className, name, paths) => {\r\n  class CellDefinitionsFor extends PureComponent {\r\n    render() {\r\n      return (\r\n        <BaseCellDefinitions name={name} paths={paths} />\r\n      );\r\n    }\r\n  }\r\n  CellDefinitionsFor.displayName = className;\r\n\r\n  return CellDefinitionsFor;\r\n};\r\n\r\nconst OriginalCellDefinitions = defineCellDefinitions('OriginalCellDefinitions', 'original', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <rect\r\n      className={'border fill'}\r\n      width={constants.cellSize - constants.borderWidth * 2}\r\n      height={constants.cellSize - constants.borderWidth * 2}\r\n      transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n    />\r\n  ),\r\n  level1: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 2}\r\n        height={constants.cellSize - constants.borderWidth * 2}\r\n        transform={`translate(${(constants.borderWidth)},${(constants.borderWidth)})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 4}\r\n        height={constants.cellSize - constants.borderWidth * 4}\r\n        transform={`translate(${constants.borderWidth * 2},${constants.borderWidth * 2})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level3: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 6}\r\n        height={constants.cellSize - constants.borderWidth * 6}\r\n        transform={`translate(${constants.borderWidth * 3},${constants.borderWidth * 3})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n    </g>\r\n  ),\r\n  level4: (\r\n    <g>\r\n      <rect\r\n        className={'border'}\r\n        width={constants.cellSize - constants.borderWidth * 8}\r\n        height={constants.cellSize - constants.borderWidth * 8}\r\n        transform={`translate(${constants.borderWidth * 4},${constants.borderWidth * 4})`}\r\n      />\r\n      <rect\r\n        className={'fill'}\r\n        width={constants.cellSize - constants.borderWidth * 10}\r\n        height={constants.cellSize - constants.borderWidth * 10}\r\n        transform={`translate(${constants.borderWidth * 5},${constants.borderWidth * 5})`}\r\n      />\r\n    </g>\r\n  ),\r\n});\r\n\r\nconst HalloweenCellDefinitions = defineCellDefinitions('HalloweenCellDefinitions', 'halloween', {\r\n  border: BaseCellDefinitions.defaultBorder,\r\n  level0: (\r\n    <path className={\"fill\"} transform={\"scale(0.21)\"} d={\"m475.484375 292.628906h18.285156c8.34375.027344 15.640625-5.609375 17.71875-13.691406 2.074219-8.082031-1.605469-16.539062-8.933593-20.53125.082031-.433594.132812-.875.148437-1.316406.09375-.339844.164063-.683594.210937-1.035156v-171.820313c6.503907-11.746094 9.664063-25.046875 9.140626-38.464844 0-27.902343-10.832032-45.7148435-18.285157-45.7148435-7.449219 0-18.285156 17.8125005-18.285156 45.7148435-.523437 13.417969 2.636719 26.71875 9.144531 38.464844v109.511719c-11.957031-32.042969-32.140625-60.375-58.515625-82.148438-4.039062-3.027344-9.769531-2.210937-12.800781 1.828125-3.027344 4.042969-2.210938 9.773438 1.828125 12.800781 49.691406 37.265626 67 117.863282 69.332031 129.828126h-27.273437c0-2.53125-.492188-62.117188-43.492188-72.867188-3.179687-.820312-6.550781.125-8.839843 2.476562-2.289063 2.355469-3.140626 5.753907-2.230469 8.90625.90625 3.15625 3.4375 5.578126 6.625 6.355469 29.121093 7.277344 29.652343 54.527344 29.652343 55.128907h-173.488281c2.828125-12.214844 22.457031-88.640626 77.449219-120.0625 4.253906-2.566407 5.679688-8.054688 3.21875-12.363282-2.464844-4.3125-7.917969-5.871094-12.285156-3.507812-33.832032 19.34375-55.425782 52.480468-68.574219 81.003906v-116.890625c6.492187-11.75 9.640625-25.050781 9.105469-38.464844 0-27.902343-10.832032-45.7148435-18.285156-45.7148435-7.449219 0-18.285157 17.8125005-18.285157 45.7148435-.523437 13.417969 2.640625 26.71875 9.144531 38.464844v120.339844c-15.261718-33.203125-38.578124-62.0625-67.832031-83.960938-4.109375-2.933593-9.820312-1.980469-12.753906 2.128907-2.933594 4.113281-1.980469 9.824218 2.128906 12.757812 55.167969 39.402344 75.054688 108.496094 78.171875 120.554688h-173.429687c0-.601563.53125-47.851563 29.648437-55.128907 4.867188-1.257812 7.804688-6.203125 6.585938-11.074219-1.222656-4.875-6.144532-7.851562-11.027344-6.664062-43 10.75-43.492188 70.335938-43.492188 72.867188h-27.429687c.714844-7.988282 9.4375-91.675782 60.34375-129.828126 2.613281-1.960937 3.980469-5.164062 3.589844-8.40625-.390625-3.242187-2.480469-6.03125-5.484375-7.316406-3.003906-1.28125-6.464844-.863281-9.078125 1.09375-22.324219 17.949219-39.382813 41.597656-49.371094 68.445313v-95.808594c6.503906-11.746094 9.667969-25.046875 9.144531-38.464844 0-27.902343-10.835937-45.7148435-18.289062-45.7148435-7.449219 0-18.2851565 17.8125005-18.2851565 45.7148435-.5234375 13.417969 2.6406245 26.71875 9.1445315 38.464844v171.820313c.054687.488281.152343.96875.292969 1.4375 0 .292968 0 .601562.109374.914062-7.320312 3.988281-11 12.433594-8.9375 20.507812 2.0625 8.078126 9.34375 13.722657 17.675782 13.714844h54.859375c20.199219 0 36.570312 16.371094 36.570312 36.570313s-16.371093 36.570312-36.570312 36.570312h-36.570313c-10.101562 0-18.289062 8.1875-18.289062 18.285157 0 10.101562 8.1875 18.285156 18.289062 18.285156h128c20.195313 0 36.570313 16.375 36.570313 36.574218 0 20.195313-16.375 36.570313-36.570313 36.570313h-118.859375c-10.097656 0-18.285156 8.1875-18.285156 18.285156 0 10.101563 8.1875 18.285157 18.285156 18.285157h448c10.101563 0 18.285157-8.183594 18.285157-18.285157 0-10.097656-8.183594-18.285156-18.285157-18.285156h-36.570312c-20.199219 0-36.570313-16.375-36.570313-36.570313 0-20.199218 16.371094-36.574218 36.570313-36.574218h36.570312c10.101563 0 18.285157-8.183594 18.285157-18.285156 0-10.097657-8.183594-18.285157-18.285157-18.285157h-18.285156c-20.199219 0-36.570313-16.371093-36.570313-36.570312s16.371094-36.570313 36.570313-36.570313zm-338.285156 0c0-5.050781 4.09375-9.144531 9.140625-9.144531h64c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625h-64c-5.046875 0-9.140625-4.09375-9.140625-9.140625zm27.429687 54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046875 4.09375-9.140625 9.144531-9.140625h228.570313c5.050781 0 9.140625 4.09375 9.140625 9.140625 0 5.050781-4.089844 9.144531-9.140625 9.144531zm27.425782 36.570313c0-5.046876 4.09375-9.140626 9.144531-9.140626h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531zm182.859374 36.574218c5.046876 0 9.140626 4.09375 9.140626 9.140625 0 5.050781-4.09375 9.144531-9.140626 9.144531h-118.859374c-5.046876 0-9.140626-4.09375-9.140626-9.144531 0-5.046875 4.09375-9.140625 9.140626-9.140625zm-64 64h-91.429687c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h91.429687c5.046876 0 9.140626 4.09375 9.140626 9.144531s-4.09375 9.144531-9.140626 9.144531zm91.425782 0h-54.855469c-5.050781 0-9.144531-4.09375-9.144531-9.144531s4.09375-9.144531 9.144531-9.144531h54.855469c5.050781 0 9.144531 4.09375 9.144531 9.144531s-4.09375 9.144531-9.144531 9.144531zm0-91.429687h-109.710938c-5.050781 0-9.144531-4.09375-9.144531-9.144531 0-5.046876 4.09375-9.140626 9.144531-9.140626h109.710938c5.050781 0 9.144531 4.09375 9.144531 9.140626 0 5.050781-4.09375 9.144531-9.144531 9.144531zm0-91.429688h-82.285156c-5.046876 0-9.140626-4.09375-9.140626-9.140625 0-5.050781 4.09375-9.144531 9.140626-9.144531h82.285156c5.050781 0 9.144531 4.09375 9.144531 9.144531 0 5.046875-4.09375 9.140625-9.144531 9.140625zm0 0\"}/>\r\n  ),\r\n  level1: (\r\n    <g className={\"fill\"} transform={\"translate(-1,6),scale(0.33,0.33)\"}>\r\n      <path d={\"m221.30057,128.34535c12.80287,-11.57301 -2.64389,-25.9934 -18.36703,-22.82862l0,25.57096c6.54166,1.048 13.26984,1.86747 18.36703,-2.74234z\"}/>\r\n      <path d={\"m93.457,105.28936l0,25.57096c0.99929,0.01039 1.99722,0.02424 2.99378,0.04617c28.4062,0.00115 25.51589,-30.25349 -2.99378,-25.61713z\"}/>\r\n      <path d={\"m293.79936,235.06243l-11.83898,0l0,-128.90859c0,-24.37754 -9.70018,-46.83105 -25.9992,-64.75208l-16.21053,4.32127l6.92695,16.52446l0.57452,1.36309l-1.0905,0.93835l-16.29357,14.03835c-0.7447,0.64288 -1.96318,0.64981 -2.72286,0.01962c-0.72428,-0.60826 -0.7624,-1.59162 -0.09666,-2.23681l14.16839,-13.73365l-8.82342,-17.69134l-1.16402,-2.33261l3.00195,-1.29038l15.20988,-6.53499c-22.90876,-21.37089 -55.95607,-34.78713 -92.6983,-34.78713c-33.69535,0 -64.27712,11.28562 -86.78289,29.63716l17.7258,7.61877l1.78892,0.76869l0.22327,1.34347l5.65265,33.75875c0.15112,0.89218 -0.58269,1.71743 -1.63508,1.84554c-1.00473,0.12004 -1.93867,-0.44667 -2.15106,-1.27537l-7.9698,-31.65929l-21.21922,-5.65551c-19.20839,18.65855 -30.84997,43.06264 -30.84997,69.77278l0,128.90859l-11.84034,0c-7.51917,0 -13.61428,5.16729 -13.61428,11.54185l0,11.33871c0,6.37225 6.09511,11.54185 13.61428,11.54185l274.11544,0c7.51917,0 13.61428,-5.16959 13.61428,-11.54185l0,-11.33871c-0.00136,-6.37456 -6.09648,-11.543 -13.61565,-11.543zm-101.81034,-133.28526c3.95223,-0.16851 8.04196,-0.34279 12.17934,-0.34279c9.85402,0 21.99796,0.86795 28.49333,7.63147c0.00272,0.00231 0.00545,0.00462 0.00817,0.00693l0.00545,0.00923c0.00272,0.00346 0.00817,0.00693 0.01089,0.01039c0.00545,0.00462 0.01089,0.00923 0.01361,0.015c0.00272,0.00346 0.00545,0.00693 0.01089,0.01154c4.77589,5.01262 6.0461,9.59705 3.77524,13.62631c-3.80519,6.75891 -16.68022,10.40728 -26.8569,10.40728c-2.31851,0 -6.42866,-0.53554 -6.42866,-0.53554s-3.21569,22.27115 1.58198,26.64436c1.07961,0.98106 2.3825,1.68973 3.89641,2.12255l-23.31446,0c7.6662,-2.70079 11.13512,-16.16551 11.13512,-29.52174c0,-13.55013 -3.47164,-27.20991 -11.14601,-29.83799c2.0966,-0.0554 4.32254,-0.15004 6.6356,-0.247zm-42.01232,0.28855l24.65955,0c-2.65615,0.93489 -5.59002,3.41408 -7.84183,9.17692c-2.05576,5.26077 -2.19598,12.3844 -2.19598,20.06319c0,13.1831 2.44921,27.26762 9.9289,30.0769l-24.665,0c2.64526,-0.93374 5.57641,-3.41177 7.8146,-9.17692c2.0435,-5.25616 2.21232,-12.38094 2.21232,-20.05512c0.00272,-13.18772 -2.46419,-27.27454 -9.91256,-30.08498zm-74.04537,-0.03116c2.59216,-0.04617 5.27281,-0.14196 8.06782,-0.24122c4.0557,-0.14312 8.24345,-0.29201 12.36994,-0.29201c8.22711,0 14.43114,0.61749 19.52288,1.9448c7.82821,2.0406 12.16028,6.56385 11.88527,12.4121c-0.33763,7.19634 -7.44021,13.9137 -16.51821,15.62535c-0.42068,0.07848 -0.76648,0.3301 -0.9176,0.67058c-0.15112,0.33933 -0.0953,0.72252 0.15656,1.01799l14.97027,17.63479c4.45187,5.26539 9.00585,9.12383 16.06622,10.57464l-15.28476,0l-24.16808,-28.29946c-0.24778,-0.29201 -0.65212,-0.45706 -1.08234,-0.44667c-1.22801,0.0404 -2.68338,0.08195 -4.16733,0.08195c-1.18853,0 -2.26814,-0.02539 -3.29738,-0.08079c-0.3458,-0.01731 -0.69705,0.08656 -0.95436,0.29085c-0.25595,0.20544 -0.40162,0.49053 -0.40162,0.78946c0,1.49813 -0.16201,3.37945 -0.32674,5.37158c-0.59767,7.04399 -1.34237,15.80656 3.45394,20.174c1.07689,0.9799 2.37705,1.68742 3.8896,2.11908l-23.29132,0c7.69752,-2.70079 11.17869,-16.16667 11.17869,-29.52405c0,-13.5282 -3.473,-27.16489 -11.15146,-29.82298z\"}/>\r\n    </g>\r\n  ),\r\n  level2: (\r\n    <path className={\"fill\"} transform={\"translate(9,7),scale(0.3,0.3)\"} d={\"M245.928,84.493c-13.393-16.435-27.768-24.637-43.139-24.637c-10.873,0-21.072,4.354-30.619,13.117   c-6.626-5.045-13.782-8.627-21.478-10.745c-1.591-20.661-10.733-35.643-27.436-44.942l-17.491,12.351   c11.39,7.412,18.021,17.745,19.876,31c-11.398,1.33-22.001,5.568-31.811,12.713c-9.802-9.005-20.275-13.495-31.403-13.495   c-15.644,0-29.696,8.202-42.15,24.637C6.755,101.449,0,121.479,0,144.535c0,5.828,0.532,11.684,1.583,17.498   c3.978,23.857,15.116,44.676,33.402,62.42c16.434,16.184,31.681,24.263,45.731,24.263c0.332,0,0.674-0.012,1.016-0.035   c16.083-4.937,33.156-7.599,50.857-7.599c14.784,0,29.134,1.858,42.833,5.346l-0.074-0.098l0.323,0.16   c2.618,0.67,5.21,1.404,7.78,2.193c0.348,0.021,0.696,0.033,1.043,0.033c14.053,0,29.154-8.079,45.328-24.263v-0.001   c17.755-17.744,29.156-38.562,34.189-62.42c1.34-6.616,1.99-13.117,1.99-19.48C266.002,120.274,259.306,100.924,245.928,84.493z\"}/>\r\n  ),\r\n  level3: (\r\n    <path className={\"fill\"} transform={\"translate(18,10),scale(0.13,0.13)\"} d={\"M403.886,427.092c31.805-31.675,51.156-72.843,51.156-117.982c0-39.184-14.643-75.351-39.282-104.954  c2.02-6.265,3.149-12.751,3.149-19.456c0-37.186-32.559-68.257-83.059-85.193l28.483-65.848c5.268-12.211-0.35-26.389-12.568-31.673  c-12.2-5.284-26.376,0.345-31.663,12.554l-32.024,74.065c-13.741-1.849-28.121-2.939-43.145-2.939  c-99.2,0-173.995,42.572-173.995,99.034c0,6.705,1.129,13.191,3.15,19.456c-24.64,29.604-39.289,65.771-39.289,104.954  c0,45.14,19.371,86.317,51.175,117.988l-17.909,24.225c-7.902,10.695-5.643,25.775,5.053,33.689  c4.297,3.184,9.314,4.721,14.299,4.721c7.374,0,14.668-3.379,19.39-9.772l17.154-23.22c34.224,20.78,75.895,33.1,120.973,33.1  c45.072,0,86.731-12.32,120.935-33.09l17.155,23.21c4.74,6.393,12.016,9.772,19.401,9.772c4.974,0,9.99-1.537,14.306-4.715  c10.696-7.911,12.968-22.99,5.065-33.695L403.886,427.092z\"}/>\r\n  ),\r\n  level4: (\r\n    <path className={\"fill\"} transform={\"translate(15,0),scale(0.25)\"} d={\"M277.531,179.745c-0.045-10.481-9.676-33.631-92.951-35.979l-31.034-68.857l42.085,17.586 l-63.13-67.928c-8.62-6.047-37.77,80.794-49.648,117.583l0,0c-8.354,1.318-34.706,6.113-55.001,16.797 c-19.8,10.395-30.244,19.572-27.386,32.326c-2.076,14.357,3.17,56.896,135.987,62.381 C179.174,255.423,285.918,226.942,277.531,179.745z M144.93,182.741c-67.228,4.734-72.835-13.954-72.835-13.954l6.106-13.264 c0,0,18.403,12.415,56.083,11.763c37.68-0.659,53.318-17.423,53.318-17.423l9.927,12.077 C195.098,177.688,144.93,182.741,144.93,182.741z\"}/>\r\n  ),\r\n});\r\n\r\nclass CellDefinitions extends PureComponent {\r\n  static cellDefinitionsStyleMap = {\r\n    'original': OriginalCellDefinitions,\r\n    'halloween': HalloweenCellDefinitions,\r\n  };\r\n\r\n\trender() {\r\n  \treturn Object.values(this.constructor.cellDefinitionsStyleMap)\r\n    \t.map(CellDefinitionsStyle =>\r\n        <CellDefinitionsStyle key={CellDefinitionsStyle.displayName || CellDefinitionsStyle.name} />);\r\n  }\r\n}\r\n\r\nclass Cell extends PureComponent {\r\n  static Definitions = CellDefinitions;\r\n\r\n\tstate = {\r\n\t  previousLevel: this.props.level,\r\n\t  currentLevel: this.props.level,\r\n  };\r\n\r\n\tlevelsAnimate = [0, 1, 2, 3, 4].map(i => React.createRef());\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n    if (props.animated && props.level !== state.level) {\r\n      return {previousLevel: state.currentLevel, currentLevel: props.level};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.animated && this.state.currentLevel !== this.state.previousLevel) {\r\n      setTimeout(() => {\r\n        this.levelsAnimate\r\n          .filter((levelAnimate, i) => (\r\n            (this.state.previousLevel <= i && i <= this.state.currentLevel)\r\n            || (this.state.currentLevel <= i && i <= this.state.previousLevel)\r\n          ))\r\n          .filter(levelAnimate => levelAnimate.current)\r\n          .map(levelAnimate => levelAnimate.current.beginElement());\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n\trender() {\r\n  \tconst {\r\n  \t  x, y, available, undoable, level, player, onClick, animated, allowControl,\r\n      theme: {cells = 'original', pieces = 'king', rotateOpponent = true, numbers},\r\n    } = this.props;\r\n  \tconst {previousLevel, currentLevel} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n  \treturn (\r\n    \t<g transform={`translate(${x * 100},${y * 100})`}>\r\n        <g className={'cell-contents'}>\r\n          {animated ? ([0, 1, 2, 3, 4].map(i => (\r\n            <use key={i} xlinkHref={`#cell-${cells}-${i}`} opacity={i <= level ? 1 : 0}>\r\n              <animate\r\n                ref={this.levelsAnimate[i]}\r\n                attributeName={'opacity'}\r\n                attributeType={'XML'}\r\n                type={'translate'}\r\n                from={previousLevel < i ? 0 : 1}\r\n                to={currentLevel < i ? 0 : 1}\r\n                dur={'0.2s'}\r\n                repeatCount={1}\r\n                fill={'freeze'}\r\n              />\r\n            </use>\r\n          ))) : ([0, 1, 2, 3, 4].filter(i => i <= level).map(i => (\r\n            <Fragment key={i}>\r\n              <use xlinkHref={`#cell-${cells}-${i}`} />\r\n              {player === Game.PLAYER_A ? <Piece style={pieces} colour={'white'} rotated={rotateOpponent && isPlayerAOpponent} /> : null}\r\n              {player === Game.PLAYER_B ? <Piece style={pieces} colour={'black'} rotated={rotateOpponent && isPlayerBOpponent} /> : null}\r\n            </Fragment>\r\n          )))}\r\n          {numbers ? <LevelIndicator level={level} type={numbers} /> : null}\r\n        </g>\r\n        <use\r\n          xlinkHref={`#cell-${cells}-border`}\r\n          className={classNames({available, undoable})}\r\n          onClick={onClick}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nCell.propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  player: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nCell.defaultProps = {\r\n  animated: false,\r\n};\r\n\r\nexport default Cell;\r\n","import React, {Fragment, PureComponent} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from \"./constants\";\r\n\r\nclass ArrowDefinition extends PureComponent {\r\n  static arrowDimensions = {x: 215.81, y: 439.04};\r\n  static arrowOffset = {x: -20, y: -15};\r\n  static arrowScaling = 0.75;\r\n  static hammerDimensions = {x: 564.48, y: 501.76};\r\n  static hammerOffset = {x: 50, y: -50};\r\n  static hammerScaling = 0.75 * 0.75;\r\n\r\n  render() {\r\n    const {arrowDimensions, arrowOffset, arrowScaling, hammerDimensions, hammerOffset, hammerScaling} = this.constructor;\r\n\r\n    return (\r\n      <Fragment>\r\n        <path\r\n          id={\"arrow-move-base\"}\r\n          d={\"M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * arrowScaling)},${(constants.pieceScaling * arrowScaling)})`,\r\n            `translate(${-arrowDimensions.x / 2 + arrowOffset.x},${-arrowDimensions.y / 2 + arrowOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <path\r\n          id={\"arrow-build-base\"}\r\n          d={\"M571.31 193.94l-22.63-22.63c-6.25-6.25-16.38-6.25-22.63 0l-11.31 11.31-28.9-28.9c5.63-21.31.36-44.9-16.35-61.61l-45.25-45.25c-62.48-62.48-163.79-62.48-226.28 0l90.51 45.25v18.75c0 16.97 6.74 33.25 18.75 45.25l49.14 49.14c16.71 16.71 40.3 21.98 61.61 16.35l28.9 28.9-11.31 11.31c-6.25 6.25-6.25 16.38 0 22.63l22.63 22.63c6.25 6.25 16.38 6.25 22.63 0l90.51-90.51c6.23-6.24 6.23-16.37-.02-22.62zm-286.72-15.2c-3.7-3.7-6.84-7.79-9.85-11.95L19.64 404.96c-25.57 23.88-26.26 64.19-1.53 88.93s65.05 24.05 88.93-1.53l238.13-255.07c-3.96-2.91-7.9-5.87-11.44-9.41l-49.14-49.14z\"}\r\n          transform={[\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${(constants.pieceScaling * hammerScaling)},${(constants.pieceScaling * hammerScaling)})`,\r\n            `rotate(135)`,\r\n            `translate(${-hammerDimensions.x / 2 + hammerOffset.x},${-hammerDimensions.y / 2 + hammerOffset.y})`,\r\n          ].join(',')}\r\n        />\r\n        <g id={\"arrow-move-white\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-move-black\"}>\r\n          <use xlinkHref={\"#arrow-move-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-move-base\"} fill={'black'} />\r\n        </g>\r\n        <g id={\"arrow-build-white\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#111\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'white'} />\r\n        </g>\r\n        <g id={\"arrow-build-black\"}>\r\n          <use xlinkHref={\"#arrow-build-base\"} strokeWidth={constants.pieceStrokeWidth} stroke={\"#bbb\"} />\r\n          <use xlinkHref={\"#arrow-build-base\"} fill={'black'} />\r\n        </g>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass Arrow extends PureComponent {\r\n  static Definition = ArrowDefinition;\r\n  static offsetX = constants.cellSize * 0.10;\r\n  static smallScaling = 0.75;\r\n\r\n  static rotationMap = {\r\n    '0,1': 0,\r\n    '-1,1': 45,\r\n    '-1,0': 90,\r\n    '-1,-1': 135,\r\n    '0,-1': 180,\r\n    '1,-1': -135,\r\n    '1,0': -90,\r\n    '1,1': -45,\r\n  };\r\n\r\n  render() {\r\n    const {offsetX, smallScaling} = this.constructor;\r\n    const {from, to, colour, type, small} = this.props;\r\n    const diff = {x: to.x - from.x, y: to.y - from.y};\r\n    const rotation = this.constructor.rotationMap[`${diff.x},${diff.y}`];\r\n    const offsetYFactor = Math.sqrt(Math.abs(diff.x) + Math.abs(diff.y));\r\n\r\n    return (\r\n      <use\r\n        xlinkHref={`#arrow-${type}-${colour}`}\r\n        transform={[\r\n          `translate(${constants.cellSize * from.x},${constants.cellSize * from.y})`,\r\n          `rotate(${rotation},${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n          `translate(${offsetX},${constants.cellSize / 2 * offsetYFactor})`,\r\n          ...(small ? [\r\n            `translate(${constants.cellSize / 2},${constants.cellSize / 2})`,\r\n            `scale(${smallScaling})`,\r\n            `translate(${-constants.cellSize / 2},${-constants.cellSize / 2})`,\r\n          ] : []),\r\n        ].filter(transform => transform).join(',')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nArrow.propTypes = {\r\n  from: PropTypes.object.isRequired,\r\n  to: PropTypes.object.isRequired,\r\n  colour: PropTypes.oneOf(['white', 'black']).isRequired,\r\n  type: PropTypes.oneOf(['move', 'build']).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n};\r\n\r\nArrow.defaultProps = {\r\n  small: false,\r\n};\r\n\r\nexport default Arrow;\r\n","import React, {Fragment, PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport _ from \"lodash\";\r\nimport Game from \"../../../game/game\";\r\nimport * as constants from './constants';\r\nimport Cell from \"./Cell\";\r\nimport Piece from \"./Piece\";\r\nimport '../../../styles/svg-board.css';\r\nimport Arrow from \"./Arrow\";\r\n\r\nclass SvgBoardBackground extends PureComponent {\r\n  render() {\r\n    let {\r\n      className, clickable, undoable, isCellAvailable, isCellUndoable, small, medium, makeMove, onSelect, selected,\r\n      allowControl, settings, rowsAndColumns, transformation, animated, showArrows, game, arrows,\r\n    } = this.props;\r\n    const {theme} = settings;\r\n\r\n    className = classNames(\"board\", \"svg-board\", `board-theme-${theme.scheme || 'default'}`, {\r\n      'small-board': small,\r\n      'medium-board': medium,\r\n      editable: !!makeMove && (clickable || undoable),\r\n      selectable: !!onSelect,\r\n      selected,\r\n    }, className);\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount= Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n\r\n    return (\r\n      <svg\r\n        className={className}\r\n        viewBox={`0 0 ${constants.cellSize * columnCount} ${constants.cellSize * rowCount}`}\r\n        style={{'--column-count': columnCount, '--row-count': rowCount}}\r\n        preserveAspectRatio={\"xMinYMin meet\"}\r\n        onClick={onSelect}\r\n      >\r\n        <g data-key={'rows'}>\r\n          {rowsAndColumns.map(row => (\r\n            <g data-key={`row-${row.y}`} key={`row-${row.y}`}>\r\n              {row.cells.map(cell => (\r\n                <SvgBoardCell\r\n                  key={`${cell.x}-${cell.y}`}\r\n                  cell={cell}\r\n                  clickable={clickable || (undoable && isCellUndoable(cell))}\r\n                  available={isCellAvailable(cell)}\r\n                  undoable={isCellUndoable(cell)}\r\n                  allowControl={allowControl}\r\n                  settings={settings}\r\n                  makeMove={this.props.makeMove}\r\n                  undo={this.props.undo}\r\n                  theme={theme}\r\n                  animated={animated}\r\n                />\r\n              ))}\r\n            </g>\r\n          ))}\r\n        </g>\r\n        {animated ? (\r\n          <SvgBoardPieces rowsAndColumns={rowsAndColumns} theme={theme} allowControl={allowControl} />\r\n        ) : null}\r\n        {showArrows ? (\r\n          arrows ? (\r\n            arrows.map((arrow, index) => (\r\n              <Arrow key={index} {...arrow} />\r\n            ))\r\n          ) : (\r\n            <Fragment>\r\n              <SvgBoardHistoryArrows game={game} transformation={transformation} />\r\n              {/*<SvgBoardAvailableMovesArrows game={game} isCellAvailable={isCellAvailable} transformation={transformation} />*/}\r\n            </Fragment>\r\n          )\r\n        ) : null}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nSvgBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nclass SvgBoardBackgroundDefinitions extends PureComponent {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <svg className={classNames('board', 'svg-board')} style={{display: 'none'}}>\r\n          <defs>\r\n            <Cell.Definitions />\r\n            <Piece.Definitions />\r\n            <Arrow.Definition />\r\n          </defs>\r\n        </svg>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nSvgBoardBackground.Definitions = SvgBoardBackgroundDefinitions;\r\n\r\nclass SvgBoardHistoryArrows extends PureComponent {\r\n  getPlayerMoves() {\r\n    const {transformation} = this.props;\r\n    const {player, relevantHistory} = this.getRelevantHistory();\r\n    const gameWithPieceMove = relevantHistory\r\n      .find(game => Game.MOVE_TYPES_MOVE_WORKER.includes(game.thisMoveType));\r\n    const gameWithBuildMove = relevantHistory\r\n      .find(game => game.thisMoveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER);\r\n\r\n    const {move, build} = {\r\n      move: gameWithPieceMove ? {\r\n        from: gameWithPieceMove.previous.lastMove,\r\n        to: gameWithPieceMove.lastMove,\r\n      } : null,\r\n      build: gameWithBuildMove ? {\r\n        from: gameWithBuildMove.previous.lastMove,\r\n        to: gameWithBuildMove.lastMove,\r\n      }: null,\r\n    };\r\n\r\n    if (transformation) {\r\n      if (move) {\r\n        move.from = transformation.reverseCoordinates(gameWithPieceMove.previous.rowsAndColumns, move.from);\r\n        move.to = transformation.reverseCoordinates(gameWithPieceMove.rowsAndColumns, move.to);\r\n        move.type = 'move';\r\n      }\r\n      if (build) {\r\n        build.from = transformation.reverseCoordinates(gameWithBuildMove.previous.rowsAndColumns, build.from);\r\n        build.to = transformation.reverseCoordinates(gameWithBuildMove.rowsAndColumns, build.to);\r\n        build.type = 'build';\r\n      }\r\n    }\r\n\r\n    return {player, move, build};\r\n  }\r\n\r\n  getRelevantHistory() {\r\n    const {game} = this.props;\r\n\r\n    const relevantHistory = [game];\r\n    const player = game.thisPlayer;\r\n    let iteratingGame = game;\r\n    while (iteratingGame.previous) {\r\n      iteratingGame = iteratingGame.previous;\r\n      if (iteratingGame.thisPlayer !== player) {\r\n        break;\r\n      }\r\n      relevantHistory.push(iteratingGame);\r\n    }\r\n\r\n    return {player, relevantHistory};\r\n  }\r\n\r\n  render() {\r\n    const {game} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {player, move, build} = this.getPlayerMoves();\r\n    if (!move && !build) {\r\n      return null;\r\n    }\r\n    const colour = player === Game.PLAYER_A ? 'white' : 'black';\r\n\r\n    let moveArrow = null, buildArrow = null;\r\n    if (move) {\r\n      moveArrow = <Arrow key={'move'} from={move.from} to={move.to} colour={colour} type={'move'} />;\r\n    }\r\n    if (build) {\r\n      buildArrow = <Arrow key={'build'} from={build.from} to={build.to} colour={colour} type={'build'} />;\r\n    }\r\n\r\n    return [moveArrow, buildArrow];\r\n  }\r\n}\r\n\r\nSvgBoardHistoryArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardAvailableMovesArrows extends PureComponent {\r\n  render() {\r\n    const {game, transformation, isCellAvailable} = this.props;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n    if (!Game.MOVE_TYPES_MOVE_OR_BUILD.includes(game.moveType)) {\r\n      return null;\r\n    }\r\n\r\n    let from = game.lastMove;\r\n    let availableCells = game.findCells(isCellAvailable);\r\n    if (transformation) {\r\n      from = transformation.reverseCoordinates(game.rowsAndColumns, from);\r\n      availableCells = availableCells.map(cell => transformation.reverseCoordinates(game.rowsAndColumns, cell));\r\n    }\r\n    const colour = game.nextPlayer === Game.PLAYER_A ? 'white' : 'black';\r\n    const type = game.moveType === Game.MOVE_TYPE_BUILD_AROUND_WORKER ? 'build' : 'move';\r\n\r\n    return availableCells.map((cell, index) => (\r\n      <Arrow key={index} from={from} to={cell} colour={colour} type={type} small />\r\n    ));\r\n  }\r\n}\r\n\r\nSvgBoardAvailableMovesArrows.propTypes = {\r\n  game: PropTypes.instanceOf(Game),\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  transformation: PropTypes.func,\r\n};\r\n\r\nclass SvgBoardPieces extends PureComponent {\r\n  render() {\r\n    const {rowsAndColumns, theme, allowControl} = this.props;\r\n\r\n    const pieces = _.sortBy(Game.findCells(rowsAndColumns, cell => cell.player), ['player', 'worker']);\r\n\r\n    return (\r\n      <g data-key={'pieces'} style={{pointerEvents: 'none'}}>\r\n        {pieces.map(cell => (\r\n          <SvgBoardPiece\r\n            key={`${cell.player}-${cell.worker}`}\r\n            cell={cell}\r\n            theme={theme}\r\n            allowControl={allowControl}\r\n          />\r\n        ))}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPieces.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardPiece extends PureComponent {\r\n  state = {\r\n    previousPosition: {x: this.props.cell.x, y: this.props.cell.y},\r\n    position: {x: this.props.cell.x, y: this.props.cell.y},\r\n  };\r\n\r\n  animateTransform = React.createRef();\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.cell.x !== state.position.x || props.cell.y !== state.position.y) {\r\n      return {previousPosition: state.position, position: {x: props.cell.x, y: props.cell.y}};\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.state.position !== prevState.position) {\r\n      setTimeout(() => {\r\n        if (this.animateTransform.current) {\r\n          this.animateTransform.current.beginElement();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {cell, theme, allowControl} = this.props;\r\n    const {previousPosition, position} = this.state;\r\n  \tconst isPlayerAOpponent = !allowControl.includes(Game.PLAYER_A) && allowControl.includes(Game.PLAYER_B);\r\n  \tconst isPlayerBOpponent = !isPlayerAOpponent;\r\n    return (\r\n      <g transform={`translate(${position.x * 100},${position.y * 100})`}>\r\n        <Piece\r\n          style={theme.pieces || 'king'}\r\n          colour={cell.player === Game.PLAYER_A ? 'white' : 'black'}\r\n          rotated={theme.rotateOpponent && (cell.player === Game.PLAYER_A ? isPlayerAOpponent : isPlayerBOpponent)}\r\n        />\r\n        <animateTransform\r\n          ref={this.animateTransform}\r\n          attributeName={'transform'}\r\n          attributeType={'XML'}\r\n          type={'translate'}\r\n          from={`${previousPosition.x * 100} ${previousPosition.y * 100}`}\r\n          to={`${position.x * 100} ${position.y * 100}`}\r\n          dur={'0.1s'}\r\n          repeatCount={1}\r\n          fill={'freeze'}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardPiece.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nclass SvgBoardCell extends PureComponent {\r\n  makeMove = () => {\r\n    if (this.props.available && this.props.makeMove) {\r\n      this.props.makeMove(this.props.cell);\r\n    } else if (this.props.undoable && this.props.undo) {\r\n      this.props.undo();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {cell, clickable, available, undoable, settings: {theme}, makeMove, undo, animated, allowControl} = this.props;\r\n    return (\r\n      <Cell\r\n        x={cell.x}\r\n        y={cell.y}\r\n        available={available}\r\n        undoable={undoable}\r\n        level={cell.level}\r\n        player={cell.player}\r\n        allowControl={allowControl}\r\n        animated={animated}\r\n        theme={theme}\r\n        onClick={((makeMove && available) || (undo && undoable)) && clickable ? this.makeMove : null}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSvgBoardCell.propTypes = {\r\n  cell: PropTypes.object.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  available: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  animated: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n};\r\n\r\nSvgBoardCell.defaultProps = {\r\n  clickable: false,\r\n  available: false,\r\n  undoable: false,\r\n  animated: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nexport default SvgBoardBackground;\r\n","import SvgBoardBackground from \"./SvgBoardBackground\";\r\n\r\nexport default SvgBoardBackground;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport HtmlBoardBackground from \"./HtmlBoardBackground\";\r\nimport SvgBoardBackground from \"./SvgBoardBackground\";\r\nimport \"../../styles/board.css\";\r\nimport \"../../styles/board-theme.css\";\r\n\r\nclass BoardBackground extends Component {\r\n  render() {\r\n    let {renderer = 'svg', ...props} = this.props;\r\n\r\n    const renderers = {\r\n      'html': HtmlBoardBackground,\r\n      'svg': SvgBoardBackground,\r\n    };\r\n    const Renderer = renderers[renderer];\r\n    return <Renderer {...props} />;\r\n  }\r\n}\r\n\r\nBoardBackground.propTypes = {\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  transformation: PropTypes.func,\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  makeMove: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  clickable: PropTypes.bool.isRequired,\r\n  undoable: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  isCellAvailable: PropTypes.func.isRequired,\r\n  isCellUndoable: PropTypes.func.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n  showArrows: PropTypes.bool.isRequired,\r\n  game: PropTypes.instanceOf(Game),\r\n  arrows: PropTypes.array,\r\n};\r\n\r\nBoardBackground.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  clickable: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n  showArrows: false,\r\n};\r\n\r\nexport default BoardBackground;\r\n","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _  from 'lodash';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\nimport {Menu} from \"semantic-ui-react\";\r\n\r\nclass Board extends PureComponent {\r\n  makeMove = (cell) => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    this.props.makeMove(this.props.game.makeMove({x: cell.x, y: cell.y}));\r\n  };\r\n\r\n  undo = () => {\r\n    this.props.makeMove(this.props.game.canUndo ? this.props.game.undo() : this.props.game.takeMoveBack());\r\n  };\r\n\r\n  onSelect = () => {\r\n    this.props.onSelect(this.props.game);\r\n  };\r\n\r\n  isCellAvailable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    return this.props.game.isMoveAvailable(cell);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {game: {rowsAndColumns}, transformation} = this.props;\r\n    if (transformation) {\r\n      cell = transformation.coordinates(rowsAndColumns, cell);\r\n    }\r\n    if (this.props.minChainCount === undefined || this.props.minChainCount === null) {\r\n      if (!this.props.game.canUndo) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (this.props.game.chainCount <= this.props.minChainCount) {\r\n        return false;\r\n      }\r\n    }\r\n    const lastMove = this.props.game.lastMove;\r\n    if (!lastMove) {\r\n      return false;\r\n    }\r\n    return lastMove.x === cell.x && lastMove.y === cell.y;\r\n  };\r\n\r\n  isGameUndoable() {\r\n    return !!this.props.game.findCell(this.isCellUndoable);\r\n  }\r\n\r\n  render() {\r\n    const {game, transformation, allowControl, onSelect, makeMove, animated} = this.props;\r\n    let rowsAndColumns = game.rowsAndColumns;\r\n    if (transformation) {\r\n      rowsAndColumns = transformation(rowsAndColumns);\r\n    }\r\n\r\n    return (\r\n      <BoardBackground\r\n        {...this.props}\r\n        isCellAvailable={animated ? this.isCellAvailable : () => false}\r\n        isCellUndoable={animated ? this.isCellUndoable : () => false}\r\n        clickable={allowControl.includes(game.nextPlayer)}\r\n        undoable={animated ? this.isGameUndoable() : false}\r\n        onSelect={onSelect ? this.onSelect : null}\r\n        makeMove={makeMove ? this.makeMove : null}\r\n        undo={makeMove ? this.undo : null}\r\n        rowsAndColumns={rowsAndColumns}\r\n        transformation={transformation}\r\n        game={game}\r\n        animated={animated}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  transformation: PropTypes.func,\r\n  makeMove: PropTypes.func,\r\n  minChainCount: PropTypes.number,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n  animated: PropTypes.bool.isRequired,\r\n};\r\n\r\nBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n  selected: false,\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n  animated: false,\r\n};\r\n\r\nclass BoardTransformation extends PureComponent {\r\n  state = {\r\n    rotations: 0,\r\n    flippedHorizontally: false,\r\n  };\r\n\r\n  // noinspection JSSuspiciousNameCombination\r\n  static transformationMap = {\r\n    '0,false': null,\r\n    // makeTransformRowsAndColumns({transpose:  false, flipX: false, flipY: false}),\r\n    '1,false': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: true}),\r\n    '2,false': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: true}),\r\n    '3,false': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: false}),\r\n    '0,true': this.makeTransformRowsAndColumns({transpose: false, flipX: true, flipY: false}),\r\n    '1,true': this.makeTransformRowsAndColumns({transpose: true, flipX: true, flipY: true}),\r\n    '2,true': this.makeTransformRowsAndColumns({transpose: false, flipX: false, flipY: true}),\r\n    '3,true': this.makeTransformRowsAndColumns({transpose: true, flipX: false, flipY: false}),\r\n  };\r\n\r\n  static makeTransformRowsAndColumns(config) {\r\n    const transformRowsAndColumns = rowsAndColumns => {\r\n      return this.transformRowsAndColumns(rowsAndColumns, config);\r\n    };\r\n    transformRowsAndColumns.coordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, config);\r\n    };\r\n    // We can tell if the board is flipped (horizontally or vertically)\r\n    const flipped = config.transpose ^ config.flipX ^ config.flipY;\r\n    const reverseConfig = config.transpose && !flipped ? {\r\n      transpose: config.transpose,\r\n      flipX: !config.flipX,\r\n      flipY: !config.flipY,\r\n    } : config;\r\n    transformRowsAndColumns.reverseCoordinates = (rowsAndColumns, coordinates) => {\r\n      return this.reverseTransformCoordinates(rowsAndColumns, coordinates, reverseConfig);\r\n    };\r\n\r\n    return transformRowsAndColumns;\r\n  }\r\n\r\n  static transformRowsAndColumns(rowsAndColumns, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const newXs = _.range(newColumnCount);\r\n    const newYs = _.range(newRowCount);\r\n\r\n    return newYs.map(newY => ({\r\n      y: newY,\r\n      cells: newXs.map(newX => {\r\n        let {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n        return {\r\n        ...rowsAndColumns[oldY].cells[oldX],\r\n          x: newX, y: newY,\r\n        };\r\n      }),\r\n    }));\r\n  }\r\n\r\n  static reverseTransformCoordinates(rowsAndColumns, coordinates, config) {\r\n    let {newRowCount, newColumnCount} = this.getNewRowAndColumnCount(rowsAndColumns, config);\r\n    const {x: newX, y: newY} = coordinates;\r\n    const {oldX, oldY} = this.getOldCoordinates( {newX, newY}, {newRowCount, newColumnCount}, config);\r\n\r\n    return {x: oldX, y: oldY};\r\n  }\r\n\r\n  static getNewRowAndColumnCount(rowsAndColumns, config) {\r\n    const rowCount = rowsAndColumns.length;\r\n    const columnCount = Math.max(...rowsAndColumns.map(row => row.cells.length)) || 0;\r\n    const {transpose} = config;\r\n    let newRowCount, newColumnCount;\r\n    if (transpose) {\r\n      [newColumnCount, newRowCount] = [rowCount, columnCount];\r\n    } else {\r\n      [newColumnCount, newRowCount] = [columnCount, rowCount];\r\n    }\r\n    return {newRowCount, newColumnCount};\r\n  }\r\n\r\n  static getOldCoordinates({newX, newY}, {newColumnCount, newRowCount}, config) {\r\n    const {transpose, flipX, flipY} = config;\r\n    let oldX, oldY;\r\n    if (transpose) {\r\n      [oldX, oldY] = [newY, newX];\r\n    } else {\r\n      [oldX, oldY] = [newX, newY];\r\n    }\r\n    if (flipX) {\r\n      oldX = newColumnCount - 1 - oldX;\r\n    }\r\n    if (flipY) {\r\n      oldY = newRowCount - 1 - oldY;\r\n    }\r\n    return {oldX, oldY};\r\n  }\r\n\r\n   updateOrientation = method => {\r\n     this.setState(method, () => {\r\n       if (this.props.onChange) {\r\n         const {rotations, flippedHorizontally} = this.state;\r\n         const transformation = this.constructor.transformationMap[`${rotations},${flippedHorizontally}`];\r\n         this.props.onChange({rotations, flippedHorizontally, transformation});\r\n       }\r\n     });\r\n   };\r\n\r\n  rotateCounterClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 3) % 4,\r\n    }));\r\n  };\r\n\r\n  rotateClockwise = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 1) % 4,\r\n    }));\r\n  };\r\n\r\n  flipHorizontally = () => {\r\n    this.updateOrientation(state => ({\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  flipVertically = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: (state.rotations + 2) % 4,\r\n      flippedHorizontally: !state.flippedHorizontally,\r\n    }));\r\n  };\r\n\r\n  reset = () => {\r\n    this.updateOrientation(state => ({\r\n      rotations: 0,\r\n      flippedHorizontally: false,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {rotations, flippedHorizontally} = this.state;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'rotate-counter-clockwise', icon: 'undo', onClick: this.rotateCounterClockwise},\r\n        {key: 'rotate-clockwise', icon: 'redo', onClick: this.rotateClockwise},\r\n        {key: 'flip-horizontal', icon: 'arrows alternate horizontal', onClick: this.flipHorizontally},\r\n        {key: 'flip-vertical', icon: 'arrows alternate vertical', onClick: this.flipVertically},\r\n        {key: 'home', icon: 'home', onClick: this.reset, disabled: !rotations && !flippedHorizontally},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nBoardTransformation.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport {\r\n  BoardTransformation,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass ThemeDemoBoard extends Component {\r\n  static demoRowsAndColumns = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: null, worker: null, level: 4},\r\n        {x: 5, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static demoRowsAndColumnsAnimated = [\r\n    {\r\n      y: 0,\r\n      cells: [\r\n        {x: 0, y: 0, player: null, worker: null, level: 0},\r\n        {x: 1, y: 0, player: null, worker: null, level: 1},\r\n        {x: 2, y: 0, player: null, worker: null, level: 2},\r\n        {x: 3, y: 0, player: null, worker: null, level: 3},\r\n        {x: 4, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 3},\r\n        {x: 5, y: 0, player: null, worker: null, level: 0},\r\n        {x: 6, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n      ],\r\n    },\r\n  ];\r\n  static arrows = [\r\n    {from: {x: 5, y: 0}, to: {x: 4, y: 0}, colour: 'white', type: 'build'},\r\n    {from: {x: 4, y: 0}, to: {x: 5, y: 0}, colour: 'white', type: 'move'},\r\n  ];\r\n\r\n  state = {\r\n    rowsAndColumns: this.constructor.demoRowsAndColumns,\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  animate = () => {\r\n    this.setState(state => ({\r\n      rowsAndColumns: state.rowsAndColumns === this.constructor.demoRowsAndColumns\r\n        ? this.constructor.demoRowsAndColumnsAnimated\r\n        : this.constructor.demoRowsAndColumns,\r\n    }));\r\n  };\r\n  animationInterval = this.props.settings.theme.animations ? setInterval(this.animate, 2000) : null;\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.settings.theme.animations !== prevProps.settings.theme.animations) {\r\n      if (this.props.settings.theme.animations) {\r\n        if (!this.animationInterval) {\r\n          this.animationInterval = setInterval(this.animate, 2000);\r\n        }\r\n      } else {\r\n        if (this.animationInterval) {\r\n          clearInterval(this.animationInterval);\r\n          this.animationInterval = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.animationInterval) {\r\n      clearInterval(this.animationInterval);\r\n      this.animationInterval = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {small, medium, settings} = this.props;\r\n    const {rowsAndColumns} = this.state;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={rowsAndColumns}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        arrows={settings.theme.arrows ? this.constructor.arrows : undefined}\r\n        settings={settings}\r\n        animated={settings.theme.animations}\r\n        showArrows={settings.theme.arrows}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nThemeDemoBoard.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array]).isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n  settings: PropTypes.object.isRequired,\r\n};\r\n\r\nThemeDemoBoard.defaultProps = {\r\n  className: '',\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default ThemeDemoBoard;\r\n","import Board from './Board';\r\nimport ThemeDemoBoard from './ThemeDemoBoard';\r\n\r\nexport {\r\n  ThemeDemoBoard,\r\n};\r\n\r\nexport default Board;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../../game/game\";\r\nimport BoardBackground from \"./BoardBackground\";\r\n\r\nclass PlayerColourBoard extends Component {\r\n  static colours = {\r\n    [Game.PLAYER_A]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n    [Game.PLAYER_B]: [\r\n      {\r\n        y: 0,\r\n        cells: [\r\n          {x: 0, y: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST, level: 0},\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  isCellAvailable = () => {\r\n    return false;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    const {small, medium, player, applicableSettings, allowControl} = this.props;\r\n\r\n    return (\r\n      <BoardBackground\r\n        small={small}\r\n        medium={medium}\r\n        rowsAndColumns={this.constructor.colours[player]}\r\n        undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        settings={applicableSettings}\r\n        allowControl={allowControl}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayerColourBoard.propTypes = {\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  small: PropTypes.bool.isRequired,\r\n  medium: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayerColourBoard.defaultProps = {\r\n  small: false,\r\n  medium: false,\r\n};\r\n\r\nexport default PlayerColourBoard;\r\n","import React, {Component} from 'react';\r\nimport {client} from \"./client\";\r\n\r\nclass ClientWatcher extends Component {\r\n  static SubComponent = null;\r\n\r\n  static forComponent(Component) {\r\n    class ClientWatcherForComponent extends this {\r\n      static SubComponent = Component;\r\n    }\r\n\r\n    return ClientWatcherForComponent;\r\n  }\r\n\r\n  state = {\r\n    connected: client.connected,\r\n    available: client.available,\r\n    disconnected: client.disconnected,\r\n    user: client.user,\r\n    username: client.user ? client.user.name : null,\r\n    usersInfo: client.usersInfo,\r\n    gamesInfo: client.gamesInfo,\r\n    tournamentsInfo: client.tournamentsInfo,\r\n    challengesInfo: client.challengesInfo,\r\n  };\r\n\r\n  componentDidMount() {\r\n    client.subscribe({\r\n      onConnect: this.connectionChanged,\r\n      onDisconnect: this.connectionChanged,\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    client.unsubscribe({\r\n      onUser: this.gotUser,\r\n      onUsers: this.gotUsers,\r\n      onGames: this.gotGames,\r\n      onTournaments: this.gotTournaments,\r\n      onChallenges: this.gotChallenges,\r\n    });\r\n  }\r\n\r\n  connectionChanged = connected => {\r\n    this.setState({connected, disconnected: client.disconnected, available: client.available});\r\n  };\r\n\r\n  gotUser = user => {\r\n    this.setState({user});\r\n  };\r\n\r\n  gotUsers = usersInfo => {\r\n    this.setState({usersInfo});\r\n  };\r\n\r\n  gotGames = gamesInfo => {\r\n    this.setState({gamesInfo});\r\n  };\r\n\r\n  gotTournaments = tournamentsInfo => {\r\n    this.setState({tournamentsInfo});\r\n  };\r\n\r\n  gotChallenges = challengesInfo => {\r\n    this.setState({challengesInfo});\r\n  };\r\n\r\n  render() {\r\n    const {connected, disconnected, available, user, usersInfo, gamesInfo, tournamentsInfo, challengesInfo} = this.state;\r\n    const SubComponent = this.constructor.SubComponent;\r\n    return (\r\n      <SubComponent\r\n        {...this.props}\r\n        connected={connected}\r\n        disconnected={disconnected}\r\n        available={available}\r\n        client={client}\r\n        user={user}\r\n        usersInfo={usersInfo}\r\n        gamesInfo={gamesInfo}\r\n        tournamentsInfo={tournamentsInfo}\r\n        challengesInfo={challengesInfo}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport const withClient = Component => {\r\n  return ClientWatcher.forComponent(Component);\r\n};\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport jdenticon from \"jdenticon\";\r\nimport classNames from \"classnames\";\r\n\r\nclass HashedIcon extends Component {\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateIcon();\r\n  }\r\n\r\n  updateIcon() {\r\n    if (this.ref.current) {\r\n      jdenticon.update(this.ref.current);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.hash !== this.props) {\r\n      this.updateIcon();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {hash, floated, size, textSized} = this.props;\r\n    return (\r\n      <svg\r\n        ref={this.ref}\r\n        className={classNames([\"ui\", \"mini\", \"right\", \"floated\", \"image\"], {floated: !!floated, [floated]: !!floated, [size]: !!size, 'text-sized': textSized})}\r\n        data-jdenticon-value={hash}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHashedIcon.propTypes = {\r\n  hash: PropTypes.string.isRequired,\r\n  floated: PropTypes.oneOf(['left', 'right']),\r\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive']),\r\n  textSized: PropTypes.bool.isRequired,\r\n};\r\n\r\nHashedIcon.defaultProps = {\r\n  textSized: false,\r\n};\r\n\r\nexport default HashedIcon;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Icon, Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport classNames from \"classnames\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport class GameCard extends Component {\r\n  selectLiveGame = () => {\r\n    this.props.selectLiveGame(this.props.game);\r\n  };\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, tournamentsById, game, terse, live, currentGameId} = this.props;\r\n\r\n    const tournament = tournamentsById[game.tournamentId];\r\n\r\n    const gameGame = Game.deserialize(game.game);\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const nextPlayerUser = gameGame.nextPlayer === Game.PLAYER_A ? playerA : playerB;\r\n    const playerAToPlay = nextPlayerUser === playerA;\r\n    const playerBToPlay = nextPlayerUser === playerB;\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const winnerUser = game.finished ? (game.winner === Game.PLAYER_A ? playerA : playerB) : null;\r\n    const isMyGame = isUserPlayerA || isUserPlayerB;\r\n    const isMyTurn = (isUserPlayerA && playerAToPlay) || (isUserPlayerB && playerBToPlay);\r\n    const showPlayerA = !terse || !isMyGame || isUserPlayerB;\r\n    const showPlayerB = !terse || !isMyGame || isUserPlayerA;\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/game/${game.id}`}\r\n        onClick={this.selectLiveGame}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(game.id === currentGameId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n        className={classNames({attention: live && isMyTurn})}\r\n      >\r\n        <Card.Content>\r\n          {!terse ? (\r\n            <Board\r\n              className={'ui image floated right mini'}\r\n              game={gameGame}\r\n              small\r\n              settings={applicableSettings}\r\n            />\r\n          ) : null}\r\n          <Card.Header>\r\n            {!(showPlayerA && showPlayerB) ? \" vs \" : null}\r\n            {showPlayerA ? (\r\n              <Label color={winnerUser === playerA || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerA ? <Icon name={'trophy'}/> : null}\r\n                {playerAToPlay ? <Icon name={'caret right'}/> : null}\r\n                {playerA.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerA.id} />\r\n              </Label>\r\n            ) : null}\r\n            {showPlayerA && showPlayerB ? \" vs \" : null}\r\n            {showPlayerB ? (\r\n              <Label color={winnerUser === playerB || isMyTurn ? 'green' : undefined} >\r\n                {winnerUser === playerB ? <Icon name={'trophy'}/> : null}\r\n                {playerBToPlay ? <Icon name={'caret right'} color={\"green\"}/> : null}\r\n                {playerB.name}\r\n                <HashedIcon floated={'right'} size={'mini'} textSized hash={playerB.id} />\r\n              </Label>\r\n            ) : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyGame ? <Label icon={{name: 'user', color: 'green'}} content={'My game'} /> : null}\r\n              {\" \"}\r\n              {!game.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              <Label content={`Move ${game.move}`} icon={'play'} />\r\n              {\" \"}\r\n              <Label content={moment(game.endDatetime || game.startDatetime).from()} icon={'calendar'} />\r\n              {\" \"}\r\n              {tournament ? <Label content={tournament.name} icon={'sitemap'} /> : null}\r\n            </Card.Meta>\r\n          ) : (\r\n            tournament ? <Label icon={'sitemap'} /> : null\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nGameCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameCard.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n};\r\n\r\nclass GameList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {applicableSettings, user, usersById, tournamentsById, games, terse, live, selectLiveGame, currentGameId, pageSize, reverse} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(games.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    let visibleGames = games\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize);\r\n    if (reverse) {\r\n      visibleGames = visibleGames.reverse();\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleGames.map(game => (\r\n            <GameCard\r\n              key={game.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournamentsById={tournamentsById}\r\n              game={game}\r\n              selectLiveGame={selectLiveGame}\r\n              terse={terse}\r\n              live={live}\r\n              currentGameId={currentGameId}\r\n              applicableSettings={applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nGameList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournamentsById: PropTypes.object.isRequired,\r\n  games: PropTypes.array.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  live: PropTypes.bool.isRequired,\r\n  currentGameId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n  reverse: PropTypes.bool.isRequired,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nGameList.defaultProps = {\r\n  terse: false,\r\n  live: false,\r\n  pageSize: 10,\r\n  reverse: true,\r\n};\r\n\r\nexport default GameList;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Form, Input, Modal, Segment} from \"semantic-ui-react\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Client from \"../client/client\";\r\n\r\nclass CreateTournament extends Component {\r\n  state = {\r\n    name: '',\r\n    gameCount: '1',\r\n  };\r\n\r\n  createTournament = () => {\r\n    const {client} = this.props;\r\n    const {name, gameCount} = this.state;\r\n    client.createTournament({name, gameCount: parseInt(gameCount, 10)});\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({name: '', gameCount: 1});\r\n  };\r\n\r\n  setValue = (e, {name, value}) => {\r\n    this.setState({[name]: value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        size={'mini'}\r\n        trigger={<Button color={'yellow'} icon={'sitemap'} content={'Create tournament'} />}\r\n        header={'Create tournament'}\r\n        content={\r\n          <Segment>\r\n            <Form>\r\n              <Form.Field\r\n                name={'name'}\r\n                control={Input}\r\n                label={'Name'}\r\n                placeholder={'Tournament name'}\r\n                onChange={this.setValue}\r\n                required\r\n                defaultValue={this.state.name}\r\n              />\r\n              <Form.Field\r\n                name={'gameCount'}\r\n                control={Input}\r\n                label={`${this.state.gameCount} game(s) between each pair of players`}\r\n                placeholder={'Game count between each pair of players'}\r\n                onChange={this.setValue}\r\n                type={'range'}\r\n                min={1}\r\n                max={5}\r\n                defaultValue={this.state.gameCount}\r\n                required\r\n              />\r\n            </Form>\r\n          </Segment>\r\n        }\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'create', positive: true, content: 'Create Tournament', onClick: this.createTournament, disabled: !this.state.name},\r\n        ]}\r\n        onClose={this.onClose}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCreateTournament.propTypes = {\r\n  client: PropTypes.instanceOf(Client),\r\n};\r\n\r\nexport default withClient(CreateTournament);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\nimport moment from 'moment';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass TournamentCard extends Component {\r\n  selectLiveTournament = () => {\r\n    this.props.selectLiveTournament(this.props.tournament);\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, currentTournamentId, tournament, terse} = this.props;\r\n\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n    const didUserWin = tournament.finished ? tournament.winnerUserId === user.id : false;\r\n    const creator = usersById[tournament.creatorUserId];\r\n\r\n    const statusLabel = (\r\n      <Label\r\n        content={tournament.started ? (tournament.finished ? 'Finished' : `Round ${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n        icon={{\r\n          name: tournament.started ? (tournament.finished ? 'trophy' : 'play') : 'hourglass',\r\n          colour: tournament.started ? 'green' : undefined,\r\n        }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/tournament/${tournament.id}`}\r\n        // onClick={this.selectLiveTournament}\r\n        style={{\r\n          ...(!terse ? {} : {width: 'auto'}),\r\n          ...(tournament.id === currentTournamentId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Label content={tournament.name} /> by\r\n            <Label color={didUserCreated ? 'green' : undefined} content={creator.name} />\r\n            {terse ? statusLabel : null}\r\n          </Card.Header>\r\n          {!terse ? (\r\n            <Card.Meta>\r\n              {isMyTournament ? <Label icon={{name: 'user', color: 'green'}} content={'Participating'} /> : null}\r\n              {\" \"}\r\n              {didUserWin ? <Label icon={{name: 'trophy', color: 'yellow'}} content={'Won'} /> : (\r\n                tournament.finished ? (\r\n                  <Label icon={'trophy'} content={usersById[tournament.winnerUserId] ? usersById[tournament.winnerUserId].name : tournament.winnerUserId} />\r\n                ) : null\r\n              )}\r\n              {\" \"}\r\n              {tournament.started && !tournament.finished ? <Label icon={{name: 'circle', color: 'green'}} content={'Live'} /> : null}\r\n              {\" \"}\r\n              {statusLabel}\r\n              {\" \"}\r\n              <Label content={`${tournament.userIds.length} players`} icon={'users'} />\r\n              {\" \"}\r\n              <Label content={moment(tournament.endDatetime || tournament.startDatetime || tournament.createdDatetime).from()} icon={'calendar'} />\r\n            </Card.Meta>\r\n          ) : null}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n};\r\n\r\nTournamentCard.defaultProps = {\r\n  terse: false,\r\n};\r\n\r\nclass TournamentList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {user, usersById, tournaments, terse, selectLiveTournament, currentTournamentId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(tournaments.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleTournaments = tournaments\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '300px', overflowY: 'auto', flexWrap: !terse ? undefined : 'unset'}}>\r\n          {visibleTournaments.map(tournament => (\r\n            <TournamentCard\r\n              key={tournament.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              tournament={tournament}\r\n              currentTournamentId={currentTournamentId}\r\n              selectLiveTournament={selectLiveTournament}\r\n              terse={terse}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTournamentList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  tournaments: PropTypes.array.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  terse: PropTypes.bool.isRequired,\r\n  currentTournamentId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nTournamentList.defaultProps = {\r\n  terse: false,\r\n  pageSize: 10,\r\n};\r\n\r\nexport default TournamentList;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Label, Card, Grid, Pagination} from \"semantic-ui-react\";\r\n\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nexport class ChallengeCard extends Component {\r\n  selectChallenge = () => {\r\n    this.props.selectChallenge(this.props.challenge);\r\n  };\r\n\r\n  get userChallenge() {\r\n    const {user, challenge} = this.props;\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    return user.challenges[challenge.id] || null;\r\n  }\r\n\r\n  render() {\r\n    const {user, applicableSettings, usersById, challenge, currentChallengeId} = this.props;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const creator = usersById[challenge.userId];\r\n    return (\r\n      <Card\r\n        as={NavLink}\r\n        to={`/challenge/${challenge.id}`}\r\n        onClick={this.selectChallenge}\r\n        style={{\r\n          ...(challenge.id === currentChallengeId ? {backgroundColor: 'lightgreen'} : {}),\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          <Card.Header>\r\n            {challenge.options.type === 'mate'\r\n              ? `Find mate in ${challenge.options.typeOptions.mateIn}`\r\n              : 'Unknown challenge'}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            <Label\r\n              icon={{\r\n                name: {1: 'smile outline', 2: 'meh outline', 3: 'frown outline'}[challenge.meta.difficulty],\r\n                color: {1: 'green', 2: 'orange', 3: 'red'}[challenge.meta.difficulty],\r\n              }}\r\n              content={`${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n              title={{1: 'Easy', 2: 'Medium', 3: 'Hard'}[challenge.meta.difficulty]}\r\n            />\r\n            <Label icon={'user'} content={`By ${creator.name}`} />\r\n            {userChallenge && userChallenge.meta.started && !userChallenge.meta.won ? (\r\n              <Label icon={{name: 'play', color: 'green'}} content={'Started'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.won ? (\r\n              <Label icon={{name: 'trophy', color: 'green'}} content={'Solved'} />\r\n            ) : null}\r\n            {userChallenge && userChallenge.meta.mistakes ? (\r\n              <Label icon={{name: 'exclamation', color: 'red'}} content={`${userChallenge.meta.mistakes} mistakes`} />\r\n            ) : null}\r\n            {user && challenge.userId === user.id ? (\r\n              <Label\r\n                icon={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? {name: 'check', color: 'green'} : (\r\n                      challenge.meta.public\r\n                        ? {name: 'pause', color: 'yellow'} : {name: 'x', color: 'red'}\r\n                    ))}\r\n                content={(\r\n                  challenge.meta.public && challenge.meta.publishDatetime.isSameOrBefore()\r\n                    ? challenge.meta.publishDatetime.fromNow() : (\r\n                      challenge.meta.public\r\n                        ? challenge.meta.publishDatetime.toNow() : \"Private\"\r\n                    ))}\r\n              />\r\n            ) : (\r\n              <Label\r\n                icon={'calendar'}\r\n                content={challenge.meta.publishDatetime.fromNow()}\r\n              />\r\n            )}\r\n            <Board\r\n              game={Game.fromCompressedPositionNotation(challenge.startingPosition.position)}\r\n              medium\r\n              settings={applicableSettings}\r\n            />\r\n          </Card.Meta>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeCard.propTypes = {\r\n  user: PropTypes.object,\r\n  usersById: PropTypes.object.isRequired,\r\n  challenge: PropTypes.object.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChallengeList extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {client, user, usersInfo: {byId: usersById}, challenges, selectChallenge, currentChallengeId, pageSize} = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    let {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil(challenges.length / pageSize);\r\n    if (activePage > totalPages) {\r\n      activePage = totalPages;\r\n    }\r\n    const visibleChallenges = challenges\r\n      .slice((totalPages - activePage) * pageSize, (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group style={{maxHeight: '400px', overflowY: 'auto'}}>\r\n          {visibleChallenges.map(challenge => (\r\n            <ChallengeCard\r\n              key={challenge.id}\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={challenge}\r\n              selectChallenge={selectChallenge}\r\n              currentChallengeId={currentChallengeId}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ))}\r\n        </Card.Group>\r\n        {totalPages > 1 ? (\r\n          <Grid centered>\r\n            <Grid.Row>\r\n              <Pagination\r\n                totalPages={totalPages}\r\n                activePage={activePage}\r\n                onPageChange={this.onPageChange}\r\n                pointing\r\n                secondary\r\n              />\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeList.propTypes = {\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  challenges: PropTypes.array.isRequired,\r\n  selectChallenge: PropTypes.func.isRequired,\r\n  currentChallengeId: PropTypes.string,\r\n  pageSize: PropTypes.number.isRequired,\r\n};\r\n\r\nChallengeList.defaultProps = {\r\n  pageSize: 10,\r\n};\r\n\r\nexport default withClient(ChallengeList);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {Tab, Button, Icon, Input, Label, Card, Segment, Modal, Checkbox} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport GameList from \"./GameList\";\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\nimport ChallengeList, {ChallengeCard} from \"./ChallengeList\";\r\n\r\nclass UserList extends Component {\r\n  render() {\r\n    const {client, user, users, challengedUser, readyToPlayUsers, readyToPlayMeUsers} = this.props;\r\n    return (\r\n      <Card.Group style={{maxHeight: '300px', overflowY: 'auto'}}>\r\n        {users.map(otherUser => (\r\n          <UserCard\r\n            key={otherUser.id}\r\n            client={client}\r\n            user={user}\r\n            otherUser={otherUser}\r\n            challengedUser={challengedUser}\r\n            readyToPlayUsers={readyToPlayUsers}\r\n            readyToPlayMeUsers={readyToPlayMeUsers}\r\n          />\r\n        ))}\r\n      </Card.Group>\r\n    );\r\n  }\r\n}\r\n\r\nUserList.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  users: PropTypes.array.isRequired,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass ChallengeUserButton extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  challengeUser = () => {\r\n    this.props.client.changeReadyToPlay(this.props.user.readyToPlay === this.props.otherUser.id ? false : this.props.otherUser.id);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, otherUser,\r\n      usersInfo: {challengedUser, readyToPlay : readyToPlayUsers, readyToPlayMe : readyToPlayMeUsers},\r\n    } = this.props;\r\n    if (!client || !user || !otherUser.online) {\r\n      return null;\r\n    }\r\n\r\n    let playButtonColour, playButtonAttention, playButtonIcon, playButtonOnClick, playButtonLabel;\r\n    if (user.id === otherUser.id) {\r\n      playButtonOnClick = this.changeReadyToPlay;\r\n      if (user.readyToPlay) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        if (challengedUser) {\r\n          playButtonLabel = `Waiting for ${challengedUser.name}...`;\r\n        } else {\r\n          playButtonLabel = 'Waiting for opponent...';\r\n        }\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (readyToPlayMeUsers && readyToPlayMeUsers.length) {\r\n          if (readyToPlayMeUsers.length === 1) {\r\n            playButtonLabel = `${readyToPlayMeUsers[0].name} has challenged you`;\r\n            playButtonAttention = true;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayMeUsers.length} users have challenged you`;\r\n            playButtonAttention = true;\r\n          }\r\n        } else if (readyToPlayUsers && readyToPlayUsers.length) {\r\n          if (readyToPlayUsers.length === 1) {\r\n            playButtonLabel = `Play ${readyToPlayUsers[0].name}`;\r\n          } else {\r\n            playButtonLabel = `${readyToPlayUsers.length} users ready to play`;\r\n          }\r\n        } else {\r\n          playButtonLabel = 'Play';\r\n        }\r\n      }\r\n    } else {\r\n      playButtonOnClick = this.challengeUser;\r\n      if (challengedUser && challengedUser.id === otherUser.id) {\r\n        playButtonColour = 'green';\r\n        playButtonIcon = {loading: true, name: 'circle notch'};\r\n        playButtonLabel = `Waiting for ${otherUser.name}...`;\r\n      } else {\r\n        playButtonColour = 'yellow';\r\n        playButtonIcon = {name: 'play'};\r\n        if (otherUser.readyToPlay === user.id) {\r\n          playButtonLabel = `${otherUser.name} has challenged you`;\r\n          playButtonAttention = true;\r\n        } else if (otherUser.readyToPlay === true) {\r\n          playButtonLabel = `${otherUser.name} is ready to Play`;\r\n        } else {\r\n          playButtonLabel = `Challenge ${otherUser.name}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        className={classNames({attention: playButtonAttention})}\r\n        color={playButtonColour}\r\n        onClick={playButtonOnClick}\r\n      >\r\n        <Icon {...playButtonIcon} />\r\n        {playButtonLabel}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeUserButton.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeUserButton = withClient(ChallengeUserButton);\r\n\r\nclass UserCard extends Component {\r\n  render() {\r\n    const {client, user, otherUser} = this.props;\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Content>\r\n          <HashedIcon floated={'right'} size={'mini'} hash={otherUser.id} />\r\n          <Card.Header>\r\n            {otherUser.name}\r\n            {\" \"}\r\n            {client && user && user.id === otherUser.id ? (\r\n              <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} />\r\n            ) : null}\r\n          </Card.Header>\r\n          <Card.Meta>\r\n            {user && otherUser.id === user.id ? <Label><Icon name={\"user\"} color={\"green\"} />Me</Label> : null}\r\n            {\" \"}\r\n            {user && otherUser.id === user.id ? <EditUser client={client} user={user} trigger={<Label as={'a'}><Icon name={\"lock\"} color={user.hasPassword ? \"green\" : \"red\"} />{user.hasPassword ? '' : 'No password'}</Label>} /> : null}\r\n            {\" \"}\r\n            {otherUser.readyToPlay ? <Label><Icon loading name={\"circle notch\"} color={\"green\"} />Ready</Label> : null}\r\n            {\" \"}\r\n            {otherUser.online ? <Label><Icon name={\"circle\"} color={\"green\"} />Online</Label> : null}\r\n            {\" \"}\r\n            <Label\r\n              title={`${otherUser.isUserRatingProvisional ? 'Provisional - ' : ''}Won ${otherUser.winCount} out of ${otherUser.gameCount}`}\r\n              color={{1: 'yellow', 2: 'grey', 3: 'brown'}[otherUser.rank]}\r\n            >\r\n              <Icon\r\n                name={otherUser.isUserRatingProvisional ? \"question\" : \"star outline\"}\r\n                color={otherUser.isUserRatingProvisional ? \"orange\" : undefined}\r\n              />\r\n              {\" \"}{otherUser.score}\r\n            </Label>\r\n            {\" \"}\r\n            <Label icon={'trophy'} content={` ${otherUser.winCount}/${otherUser.gameCount}`} />\r\n            {\" \"}\r\n            {otherUser.tournamentWinCount ? (\r\n              <Label\r\n                icon={{name: 'sitemap', color: 'yellow'}}\r\n                content={otherUser.tournamentWinCount}\r\n                title={`Won ${otherUser.tournamentWinCount}/${otherUser.tournamentCount} tournaments entered`}\r\n              />\r\n              ) : null}\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        {client && user && otherUser.online ? <Card.Content extra>\r\n          <div className='ui two buttons'>\r\n            <ChallengeUserButton otherUser={otherUser} />\r\n          </div>\r\n        </Card.Content> : null}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nUserCard.propTypes = {\r\n  client: PropTypes.object,\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object.isRequired,\r\n  changeReadyToPlay: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  readyToPlayUsers: PropTypes.array,\r\n  readyToPlayMeUsers: PropTypes.array,\r\n};\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    user: this.props.user,\r\n    username: this.props.user.name,\r\n    password: '',\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        username: props.user ? props.user.name : null,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  updateUsername = () => {\r\n    this.props.client.changeUsername(this.state.username);\r\n  };\r\n\r\n  updatePassword = () => {\r\n    this.props.client.changePassword(this.state.password);\r\n    this.setState({password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password} = this.state;\r\n    const {user, trigger} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={trigger}\r\n        size={'small'}\r\n        header={'Edit user'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername} action={{content: 'Change', onClick: this.updateUsername}} />\r\n            <br />\r\n            <Input label={{content: user.hasPassword ? 'Password is set' : 'Set a password', color: user.hasPassword ? 'green' : 'red'}} value={password} onChange={this.changePassword} action={{content: 'Change', color: user.hasPassword ? undefined : 'green', onClick: this.updatePassword}} />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  trigger: PropTypes.node.isRequired,\r\n};\r\n\r\nexport class LogIn extends Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    mergeUsers: false,\r\n  };\r\n\r\n  changeUsername = ({target: {value}}) => {\r\n    this.setState({username: value});\r\n  };\r\n\r\n  changePassword = ({target: {value}}) => {\r\n    this.setState({password: value});\r\n  };\r\n\r\n  changeMergeUsers = ({target: {checked}}) => {\r\n    this.setState({mergeUsers: checked});\r\n  };\r\n\r\n  logIn = () => {\r\n    this.props.client.logIn(this.state.username, this.state.password, this.mergeUsers);\r\n    this.setState({username: '', password: ''});\r\n  };\r\n\r\n  render() {\r\n    const {username, password, mergeUsers} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        ref={this.modal}\r\n        trigger={<Label as={'a'} icon={'sign in'} content={'Log In'} float={'left'} />}\r\n        size={'small'}\r\n        header={'Log In'}\r\n        content={(\r\n          <Segment>\r\n            <Input label={'Name'} value={username} onChange={this.changeUsername}/>\r\n            <br />\r\n            <Input label={'Password'} value={password} onChange={this.changePassword} />\r\n            <br />\r\n            <Checkbox\r\n              label={'Merge users'}\r\n              checked={mergeUsers}\r\n              onChange={this.changeMergeUsers}\r\n            />\r\n          </Segment>\r\n        )}\r\n        actions={[\r\n          {key: 'cancel', negative: true, content: 'Cancel'},\r\n          {key: 'logIn', positive: true, content: 'Log In', onClick: this.logIn},\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLogIn.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport class LogOut extends Component {\r\n  logOut = () => {\r\n    this.props.client.logOut();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Label as={'a'} icon={'log out'} content={'Log Out'} onClick={this.logOut} />\r\n    );\r\n  }\r\n}\r\n\r\nLogOut.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nclass Lobby extends Component {\r\n  changeReadyToPlay = () => {\r\n    this.props.client.changeReadyToPlay(!this.props.user.readyToPlay);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user,\r\n      usersInfo: {byId: usersById, users, online, offline, challengedUser, readyToPlay, readyToPlayMe},\r\n      gamesInfo: {myLive, otherLive, myFinished, otherFinished}, selectLiveGame, selectLiveTournament,\r\n      challengesInfo: {otherUnsolved, challenges, otherStarted, otherNotStarted, otherSolved},\r\n      tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n\r\n    if (!user) {\r\n      return <Tab.Pane>Connecting to server...</Tab.Pane>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Card.Group centered>\r\n          {user ? (\r\n            <UserCard\r\n              client={client}\r\n              otherUser={user}\r\n              user={user}\r\n              challengedUser={challengedUser}\r\n              readyToPlayUsers={readyToPlay}\r\n              readyToPlayMeUsers={readyToPlayMe}\r\n            />\r\n          ) : null}\r\n          {otherUnsolved.length ? (\r\n            <ChallengeCard\r\n              user={user}\r\n              usersById={usersById}\r\n              challenge={otherUnsolved[0]}\r\n              selectChallenge={this.props.selectLiveChallenge}\r\n              currentChallengeId={null}\r\n              applicableSettings={client.applicableSettings}\r\n            />\r\n          ) : null}\r\n        </Card.Group>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n            {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <GameList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournamentsById={tournamentsById}\r\n                games={items}\r\n                selectLiveGame={selectLiveGame}\r\n                applicableSettings={client.applicableSettings}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        {challenges ? (<Segment>\r\n          <Tab menu={{pointing: true}} panes={(() => {\r\n            let challengesList = [\r\n              {key: 'other-started', label: \"Started Challenges\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Challenges\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Challenges\", items: otherSolved},\r\n            ].filter(({items}) => items.length);\r\n            if (!challengesList.length) {\r\n              challengesList = [\r\n                {key: 'challenges', label: \"Challenges\", items: challenges},\r\n              ];\r\n            }\r\n            return challengesList;\r\n          })().map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                  <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n                )}\r\n            ))\r\n          } />\r\n        </Segment>) : null}\r\n        <Segment>\r\n          <CreateTournament />\r\n          <br/><br/>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n            {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n            {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n            {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <TournamentList\r\n                user={user}\r\n                usersById={usersById}\r\n                tournaments={items}\r\n                selectLiveTournament={selectLiveTournament}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n        <Segment>\r\n          <Tab menu={{pointing: true}} panes={[\r\n            {key: 'online', label: \"Online Users\", items: online, color: 'green'},\r\n            {key: 'offline', label: \"Offline Users\", items: offline},\r\n            {key: 'all', label: \"All Users\", items: users},\r\n          ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n            {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n              <UserList\r\n                client={client}\r\n                users={items}\r\n                user={user}\r\n                challengedUser={challengedUser}\r\n                readyToPlayUsers={readyToPlay}\r\n                readyToPlayMeUsers={readyToPlayMe}\r\n              />\r\n            )}\r\n          ))} />\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nLobby.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withClient(Lobby);\r\n\r\nexport {\r\n  ChallengeUserButton,\r\n  EditUser,\r\n};\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/play.css';\r\nimport Game from \"../game/game\";\r\nimport Board from \"./Board\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Header,\r\n  Label,\r\n  Menu,\r\n  Modal,\r\n  Pagination,\r\n  Responsive,\r\n  Segment,\r\n  Statistic\r\n} from \"semantic-ui-react\";\r\nimport classNames from 'classnames';\r\nimport {BoardTransformation} from \"./Board/Board\";\r\nimport keydown, {Keys} from \"react-keydown\";\r\nimport PlayerColourBoard from \"./Board/PlayerColourBoard\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Play extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  state = {\r\n    selectedGame: null,\r\n    game: this.props.game,\r\n    transformation: null,\r\n  };\r\n\r\n  autoSubmitModal = React.createRef();\r\n\r\n  makeMove = game => {\r\n    if (this.props.submit) {\r\n      this.setState({game})\r\n    } else {\r\n      this.props.makeMove(game);\r\n    }\r\n    if (this.props.onDisplayPositionChange) {\r\n      this.props.onDisplayPositionChange(game);\r\n    }\r\n  };\r\n\r\n  takeMoveBack = () => {\r\n    this.makeMove(this.state.game.takeMoveBack());\r\n  };\r\n\r\n  undo = () => {\r\n    this.makeMove(this.state.game.undo());\r\n  };\r\n\r\n  newGame = () => {\r\n    this.makeMove(Game.create());\r\n  };\r\n\r\n  selectGame = game => {\r\n    const selectedGame = game === this.state.game ? null : game;\r\n    this.setState({selectedGame});\r\n    if (this.props.onSelectedGameChange) {\r\n      this.props.onSelectedGameChange(selectedGame);\r\n    }\r\n  };\r\n\r\n  makeMoveToSelected = game => {\r\n    this.selectGame(game);\r\n  };\r\n\r\n  takeMoveBackToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.takeMoveBack());\r\n  };\r\n\r\n  undoToSelected = () => {\r\n    this.selectGame(this.state.selectedGame.undo());\r\n  };\r\n\r\n  deselectGame = () => {\r\n    this.selectGame(null);\r\n  };\r\n\r\n  submit = () => {\r\n    const moves = this.getMovesToSubmit();\r\n    if (moves.length) {\r\n      this.props.submit(moves, this.state.game);\r\n    }\r\n  };\r\n\r\n  getMovesToSubmit() {\r\n    const {game: propsGame} = this.props;\r\n    const {game: stateGame} = this.state;\r\n    const history = stateGame.fullHistory;\r\n    const propsGameIndex = history.findIndex(\r\n      game => game.compressedFullNotation === propsGame.compressedFullNotation);\r\n    if (propsGameIndex < 0) {\r\n      console.error(\"Could not find live game in history\");\r\n      return [];\r\n    }\r\n    const newHistory = history.slice(propsGameIndex + 1);\r\n    const moves = newHistory.map(game => game.lastMove);\r\n\r\n    return moves;\r\n  }\r\n\r\n  resignOrAbort = () => {\r\n    this.props.submit(\"resign\");\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.game !== prevProps.game) {\r\n      const gameChanged = (\r\n        !this.props.game\r\n        || !prevProps.game\r\n        || this.props.game.compressedFullNotation !== prevProps.game.compressedFullNotation\r\n        || this.props.game.positionNotation !== prevProps.game.positionNotation\r\n      );\r\n      if (gameChanged) {\r\n        this.selectGame(null);\r\n        this.setState({game: this.props.game, resigning: false});\r\n      }\r\n    }\r\n    if (this.props.client.applicableSettings.autoSubmitMoves) {\r\n      if (!this.canSubmit(prevProps, prevState) && this.canSubmit()) {\r\n        this.submit();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSubmitMoves = () => {\r\n    if (!this.props.client.applicableSettings.autoSubmitMoves) {\r\n      this.autoSubmitModal.current.handleOpen();\r\n    } else {\r\n      this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: false});\r\n    }\r\n  };\r\n\r\n  doAutoSubmitMoves = () => {\r\n    this.props.changeSettings({...this.props.user.settings, autoSubmitMoves: true});\r\n    if (this.canSubmit()) {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  canSubmit(props = this.props, state = this.state) {\r\n    const {submit} = props;\r\n    const {selectedGame, game} = state;\r\n    return (\r\n      !!submit\r\n      && !selectedGame\r\n      && game !== props.game\r\n      && !!this.getMovesToSubmit().length\r\n      && (\r\n        game.finished\r\n        || game.nextPlayer !== props.game.nextPlayer\r\n      )\r\n    );\r\n  }\r\n\r\n  onTransformationChange = ({transformation}) => {\r\n    this.setState({transformation});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      client, user, names, allowControl, matchGame, children, usersInfo: {byId: usersById},\r\n    } = this.props;\r\n    const {selectedGame, game, transformation} = this.state;\r\n    const displayGame = selectedGame || game;\r\n    const isMyGame = allowControl.length > 0;\r\n    const canSubmit = this.canSubmit();\r\n    const tooShortToResign = matchGame ? matchGame.tooShortToResign : false;\r\n    const isPlayerBOpponent = allowControl.includes(Game.PLAYER_A);\r\n    const canUndo = !selectedGame && (this.props.submit ? game.chainCount > this.props.game.chainCount : game.canUndo);\r\n    const canTakeBack = !!(!this.props.submit && !selectedGame && game.previous);\r\n\r\n  \tconst controlsNode = (\r\n  \t  <Fragment>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_A : Game.PLAYER_B}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 0 : 1]] : null}\r\n            canSubmit={canSubmit}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayPlayer\r\n            player={isPlayerBOpponent ? Game.PLAYER_B : Game.PLAYER_A}\r\n            playerUser={matchGame ? usersById[matchGame.userIds[isPlayerBOpponent ? 1 : 0]] : null}\r\n            canSubmit={false}\r\n            canAnyPlayerSubmit={canSubmit}\r\n            canUndo={canUndo}\r\n            canTakeBack={canTakeBack}\r\n            submit={this.props.submit ? this.submit : null}\r\n            undo={this.props.submit ? this.takeMoveBack : this.undo}\r\n            takeBack={this.takeMoveBack}\r\n            changeAutoSubmitMoves={this.changeAutoSubmitMoves}\r\n            game={game}\r\n            applicableSettings={client.applicableSettings}\r\n            names={names}\r\n            allowControl={allowControl}\r\n          />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <PlayNavigation game={game} selectedGame={selectedGame} selectGame={this.selectGame} />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <BoardTransformation onChange={this.onTransformationChange} />\r\n        </Grid.Row>\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  \tconst boardNode = (\r\n      <Board\r\n        game={displayGame}\r\n        transformation={transformation}\r\n        makeMove={selectedGame ? this.makeMoveToSelected : this.makeMove}\r\n        minChainCount={displayGame === game ? (\r\n          this.props.submit ? this.props.game.chainCount : (\r\n            this.props.game.canUndo ? this.props.game.previous.chainCount : this.props.game.chainCount\r\n          )\r\n        ) : 0}\r\n        allowControl={displayGame === game ? allowControl : undefined}\r\n        settings={client.applicableSettings}\r\n        animated={client.applicableSettings.theme.animations}\r\n        showArrows={client.applicableSettings.theme.arrows}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <Segment style={{textAlign: \"center\"}}>\r\n          <Grid centered columns={'equal'} textAlign={'center'}>\r\n            <Responsive as={Grid.Row} minWidth={800}>\r\n              <Grid.Column>{controlsNode}</Grid.Column>\r\n              <Grid.Column>{boardNode}</Grid.Column>\r\n            </Responsive>\r\n            <Responsive as={Fragment} maxWidth={800}>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {boardNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched={false} textAlign={'center'}>\r\n                  {controlsNode}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Responsive>\r\n          </Grid>\r\n        </Segment>\r\n        {this.props.submit && isMyGame ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"tiny\"}>\r\n              <Statistic value={\r\n                <Modal\r\n                  trigger={<Button negative disabled={!!selectedGame || this.props.game.finished}>{tooShortToResign ? 'Abort' : 'Resign'}</Button>}\r\n                  header={tooShortToResign ? 'Abort?' : 'Resign?'}\r\n                  content={`Are you sure you want to ${tooShortToResign ? 'abort' : 'forfeit'}?${tooShortToResign ? ' This game is too short to resign.' : ''}`}\r\n                  actions={[{key: 'resign', content: tooShortToResign ? 'Abort' : 'Resign', negative: true, onClick: this.resignOrAbort}, { key: 'continue', content: 'Continue', inverted: true, secondary: true }]}\r\n                />\r\n              } />\r\n              <Statistic value={<Button negative onClick={this.props.submit ? this.takeMoveBack : this.undo} disabled={!canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        {!this.props.submit ? (\r\n          <Segment>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBack} disabled={!canTakeBack}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.newGame} disabled={!!selectedGame || !game.previous}>New Game</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <PlayHistory\r\n          game={game}\r\n          selectedGame={selectedGame}\r\n          selectGame={this.selectGame}\r\n          user={user}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n        {selectedGame ? (\r\n          <Segment textAlign={\"center\"}>\r\n            <Header as={\"h2\"}>Reviewing previous move</Header>\r\n            <Statistic.Group widths={\"three\"} size={\"small\"}>\r\n              {selectedGame.finished ? (\r\n                <Statistic color={\"green\"} value={names[selectedGame.winner]} label={\"Won!\"} />\r\n              ) : (\r\n                <Statistic value={names[selectedGame.nextPlayer]} label={this.constructor.MOVE_TYPE_NAMES[selectedGame.moveType]} />\r\n              )}\r\n              <Statistic value={selectedGame.moveCount} label={\"Move\"} />\r\n              <Statistic value={<Button negative onClick={this.undoToSelected} disabled={!selectedGame.canUndo}>Undo</Button>} />\r\n            </Statistic.Group>\r\n            <Statistic.Group widths={\"two\"} size={\"small\"}>\r\n              <Statistic value={<Button negative onClick={this.takeMoveBackToSelected} disabled={!selectedGame.previous}>Take Back a Move</Button>}/>\r\n              <Statistic value={<Button negative onClick={this.deselectGame}>Stop reviewing</Button>} />\r\n            </Statistic.Group>\r\n          </Segment>\r\n        ) : null}\r\n        <Modal\r\n          ref={this.autoSubmitModal}\r\n          header={'Auto submit moves'}\r\n          content={'Are you sure you want to be auto submitting your moves?'}\r\n          actions={[\r\n            {key: 'yes', content: 'Auto submit', onClick: this.doAutoSubmitMoves, primary: true},\r\n            {key: 'no', content: 'No, manually submit moves', secondary: true},\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nPlay.propTypes = {\r\n  user: PropTypes.object,\r\n  otherUser: PropTypes.object,\r\n  settings: PropTypes.object,\r\n  changeSettings: PropTypes.func,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  matchGame: PropTypes.object,\r\n  makeMove: PropTypes.func,\r\n  submit: PropTypes.func,\r\n  challengeUser: PropTypes.func,\r\n  stopChallengeUser: PropTypes.func,\r\n  challengedUser: PropTypes.object,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  children: PropTypes.node,\r\n  onSelectedGameChange: PropTypes.func,\r\n  onDisplayPositionChange: PropTypes.func,\r\n  usersInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nPlay.defaultProps = {\r\n  names: {\r\n    [Game.PLAYER_A]: \"Player A\",\r\n    [Game.PLAYER_B]: \"Player B\",\r\n  },\r\n  allowControl: [Game.PLAYER_A, Game.PLAYER_B],\r\n};\r\n\r\nPlay = withClient(Play);\r\n\r\nclass PlayPlayer extends Component {\r\n  static MOVE_TYPE_NAMES = {\r\n    [Game.MOVE_TYPE_PLACE_FIRST_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_PLACE_SECOND_WORKER]: \"Place a worker\",\r\n    [Game.MOVE_TYPE_SELECT_WORKER_TO_MOVE]: \"Select a worker\",\r\n    [Game.MOVE_TYPE_MOVE_FIRST_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_MOVE_SECOND_WORKER]: \"Move worker\",\r\n    [Game.MOVE_TYPE_BUILD_AROUND_WORKER]: \"Build\",\r\n  };\r\n\r\n  submitAndDisableConfirm = () => {\r\n    this.props.submit();\r\n    this.props.client.updateSettings({...this.props.user.settings, confirmSubmitMoves: false});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      game, player, allowControl, names, applicableSettings, changeAutoSubmitMoves, playerUser,\r\n      canSubmit, canAnyPlayerSubmit, canUndo, canTakeBack, submit, undo, takeBack,\r\n    } = this.props;\r\n    const isPlayerControlled = allowControl.includes(player);\r\n    const previousGame = canAnyPlayerSubmit ? game.previous : game;\r\n    const isPlayersTurn = previousGame.nextPlayer === player;\r\n    const playerWon = previousGame.winner === player;\r\n    const finished = previousGame.finished;\r\n\r\n    return (\r\n      <Menu\r\n        stackable\r\n        className={classNames({attention: !finished && isPlayerControlled && isPlayersTurn && !canSubmit})}\r\n        size={'massive'}\r\n        inverted={finished || player === Game.PLAYER_B}\r\n        color={finished ? (playerWon ? 'green' : 'red') : undefined}\r\n        items={[\r\n          {key: 'icon',\r\n            icon: finished ? (playerWon ? 'trophy' : 'thumbs down') : (isPlayersTurn ? 'play' : 'hourglass'),\r\n            content: (\r\n              <Fragment>\r\n                <PlayerColourBoard medium applicableSettings={applicableSettings} player={player} allowControl={allowControl} />\r\n                {names[player]}\r\n              </Fragment>\r\n            )},\r\n          {key: 'instructions', content: (\r\n            finished\r\n              ? (playerWon ? 'Won' : 'Lost')\r\n              : (\r\n                canSubmit\r\n                  ? (\r\n                    applicableSettings.autoSubmitMoves\r\n                      ? 'Auto-submitting'\r\n                      : (\r\n                        <Fragment>\r\n                          {applicableSettings.confirmSubmitMoves ? (\r\n                            <Modal\r\n                              size={'mini'}\r\n                              trigger={\r\n                                <Button\r\n                                  positive\r\n                                  className={'attention'}\r\n                                >\r\n                                  Preview\r\n                                </Button>\r\n                              }\r\n                              header={'Submit move'}\r\n                              content={\r\n                                <Modal.Content>\r\n                                  Are you sure you want to submit these moves?\r\n                                  <br />\r\n                                  <Board\r\n                                    game={game}\r\n                                    medium\r\n                                    settings={applicableSettings}\r\n                                    animated\r\n                                    showArrows\r\n                                  />\r\n                                </Modal.Content>\r\n                              }\r\n                              actions={[\r\n                                {key: 'never-ask-again', content: 'Never ask again', onClick: this.submitAndDisableConfirm},\r\n                                {key: 'cancel', negative: true, content: 'Cancel'},\r\n                                {key: 'ok', positive: true, content: 'Submit', onClick: submit},\r\n                              ]}\r\n                            />\r\n                          ) : (\r\n                            <Button\r\n                              positive\r\n                              className={'attention'}\r\n                              onClick={submit}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                          )}\r\n                          {isPlayerControlled && canUndo ? (\r\n                            <Fragment>\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          ) : null}\r\n                        </Fragment>\r\n                      )\r\n                  ) : (\r\n                    isPlayersTurn\r\n                      ? (\r\n                        isPlayerControlled && canUndo\r\n                          ? (\r\n                            <Fragment>\r\n                              {this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]}\r\n                              {\" or \"}<Button negative content={'Undo'} disabled={!canUndo} onClick={undo} />\r\n                            </Fragment>\r\n                          )\r\n                          : this.constructor.MOVE_TYPE_NAMES[previousGame.moveType]\r\n                      )\r\n                      : `Waiting for ${names[Game.OTHER_PLAYER[player]]}`\r\n                  )\r\n              )\r\n          )},\r\n          !canUndo && canTakeBack && !isPlayersTurn ? {\r\n            key: 'take-move-back', content: (\r\n              <Button negative content={'Take move back'} onClick={takeBack}/>\r\n            ),\r\n          } : null,\r\n          !finished && submit && allowControl.includes(player) ? {\r\n            key: 'auto-submit', content: (\r\n              <Checkbox\r\n                label={'Auto submit moves'}\r\n                toggle\r\n                checked={applicableSettings.autoSubmitMoves}\r\n                onChange={changeAutoSubmitMoves}\r\n              />\r\n            )\r\n          } : null,\r\n          finished && playerUser && playerUser.online ? {\r\n            key: 'challenge', content: (\r\n              <ChallengeUserButton otherUser={playerUser} />\r\n            ),\r\n          } : null,\r\n        ].filter(item => item)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPlayPlayer.propTypes = {\r\n  applicableSettings: PropTypes.object,\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  names: PropTypes.object.isRequired,\r\n  allowControl: PropTypes.array.isRequired,\r\n  player: PropTypes.oneOf(Game.PLAYERS).isRequired,\r\n  playerUser: PropTypes.object,\r\n  canSubmit: PropTypes.bool.isRequired,\r\n  canAnyPlayerSubmit: PropTypes.bool.isRequired,\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canTakeBack: PropTypes.bool.isRequired,\r\n  submit: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  takeBack: PropTypes.func,\r\n  changeAutoSubmitMoves: PropTypes.func.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayPlayer = withClient(PlayPlayer);\r\n\r\nclass PlayHistory extends Component {\r\n  state = {\r\n    activePage: 1,\r\n  };\r\n\r\n  onPageChange = (e, {activePage}) => {\r\n    this.setState({activePage});\r\n  };\r\n\r\n  render() {\r\n    const {game, applicableSettings, selectedGame, selectGame, pageSize, moveNotation} = this.props;\r\n    const {activePage} = this.state;\r\n\r\n    const totalPages = Math.ceil((game.history.length - 1) / pageSize);\r\n    const visibleGames = [...game.history]\r\n      .slice(1 + (totalPages - activePage) * pageSize, 1 + (totalPages - activePage) * pageSize + pageSize)\r\n      .reverse();\r\n    const lastVisibleGame = visibleGames[visibleGames.length - 1];\r\n\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <PlayNavigation game={game} selectedGame={selectedGame} selectGame={selectGame} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {visibleGames.map(previousGame => (\r\n              <Fragment key={previousGame.chainCount}>\r\n                {previousGame.moveCount % 2 === 1 ? (\r\n                  <Label content={previousGame.moveCount - 1} />\r\n                ) : null}\r\n                <Board\r\n                  game={previousGame}\r\n                  small\r\n                  onSelect={selectGame}\r\n                  selected={previousGame === selectedGame}\r\n                  settings={applicableSettings}\r\n                />\r\n                {moveNotation ? (\r\n                  <Label color={'green'}>\r\n                    {previousGame.lastMovesInHistory.map(({x, y, resign}) => resign\r\n                      ? 'R' : `${['A', 'B', 'C', 'D', 'E'][x]}${y + 1}`).join('/')}\r\n                  </Label>\r\n                ) : null}\r\n              </Fragment>\r\n            ))}\r\n            {lastVisibleGame && (lastVisibleGame.moveCount % 2 === 0) ? (\r\n              <Label content={lastVisibleGame.moveCount - 2} />\r\n            ) : null}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Pagination\r\n              totalPages={totalPages}\r\n              activePage={activePage}\r\n              onPageChange={this.onPageChange}\r\n              pointing\r\n              secondary\r\n            />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nPlayHistory.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  user: PropTypes.object,\r\n  applicableSettings: PropTypes.object.isRequired,\r\n  selectGame: PropTypes.func,\r\n  pageSize: PropTypes.number.isRequired,\r\n  moveNotation: PropTypes.bool.isRequired,\r\n};\r\n\r\nPlayHistory.defaultProps = {\r\n  pageSize: 10,\r\n  moveNotation: false,\r\n};\r\n\r\nclass PlayNavigation extends Component {\r\n  static keys = [\r\n    'left', 'right', 'shift+left', 'shift+right', 'home', 'end',\r\n  ];\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {which, shiftKey} = keydown.event;\r\n      if (which === Keys.left && shiftKey) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToCurrentMove();\r\n      } else if (which === Keys.left && !shiftKey) {\r\n        this.goToNextMove();\r\n      } else if (which === Keys.right && !shiftKey) {\r\n        this.goToPreviousMove();\r\n      } else if (which === Keys.right && shiftKey) {\r\n        this.goToFirstMove();\r\n      } else if (which === Keys.home) {\r\n        this.goToFirstMove();\r\n      }\r\n    }\r\n  }\r\n\r\n  get gameIndexes() {\r\n    const {game, selectedGame} = this.props;\r\n    const selectedGameIndex = game.history.indexOf(selectedGame || game);\r\n    let mostRecentAncestorGameIndex = selectedGameIndex;\r\n    let ancestor = selectedGame;\r\n    while (mostRecentAncestorGameIndex === -1 && ancestor) {\r\n      ancestor = ancestor.previousInHistory;\r\n      mostRecentAncestorGameIndex = game.history.indexOf(ancestor);\r\n    }\r\n    const lastGameIndex = game.history.length - 1;\r\n\r\n    return {selectedGameIndex, lastGameIndex, mostRecentAncestorGameIndex};\r\n  }\r\n\r\n  canGoToCurrentMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToCurrentMove = () => {\r\n    if (!this.canGoToCurrentMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game);\r\n  };\r\n\r\n  canGoToNextMove() {\r\n    const {selectedGameIndex, lastGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== lastGameIndex;\r\n  }\r\n\r\n  goToNextMove = () => {\r\n    if (!this.canGoToNextMove()) {\r\n      return;\r\n    }\r\n    const selectedGameIndex = this.props.game.history.indexOf(this.props.selectedGame || this.props.game);\r\n    this.props.selectGame(this.props.game.history[selectedGameIndex + 1]);\r\n  };\r\n\r\n  goToAncestor = () => {\r\n    const {mostRecentAncestorGameIndex} = this.gameIndexes;\r\n    this.props.selectGame(this.props.game.history[mostRecentAncestorGameIndex]);\r\n  };\r\n\r\n  canGoToPreviousMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex >= 0 && selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToPreviousMove = () => {\r\n    if (!this.canGoToPreviousMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame((this.props.selectedGame || this.props.game).previousInHistory);\r\n  };\r\n\r\n  goToPreviousVariationMove = () => {\r\n    this.props.selectGame(this.props.selectedGame.previousInHistory);\r\n  };\r\n\r\n  canGoToFirstMove() {\r\n    const {selectedGameIndex} = this.gameIndexes;\r\n\r\n    return selectedGameIndex !== 0;\r\n  }\r\n\r\n  goToFirstMove = () => {\r\n    if (!this.canGoToFirstMove()) {\r\n      return;\r\n    }\r\n    this.props.selectGame(this.props.game.history[0]);\r\n  };\r\n\r\n  render() {\r\n    const {game, selectedGame} = this.props;\r\n    const {selectedGameIndex, mostRecentAncestorGameIndex} = this.gameIndexes;\r\n\r\n    return (\r\n      <Menu size={'massive'} items={[\r\n        {key: 'current', icon: 'fast backward', onClick: this.goToCurrentMove, disabled: !this.canGoToCurrentMove()},\r\n        ...(selectedGameIndex >= 0 ? [\r\n          {key: 'previous', icon: 'backward', onClick: this.goToNextMove, disabled: !this.canGoToNextMove()},\r\n          {key: 'moveCount', content: selectedGameIndex >= 0 ? `${(selectedGame || game).moveCount}/${game.moveCount}` : selectedGame.moveCount, disabled: game.finished},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousMove, disabled: !this.canGoToPreviousMove()},\r\n        ] : [\r\n          {key: 'goToAncestor', content: `Return to ${mostRecentAncestorGameIndex}/${game.moveCount}`, onClick: this.goToAncestor},\r\n        ]),\r\n        {key: 'first', icon: 'fast forward', onClick: this.goToFirstMove, disabled: !this.canGoToFirstMove()},\r\n        ...(selectedGameIndex >= 0 ? [] : [\r\n          {key: 'ancestor', content: `Variation ${selectedGame.moveCount}/${mostRecentAncestorGameIndex}`, disabled: true},\r\n          {key: 'next', icon: 'forward', onClick: this.goToPreviousVariationMove, disabled: selectedGame.moveCount <= 1},\r\n        ]),\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nPlayNavigation.propTypes = {\r\n  game: PropTypes.instanceOf(Game).isRequired,\r\n  selectedGame: PropTypes.instanceOf(Game),\r\n  selectGame: PropTypes.func.isRequired,\r\n};\r\n\r\nPlayNavigation = keydown(PlayNavigation.keys)(PlayNavigation);\r\n\r\nexport default Play;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Play from \"./Play\";\r\nimport Game from \"../game/game\";\r\nimport {Grid, Modal, Menu} from \"semantic-ui-react\";\r\nimport * as utils from \"../utils\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass Hotseat extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n    error: false,\r\n    ...this.constructor.getGameAndErrorFromUrlPosition(),\r\n  };\r\n\r\n  static getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position');\r\n    if (position) {\r\n      let game, error;\r\n      try {\r\n        game = Game.fromCompressedMoveNotation(position);\r\n        if (!game) {\r\n          error = 'The position was not valid';\r\n        } else {\r\n          error = null;\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        error = 'The series of moves where not valid';\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), error};\r\n      }\r\n      return {game, error: false};\r\n    } else {\r\n      return {game: Game.create(), error: false};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  share = () => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.state.game;\r\n      navigator.share({\r\n        title: `Thyra Online - Game after ${game.moveCount} moves`,\r\n        text: `Review Santorini game between after ${game.moveCount} moves`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  render() {\r\n    const {game, error, selectedGame} = this.state;\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={error}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${error}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${(selectedGame || game).compressedFullNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'}\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          game={game}\r\n          makeMove={this.makeMove}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nHotseat.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Hotseat);\r\n","import React, {Component, Fragment} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Checkbox, Form, Grid, Header, Label, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Client from \"../client/client\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {ThemeDemoBoard} from \"./Board\";\r\n\r\nclass SettingsContent extends Component {\r\n  themeSchemeOptions = [\r\n    {value: '', label: 'Default'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'pastel', label: 'Pastel'},\r\n    {value: 'green', label: 'Green'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themeCellsOptions = [\r\n    {value: 'original', label: 'Original'},\r\n    {value: 'halloween', label: 'Halloween'},\r\n  ];\r\n  themePiecesOptions = [\r\n    {value: 'pawn', label: 'Pawn'},\r\n    {value: 'king', label: 'King'},\r\n    {value: 'circle', label: 'Circle'},\r\n    {value: 'certificate', label: 'Star'},\r\n    {value: 'sun', label: 'Sun'},\r\n    {value: 'rocket', label: 'Rocket'},\r\n    {value: 'bug', label: 'Bug'},\r\n    {value: 'eye', label: 'Eye'},\r\n    {value: 'user', label: 'User'},\r\n    {value: 'halloween-witch-hat', label: 'Halloween: Witch Hat'},\r\n    {value: 'halloween-cauldron', label: 'Halloween: Cauldron'},\r\n    {value: 'halloween-bat', label: 'Halloween: Bat'},\r\n    {value: 'halloween-spider', label: 'Halloween: Spider'},\r\n    {value: 'halloween-cat', label: 'Halloween: Cat'},\r\n    {value: 'halloween-tombstone', label: 'Halloween: Tombstone'},\r\n    {value: 'halloween-pumpkin', label: 'Halloween: Pumpkin'},\r\n    {value: 'halloween-ghost', label: 'Halloween: Ghost'},\r\n  ];\r\n  themeNumbersOptions = [\r\n    {value: '', label: 'None'},\r\n    {value: 'obvious', label: 'Obvious'},\r\n    {value: 'subtle', label: 'Subtle'},\r\n    {value: 'very-subtle', label: 'Very subtle'},\r\n  ];\r\n\r\n  themeDemoBoard = overrides => {\r\n    const {settings: {theme}} = this.props;\r\n    return (\r\n      <ThemeDemoBoard medium settings={{theme: {...theme, animations: false, ...overrides}}}/>\r\n    );\r\n  };\r\n\r\n  updateAutoSubmitMove = (e, {checked}) => {\r\n    this.props.updateSettings({autoSubmitMoves: checked});\r\n  };\r\n\r\n  updateConfirmSubmitMoves = (e, {checked}) => {\r\n    this.props.updateSettings({confirmSubmitMoves: checked});\r\n  };\r\n\r\n  updateEnableNotifications = (e, {checked}) => {\r\n    this.props.updateSettings({enableNotifications: checked});\r\n  };\r\n\r\n  updateThemeUseTopicalTheme = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {useTopicalTheme: checked}});\r\n  };\r\n\r\n  updateThemeRotateOpponent = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {rotateOpponent: checked}});\r\n  };\r\n\r\n  updateAnimations = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {animations: checked}});\r\n  };\r\n\r\n  updateArrows = (e, {checked}) => {\r\n    this.props.updateSettings({theme: {arrows: checked}});\r\n  };\r\n\r\n  updateThemeNumbers = (e, {value}) => {\r\n    this.props.updateSettings({theme: {numbers: value}});\r\n  };\r\n\r\n  updateThemeScheme = (e, {value}) => {\r\n    this.props.updateSettings({theme: {scheme: value}});\r\n  };\r\n\r\n  updateThemePieces = (e, {value}) => {\r\n    this.props.updateSettings({theme: {pieces: value}});\r\n  };\r\n\r\n  updateThemeCells = (e, {value}) => {\r\n    this.props.updateSettings({theme: {cells: value}});\r\n  };\r\n\r\n  render() {\r\n    const {settings: {autoSubmitMoves, confirmSubmitMoves, enableNotifications, theme}, applicableSettingsName, applicableSettingsOverride} = this.props;\r\n    const {useTopicalTheme, cells = 'original', pieces = 'king', scheme, rotateOpponent, animations, arrows, numbers} = theme;\r\n\r\n    return (\r\n      <Tab menu={{pointing: true, attached: false}} panes={[\r\n        {menuItem: 'Playing', render: () => (\r\n          <Segment>\r\n            <Form>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Auto-submit online moves'}\r\n                  name={'autoSubmitMoves'}\r\n                  checked={autoSubmitMoves}\r\n                  onChange={this.updateAutoSubmitMove}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Confirm before submitting online moves'}\r\n                  name={'confirmSubmitMoves'}\r\n                  checked={confirmSubmitMoves}\r\n                  onChange={this.updateConfirmSubmitMoves}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Checkbox\r\n                  label={'Enable notifications'}\r\n                  name={'enableNotifications'}\r\n                  checked={enableNotifications}\r\n                  onChange={this.updateEnableNotifications}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Segment>\r\n        )},\r\n        {menuItem: 'Theme', render: () => (\r\n          <Segment>\r\n            <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  {this.themeDemoBoard({animations: theme.animations})}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column width={4}>\r\n                  <Checkbox\r\n                    label={'Use topical theme when available'}\r\n                    name={'theme.useTopicalTheme'}\r\n                    checked={useTopicalTheme}\r\n                    onChange={this.updateThemeUseTopicalTheme}\r\n                  />\r\n                </Grid.Column>\r\n                <Grid.Column floated={'right'} textAlign={'right'}>\r\n                  {applicableSettingsName ? (\r\n                    <Fragment>\r\n                      {applicableSettingsName}\r\n                      <br/>\r\n                      {this.themeDemoBoard(applicableSettingsOverride.theme)}\r\n                    </Fragment>\r\n                  ) : null}\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Tab menu={{pointing: true, attached: false}} panes={[\r\n                  {menuItem: 'Pieces', render: () => (\r\n                    <Tab.Pane>\r\n                    <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Rotate Opponent'}\r\n                            name={'theme.rotateOpponent'}\r\n                            checked={rotateOpponent}\r\n                            onChange={this.updateThemeRotateOpponent}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({rotateOpponent: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Animation'}\r\n                            name={'theme.animations'}\r\n                            checked={animations}\r\n                            onChange={this.updateAnimations}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({animations: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={4}>\r\n                          <Checkbox\r\n                            label={'Arrows'}\r\n                            name={'theme.arrows'}\r\n                            checked={arrows}\r\n                            onChange={this.updateArrows}\r\n                          />\r\n                        </Grid.Column>\r\n                        <Grid.Column floated={'right'} textAlign={'right'}>\r\n                          {this.themeDemoBoard({arrows: true})}\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      <Grid.Row>\r\n                        <Grid.Column textAlign={'center'}>\r\n                          <Form.Field><Header as={'h2'}>Pieces:</Header></Form.Field>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                      {this.themePiecesOptions.map(option => (\r\n                        <Grid.Row key={`theme-pieces-${option.value}`}>\r\n                          <Grid.Column width={4}>\r\n                            <Checkbox\r\n                              radio\r\n                              label={option.label}\r\n                              name={'theme.pieces'}\r\n                              value={option.value}\r\n                              checked={pieces === option.value}\r\n                              onChange={this.updateThemePieces}\r\n                            />\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'right'} textAlign={'right'}>\r\n                            {this.themeDemoBoard({pieces: option.value})}\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                      ))}\r\n                    </Grid>\r\n                  </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Board', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Cells:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                          </Grid.Row>\r\n                        {this.themeCellsOptions.map(option => (\r\n                          <Grid.Row key={`theme-cells-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.cells'}\r\n                                value={option.value}\r\n                                checked={cells === option.value}\r\n                                onChange={this.updateThemeCells}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({cells: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                        <Grid.Row>\r\n                          <Grid.Column textAlign={'center'}>\r\n                            <Form.Field><Header as={'h2'}>Colours:</Header></Form.Field>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n                        {this.themeSchemeOptions.map(option => (\r\n                          <Grid.Row key={`theme-scheme-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.scheme'}\r\n                                value={option.value}\r\n                                checked={scheme === option.value}\r\n                                onChange={this.updateThemeScheme}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({scheme: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )},\r\n                  {menuItem: 'Level Indicators', render: () => (\r\n                    <Tab.Pane>\r\n                      <Grid stackable columns={'equal'} verticalAlign={'middle'}>\r\n                        {this.themeNumbersOptions.map(option => (\r\n                          <Grid.Row key={`theme-numbers-${option.value}`}>\r\n                            <Grid.Column width={4}>\r\n                              <Checkbox\r\n                                radio\r\n                                label={option.label}\r\n                                name={'theme.numbers'}\r\n                                value={option.value}\r\n                                checked={numbers === option.value}\r\n                                onChange={this.updateThemeNumbers}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column floated={'right'} textAlign={'right'}>\r\n                              {this.themeDemoBoard({numbers: option.value})}\r\n                            </Grid.Column>\r\n                          </Grid.Row>\r\n                        ))}\r\n                      </Grid>\r\n                    </Tab.Pane>\r\n                  )}\r\n                ]} />\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        )},\r\n      ]} />\r\n    );\r\n  }\r\n}\r\n\r\nSettingsContent.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  updateSettings: PropTypes.func.isRequired,\r\n  applicableThemeName: PropTypes.string,\r\n  applicableSettingsOverride: PropTypes.object,\r\n};\r\n\r\nclass Settings extends Component {\r\n  state = {\r\n    user: null,\r\n    settings: Client.getDefaultSettings(),\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.user && props.user !== state.user) {\r\n      return {\r\n        user: props.user,\r\n        settings: props.client.settings,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  updateSettings = update => {\r\n    this.setState(state => ({\r\n      settings: {\r\n        ...state.settings,\r\n        ...update,\r\n        theme: {\r\n          ...state.settings.theme,\r\n          ...update.theme,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  save = () => {\r\n    this.props.client.updateSettings(this.state.settings);\r\n  };\r\n\r\n  render() {\r\n    const {settings} = this.state;\r\n    const {client} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        trigger={<Label as={'a'} icon={'cog'} content={'Settings'} />}\r\n        size={'small'}\r\n        header={'Settings'}\r\n        actions={[\r\n          {key: 'cancel', content: 'Cancel'},\r\n          {key: 'save', content: 'Save', positive: true, onClick: this.save},\r\n        ]}\r\n        content={{scrolling: true, content: (\r\n          <SettingsContent\r\n            settings={settings}\r\n            updateSettings={this.updateSettings}\r\n            applicableSettingsName={client.applicableSettingsName}\r\n            applicableSettingsOverride={client.applicableSettingsOverride}\r\n          />\r\n        )}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n};\r\n\r\nexport default withClient(Settings);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Grid, Icon, Label, Menu, Modal, Responsive, Segment, Tab} from \"semantic-ui-react\";\r\nimport { createSelector } from 'reselect';\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport Game from \"../game/game\";\r\nimport Play from \"./Play\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\nimport Settings from \"./Settings\";\r\nimport GameList from \"./GameList\";\r\nimport {ChallengeUserButton} from \"./Lobby\";\r\n\r\nclass OnlineGamePlayer extends Component {\r\n  render() {\r\n    const {game, player} = this.props;\r\n    let initialPlayer, resultingPlayerScore;\r\n    if (game) {\r\n      if (game.initialPlayerA.id === player.id) {\r\n        initialPlayer = game.initialPlayerA;\r\n        resultingPlayerScore = game.resultingPlayerAScore;\r\n      } else if (game.initialPlayerB.id === player.id) {\r\n        initialPlayer = game.initialPlayerB;\r\n        resultingPlayerScore = game.resultingPlayerBScore;\r\n      } else {\r\n        initialPlayer = null;\r\n        resultingPlayerScore = null;\r\n      }\r\n    } else {\r\n      initialPlayer = null;\r\n      resultingPlayerScore = null;\r\n    }\r\n    const isWinner = game && game.winnerUserId === player.id;\r\n    return (\r\n      <Fragment>\r\n        {isWinner ? <Icon name={'trophy'} color={\"green\"} /> : null}{\" \"}\r\n        <span style={isWinner ? {color: '#21BA45'} : undefined}>\r\n          {player.name}\r\n          {initialPlayer && !game.tournamentId ? (\r\n            <Fragment>\r\n              {\" \"}({resultingPlayerScore ? (\r\n                <Fragment>\r\n                  {isWinner ? `+${initialPlayer.winPoints}` : initialPlayer.losePoints}\r\n                  {\" \"}<Icon name={'long arrow alternate right'} />{\" \"}\r\n                  {resultingPlayerScore}\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {initialPlayer.score}\r\n                  {\" \"}+{initialPlayer.winPoints}/{initialPlayer.losePoints}\r\n                </Fragment>\r\n              )})\r\n            </Fragment>\r\n          ) : null}\r\n        </span>\r\n        <HashedIcon floated={'right'} size={'mini'} hash={player.id} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGamePlayer.propTypes = {\r\n  game: PropTypes.object,\r\n  player: PropTypes.object.isRequired,\r\n};\r\n\r\nclass ChosenOnlineGame extends Component {\r\n  state = {\r\n    selectedGame: null,\r\n  };\r\n\r\n  gameSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.gamesInfo.byId,\r\n  ], (gameId, gamesById) => gamesById[gameId]);\r\n\r\n  get game() {\r\n    return this.gameSelector(this.props);\r\n  }\r\n\r\n  playersInfoSelector = createSelector([\r\n    props => props.user,\r\n    props => props.usersInfo,\r\n    () => this.game,\r\n  ], (user, {byId: usersById}, game) => {\r\n    const playerA = usersById[game.userIds[0]];\r\n    const playerB = usersById[game.userIds[1]];\r\n    const isUserPlayerA = user ? playerA.id === user.id : false;\r\n    const isUserPlayerB = user ? playerB.id === user.id : false;\r\n    const userPlayer = isUserPlayerA ? Game.PLAYER_A : isUserPlayerB ? Game.PLAYER_B : null;\r\n    const otherUser = isUserPlayerA ? playerB : isUserPlayerB ? playerA : null;\r\n\r\n    return {\r\n      playerA, playerB,\r\n      isUserPlayerA, isUserPlayerB,\r\n      userPlayer, otherUser,\r\n    };\r\n  });\r\n\r\n  get playersInfo() {\r\n    return this.playersInfoSelector(this.props);\r\n  }\r\n\r\n  gameGameSelector = createSelector([\r\n    () => this.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  dismissUrlGameError = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  submit = moves => {\r\n    this.props.client.submitGameMove(this.game, moves);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const game = this.game;\r\n    if (game) {\r\n      this.props.selectLiveGame(game);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveGame(null);\r\n  };\r\n\r\n  changeSettings = settings => {\r\n    this.props.client.updateSettings(settings);\r\n  };\r\n\r\n  shareGame = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const game = this.game;\r\n      const {playerA, playerB} = this.playersInfo;\r\n      navigator.share({\r\n        title: `Thyra Online - ${game.finished ? 'Review' : 'Live'} ${playerA.name} vs ${playerB.name}`,\r\n        text: `${game.finished? 'Review finished': 'Watch live'} Santorini game between ${playerA.name} and ${playerB.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  challengeUser = () => {\r\n    const {otherUser} = this.playersInfo;\r\n    if (otherUser) {\r\n      this.props.client.changeReadyToPlay(otherUser.id);\r\n    }\r\n  };\r\n\r\n  stopChallengeUser = () => {\r\n    this.props.client.changeReadyToPlay(false);\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, game, selectLiveGame,\r\n      usersInfo: {challengedUser, byId: usersById}, gamesInfo: {otherLive: otherLiveGames, myLive: myLiveGames},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    const {selectedGame} = this.state;\r\n    const {gameGame} = this;\r\n\r\n    if (!gameGame) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlGameError}\r\n            header={'Could not find game'}\r\n            content={'This game cannot be found. Please check that you copied the full URL, or perhaps the game was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find game\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {otherUser, playerA, playerB, isUserPlayerA, isUserPlayerB, userPlayer} = this.playersInfo;\r\n    if (!playerA || !playerB) {\r\n      return null;\r\n    }\r\n\r\n    const gamesNode = (\r\n      <Segment>\r\n        <ChallengeUserButton otherUser={user} />\r\n        <br />\r\n        <br />\r\n        <GameList\r\n          user={user}\r\n          selectLiveGame={selectLiveGame}\r\n          games={myLiveGames.concat(otherLiveGames)}\r\n          usersById={usersById}\r\n          tournamentsById={tournamentsById}\r\n          terse\r\n          live\r\n          currentGameId={game ? game.id : null}\r\n          reverse={false}\r\n          applicableSettings={client.applicableSettings}\r\n        />\r\n      </Segment>\r\n    );\r\n    const tournament = game ? tournamentsById[game.tournamentId] : null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Settings/>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareGame, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to game'},\r\n              {key: 'play', content: 'Play position', icon: 'retweet', as: NavLink,\r\n                to: `/hotseat?position=${(selectedGame || gameGame).compressedFullNotation}`, color: 'green', active: true,\r\n                title: 'Click to open hotseat with this game', target: '_blank'},\r\n              (process.env.REACT_APP_DEBUG || (user && user.admin)) ? {key: 'edit', content: 'Edit position', icon: 'edit', as: NavLink,\r\n                to: `/challenge/create?position=${(selectedGame || gameGame).positionNotation}`, color: 'green', active: true,\r\n                title: 'Click to edit the position for this game', target: '_blank'} : null,\r\n              (process.env.REACT_APP_DEBUG || (user && user.admin)) ? {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} items={[\r\n              {key: 'player-a', content: (\r\n                <Fragment>\r\n                  {isUserPlayerA ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerA} />\r\n                </Fragment>\r\n              ), color: isUserPlayerA ? 'green' : undefined},\r\n              {key: 'player-b', content: (\r\n                <Fragment>\r\n                  {isUserPlayerB ? <Label color={'green'} icon={\"user\"} content={'Me'} /> : null}\r\n                  <OnlineGamePlayer game={game} player={playerB} />\r\n                </Fragment>\r\n              ), color: isUserPlayerB ? 'green' : undefined},\r\n              tournament ? {key: 'tournament', content: (\r\n                <NavLink to={`/tournament/${tournament.id}`}>\r\n                  <Icon name={'sitemap'} /> {tournament.name}\r\n                </NavLink>\r\n              ), as: 'span'} : null,\r\n            ].filter(item => item)}/>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Responsive as={Fragment} maxWidth={800}>\r\n          {gamesNode}\r\n        </Responsive>\r\n        <Play\r\n          user={user}\r\n          otherUser={otherUser}\r\n          changeSettings={this.changeSettings}\r\n          game={gameGame}\r\n          matchGame={game}\r\n          names={{[Game.PLAYER_A]: playerA.name, [Game.PLAYER_B]: playerB.name}}\r\n          allowControl={[userPlayer].filter(player => player)}\r\n          submit={this.submit}\r\n          challengeUser={this.challengeUser}\r\n          stopChallengeUser={this.stopChallengeUser}\r\n          challengedUser={challengedUser}\r\n          onSelectedGameChange={this.onSelectedGameChange}\r\n        >\r\n          <Responsive as={Grid.Row} minWidth={800}>\r\n            {gamesNode}\r\n          </Responsive>\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  game: PropTypes.object,\r\n};\r\n\r\nChosenOnlineGame = withRouter(withClient(ChosenOnlineGame));\r\n\r\nclass OnlineGame extends Component {\r\n  gameGameSelector = createSelector([\r\n    props => props.game,\r\n  ], game => game ? Game.deserialize(game.game) : null);\r\n\r\n  get gameGame() {\r\n    return this.gameGameSelector(this.props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectLiveGame, game, client, user, usersInfo: {byId},\r\n      gamesInfo: {games, myLive, otherLive, myFinished, otherFinished},\r\n      tournamentsInfo: {byId: tournamentsById},\r\n    } = this.props;\r\n    if (!Object.values(byId).length) {\r\n      return null;\r\n    }\r\n    const gameGame = this.gameGame;\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Live games\", items: myLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Live games\", items: otherLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past games\", items: myFinished},\r\n              {key: 'other-past', label: \"Other Past games\", items: otherFinished},\r\n              {key: 'all', label: \"All games\", items: games},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <GameList\r\n                  user={user}\r\n                  usersById={byId}\r\n                  tournamentsById={tournamentsById}\r\n                  games={items}\r\n                  selectLiveGame={selectLiveGame}\r\n                  applicableSettings={client.applicableSettings}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineGame game={game} gameGame={gameGame} selectLiveGame={selectLiveGame} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineGame.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  game: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineGame));\r\n","import notifications from './notifications';\r\n\r\nexport default {\r\n  notifications,\r\n};\r\n","import {client} from \"../client/client\";\r\n\r\nclass Notifications {\r\n  async requestPermission() {\r\n    if (window.Notification && window.Notification.permission !== 'denied') {\r\n      await window.Notification.requestPermission();\r\n    }\r\n  }\r\n\r\n  async notify() {\r\n    if (!client.applicableSettings.enableNotifications) {\r\n      return;\r\n    }\r\n    await this.requestPermission();\r\n    if (window.Notification && window.Notification.permission === \"granted\") {\r\n      try {\r\n        new Notification(...arguments);\r\n      } catch (e) {\r\n        console.error(\"Could not send notification\", e);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst notifications = new Notifications();\r\n\r\nexport default notifications;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport {Button, Grid, Icon, Label, Menu, Modal, Segment, Statistic, Tab, Table} from \"semantic-ui-react\";\r\n\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport * as utils from \"../utils\";\r\nimport HashedIcon from \"./HashedIcon\";\r\n// import TournamentList from \"./TournamentList\";\r\nimport {GameCard} from \"./GameList\";\r\nimport {createSelector} from \"reselect\";\r\nimport '../styles/tournament.css';\r\nimport CreateTournament from \"./CreateTournament\";\r\nimport TournamentList from \"./TournamentList\";\r\n\r\nclass ChosenOnlineTournament extends Component {\r\n  tournamentSelector = createSelector([\r\n    props => props.match.params.id,\r\n    props => props.tournamentsInfo.byId,\r\n  ], (tournamentId, tournamentsById) => tournamentsById[tournamentId]);\r\n\r\n  get tournament() {\r\n    return this.tournamentSelector(this.props);\r\n  }\r\n\r\n  dismissUrlTournamentError = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {tournament} = this;\r\n    if (tournament) {\r\n      this.props.selectLiveTournament(tournament);\r\n    }\r\n  }\r\n\r\n  close = () => {\r\n    this.props.selectLiveTournament(null);\r\n  };\r\n\r\n  shareTournament = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const {tournament} = this;\r\n      navigator.share({\r\n        title: `Thyra Online - ${tournament.started ? (tournament.finished ? 'Past' : 'Live') : 'Future'} tournament ${tournament.name}`,\r\n        text: `${tournament.started ? (tournament.finished ? 'Review Past' : 'Watch Live') : 'Future'} Santorini tournament ${tournament.name}`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  toggleParticipation = () => {\r\n    const {tournament} = this;\r\n    this.props.toggleParticipation(tournament);\r\n  };\r\n\r\n  startTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.startTournament(tournament);\r\n  };\r\n\r\n  abortTournament = () => {\r\n    const {tournament} = this;\r\n    this.props.abortTournament(tournament);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      location, client, user, selectLiveGame,\r\n      usersInfo: {byId: usersById}, gamesInfo: {byId: gamesById}, tournamentsInfo,\r\n    } = this.props;\r\n    const {byId: tournamentsById} = tournamentsInfo;\r\n    const {tournament} = this;\r\n\r\n    if (!tournament) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlTournamentError}\r\n            header={'Could not find tournament'}\r\n            content={'This tournament cannot be found. Please check that you copied the full URL, or perhaps the tournament was aborted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find tournament\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const players = _.orderBy(tournament.userIds.map(otherUserId => usersById[otherUserId]), [\r\n      user => tournament.userStats ? tournament.userStats[user.id].points : 0,\r\n      user => tournament.userStats ? tournament.userStats[user.id].initialScore.score : 0,\r\n      'id',\r\n    ], ['desc', 'desc', 'desc']);\r\n    const isMyTournament = user ? tournament.userIds.includes(user.id) : false;\r\n    const didUserCreated = user ? tournament.creatorUserId === user.id : false;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Tournament', icon: 'share', onClick: this.shareTournament, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Statistic.Group widths={\"three\"} size={\"tiny\"}>\r\n            <Statistic\r\n              value={tournament.started ? (tournament.finished ? 'Finished' : `${tournament.round}/${tournament.rounds}`) : 'Waiting'}\r\n              label={tournament.started ? (tournament.finished ? 'Status' : 'Rounds') : 'Status'}\r\n            />\r\n            <Statistic\r\n              value={tournament.userIds.length}\r\n              label={'Users'}\r\n            />\r\n            <Statistic\r\n              value={tournament.gameCount}\r\n              label={'Games between each pair'}\r\n            />\r\n          </Statistic.Group>\r\n          <Grid columns={'equal'}>\r\n            <Grid.Column textAlign={'left'}><Button negative onClick={this.close}>Close</Button></Grid.Column>\r\n            <Grid.Column>\r\n              <Button\r\n                positive\r\n                icon\r\n                onClick={this.shareTournament}\r\n                style={{width: '100%'}}\r\n                as={NavLink}\r\n                to={location.pathname}\r\n                title={navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to tournament'}\r\n              >\r\n                <Icon name={'share'}/> Share Tournament\r\n              </Button>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n        {!tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n                <Button\r\n                  disabled={tournament.started}\r\n                  style={{width: '100%'}}\r\n                  color={isMyTournament ? 'yellow' : 'green'}\r\n                  onClick={this.toggleParticipation}\r\n                >\r\n                  {tournament.started ? null : <Icon name={isMyTournament ? 'hourglass' : 'play'} />}\r\n                  {isMyTournament ? 'Participating' : (\r\n                    tournament.started ? (\r\n                      tournament.finished ? 'Tournament finished' : 'Tournament started'\r\n                    ) : 'Join the tournament'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Button\r\n                  disabled={!didUserCreated || players.length < 2 || tournament.started}\r\n                  positive\r\n                  icon\r\n                  onClick={this.startTournament}\r\n                  style={{width: '100%'}}\r\n                  color={players.length >= 2 ? (didUserCreated ? 'green' : 'yellow') : 'yellow'}\r\n                >\r\n                  {tournament.finished  ? null : (\r\n                    <Icon name={players.length >= 2 ? (didUserCreated ? 'play' : 'hourglass') : 'play'}/>\r\n                  )}\r\n                  {tournament.started ? (\r\n                    tournament.finished ? 'Finished' : 'Started'\r\n                  ) : (\r\n                    players.length >= 2 ? (\r\n                      didUserCreated ? 'Start tournament' : 'Waiting for tournament to start'\r\n                    ) : 'Needs at least participants'\r\n                  )}\r\n                </Button>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null }\r\n        <Segment>\r\n          {tournament.started ? (\r\n            <Tab menu={{pointing: true, attached: false}} panes={[\r\n              {menuItem: 'Rankings', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      {tournament.finished ? <Table.HeaderCell> </Table.HeaderCell> : null}\r\n                      <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                      <Table.HeaderCell>User</Table.HeaderCell>\r\n                      <Table.HeaderCell>Score (TB)</Table.HeaderCell>\r\n                      <Table.HeaderCell>Expected Score</Table.HeaderCell>\r\n                      {tournament.started && !tournament.finished ? <Table.HeaderCell>Game</Table.HeaderCell> : null}\r\n                      {tournament.finished ? <Table.HeaderCell>Score difference</Table.HeaderCell> : null}\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  <Table.Body>\r\n                    {players.map(player => {\r\n                      const stats = tournament.userStats[player.id];\r\n                      return (\r\n                        <Table.Row key={player.id}>\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.rank <= 3 ? (\r\n                              <Icon\r\n                                name={{1: 'trophy', 2: 'certificate', 3: 'certificate'}[stats.rank]}\r\n                                color={{1: 'yellow', 2: 'grey', 3: 'brown'}[stats.rank]}\r\n                              />\r\n                            ) : null}</Table.Cell>\r\n                          ) : null}\r\n                          <Table.Cell>{stats.rank}</Table.Cell>\r\n                          <Table.Cell>\r\n                            <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                            {player.name}\r\n                          </Table.Cell>\r\n                          <Table.Cell>{stats.points === stats.ratedPoints ? stats.points : `${stats.ratedPoints} (${stats.points})`}</Table.Cell>\r\n                          <Table.Cell>{stats.initialScore.expectedPoints.toFixed(1)}</Table.Cell>\r\n                          {tournament.started && !tournament.finished ? (\r\n                            <Table.Cell>{stats.waitingForNextRound ? 'Waiting for next round' : (\r\n                              stats.currentGameId ? (\r\n                                <GameCard\r\n                                  user={null}\r\n                                  usersById={usersById}\r\n                                  tournamentsById={tournamentsById}\r\n                                  game={gamesById[stats.currentGameId]}\r\n                                  selectLiveGame={selectLiveGame}\r\n                                  terse\r\n                                  live\r\n                                  applicableSettings={client.applicableSettings}\r\n                                />\r\n                              ) : 'Finished'\r\n                            )}</Table.Cell>\r\n                          ) : null}\r\n                          {tournament.finished ? (\r\n                            <Table.Cell>{stats.scoreDifference > 0 ? `+${stats.scoreDifference}` : stats.scoreDifference}</Table.Cell>\r\n                          ) : null}\r\n                        </Table.Row>\r\n                      );\r\n                    })}\r\n                  </Table.Body>\r\n                </Table>\r\n              )},\r\n              {menuItem: 'Games', render: () => (\r\n                <Table celled collapsing unstackable>\r\n                  <Table.Header>\r\n                    <Table.Row>\r\n                      <Table.HeaderCell colSpan={2}>White</Table.HeaderCell>\r\n                      <Table.HeaderCell colSpan={2}>Black</Table.HeaderCell>\r\n                      <Table.HeaderCell>Game</Table.HeaderCell>\r\n                    </Table.Row>\r\n                  </Table.Header>\r\n                  {tournament.schedule.map((round, roundIndex) => (\r\n                    <Fragment key={roundIndex}>\r\n                      <Table.Header>\r\n                        <Table.Row>\r\n                          <Table.HeaderCell colSpan={5}>{round.type === 'playoff' ? 'Playoffs - ' : null}Round {round.round}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                      </Table.Header>\r\n                      <Table.Body>\r\n                        {round.pairings.map(({userIds: [playerAId, playerBId], gameId}, gameIndex) => {\r\n                          const game = gamesById[gameId];\r\n                          const playerAWon = game && game.finished && game.winnerUserId === playerAId;\r\n                          const playerBWon = game && game.finished && game.winnerUserId === playerBId;\r\n                          return (\r\n                            <Table.Row key={gameIndex}>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerAId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerAId} />\r\n                                    {usersById[playerAId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-a', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerAId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {playerBId ? (\r\n                                  <Fragment>\r\n                                    <HashedIcon floated={'left'} size={'mini'} hash={playerBId} />\r\n                                    {usersById[playerBId].name}\r\n                                  </Fragment>\r\n                                ) : 'Sitting out this round'}\r\n                              </Table.Cell>\r\n                              <Table.Cell className={classNames('tournament-game', 'player-b', {'player-a-won': playerAWon, 'player-b-won': playerBWon})}>\r\n                                {game && game.finished ? (game.winnerUserId === playerBId ? '1' : '0') : '-'}\r\n                              </Table.Cell>\r\n                              <Table.Cell>\r\n                                {playerAId && playerBId ? (\r\n                                  game ? (\r\n                                    <GameCard\r\n                                      user={null}\r\n                                      usersById={usersById}\r\n                                      tournamentsById={tournamentsById}\r\n                                      game={game}\r\n                                      selectLiveGame={selectLiveGame}\r\n                                      terse\r\n                                      live\r\n                                      applicableSettings={client.applicableSettings}\r\n                                    />\r\n                                  ) : 'Not started yet'\r\n                                ) : null}\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })}\r\n                      </Table.Body>\r\n                    </Fragment>\r\n                  ))}\r\n                </Table>\r\n              )},\r\n            ]} />\r\n          ) : (\r\n            <Table celled collapsing unstackable>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>User</Table.HeaderCell>\r\n                  <Table.HeaderCell>Rating</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {players.map(player => (\r\n                  <Table.Row key={player.id}>\r\n                    <Table.Cell>\r\n                      <HashedIcon floated={'left'} size={'mini'} hash={player.id} />\r\n                      {player.name}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{player.score}</Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Segment>\r\n        {didUserCreated && !tournament.started ? (\r\n          <Segment>\r\n            <Grid columns={'equal'}>\r\n              <Grid.Column textAlign={'left'}>\r\n              </Grid.Column>\r\n              <Grid.Column>\r\n                <Modal\r\n                  size={'mini'}\r\n                  trigger={\r\n                    <Button\r\n                      disabled={!didUserCreated}\r\n                      negative\r\n                      icon\r\n                      style={{width: '100%'}}\r\n                    >\r\n                      <Icon name={'stop'}/>\r\n                      {'Abort tournament'}\r\n                    </Button>\r\n                  }\r\n                  header={'Abort tournament'}\r\n                  content={'Are you sure you want to abort the tournament?'}\r\n                  actions={[\r\n                    {key: 'yes', content: 'Abort', onClick: this.abortTournament, negative: true},\r\n                    {key: 'no', content: 'No, keep tournament', secondary: true},\r\n                  ]}\r\n                />\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Segment>\r\n        ) : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChosenOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  tournament: PropTypes.object,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nChosenOnlineTournament = withRouter(withClient(ChosenOnlineTournament));\r\n\r\nclass OnlineTournament extends Component {\r\n  render() {\r\n    const {\r\n      selectLiveGame, selectLiveTournament, toggleParticipation, startTournament, abortTournament, tournament, user,\r\n      usersInfo: {byId: usersById}, tournamentsInfo,\r\n    } = this.props;\r\n    if (!Object.values(usersById).length) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Segment>\r\n            <CreateTournament />\r\n            <br/><br/>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'my-live', label: \"My Future & Running tournaments\", items: tournamentsInfo.myFutureAndLive, color: 'green'},\r\n              {key: 'other-live', label: \"Other Future and Running tournaments\", items: tournamentsInfo.otherFutureAndLive, color: 'green'},\r\n              {key: 'my-past', label: \"My Past tournaments\", items: tournamentsInfo.myFinished},\r\n              {key: 'other-past', label: \"Other Past tournaments\", items: tournamentsInfo.otherFinished},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <TournamentList\r\n                  user={user}\r\n                  usersById={usersById}\r\n                  tournaments={items}\r\n                  selectLiveTournament={selectLiveTournament}\r\n                />\r\n              )}\r\n            ))} />\r\n          </Segment>\r\n        </Route>\r\n        <Route path={`${this.props.match.path}/:id`}>\r\n          <ChosenOnlineTournament\r\n            tournament={tournament}\r\n            selectLiveGame={selectLiveGame}\r\n            selectLiveTournament={selectLiveTournament}\r\n            toggleParticipation={toggleParticipation}\r\n            startTournament={startTournament}\r\n            abortTournament={abortTournament}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nOnlineTournament.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  tournament: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  usersInfo: PropTypes.object.isRequired,\r\n  gamesInfo: PropTypes.object.isRequired,\r\n  tournamentsInfo: PropTypes.object.isRequired,\r\n  selectLiveGame: PropTypes.func.isRequired,\r\n  selectLiveTournament: PropTypes.func.isRequired,\r\n  toggleParticipation: PropTypes.func.isRequired,\r\n  startTournament: PropTypes.func.isRequired,\r\n  abortTournament: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(OnlineTournament));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Grid, Label, Menu, Message} from \"semantic-ui-react\";\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass LearnBoard extends Component {\r\n  state = {\r\n    rowsAndColumns: this.props.rowsAndColumns,\r\n    arrows: null,\r\n    selectedMoveCell: null,\r\n    movedFromCell: null,\r\n    selectedBuildCell: null,\r\n    won: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.rowsAndColumns !== this.props.rowsAndColumns) {\r\n      this.reset();\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    const {canMove, canBuild} = this.props;\r\n    if (!canMove && !canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        return this.isCellAvailableForMoving(cell, selectedMoveCell);\r\n      } else if (selectedBuildCell) {\r\n        return this.isCellAvailableForBuilding(cell, selectedBuildCell);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  isCellAvailableForMoving(cell, selectedMoveCell) {\r\n    if (!selectedMoveCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (selectedMoveCell.level === 3) {\r\n      return false;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedMoveCell.x), Math.abs(cell.y - selectedMoveCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if ((cell.level - selectedMoveCell.level) > 1) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isCellAvailableForBuilding(cell, selectedBuildCell) {\r\n    if (!selectedBuildCell) {\r\n      return cell.player === Game.PLAYER_A;\r\n    }\r\n    if (Math.max(Math.abs(cell.x - selectedBuildCell.x), Math.abs(cell.y - selectedBuildCell.y)) !== 1) {\r\n      return false;\r\n    }\r\n    if (cell.level > 3) {\r\n      return false;\r\n    }\r\n    if (cell.player) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  makeMove = cell => {\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      this.makeMoveMoving(cell, selectedMoveCell);\r\n    } else if (canBuild && !canMove) {\r\n      this.makeMoveBuilding(cell, selectedBuildCell);\r\n    } else if (canMove && canBuild) {\r\n      if (!selectedMoveCell && !selectedBuildCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n      } else if (selectedMoveCell) {\r\n        this.makeMoveMoving(cell, selectedMoveCell);\r\n        if (cell.level !== 3) {\r\n          this.setState({movedFromCell: selectedMoveCell});\r\n          this.makeMoveBuilding(cell, selectedBuildCell);\r\n        }\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveBuilding(cell, selectedBuildCell);\r\n        this.setState({movedFromCell: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  makeMoveMoving(cell, selectedMoveCell) {\r\n    if (selectedMoveCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedMoveCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n          {x: selectedMoveCell.x, y: selectedMoveCell.y, player: null, worker: null},\r\n          {x: cell.x, y: cell.y, player: selectedMoveCell.player, worker: selectedMoveCell.worker},\r\n        ]),\r\n        arrows: [\r\n          {from: selectedMoveCell, to: cell, type: 'move', colour: 'white'},\r\n        ],\r\n        won: cell.level === 3,\r\n      }));\r\n    } else {\r\n      this.setState({selectedMoveCell: cell});\r\n    }\r\n  }\r\n\r\n  makeMoveUndoMoving(movedFromCell, selectedBuildCell) {\r\n    this.setState(({rowsAndColumns}) => ({\r\n      selectedMoveCell: movedFromCell,\r\n      selectedBuildCell: null,\r\n      rowsAndColumns: Game.updateCells(rowsAndColumns, ...[\r\n        {x: selectedBuildCell.x, y: selectedBuildCell.y, player: null, worker: null},\r\n        {x: movedFromCell.x, y: movedFromCell.y, player: movedFromCell.player, worker: movedFromCell.worker},\r\n      ]),\r\n      arrows: null,\r\n      won: false,\r\n    }));\r\n  }\r\n\r\n  makeMoveBuilding(cell, selectedBuildCell) {\r\n    if (selectedBuildCell) {\r\n      this.setState(({rowsAndColumns}) => ({\r\n        selectedBuildCell: null,\r\n        rowsAndColumns: Game.updateCells(rowsAndColumns, {\r\n          x: cell.x, y: cell.y, level: rowsAndColumns[cell.y].cells[cell.x].level + 1,\r\n        }),\r\n        arrows: [\r\n          {from: selectedBuildCell, to: cell, type: 'build', colour: 'white'},\r\n        ],\r\n      }));\r\n    } else {\r\n      this.setState({selectedBuildCell: cell});\r\n    }\r\n  }\r\n\r\n  isCellUndoable = cell => {\r\n    if (!this.props.canMove && !this.props.canBuild) {\r\n      return false;\r\n    }\r\n    const {selectedMoveCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return false;\r\n    }\r\n    const {canMove, canBuild} = this.props;\r\n    if (canMove && !canBuild) {\r\n      return selectedMoveCell !== null && selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n    } else if (canBuild && !canMove) {\r\n      return selectedBuildCell !== null && selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        return selectedMoveCell.x === cell.x && selectedMoveCell.y === cell.y;\r\n      } else if (selectedBuildCell) {\r\n        return selectedBuildCell.x === cell.x && selectedBuildCell.y === cell.y;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n\r\n  undo = () => {\r\n    const {canMove, canBuild} = this.props;\r\n    const {selectedMoveCell, movedFromCell, selectedBuildCell, won} = this.state;\r\n    if (won) {\r\n      return;\r\n    }\r\n    if (canMove && !canBuild) {\r\n      this.setState({selectedMoveCell: null});\r\n    } else if (canBuild && !canMove) {\r\n      this.setState({selectedBuildCell: null});\r\n    } else if (canMove && canBuild) {\r\n      if (selectedMoveCell) {\r\n        this.setState({selectedMoveCell: null});\r\n      } else if (selectedBuildCell) {\r\n        this.makeMoveUndoMoving(movedFromCell, selectedBuildCell);\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    const {rowsAndColumns} = this.props;\r\n    this.setState({\r\n      rowsAndColumns, arrows: null, won: false, selectedMoveCell: null, movedFromCell: null, selectedBuildCell: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {client, board, canMove, canBuild, rowsAndColumns: originalRowsAndColumns} = this.props;\r\n    const {rowsAndColumns, arrows, won, selectedMoveCell, selectedBuildCell} = this.state;\r\n    const rawSettings = client.applicableSettings;\r\n    const settings = {...rawSettings, theme: {...rawSettings.theme, numbers: 'obvious'}};\r\n\r\n    return (\r\n      <Fragment>\r\n        {canMove || canBuild ? (\r\n          <Fragment>\r\n            <br />\r\n            <Label color={won ? 'green' : 'blue'} icon={won ? 'trophy' : undefined} content={(\r\n              won ? \"You won! Press reset to start again\" : (\r\n                !selectedMoveCell && !selectedBuildCell ? \"Select one of your pieces\" : (\r\n                  selectedMoveCell ? \"Select a square to move to, or click on your piece to do something else\" : (\r\n                    \"Select a square to build on, or click on your piece to do something else\"\r\n                  )\r\n                )\r\n              )\r\n            )} />\r\n            <br />\r\n          </Fragment>\r\n        ) : null}\r\n        <BoardBackground\r\n          medium\r\n          allowControl={[]}\r\n          clickable={canMove || canBuild}\r\n          undoable={canMove || canBuild}\r\n          isCellAvailable={this.isCellAvailable}\r\n          isCellUndoable={this.isCellUndoable}\r\n          makeMove={this.makeMove}\r\n          undo={this.undo}\r\n          settings={settings}\r\n          animated showArrows\r\n          rowsAndColumns={rowsAndColumns}\r\n          {...(arrows ? {...board, arrows} : board)}\r\n        />\r\n        {canMove || canBuild ? (\r\n          <div>\r\n            <Button onClick={this.reset} disabled={rowsAndColumns === originalRowsAndColumns} primary>Reset</Button>\r\n          </div>\r\n        ) : null}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLearnBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  board: PropTypes.object,\r\n  rowsAndColumns: PropTypes.array.isRequired,\r\n  canMove: PropTypes.bool.isRequired,\r\n  canBuild: PropTypes.bool.isRequired,\r\n};\r\n\r\nLearnBoard.defaultProps = {\r\n  canMove: false,\r\n  canBuild: false,\r\n};\r\n\r\nLearnBoard = withClient(LearnBoard);\r\n\r\nclass LearnToPlay extends Component {\r\n  static steps = [\r\n    {title: 'Introduction', body: <Fragment>\r\n      <div>\r\n        In this website, you can play <strong>Santorini©</strong> games with people around the world.\r\n      </div>\r\n      <div>\r\n        The board consists of a <strong>5x5 square grid</strong>, and each player, <strong>black</strong>{\" and \"}\r\n        <strong>white</strong>, has two <strong>pieces</strong> each:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        The <strong>objective</strong> of the game is to move one of your pieces to the <strong>3rd level</strong>,\r\n        and of course, to <strong>prevent your opponent</strong> from doing so before you:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 0}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 0}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Moving', body: <Fragment>\r\n      <div>\r\n        You can <strong>move 1 square</strong> in any direction, <strong>horizontally</strong>,\r\n        <strong>vertically</strong>, or <strong>diagonally</strong>.\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        But you <strong>can't move in a square that has another piece</strong>, your's or the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Beneath, you can <strong>try moving your pieces</strong>. Notice that you need to <strong>click on a piece to\r\n        select it</strong>, and then <strong>click on the target square</strong> to move it.\r\n        To <strong>deselect</strong> a selected piece <strong>click on it again</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        canMove\r\n      />\r\n    </Fragment>},\r\n    {title: 'Levels', body:<Fragment>\r\n      <div>\r\n        In the game there are <strong>five levels</strong>: <Label color={'green'}>ground</Label>,\r\n        <Label color={'grey'}>level 1</Label>, <Label color={'yellow'}>level 2</Label>,\r\n        <Label color={'red'}>level 3</Label>, and the <Label color={'blue'}>blocked level (level 4)</Label>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n            {x: 3, y: 0, level: 3, player: null, worker: null},\r\n            {x: 4, y: 0, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <div>\r\n        You can go <strong>up one level</strong>, go <strong>down any number of levels</strong>, and <strong>move to\r\n        the same level</strong>. You can <strong>never move to a blocked level</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'move', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below:\r\n      </div>\r\n      <LearnBoard\r\n        canMove\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 2, player: null, worker: null},\r\n            {x: 2, y: 0, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 1, player: null, worker: null},\r\n            {x: 1, y: 2, level: 1, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Building', body:<Fragment>\r\n      <div>\r\n        After you've moved one of your pieces, you <strong>must build on 1 nearby square</strong>, horizontally,\r\n        vertically, or diagonally:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        You can <strong>build at any square</strong> next to the piece you moved: it <strong>doesn't matter which\r\n        level your are</strong>, and which level you want to build. But you can never build more than the blocked\r\n        level:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 0}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 2}, type: 'build', colour: 'white'},\r\n            {from: {x: 1, y: 1}, to: {x: 1, y: 2}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Try it yourself below, by selecting your player and then building:\r\n      </div>\r\n      <LearnBoard\r\n        canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 1, player: null, worker: null},\r\n            {x: 2, y: 0, level: 2, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 3, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 2, player: null, worker: null},\r\n            {x: 1, y: 2, level: 3, player: null, worker: null},\r\n            {x: 2, y: 2, level: 4, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Winning', body:<Fragment>\r\n      <div>\r\n        If there was no opponent on the board (you wish!), you would do something like the following\r\n        moves <strong>to win</strong>:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 2, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 2, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 1, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <br/>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 1, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 2, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 1, y: 1}, to: {x: 0, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 1, level: 3, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'build', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      {/*<br/>*/}\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 2, player: null, worker: null},\r\n            {x: 1, y: 1, level: 3, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n        board={{\r\n          arrows: [\r\n            {from: {x: 0, y: 1}, to: {x: 1, y: 1}, type: 'move', colour: 'white'},\r\n          ],\r\n        }}\r\n      />\r\n      <div>\r\n        Why don't you try this below?\r\n      </div>\r\n      <LearnBoard\r\n        canMove canBuild\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Good starting positions', body:<Fragment>\r\n      <div>\r\n        To start the game, the first player puts their pieces anywhere on the board, and then second player does the\r\n        same. Here are some good examples:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: null, worker: null},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: null, worker: null},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'Disadvantaged starting positions', body:<Fragment>\r\n      <div>\r\n        In these starting positions the both players have their pieces near the center, and they can move easily to\r\n        any square on the board. In contrast, these starting positions would probably put the black players at a\r\n        disadvantage, since his pieces are too far away from the opponent's:\r\n      </div>\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: null, worker: null},\r\n          ]},\r\n        ]}\r\n      />\r\n      <LearnBoard\r\n        rowsAndColumns={[\r\n          {y: 0, cells: [\r\n            {x: 0, y: 0, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n            {x: 1, y: 0, level: 0, player: null, worker: null},\r\n            {x: 2, y: 0, level: 0, player: null, worker: null},\r\n            {x: 3, y: 0, level: 0, player: null, worker: null},\r\n            {x: 4, y: 0, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 1, cells: [\r\n            {x: 0, y: 1, level: 0, player: null, worker: null},\r\n            {x: 1, y: 1, level: 0, player: null, worker: null},\r\n            {x: 2, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n            {x: 3, y: 1, level: 0, player: null, worker: null},\r\n            {x: 4, y: 1, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 2, cells: [\r\n            {x: 0, y: 2, level: 0, player: null, worker: null},\r\n            {x: 1, y: 2, level: 0, player: null, worker: null},\r\n            {x: 2, y: 2, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_SECOND},\r\n            {x: 3, y: 2, level: 0, player: null, worker: null},\r\n            {x: 4, y: 2, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 3, cells: [\r\n            {x: 0, y: 3, level: 0, player: null, worker: null},\r\n            {x: 1, y: 3, level: 0, player: null, worker: null},\r\n            {x: 2, y: 3, level: 0, player: null, worker: null},\r\n            {x: 3, y: 3, level: 0, player: null, worker: null},\r\n            {x: 4, y: 3, level: 0, player: null, worker: null},\r\n          ]},\r\n          {y: 4, cells: [\r\n            {x: 0, y: 4, level: 0, player: null, worker: null},\r\n            {x: 1, y: 4, level: 0, player: null, worker: null},\r\n            {x: 2, y: 4, level: 0, player: null, worker: null},\r\n            {x: 3, y: 4, level: 0, player: null, worker: null},\r\n            {x: 4, y: 4, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_SECOND},\r\n          ]},\r\n        ]}\r\n      />\r\n    </Fragment>},\r\n    {title: 'You\\'re ready to play!', body: <Fragment>\r\n      <div>\r\n        You're now ready to play! You can now <NavLink to={'./hotseat'}>play with a friend on the same\r\n        screen</NavLink> or play online <NavLink to={'./lobby'}>at the lobby</NavLink>.\r\n      </div>\r\n    </Fragment>}\r\n  ];\r\n\r\n  state = {\r\n    stepIndex: 0,\r\n  };\r\n\r\n  goToFirstStep = () => {\r\n    this.setState({stepIndex: 0});\r\n  };\r\n\r\n  goToPreviousStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex - 1}));\r\n  };\r\n\r\n  goToNextStep = () => {\r\n    this.setState(state => ({stepIndex: state.stepIndex + 1}));\r\n  };\r\n\r\n  goToLastStep = () => {\r\n    this.setState({stepIndex: this.constructor.steps.length - 1});\r\n  };\r\n\r\n  render() {\r\n    const {stepIndex} = this.state;\r\n    const steps = this.constructor.steps;\r\n    const step = steps[stepIndex];\r\n\r\n    return (\r\n      <Message>\r\n        <Message.Content>\r\n          <Grid columns={'equal'} verticalAlign={'middle'} textAlign={'center'}>\r\n            <Grid.Row>\r\n              <Menu size={'massive'} items={[\r\n                {key: 'first', icon: 'fast backward', onClick: this.goToFirstStep, disabled: stepIndex === 0},\r\n                {key: 'previous', icon: 'backward', onClick: this.goToPreviousStep, disabled: stepIndex === 0},\r\n                {key: 'next', icon: 'forward', onClick: this.goToNextStep, disabled: stepIndex === steps.length - 1},\r\n                {key: 'last', icon: 'fast forward', onClick: this.goToLastStep, disabled: stepIndex === steps.length - 1},\r\n              ]}/>\r\n            </Grid.Row>\r\n            <Grid.Row><Message.Header>{stepIndex + 1}.  {step.title}</Message.Header></Grid.Row>\r\n            <Grid.Row><Message content={<Fragment key={stepIndex}>{step.body}</Fragment>} /></Grid.Row>\r\n            <Grid.Row>\r\n              {stepIndex < steps.length - 1 ? (\r\n                <Button primary onClick={this.goToNextStep} icon={'forward'} content={'Go to next step'} />\r\n              ) : (\r\n                <Fragment>\r\n                  <Button positive as={NavLink} to={'/lobby'} icon={'play'} content={'Play with someone online'} />\r\n                  <Button positive as={NavLink} to={'/hotseat'} icon={'retweet'} content={'Play with a friend on the same screen'} />\r\n                </Fragment>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LearnToPlay;\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BoardBackground from \"./Board/BoardBackground\";\r\nimport Game from \"../game/game\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport {Button, Grid, Menu, Message, Modal, Segment} from \"semantic-ui-react\";\r\nimport keydown from \"react-keydown\";\r\nimport Play from \"./Play\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass EditPosition extends Component {\r\n  static initialPositionNotation = Game.getPositionNotation(Game.getInitialRowsAndColumns());\r\n\r\n  state = {\r\n    paletteSelectedItem: {x: 0, y: 1},\r\n    paletteUpdate: {player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n    position: Game.getInitialRowsAndColumns(),\r\n    positionError: null,\r\n    urlError: false,\r\n    ...this.getGameAndErrorFromUrlPosition(),\r\n    selectedGame: null,\r\n    previousPosition: null,\r\n  };\r\n\r\n  getGameAndErrorFromUrlPosition() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const position = params.get('position') || this.props.initialPositionNotation;\r\n    if (position) {\r\n      let game, urlError;\r\n      try {\r\n        game = Game.fromCompressedPositionNotation(position);\r\n        if (!game) {\r\n          urlError = 'The position was not valid';\r\n        }\r\n      } catch (e) {\r\n        game = null;\r\n        urlError = `The board position was not valid: ${e.message}`;\r\n      }\r\n      if (!game) {\r\n        return {game: Game.create(), urlError, position: Game.getInitialRowsAndColumns()};\r\n      }\r\n      return {game, urlError: false, position: game.rowsAndColumns};\r\n    } else {\r\n      return {game: Game.create(), urlError: false, position: Game.getInitialRowsAndColumns()};\r\n    }\r\n  }\r\n\r\n  dismissUrlPositionError = () =>{\r\n    this.setState({error: null});\r\n  };\r\n\r\n  onPaletteSelectedItemChange = (paletteSelectedItem, paletteUpdate) => {\r\n    this.setState({paletteSelectedItem, paletteUpdate});\r\n  };\r\n\r\n  onPositionChange = position => {\r\n    let game, positionError;\r\n    try {\r\n      game = Game.fromPosition(position);\r\n      positionError = null;\r\n    } catch (e) {\r\n      game = Game.create();\r\n      positionError = e.message;\r\n    }\r\n    this.setState(state => ({\r\n      position,\r\n      game,\r\n      positionError,\r\n      previousPosition: state.position,\r\n    }));\r\n  };\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  onSelectedGameChange = selectedGame => {\r\n    this.setState({selectedGame});\r\n  };\r\n\r\n  copyGame = () => {\r\n    const {game, selectedGame} = this.state;\r\n    const visibleGame = selectedGame || game;\r\n    this.onPositionChange(visibleGame.rowsAndColumns);\r\n  };\r\n\r\n  resetBoard = () => {\r\n    this.onPositionChange(Game.getInitialRowsAndColumns());\r\n  };\r\n\r\n  undo = () => {\r\n    this.onPositionChange(this.state.previousPosition);\r\n  };\r\n\r\n  resetGame = () => {\r\n    this.onPositionChange(this.state.position);\r\n  };\r\n\r\n  copyPosition = () => {\r\n    utils.copyToClipboard(Game.getPositionNotation(this.state.position));\r\n    alert('Position copied to clipboard');\r\n  };\r\n\r\n  copyPlayPosition = () => {\r\n    utils.copyToClipboard((this.state.selectedGame || this.state.game).positionNotation);\r\n    alert('Play position copied to clipboard');\r\n  };\r\n\r\n  usePosition = () => {\r\n    this.props.usePosition(Game.fromPosition(this.state.position).positionNotation);\r\n  };\r\n\r\n  render() {\r\n    const {user, client, keydown, usePosition} = this.props;\r\n    const {paletteSelectedItem, position, paletteUpdate, positionError, urlError, game, selectedGame, previousPosition} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    const positionNotation = Game.getPositionNotation(position);\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          open={!!urlError}\r\n          size={'mini'}\r\n          onClose={this.dismissUrlPositionError}\r\n          header={'Could not load shared position'}\r\n          content={`${urlError}. Please check that you copied the full URL`}\r\n          actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n        />\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu inverted size={'massive'} items={[\r\n              {key: 'share', icon: 'share', content: 'Share position', color: 'green', active: true, as: 'a',\r\n                href: `?position=${positionNotation}`,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to position'},\r\n              {key: 'copy', icon: 'clipboard', content: 'Copy position', color: 'green', active: true,\r\n                title: 'Click to copy position to position', onClick: this.copyPosition},\r\n              {key: 'copy-play', icon: 'clipboard', content: 'Copy play position', color: 'green', active: true,\r\n                title: 'Click to copy play position to position', onClick: this.copyPlayPosition},\r\n            ]} />\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          {positionError ? <Message error content={positionError} /> : null}\r\n          <Play\r\n            user={user}\r\n            settings={settings}\r\n            game={game}\r\n            makeMove={this.makeMove}\r\n            onSelectedGameChange={this.onSelectedGameChange}\r\n          >\r\n            <div>\r\n              <Button\r\n                content={'Reset game'}\r\n                primary\r\n                onClick={this.resetGame}\r\n              />\r\n            </div>\r\n            <EditPositionPalette\r\n              selectedItem={paletteSelectedItem}\r\n              onSelectedItemChange={this.onPaletteSelectedItemChange}\r\n              keydown={keydown}\r\n            />\r\n            <div>\r\n              <Button\r\n                content={'Copy from game'}\r\n                primary\r\n                disabled={(selectedGame || game).positionNotation === positionNotation}\r\n                onClick={this.copyGame}\r\n              />\r\n              <Button\r\n                content={'Reset'}\r\n                negative\r\n                disabled={positionNotation === this.constructor.initialPositionNotation}\r\n                onClick={this.resetBoard}\r\n              />\r\n              <Button\r\n                content={'Undo'}\r\n                secondary\r\n                disabled={!previousPosition}\r\n                onClick={this.undo}\r\n              />\r\n            </div>\r\n            <EditPositionBoard\r\n              position={position}\r\n              update={paletteUpdate}\r\n              onPositionChange={this.onPositionChange}\r\n            />\r\n            {usePosition ? (\r\n              <div>\r\n                <Button\r\n                  content={'Use position'}\r\n                  primary\r\n                  onClick={this.usePosition}\r\n                  disabled={!!positionError}\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Play>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEditPosition.propTypes = {\r\n  keydown: PropTypes.object.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  usePosition: PropTypes.func,\r\n  initialPositionNotation: PropTypes.string,\r\n};\r\n\r\nclass EditPositionPalette extends Component {\r\n  static rowsAndColumns = [\r\n    {y: 0, cells: [\r\n      {x: 0, y: 0, level: 0, player: null, worker: null},\r\n      {x: 1, y: 0, level: 1, player: null, worker: null},\r\n      {x: 2, y: 0, level: 2, player: null, worker: null},\r\n      {x: 3, y: 0, level: 3, player: null, worker: null},\r\n      {x: 4, y: 0, level: 4, player: null, worker: null},\r\n    ]},\r\n    {y: 1, cells: [\r\n      {x: 0, y: 1, level: 0, player: Game.PLAYER_A, worker: Game.WORKER_FIRST},\r\n      {x: 1, y: 1, level: 0, player: Game.PLAYER_B, worker: Game.WORKER_FIRST},\r\n      {x: 2, y: 1, level: 0, player: null, worker: null},\r\n      {x: 3, y: 1, level: 0, player: null, worker: null},\r\n      {x: 4, y: 1, level: 0, player: null, worker: null},\r\n    ]},\r\n  ];\r\n  static keys = [\r\n    'q', '0', '1', '2', '3', '4', 'a', 'b',\r\n  ];\r\n  static moveFromKey = {\r\n    'q': {x: 0, y: 0},\r\n    0: {x: 0, y: 0},\r\n    1: {x: 1, y: 0},\r\n    2: {x: 2, y: 0},\r\n    3: {x: 3, y: 0},\r\n    4: {x: 4, y: 0},\r\n    a: {x: 0, y: 1},\r\n    b: {x: 1, y: 1},\r\n  };\r\n\r\n  state = {\r\n    selectedItem: {x: 0, y: 1},\r\n  };\r\n\r\n  componentWillReceiveProps({keydown}) {\r\n    if (keydown.event) {\r\n      const {key} = keydown.event;\r\n      const coordinates = this.constructor.moveFromKey[key];\r\n      if (coordinates) {\r\n        const {x, y} = coordinates;\r\n        const move = this.constructor.rowsAndColumns[y].cells[x];\r\n        this.makeMove(move);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.selectedItem !== undefined && this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: prevProps.selectedItem});\r\n    }\r\n  }\r\n\r\n  get selectedItem() {\r\n    if (this.props.selectedItem === undefined) {\r\n      return this.state.selectedItem;\r\n    } else {\r\n      return this.props.selectedItem;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = cell => {\r\n    return !this.isCellUndoable(cell) && (cell.y === 0 || cell.x <= 1);\r\n  };\r\n\r\n  isCellUndoable = cell => {\r\n    const {selectedItem} = this;\r\n    return cell.x === selectedItem.x && cell.y === selectedItem.y;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const selectedItem = {x: cell.x, y: cell.y};\r\n    if (this.props.selectedItem === undefined) {\r\n      this.setState({selectedItem: selectedItem});\r\n    }\r\n    if (this.props.onSelectedItemChange) {\r\n      const update = cell.player ? {player: cell.player} : {level: cell.level};\r\n      this.props.onSelectedItemChange(selectedItem, update);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={this.constructor.rowsAndColumns}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionPalette.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.object,\r\n  onSelectedItemChange: PropTypes.func,\r\n  keydown: PropTypes.object.isRequired,\r\n};\r\n\r\nEditPositionPalette = withClient(EditPositionPalette);\r\n\r\nclass EditPositionBoard extends Component {\r\n  state = {\r\n    position: Game.getInitialRowsAndColumns(),\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.position !== undefined && this.props.position === undefined) {\r\n      this.setState({position: prevProps.position});\r\n    }\r\n  }\r\n\r\n  get position() {\r\n    if (this.props.position === undefined) {\r\n      return this.state.position;\r\n    } else {\r\n      return this.props.position;\r\n    }\r\n  }\r\n\r\n  isCellAvailable = () => {\r\n    return true;\r\n  };\r\n\r\n  isCellUndoable = () => {\r\n    return false;\r\n  };\r\n\r\n  makeMove = cell => {\r\n    const {update} = this.props;\r\n    if ('level' in update) {\r\n      if (cell.level !== update.level) {\r\n        this.updatePosition({x: cell.x, y: cell.y, level: update.level});\r\n      }\r\n    } else if ('player' in update) {\r\n      if (cell.player !== update.player) {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: update.player, worker: Game.WORKER_FIRST});\r\n      } else {\r\n        this.updatePosition({x: cell.x, y: cell.y, player: null, worker: null});\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePosition = newCell => {\r\n    const newPosition = Game.updateCells(this.position, newCell);\r\n\r\n    if (this.props.position === undefined) {\r\n      this.setState({position: newPosition});\r\n    }\r\n    if (this.props.onPositionChange) {\r\n      this.props.onPositionChange(newPosition);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {position} = this;\r\n    const {client} = this.props;\r\n    const settings = client.applicableSettings;\r\n\r\n    return (\r\n      <BoardBackground\r\n        medium\r\n        allowControl={[Game.PLAYER_A, Game.PLAYER_B]}\r\n        rowsAndColumns={position}\r\n        clickable undoable={false}\r\n        isCellAvailable={this.isCellAvailable}\r\n        isCellUndoable={this.isCellUndoable}\r\n        makeMove={this.makeMove}\r\n        settings={settings}\r\n        animated={false}\r\n        showArrows={false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditPositionBoard.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  position: PropTypes.array,\r\n  update: PropTypes.object.isRequired,\r\n  onPositionChange: PropTypes.func,\r\n};\r\n\r\nEditPositionBoard = withClient(EditPositionBoard);\r\n\r\nexport default keydown(EditPositionPalette.SubComponent.keys)(withClient(EditPosition));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Checkbox, Form, Grid, Header, Icon, Input, Segment} from \"semantic-ui-react\";\r\nimport Game from \"../game/game\";\r\nimport _ from \"lodash\";\r\nimport Board from \"./Board\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport Play from \"./Play\";\r\nimport EditPosition from \"./EditPosition\";\r\nimport moment from \"moment\";\r\n\r\nclass CreateChallenge extends Component {\r\n  state = {\r\n    editing: true,\r\n    challenge: null,\r\n    currentStep: null,\r\n    tree: null,\r\n    game: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.initialChallenge) {\r\n      this.onCreateChallenge(this.fillGames(this.props.initialChallenge));\r\n    }\r\n  }\r\n\r\n  fillGames(challengeStep) {\r\n    challengeStep = {...challengeStep};\r\n    if (!challengeStep.game && challengeStep.position) {\r\n      challengeStep.game = Game.fromCompressedPositionNotation(challengeStep.position);\r\n    }\r\n    if (challengeStep.startingPosition) {\r\n      challengeStep.startingPosition = this.fillGames(challengeStep.startingPosition);\r\n    } else if (challengeStep.playerResponses) {\r\n      challengeStep.playerResponses = challengeStep.playerResponses.map(this.fillGames);\r\n    } else if (challengeStep.challengeResponse) {\r\n      challengeStep.challengeResponse = this.fillGames(challengeStep.challengeResponse);\r\n    }\r\n\r\n    return challengeStep;\r\n  }\r\n\r\n  onCreateChallenge = challenge => {\r\n    this.setState({\r\n      editing: false,\r\n      challenge,\r\n      currentStep: challenge.startingPosition,\r\n      tree: this.getTree(challenge.startingPosition),\r\n      game: challenge.startingPosition.game,\r\n    });\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  makeMove = newGame => {\r\n    this.setState({game: newGame});\r\n  };\r\n\r\n  getExistingResponse(newGame) {\r\n    const {currentStep} = this.state;\r\n    if (currentStep.playerResponses) {\r\n      return currentStep.playerResponses\r\n        .find(response => response.position === newGame.positionNotation);\r\n    } else {\r\n      if (currentStep.challengeResponse && currentStep.challengeResponse.position === newGame.positionNotation) {\r\n        return currentStep.challengeResponse;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getPathIndexes() {\r\n    const {currentStep, tree} = this.state;\r\n    let treePath = tree.find(treePath => treePath.find(treePathStep => treePathStep === currentStep));\r\n    treePath = treePath.slice(0, treePath.findIndex(treePathStep => treePathStep === currentStep) + 1);\r\n    const pathIndexes = treePath.map((treePathStep, index) =>\r\n      index === 0\r\n        ? ['challenge', 'startingPosition']\r\n        : (\r\n          treePath[index - 1].playerResponses\r\n            ? ['playerResponses', treePath[index - 1].playerResponses.indexOf(treePathStep)]\r\n            : ['challengeResponse']\r\n        )\r\n    );\r\n\r\n    return pathIndexes;\r\n  }\r\n\r\n  duplicateChallenge(pathIndexes) {\r\n    const {challenge} = this.state;\r\n\r\n    const newChallenge = {\r\n      ...challenge,\r\n      startingPosition: {...challenge.startingPosition},\r\n    };\r\n    let newModifyingStep = newChallenge.startingPosition;\r\n    for (const index of _.flatten(pathIndexes.slice(1))) {\r\n      const oldStep = newModifyingStep[index];\r\n      const newStep = Array.isArray(oldStep) ? oldStep.slice() : {...oldStep};\r\n      newModifyingStep[index] = newStep;\r\n      newModifyingStep = newStep;\r\n    }\r\n\r\n    return {newChallenge, newModifyingStep};\r\n  }\r\n\r\n  addGameToStep(newModifyingStep, newGame) {\r\n    let newStep = null;\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.slice();\r\n      newModifyingStep = newModifyingStep.playerResponses;\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        challengeResponse: null,\r\n      };\r\n      newModifyingStep.push(newStep);\r\n    } else {\r\n      newStep = {\r\n        position: newGame.positionNotation,\r\n        moves: newGame.lastMovesInHistory,\r\n        game: newGame,\r\n        playerResponses: [],\r\n      };\r\n      newModifyingStep.challengeResponse = newStep;\r\n    }\r\n\r\n    return newStep;\r\n  }\r\n\r\n  removeStep(newModifyingStep, step) {\r\n    if (newModifyingStep.playerResponses) {\r\n      newModifyingStep.playerResponses = newModifyingStep.playerResponses.filter(response => response !== step);\r\n    } else {\r\n      newModifyingStep.challengeResponse = null;\r\n    }\r\n\r\n    return newModifyingStep;\r\n  }\r\n\r\n  submit = moves => {\r\n    const {currentStep} = this.state;\r\n    const newGame = currentStep.game.makeMoves(moves);\r\n\r\n    const existingResponse = this.getExistingResponse(newGame);\r\n    if (existingResponse) {\r\n      this.setState({\r\n        currentStep: existingResponse,\r\n        game: existingResponse.game,\r\n      });\r\n      return;\r\n    }\r\n\r\n    const pathIndexes = this.getPathIndexes();\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.addGameToStep(newModifyingStep, newGame);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  getTree(startingPosition = this.state.challenge.startingPosition) {\r\n    let tree = [[startingPosition]];\r\n    while (tree !== (tree = this.getNextTree(tree))) {}\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTree(tree) {\r\n    const nextTree = _.flatten(tree.map(this.getNextTreePath));\r\n    if (nextTree.length !== tree.length) {\r\n      return nextTree;\r\n    }\r\n    if (tree.find((treePath, index) => treePath !== nextTree[index])) {\r\n      return nextTree;\r\n    }\r\n\r\n    return tree;\r\n  }\r\n\r\n  getNextTreePath = treePath => {\r\n    const lastTreeStep = treePath[treePath.length - 1];\r\n    if (lastTreeStep.playerResponses) {\r\n      if (lastTreeStep.playerResponses.length) {\r\n        return lastTreeStep.playerResponses.map(nextStep => treePath.concat(nextStep));\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    } else {\r\n      if (lastTreeStep.challengeResponse) {\r\n        return [treePath.concat(lastTreeStep.challengeResponse)];\r\n      } else {\r\n        return [treePath];\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteCurrentStep = () => {\r\n    const {currentStep} = this.state;\r\n    const pathIndexes = this.getPathIndexes().slice(0, -1);\r\n    let {newChallenge, newModifyingStep} = this.duplicateChallenge(pathIndexes);\r\n    let newStep = this.removeStep(newModifyingStep, currentStep);\r\n    this.setState({\r\n      challenge: newChallenge,\r\n      currentStep: newStep,\r\n      tree: this.getTree(newChallenge.startingPosition),\r\n      game: newStep.game,\r\n    });\r\n  };\r\n\r\n  editChallenge = () => {\r\n    this.setState({editing: true});\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const cleanedChallenge = JSON.parse(JSON.stringify(this.state.challenge, (key, value) => {\r\n      if (value instanceof Game) {\r\n        return undefined;\r\n      } else {\r\n        return value;\r\n      }\r\n    }));\r\n    this.props.client.createChallenge(cleanedChallenge);\r\n  };\r\n\r\n  discardChallenge = () => {\r\n    this.setState({\r\n      editing: true,\r\n      challenge: null,\r\n      currentStep: null,\r\n      tree: null,\r\n      game: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {user, client} = this.props;\r\n    const {editing, challenge, game, tree, currentStep} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editing) {\r\n      return (\r\n        <ChallengeForm initialChallenge={challenge} onCreateChallenge={this.onCreateChallenge} />\r\n      )\r\n    }\r\n    const challengePrompt = challenge.options.type === 'mate' ? `Find mate in ${challenge.options.typeOptions.mateIn}` : 'Unknown challenge';\r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challengePrompt}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Button secondary onClick={this.editChallenge}>Edit</Button>\r\n            <Button positive onClick={this.createChallenge}>Create</Button>\r\n            <Button negative onClick={this.discardChallenge}>Discard</Button>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Segment>\r\n          <Header as={'h3'}>Tree</Header>\r\n          <table>\r\n            <tbody>\r\n            {tree.map((treePath, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {treePath.map((treePathStep, columnIndex) => (\r\n                  <td key={columnIndex}>\r\n                    {rowIndex === 0 || treePathStep !== tree[rowIndex - 1][columnIndex] ? (\r\n                      <Board\r\n                        small\r\n                        selected={game === treePathStep.game}\r\n                        onSelect={() => {\r\n                          this.setState({\r\n                            currentStep: treePathStep,\r\n                            game: treePathStep.game,\r\n                          });\r\n                        }}\r\n                        settings={settings}\r\n                        game={treePathStep.game}\r\n                      />\r\n                    ) : null}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n        </Segment>\r\n        {currentStep.game ? <Segment>\r\n          <Header as={'h3'}>Current step</Header>\r\n          <Play\r\n            user={user}\r\n            changeSettings={this.changeSettings}\r\n            game={game}\r\n            allowControl={[currentStep.game.nextPlayer]}\r\n            names={{[challenge.options.initialPlayer]: 'Player', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Challenge'}}\r\n            submit={this.submit}\r\n            onDisplayPositionChange={this.onDisplayPositionChange}\r\n            makeMove={this.makeMove}\r\n          >\r\n            <Button negative disabled={currentStep === challenge} onClick={this.deleteCurrentStep}>\r\n              <Icon name={'delete'}/>Delete response\r\n            </Button>\r\n          </Play>\r\n        </Segment> : null}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCreateChallenge.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n};\r\n\r\nclass ChallengeForm extends Component {\r\n  static valueConversion = {\r\n    'options.typeOptions.mateIn': parseInt,\r\n    'meta.difficulty': parseInt,\r\n    'meta.publishDatetime': timestamp => timestamp ? moment(timestamp) : null,\r\n  };\r\n\r\n  state = {\r\n    challenge: this.props.initialChallenge || {\r\n      options: {\r\n        initialPlayer: null,\r\n        type: 'mate',\r\n        typeOptions: {\r\n          mateIn: 1,\r\n        },\r\n      },\r\n      meta: {\r\n        source: '',\r\n        difficulty: 1,\r\n        maxDifficulty: 3,\r\n        public: true,\r\n        publishDatetime: null,\r\n      },\r\n      startingPosition: {\r\n        position: Game.create().positionNotation,\r\n        game: Game.create(),\r\n        playerResponses: [],\r\n      },\r\n    },\r\n    error: {\r\n      position: null,\r\n    },\r\n    editingPosition: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.initialChallenge) {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const position = params.get('position');\r\n      if (position) {\r\n        this.setValue(null, {name: 'startingPosition.position', value: position});\r\n        this.setState({editingPosition: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  setValue = (e, {name, value, checked}) => {\r\n    if (value === undefined && typeof checked === typeof true) {\r\n      value = checked;\r\n    }\r\n    let convertedValue = value;\r\n    if (name in this.constructor.valueConversion) {\r\n      convertedValue = this.constructor.valueConversion[name](convertedValue);\r\n    }\r\n    this.setState(state => {\r\n      const challenge = {\r\n        ...state.challenge,\r\n      };\r\n      let newChallengeToChange = challenge;\r\n      const parts = name.split('.');\r\n      for (const part of parts.slice(0, parts.length - 1)) {\r\n        newChallengeToChange = newChallengeToChange[part] || {};\r\n      }\r\n      newChallengeToChange[parts[parts.length - 1]] = convertedValue;\r\n      return {challenge};\r\n    });\r\n    this.onValueSet(name, convertedValue);\r\n  };\r\n\r\n  onValueSet = name => {\r\n    if (name === 'startingPosition.position') {\r\n      this.setState(state => {\r\n        const position = state.challenge.startingPosition.position;\r\n        const isPositionValid = position\r\n          ? Game.isValidCompressedPositionNotation(position) : false;\r\n        const game = isPositionValid ? Game.fromCompressedPositionNotation(position) : null;\r\n        return {\r\n          error: {\r\n            ...state.error,\r\n            position: !position || isPositionValid ? null : 'This is not a valid position',\r\n          },\r\n          challenge: {\r\n            ...state.challenge,\r\n            options: {\r\n              ...state.challenge.options,\r\n              initialPlayer: game ? game.nextPlayer : null,\r\n            },\r\n            startingPosition: {\r\n              ...state.challenge.startingPosition,\r\n              game,\r\n            }\r\n          },\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  createChallenge = () => {\r\n    const {challenge, error} = this.state;\r\n    if (error.position) {\r\n      return;\r\n    }\r\n    this.props.onCreateChallenge(challenge);\r\n  };\r\n\r\n  usePosition = positionNotation => {\r\n    this.setState({\r\n      editingPosition: false,\r\n    });\r\n    this.setValue(null, {name: 'startingPosition.position', value: positionNotation});\r\n  };\r\n\r\n  editPosition = () => {\r\n    this.setState({editingPosition: true});\r\n  };\r\n\r\n  render() {\r\n    const {client, initialChallenge} = this.props;\r\n    const {editingPosition, challenge, error} = this.state;\r\n    const settings = client.applicableSettings;\r\n\r\n    if (editingPosition) {\r\n      return (\r\n        <EditPosition\r\n          usePosition={this.usePosition}\r\n          initialPositionNotation={challenge.startingPosition.position}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header>Create a challenge</Header>\r\n        <Segment>\r\n          <Form onSubmit={this.createChallenge}>\r\n            <Form.Group>\r\n              <Form.Field\r\n                name={'startingPosition.position'}\r\n                control={Input}\r\n                label={'Initial position'}\r\n                placeholder={'Game position'}\r\n                onChange={this.setValue}\r\n                value={challenge.startingPosition.position}\r\n                required\r\n                error={error.position}\r\n              />\r\n              <Button\r\n                content={'Edit position'}\r\n                secondary\r\n                onClick={this.editPosition}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group inline>\r\n              <label>Starting player</label>\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player A'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_A}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_A}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_A}\r\n              />\r\n              <Form.Radio\r\n                name={'options.initialPlayer'}\r\n                label={'Player B'}\r\n                onChange={this.setValue}\r\n                value={Game.PLAYER_B}\r\n                checked={challenge.options.initialPlayer === Game.PLAYER_B}\r\n                disabled={challenge.options.initialPlayer !== Game.PLAYER_B}\r\n              />\r\n            </Form.Group>\r\n            {challenge.startingPosition.game ? (\r\n              <Board\r\n                medium\r\n                settings={settings}\r\n                game={challenge.startingPosition.game}\r\n              />\r\n            ) : null}\r\n            <Form.Select\r\n              options={[\r\n                {key: 'mate', value: 'mate', text: 'Mate'},\r\n              ]}\r\n              name={'options.type'}\r\n              label={'Type'}\r\n              onChange={this.setValue}\r\n              required\r\n              value={challenge.options.type}\r\n            />\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Mate In: ${challenge.options.typeOptions.mateIn}`}\r\n                min={1}\r\n                max={10}\r\n                name={'options.typeOptions.mateIn'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.options.typeOptions.mateIn}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Input}\r\n                label={'Source'}\r\n                name={'meta.source'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.source}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'range'}\r\n                label={`Difficulty: ${challenge.meta.difficulty}/${challenge.meta.maxDifficulty}`}\r\n                min={1}\r\n                max={challenge.meta.maxDifficulty}\r\n                name={'meta.difficulty'}\r\n                onChange={this.setValue}\r\n                required\r\n                value={challenge.meta.difficulty}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Field\r\n                control={Checkbox}\r\n                label={'Public'}\r\n                name={'meta.public'}\r\n                onChange={this.setValue}\r\n                checked={challenge.meta.public}\r\n              />\r\n              <Form.Field\r\n                control={Input}\r\n                type={'datetime-local'}\r\n                label={'Publish On'}\r\n                name={'meta.publishDatetime'}\r\n                onChange={this.setValue}\r\n                value={challenge.meta.publishDatetime ? challenge.meta.publishDatetime.format(\"YYYY-MM-DDTHH:mm\") : ''}\r\n              />\r\n            </Form.Group>\r\n            <Form.Button primary content={initialChallenge ? 'Update' : 'Create'} />\r\n          </Form>\r\n        </Segment>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengeForm.propTypes = {\r\n  initialChallenge: PropTypes.object,\r\n  onCreateChallenge: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nChallengeForm = withClient(ChallengeForm);\r\n\r\nexport default withClient(CreateChallenge);\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Modal} from \"semantic-ui-react\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport {withClient} from \"../client/withClient\";\r\n\r\nclass EditChallenge extends Component {\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.history.push('/challenge');\r\n  };\r\n\r\n  render() {\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was deleted'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <CreateChallenge initialChallenge={challenge} />\r\n    );\r\n  }\r\n}\r\n\r\nEditChallenge.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  challengesInfo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withClient(EditChallenge));\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Game from \"../game/game\";\r\nimport {Button, Grid, Header, Icon, Label, Menu, Message, Modal, Segment, Tab} from \"semantic-ui-react\";\r\nimport Play from \"./Play\";\r\nimport {withClient} from \"../client/withClient\";\r\nimport _ from 'lodash';\r\nimport \"../styles/challenges.css\";\r\nimport ChallengeList from \"./ChallengeList\";\r\nimport {Link, NavLink, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport CreateChallenge from \"./CreateChallenge\";\r\nimport EditChallenge from \"./EditChallenge\";\r\nimport * as utils from \"../utils\";\r\n\r\nclass Challenges extends Component {\r\n  render() {\r\n    const {user, challengesInfo: {otherStarted, otherNotStarted, otherSolved, mine}} = this.props;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route exact path={this.props.match.path}>\r\n          <Fragment>\r\n            <Segment>\r\n              <Link to={`${this.props.match.path}/create`}><Button content={'Create Challenge'} /></Link>\r\n            </Segment>\r\n            <Tab menu={{pointing: true}} panes={[\r\n              {key: 'other-started', label: \"Started Challenges\", items: otherStarted, color: 'green'},\r\n              {key: 'other-not-started', label: \"New Challenges\", items: otherNotStarted},\r\n              {key: 'other-solved', label: \"Solved Challenges\", items: otherSolved},\r\n              {key: 'mine', label: \"My Challenges\", items: mine},\r\n            ].filter(({items}) => items.length).map(({key, label, items, color}) => (\r\n              {menuItem: {key, content: <Fragment>{label} <Label content={items.length} color={color} /></Fragment>}, render: () => (\r\n                <ChallengeList selectChallenge={this.props.selectLiveChallenge} challenges={items} />\r\n              )}\r\n            ))} />\r\n          </Fragment>\r\n        </Route>\r\n        {(process.env.REACT_APP_DEBUG || (user && user.admin)) ? (\r\n          <Route exact path={`${this.props.match.path}/create`}>\r\n            <CreateChallenge />\r\n          </Route>\r\n        ) : null}\r\n        {(process.env.REACT_APP_DEBUG || (user && user.admin)) ? (\r\n          <Route exact path={`${this.props.match.path}/:id/edit`}>\r\n            <EditChallenge />\r\n          </Route>\r\n        ) : null}\r\n        <Route exact path={`${this.props.match.path}/:id`}>\r\n          <ChallengePlayer selectLiveChallenge={this.props.selectLiveChallenge} />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nChallenges.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  liveChallenge: PropTypes.object,\r\n  selectLiveChallenge: PropTypes.func.isRequired,\r\n};\r\n\r\nclass ChallengePlayer extends Component {\r\n  state = {\r\n    challengeId: this.challenge ? this.challenge.id : null,\r\n    game: this.getResumedChallengeGame(),\r\n    submittedGame: null,\r\n    path: this.challenge ? [] : null,\r\n    wrongMove: false,\r\n    won: false,\r\n  };\r\n\r\n  get challenge() {\r\n    const {match, challengesInfo: {byId}} = this.props;\r\n    const challenge = byId[match.params.id];\r\n    return challenge;\r\n  }\r\n\r\n  get userChallenge() {\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n    const {user} = this.props;\r\n    return user.challenges[challenge.id] || {\r\n      meta: {\r\n        started: false,\r\n        mistakes: 0,\r\n        won: false,\r\n      },\r\n      startingPosition: {\r\n        position: challenge.startingPosition.position,\r\n        invalidPlayerPositions: [],\r\n        playerResponses: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge) {\r\n      this.props.selectLiveChallenge(challenge);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const challenge = this.challenge;\r\n\r\n    if (challenge && prevState.challengeId !== challenge.id) {\r\n      this.props.selectLiveChallenge(challenge);\r\n      this.setState({\r\n        challengeId: challenge.id,\r\n        game: this.getResumedChallengeGame(),\r\n        submittedGame: null,\r\n        path: [],\r\n        wrongMove: false,\r\n        won: false,\r\n      });\r\n    }\r\n    if (!challenge && this.state.challengeId) {\r\n      this.setState({\r\n          challengeId: null,\r\n          game: null,\r\n          submittedGame: null,\r\n          path: [],\r\n          wrongMove: false,\r\n          won: false,\r\n      });\r\n    }\r\n    if (challenge && this.props.user && this.state.submittedGame) {\r\n      this.updateChallenge(this.state.submittedGame, {askServer: false});\r\n    }\r\n  }\r\n\r\n  submit = (moves, newGame) => {\r\n    if (this.state.won) {\r\n      return;\r\n    }\r\n\r\n    this.updateChallenge(newGame, {askServer: true});\r\n  };\r\n\r\n  getResumedChallengeGame() {\r\n    const userChallenge = this.userChallenge;\r\n    if (!userChallenge) {\r\n      return null;\r\n    }\r\n    let resultingGame = Game.fromCompressedPositionNotation(userChallenge.startingPosition.position);\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    while (userChallengeStep) {\r\n      const lastPlayerResponse = userChallengeStep.playerResponses[userChallengeStep.playerResponses.length - 1];\r\n      if (!lastPlayerResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.moves);\r\n      if (!lastPlayerResponse.challengeResponse) {\r\n        break;\r\n      }\r\n      resultingGame = resultingGame.makeMoves(lastPlayerResponse.challengeResponse.moves);\r\n      userChallengeStep = lastPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    return resultingGame;\r\n  }\r\n\r\n  updateChallenge(gameToUpdate, {askServer = true} = {}) {\r\n    const {user} = this.props;\r\n    if (!user) {\r\n      return;\r\n    }\r\n    const challenge = this.challenge;\r\n    const userChallenge = this.userChallenge;\r\n\r\n    const history = gameToUpdate.history;\r\n    let userChallengeStep = userChallenge.startingPosition;\r\n    let remainingHistory = history.slice(1).filter((game, index) => index % 2 === 0);\r\n    if (!remainingHistory.length) {\r\n      return;\r\n    }\r\n    while (remainingHistory.length) {\r\n      const historyGame = remainingHistory.shift();\r\n      if (userChallengeStep.invalidPlayerPositions.includes(historyGame.positionNotation)) {\r\n        this.setState({\r\n          wrongMove: true,\r\n          won: false,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      const validPlayerResponse = userChallengeStep.playerResponses\r\n        .find(response => response.position === historyGame.positionNotation);\r\n      if (!validPlayerResponse) {\r\n        if (askServer) {\r\n          this.props.client.submitChallengeMove(challenge, gameToUpdate.path.filter((item, index) => index % 2 === 0));\r\n          this.setState({submittedGame: gameToUpdate});\r\n        }\r\n        return;\r\n      }\r\n      if (!validPlayerResponse.challengeResponse) {\r\n        this.setState({\r\n          wrongMove: false,\r\n          won: true,\r\n          game: historyGame.positionNotation !== this.state.game.positionNotation ? historyGame : this.state.game,\r\n          submittedGame: null,\r\n        });\r\n        return;\r\n      }\r\n      userChallengeStep = validPlayerResponse.challengeResponse;\r\n    }\r\n\r\n    this.setState({\r\n      game: gameToUpdate.makeMoves(userChallengeStep.moves),\r\n      wrongMove: false,\r\n      won: false,\r\n      submittedGame: null,\r\n    });\r\n  }\r\n\r\n  onDisplayPositionChange = () => {\r\n    if (this.state.wrongMove) {\r\n      this.setState({wrongMove: false, submittedGame: null});\r\n    }\r\n  };\r\n\r\n  getDifficultyStars(difficulty, maxDifficulty) {\r\n    return _.range(maxDifficulty).map(index => (\r\n      <Icon\r\n        key={index}\r\n        name={difficulty > index ? 'star' : 'star outline'}\r\n        color={'yellow'}\r\n      />\r\n    ));\r\n  }\r\n\r\n  dismissUrlChallengeError = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  close = () => {\r\n    this.props.selectLiveChallenge(null);\r\n  };\r\n\r\n  shareChallenge = e => {\r\n    const url = window.location.href;\r\n    if (navigator.share) {\r\n      const challenge = this.challenge;\r\n      navigator.share({\r\n        title: `Thyra Online - Solve challenge${challenge.options.type === 'mate' ? `: Find mate in ${challenge.options.typeOptions.mateIn}` : ''}`,\r\n        text: `Solve Santorini challenge`,\r\n        url,\r\n      }).catch(() => {\r\n        utils.copyToClipboard(url);\r\n        alert('Link copied to clipboard');\r\n      });\r\n    } else {\r\n      utils.copyToClipboard(url);\r\n      alert('Link copied to clipboard');\r\n    }\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.user) {\r\n      return null;\r\n    }\r\n    const challenge = this.challenge;\r\n    if (!challenge) {\r\n      return (\r\n        <Fragment>\r\n          <Modal\r\n            open={true}\r\n            size={'mini'}\r\n            onClose={this.dismissUrlChallengeError}\r\n            header={'Could not find challenge'}\r\n            content={'This challenge cannot be found. Please check that you copied the full URL, or perhaps the challenge was removed'}\r\n            actions={[{key: 'ok', content: 'OK', positive: true}]}\r\n          />\r\n          Could not find challenge\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    const {game, wrongMove, won} = this.state;\r\n    if (!game) {\r\n      return null;\r\n    }\r\n\r\n    const {user, location} = this.props;\r\n    const challengePrompt = challenge.options.type === 'mate'\r\n      ? `Find mate in ${challenge.options.typeOptions.mateIn}`\r\n      : 'Unknown challenge';\r\n    const message = (\r\n      wrongMove ? (\r\n        <Message error icon={'warning'} content={\"That's not the right answer\"} />\r\n      ) : won ? (\r\n        <Message success icon={'check'} content={\"Correct! You solved it!\"} />\r\n      ) : (\r\n        <Message content={challengePrompt} />\r\n      )\r\n    );\r\n    return (\r\n      <Fragment>\r\n        <Grid centered>\r\n          <Grid.Row>\r\n            <Menu stackable size={'massive'} inverted items={[\r\n              {key: 'close', content: 'Close', icon: 'x', onClick: this.close, color: 'red', active: true},\r\n              {key: 'share', content: 'Share Game', icon: 'share', onClick: this.shareChallenge, as: NavLink,\r\n                to: location.pathname, color: 'green', active: true,\r\n                title: navigator.share ? 'Click to open the sharing menu' : 'Click to copy URL to challenge'},\r\n              (process.env.REACT_APP_DEBUG || (user && user.admin)) && challenge.userId === user.id ? {key: 'edit', content: 'Edit challenge', icon: 'edit', as: NavLink,\r\n                to: `/challenge/${challenge.id}/edit`, color: 'green', active: true,\r\n                title: 'Click to edit the challenge'} : null,\r\n            ].filter(item => item)} />\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Segment>\r\n              <Header as={'h1'}>{challengePrompt}</Header>\r\n              <Header as={'h4'} className={'difficulty-header'}>{this.getDifficultyStars(challenge.meta.difficulty, challenge.meta.maxDifficulty)}</Header>\r\n              <Header as={'h4'}>{challenge.meta.source}</Header>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            {message}\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Play\r\n          user={user}\r\n          changeSettings={this.changeSettings}\r\n          game={game}\r\n          allowControl={[challenge.options.initialPlayer]}\r\n          names={{[challenge.options.initialPlayer]: 'You', [Game.OTHER_PLAYER[challenge.options.initialPlayer]]: 'Challenge'}}\r\n          submit={this.submit}\r\n          onDisplayPositionChange={this.onDisplayPositionChange}\r\n        >\r\n          {message}\r\n        </Play>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nChallengePlayer.propTypes = {\r\n  user: PropTypes.object,\r\n  client: PropTypes.object.isRequired,\r\n  selectLiveChallenge: PropTypes.func.isRequired\r\n};\r\n\r\nChallengePlayer = withRouter(withClient(ChallengePlayer));\r\n\r\nexport default withRouter(withClient(Challenges));\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport 'fomantic-ui-css/semantic.css';\nimport {Container, Header, Label, Message, Segment, Tab} from 'semantic-ui-react';\nimport './styles/App.css';\nimport './styles/semantic-ui.css';\nimport {client} from \"./client/client\";\nimport NavigationalTab from \"./components/NavigationalTab\";\nimport {withRouter} from \"react-router-dom\";\nimport Hotseat from \"./components/Hotseat\";\nimport Lobby, {EditUser, LogIn, LogOut} from \"./components/Lobby\";\nimport OnlineGame from \"./components/OnlineGame\";\nimport {withClient} from \"./client/withClient\";\nimport services from \"./services\";\nimport SvgBoardBackground from \"./components/Board/SvgBoardBackground\";\nimport OnlineTournament from \"./components/OnlineTournament\";\nimport Settings from \"./components/Settings\";\nimport LearnToPlay from \"./components/LearnToPlay\";\nimport Challenges from \"./components/Challenges\";\n\nclass App extends Component {\n  state = {\n    liveGame: null,\n    liveTournament: null,\n    liveChallenge: null,\n  };\n\n  selectLiveGame = liveGame => {\n    let gameUrl;\n    if (liveGame) {\n      gameUrl = `/game/${liveGame.id}`;\n    } else {\n      gameUrl = '/lobby';\n    }\n    if (gameUrl !== this.props.location.pathname) {\n      this.props.history.push(gameUrl);\n    }\n    if (this.state.liveGame === liveGame) {\n      return;\n    }\n    this.setState({liveGame});\n  };\n\n  selectLiveTournament = liveTournament => {\n    let tournamentUrl;\n    if (liveTournament) {\n      tournamentUrl = `/tournament/${liveTournament.id}`;\n    } else {\n      tournamentUrl = `/lobby`;\n    }\n    if (tournamentUrl !== this.props.location.pathname) {\n      this.props.history.push(tournamentUrl);\n    }\n    if (this.state.liveTournament === liveTournament) {\n      return;\n    }\n    this.setState({liveTournament});\n  };\n\n  selectLiveChallenge = liveChallenge => {\n    let challengeUrl;\n    if (liveChallenge) {\n      challengeUrl = `/challenge/${liveChallenge.id}`;\n    } else {\n      challengeUrl = `/lobby`;\n    }\n    if (challengeUrl !== this.props.location.pathname) {\n      this.props.history.push(challengeUrl);\n    }\n    if (this.state.liveChallenge === liveChallenge) {\n      return;\n    }\n    this.setState({liveChallenge});\n  };\n\n  toggleParticipation = tournament => {\n    const {user, client} = this.props;\n\n    if (tournament.userIds.includes(user.id)) {\n      client.leaveTournament(tournament);\n    } else {\n      client.joinTournament(tournament);\n    }\n  };\n\n  startTournament = tournament => {\n    const {client} = this.props;\n\n    client.startTournament(tournament);\n  };\n\n  abortTournament = tournament => {\n    const {client} = this.props;\n\n    client.abortTournament(tournament);\n  };\n\n  componentDidUpdate(prevProps) {\n    this.askForNotificationPermissionOnWaitForGame(prevProps);\n    this.navigateToMyNewGame(prevProps);\n    this.notifyAboutMyMove(prevProps);\n  }\n\n  askForNotificationPermissionOnWaitForGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if ((!prevProps.user || !prevProps.user.readyToPlay) && (user && user.readyToPlay) && user.settings.enableNotifications) {\n      services.notifications.requestPermission();\n    }\n  }\n\n  navigateToMyNewGame(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return\n    }\n\n    if (prevProps.gamesInfo.myLive === this.props.gamesInfo.myLive) {\n      return;\n    }\n\n    if (this.state.liveGame && !this.state.liveGame.finished) {\n      return;\n    }\n\n    const previousMyLiveGameIds = new Set(prevProps.gamesInfo.myLive.map(game => game.id));\n    const myLiveGameIds = this.props.gamesInfo.myLive.map(game => game.id);\n    const newMyLiveGameIds = myLiveGameIds.filter(id => !previousMyLiveGameIds.has(id));\n    if (newMyLiveGameIds.length !== 1) {\n      return;\n    }\n\n    const newGame = this.props.gamesInfo.byId[newMyLiveGameIds[0]];\n    if (newGame.move === 1) {\n      const otherUserId = newGame.userIds[0] === user.id ? newGame.userIds[1] : (newGame.userIds[1] === user.id ? newGame.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      services.notifications.notify(otherUser ? `New game vs ${otherUser.name} started` : `New game started`);\n    }\n    if (newGame.move === 1) {\n      this.selectLiveGame(newGame);\n    }\n  }\n\n  notifyAboutMyMove(prevProps) {\n    const user = this.props.user;\n    if (!user) {\n      return;\n    }\n    if (!this.props.gamesInfo.myLive.length) {\n      return;\n    }\n    const gamesThatChangedToMyTurn = this.props.gamesInfo.myLive\n      .filter(game => game.nextUserId === user.id)\n      .filter(game => {\n        const prevGame = prevProps.gamesInfo.byId[game.id];\n        return prevGame && prevGame.nextUserId !== user.id;\n      });\n    if (!gamesThatChangedToMyTurn.length) {\n      return;\n    }\n\n    const otherUsers = gamesThatChangedToMyTurn.map(game => {\n      const otherUserId = game.userIds[0] === user.id ? game.userIds[1] : (game.userIds[1] === user.id ? game.userIds[0] : null);\n      const otherUser = this.props.usersInfo.byId[otherUserId];\n      return otherUser;\n    });\n    const otherUser = otherUsers.length === 1 ? otherUsers[0] : null;\n    services.notifications.notify(otherUser ? `Your turn at game vs ${otherUser.name}` : `It's your turn to play in ${gamesThatChangedToMyTurn.length}`, {\n      tag: 'your-turn',\n      body: `It's your turn to play in ${gamesThatChangedToMyTurn.length} games`,\n    });\n  }\n\n  render() {\n    const {liveGame, liveTournament, liveChallenge} = this.state;\n    const {connected, disconnected, available, user, usersInfo: {byId: usersById}} = this.props;\n    const playerA = liveGame ? usersById[liveGame.userIds[0]] : null;\n    const playerB = liveGame ? usersById[liveGame.userIds[1]] : null;\n    const isUserPlayerA = (user && playerA) ? playerA.id === user.id : false;\n    const isUserPlayerB = (user && playerB) ? playerB.id === user.id : false;\n    const isMyGame = isUserPlayerA || isUserPlayerB;\n    const onlineGameLabel = (liveGame && playerA && playerB)\n      ? (liveGame.finished\n        ? `Review ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n        : (isMyGame\n          ? `Live Play ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`\n          : `Spectate ${isUserPlayerA ? 'you' : playerA.name} vs ${isUserPlayerB ? 'you' : playerB.name}`))\n      : 'Live Play/Spectate/Review';\n    const isMyTournament = (liveTournament && user) ? liveTournament.userIds.includes(user.id) : false;\n    const onlineTournamentLabel = liveTournament\n      ? (liveTournament.finished\n        ? `Review tournament ${liveTournament.name}`\n        : (isMyTournament\n          ? `Live tournament ${liveTournament.name}`\n          : `Spectate tournament ${liveTournament.name}`))\n      : 'Tournaments';\n    return (\n      <Container>\n        <SvgBoardBackground.Definitions />\n        <Segment textAlign={\"center\"}>\n          <Header as={\"h1\"}>Thyra Online</Header>\n          <Settings/>\n          <LogIn client={client} />\n          {user ? <EditUser client={client} user={user} trigger={<Label as={'a'} icon={'edit'} content={'Edit'}/>} /> : null}\n          <LogOut client={client} />\n        </Segment>\n        {!connected ? (\n          (disconnected || !available) ? (\n            <Message\n              negative\n              header={'Trying to connect ot server...'}\n              content={<p>The server seems to be experiencing problems, or maybe it's a bit slow. It will connect as soon as possible</p>}\n            />\n          ) : (\n            <Message\n              header={'Connecting to server...'}\n              content={<p>Please sit tight as we're trying to connect to the server</p>}\n            />\n          )\n        ) : null}\n        <NavigationalTab menu={{pointing: true, attached: false, stackable: true}} panes={[\n          client.available ? {menuItem: {icon: 'users', content: 'Lobby'}, path: 'lobby', render: () => (\n            <Tab.Pane><Lobby selectLiveGame={this.selectLiveGame} selectLiveTournament={this.selectLiveTournament} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'play', content: onlineGameLabel}, path: 'game', navigate: liveGame ? `game/${liveGame.id}` : 'game', render: () => (\n            <Tab.Pane><OnlineGame game={liveGame} selectLiveGame={this.selectLiveGame} /></Tab.Pane>\n          )} : null,\n          client.available ? {menuItem: {icon: 'sitemap', content: onlineTournamentLabel}, path: 'tournament', navigate: liveTournament ? `tournament/${liveTournament.id}` : 'tournament', render: () => (\n            <Tab.Pane>\n              <OnlineTournament\n                tournament={liveTournament}\n                selectLiveTournament={this.selectLiveTournament}\n                selectLiveGame={this.selectLiveGame}\n                toggleParticipation={this.toggleParticipation}\n                startTournament={this.startTournament}\n                abortTournament={this.abortTournament}\n              />\n            </Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'retweet', content: 'Hotseat'}, path: 'hotseat', render: () => (\n            <Tab.Pane><Hotseat /></Tab.Pane>\n          )},\n          (process.env.REACT_APP_DEBUG || (user && user.admin)) ? {menuItem: {icon: 'shield', content: liveChallenge ? (\n            liveChallenge.options.type === 'mate'\n              ? `Find mate in ${liveChallenge.options.typeOptions.mateIn}`\n              : 'Unknown challenge'\n          ) : 'Challenges'}, path: 'challenge', navigate: liveChallenge ? `challenge/${liveChallenge.id}` : 'challenge', render: () => (\n            <Tab.Pane><Challenges challenge={liveChallenge} selectLiveChallenge={this.selectLiveChallenge} /></Tab.Pane>\n          )} : null,\n          {menuItem: {icon: 'book', content: 'Learn To Play'}, path: 'learn-to-play', render: () => (\n            <Tab.Pane><LearnToPlay /></Tab.Pane>\n          )},\n        ]} />\n        <Header as={\"h6\"} style={{color: '#dddddd'}}>{process.env.REACT_APP_VERSION || '?'}</Header>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  usersInfo: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withClient(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.REACT_APP_PAGE_BASE_PATH}>\n    <Switch>\n      <Route>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}